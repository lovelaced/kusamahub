{"id":"7c78a1a18927a6225aef9cf72fedf01f","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/BigWickGame.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract BigWickGame {\n    enum GameState { NotStarted, StartingPeriod, EndingPeriod, Ended }\n    \n    struct Game {\n        uint256 gameId;\n        uint256 startTime;\n        uint256 endingPeriodStart;\n        uint256 endTime;\n        uint256 totalPot;\n        uint256 treasuryFund;\n        address winner;\n        GameState state;\n        uint256 candleEnd;\n        bool finalized;\n    }\n\n    struct Player {\n        uint256 totalBid;\n        uint256 bidCount;\n        uint256 lastBidTime;\n        bool exists;\n    }\n\n    // Constants\n    uint256 public constant STARTING_PERIOD = 2 days;\n    uint256 public constant ENDING_PERIOD = 5 days;\n    uint256 public constant WINNER_SHARE = 90; // 90%\n    uint256 public constant TREASURY_SHARE = 10; // 10%\n    \n    // State variables\n    address public owner;\n    uint256 public currentGameId;\n    mapping(uint256 => Game) public games;\n    mapping(uint256 => mapping(address => Player)) public gamePlayers;\n    mapping(uint256 => address[]) public gamePlayerList;\n    mapping(address => uint256) public pendingWithdrawals;\n    \n    // Events\n    event GameStarted(uint256 indexed gameId, uint256 startTime, uint256 endingPeriodStart, uint256 endTime);\n    event BidPlaced(uint256 indexed gameId, address indexed player, uint256 amount, uint256 totalBid);\n    event GameEnded(uint256 indexed gameId, address indexed winner, uint256 prizeAmount, uint256 treasuryAmount);\n    event CandleEndDetermined(uint256 indexed gameId, uint256 candleEnd);\n    event WithdrawalReady(address indexed player, uint256 amount);\n    \n    // Modifiers\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier gameExists(uint256 gameId) {\n        require(games[gameId].gameId == gameId, \"Game does not exist\");\n        _;\n    }\n    \n    modifier gameInProgress(uint256 gameId) {\n        require(games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod, \"Game not in progress\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        currentGameId = 0;\n    }\n    \n    function startNewGame() external onlyOwner returns (uint256) {\n        require(currentGameId == 0 || games[currentGameId].state == GameState.Ended, \"Current game must be ended\");\n        \n        currentGameId++;\n        uint256 startTime = block.timestamp;\n        uint256 endingPeriodStart = startTime + STARTING_PERIOD;\n        uint256 endTime = endingPeriodStart + ENDING_PERIOD;\n        \n        games[currentGameId] = Game({\n            gameId: currentGameId,\n            startTime: startTime,\n            endingPeriodStart: endingPeriodStart,\n            endTime: endTime,\n            totalPot: 0,\n            treasuryFund: 0,\n            winner: address(0),\n            state: GameState.StartingPeriod,\n            candleEnd: 0,\n            finalized: false\n        });\n        \n        emit GameStarted(currentGameId, startTime, endingPeriodStart, endTime);\n        return currentGameId;\n    }\n    \n    function placeBid(uint256 gameId) external payable gameExists(gameId) gameInProgress(gameId) {\n        require(msg.value > 0, \"Bid amount must be greater than 0\");\n        require(block.timestamp < games[gameId].endTime, \"Game has ended\");\n        \n        Game storage game = games[gameId];\n        Player storage player = gamePlayers[gameId][msg.sender];\n        \n        // Update game state based on time\n        if (block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod) {\n            game.state = GameState.EndingPeriod;\n        }\n        \n        // Add new player if not exists\n        if (!player.exists) {\n            player.exists = true;\n            gamePlayerList[gameId].push(msg.sender);\n        }\n        \n        // Update player bid\n        player.totalBid += msg.value;\n        player.bidCount++;\n        player.lastBidTime = block.timestamp;\n        \n        // Update game pot\n        game.totalPot += msg.value;\n        \n        emit BidPlaced(gameId, msg.sender, msg.value, player.totalBid);\n    }\n    \n    function endGame(uint256 gameId) external gameExists(gameId) {\n        Game storage game = games[gameId];\n        require(block.timestamp >= game.endTime, \"Game has not ended yet\");\n        require(game.state != GameState.Ended, \"Game already ended\");\n        require(!game.finalized, \"Game already finalized\");\n        \n        // Determine candle end using pseudo-randomness\n        // In production, this should use VRF for true randomness\n        uint256 candleEnd = game.endingPeriodStart + \n            (uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))) % ENDING_PERIOD);\n        \n        game.candleEnd = candleEnd;\n        game.state = GameState.Ended;\n        \n        emit CandleEndDetermined(gameId, candleEnd);\n        \n        // Determine winner - player with highest bid at candle end\n        address winner = determineWinner(gameId, candleEnd);\n        \n        if (winner != address(0)) {\n            game.winner = winner;\n            \n            // Calculate prize distribution\n            uint256 winnerPrize = (game.totalPot * WINNER_SHARE) / 100;\n            uint256 treasuryAmount = game.totalPot - winnerPrize;\n            \n            game.treasuryFund = treasuryAmount;\n            \n            // Make prize available for withdrawal\n            pendingWithdrawals[winner] += winnerPrize;\n            \n            emit GameEnded(gameId, winner, winnerPrize, treasuryAmount);\n            emit WithdrawalReady(winner, winnerPrize);\n        }\n        \n        game.finalized = true;\n    }\n    \n    function determineWinner(uint256 gameId, uint256 candleEnd) internal view returns (address) {\n        address[] memory playerList = gamePlayerList[gameId];\n        address currentWinner = address(0);\n        uint256 highestBid = 0;\n        \n        for (uint256 i = 0; i < playerList.length; i++) {\n            address player = playerList[i];\n            Player memory playerData = gamePlayers[gameId][player];\n            \n            // Only consider bids placed before candle end\n            if (playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid) {\n                highestBid = playerData.totalBid;\n                currentWinner = player;\n            }\n        }\n        \n        return currentWinner;\n    }\n    \n    function getGameState(uint256 gameId) external view returns (GameState) {\n        if (games[gameId].gameId == 0) return GameState.NotStarted;\n        \n        Game memory game = games[gameId];\n        if (block.timestamp >= game.endTime) return GameState.Ended;\n        if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod;\n        return GameState.StartingPeriod;\n    }\n    \n    function getPlayerBid(uint256 gameId, address player) external view returns (uint256, uint256, uint256) {\n        Player memory playerData = gamePlayers[gameId][player];\n        return (playerData.totalBid, playerData.bidCount, playerData.lastBidTime);\n    }\n    \n    function getGamePlayers(uint256 gameId) external view returns (address[] memory) {\n        return gamePlayerList[gameId];\n    }\n    \n    function getGamePlayerCount(uint256 gameId) external view returns (uint256) {\n        return gamePlayerList[gameId].length;\n    }\n    \n    function withdraw() external {\n        uint256 amount = pendingWithdrawals[msg.sender];\n        require(amount > 0, \"No funds to withdraw\");\n        \n        pendingWithdrawals[msg.sender] = 0;\n        \n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n    \n    function withdrawTreasury() external onlyOwner {\n        uint256 totalTreasury = 0;\n        \n        // Calculate total treasury from all ended games\n        for (uint256 i = 1; i <= currentGameId; i++) {\n            if (games[i].finalized) {\n                totalTreasury += games[i].treasuryFund;\n                games[i].treasuryFund = 0;\n            }\n        }\n        \n        require(totalTreasury > 0, \"No treasury funds to withdraw\");\n        \n        (bool success, ) = payable(owner).call{value: totalTreasury}(\"\");\n        require(success, \"Transfer failed\");\n    }\n    \n    // Emergency function to end game if needed\n    function emergencyEndGame(uint256 gameId) external onlyOwner gameExists(gameId) {\n        Game storage game = games[gameId];\n        require(game.state != GameState.Ended, \"Game already ended\");\n        \n        game.state = GameState.Ended;\n        game.finalized = true;\n        \n        // Refund all players proportionally\n        address[] memory playerList = gamePlayerList[gameId];\n        \n        for (uint256 i = 0; i < playerList.length; i++) {\n            address player = playerList[i];\n            uint256 playerBid = gamePlayers[gameId][player].totalBid;\n            \n            if (playerBid > 0) {\n                pendingWithdrawals[player] += playerBid;\n                emit WithdrawalReady(player, playerBid);\n            }\n        }\n        \n        emit GameEnded(gameId, address(0), 0, 0);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"1.5.2","compilerSource":"npm"}}},"output":{"errors":[],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/BigWickGame.sol":{"id":0,"ast":{"absolutePath":"contracts/BigWickGame.sol","exportedSymbols":{"BigWickGame":[924]},"id":925,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"BigWickGame","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":924,"linearizedBaseContracts":[924],"name":"BigWickGame","nameLocation":"67:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BigWickGame.GameState","id":6,"members":[{"id":2,"name":"NotStarted","nameLocation":"102:10:0","nodeType":"EnumValue","src":"102:10:0"},{"id":3,"name":"StartingPeriod","nameLocation":"114:14:0","nodeType":"EnumValue","src":"114:14:0"},{"id":4,"name":"EndingPeriod","nameLocation":"130:12:0","nodeType":"EnumValue","src":"130:12:0"},{"id":5,"name":"Ended","nameLocation":"144:5:0","nodeType":"EnumValue","src":"144:5:0"}],"name":"GameState","nameLocation":"90:9:0","nodeType":"EnumDefinition","src":"85:66:0"},{"canonicalName":"BigWickGame.Game","id":28,"members":[{"constant":false,"id":8,"mutability":"mutable","name":"gameId","nameLocation":"191:6:0","nodeType":"VariableDeclaration","scope":28,"src":"183:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"startTime","nameLocation":"215:9:0","nodeType":"VariableDeclaration","scope":28,"src":"207:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"242:17:0","nodeType":"VariableDeclaration","scope":28,"src":"234:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"endTime","nameLocation":"277:7:0","nodeType":"VariableDeclaration","scope":28,"src":"269:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"totalPot","nameLocation":"302:8:0","nodeType":"VariableDeclaration","scope":28,"src":"294:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"treasuryFund","nameLocation":"328:12:0","nodeType":"VariableDeclaration","scope":28,"src":"320:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"winner","nameLocation":"358:6:0","nodeType":"VariableDeclaration","scope":28,"src":"350:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"state","nameLocation":"384:5:0","nodeType":"VariableDeclaration","scope":28,"src":"374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"typeName":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"GameState","nameLocations":["374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":6,"src":"374:9:0"},"referencedDeclaration":6,"src":"374:9:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"candleEnd","nameLocation":"407:9:0","nodeType":"VariableDeclaration","scope":28,"src":"399:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"finalized","nameLocation":"431:9:0","nodeType":"VariableDeclaration","scope":28,"src":"426:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26,"name":"bool","nodeType":"ElementaryTypeName","src":"426:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Game","nameLocation":"168:4:0","nodeType":"StructDefinition","scope":924,"src":"161:286:0","visibility":"public"},{"canonicalName":"BigWickGame.Player","id":37,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"totalBid","nameLocation":"485:8:0","nodeType":"VariableDeclaration","scope":37,"src":"477:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"bidCount","nameLocation":"511:8:0","nodeType":"VariableDeclaration","scope":37,"src":"503:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"lastBidTime","nameLocation":"537:11:0","nodeType":"VariableDeclaration","scope":37,"src":"529:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"exists","nameLocation":"563:6:0","nodeType":"VariableDeclaration","scope":37,"src":"558:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35,"name":"bool","nodeType":"ElementaryTypeName","src":"558:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Player","nameLocation":"460:6:0","nodeType":"StructDefinition","scope":924,"src":"453:123:0","visibility":"public"},{"constant":true,"functionSelector":"3d757a4b","id":40,"mutability":"constant","name":"STARTING_PERIOD","nameLocation":"623:15:0","nodeType":"VariableDeclaration","scope":924,"src":"599:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"641:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_172800_by_1","typeString":"int_const 172800"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"f13d1259","id":43,"mutability":"constant","name":"ENDING_PERIOD","nameLocation":"677:13:0","nodeType":"VariableDeclaration","scope":924,"src":"653:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"693:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_432000_by_1","typeString":"int_const 432000"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"dbe3010c","id":46,"mutability":"constant","name":"WINNER_SHARE","nameLocation":"729:12:0","nodeType":"VariableDeclaration","scope":924,"src":"705:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3930","id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"744:2:0","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"visibility":"public"},{"constant":true,"functionSelector":"32696174","id":49,"mutability":"constant","name":"TREASURY_SHARE","nameLocation":"783:14:0","nodeType":"VariableDeclaration","scope":924,"src":"759:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"800:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":51,"mutability":"mutable","name":"owner","nameLocation":"858:5:0","nodeType":"VariableDeclaration","scope":924,"src":"843:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"536a3ddc","id":53,"mutability":"mutable","name":"currentGameId","nameLocation":"884:13:0","nodeType":"VariableDeclaration","scope":924,"src":"869:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"117a5b90","id":58,"mutability":"mutable","name":"games","nameLocation":"935:5:0","nodeType":"VariableDeclaration","scope":924,"src":"903:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game)"},"typeName":{"id":57,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"903:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":56,"nodeType":"UserDefinedTypeName","pathNode":{"id":55,"name":"Game","nameLocations":["922:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"922:4:0"},"referencedDeclaration":28,"src":"922:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}}},"visibility":"public"},{"constant":false,"functionSelector":"62e2961b","id":65,"mutability":"mutable","name":"gamePlayers","nameLocation":"1000:11:0","nodeType":"VariableDeclaration","scope":924,"src":"946:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player))"},"typeName":{"id":64,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"946:46:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":63,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"965:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"Player","nameLocations":["984:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"984:6:0"},"referencedDeclaration":37,"src":"984:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}}}},"visibility":"public"},{"constant":false,"functionSelector":"ed456ee4","id":70,"mutability":"mutable","name":"gamePlayerList","nameLocation":"1054:14:0","nodeType":"VariableDeclaration","scope":924,"src":"1017:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":69,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1017:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":68,"nodeType":"ArrayTypeName","src":"1036:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"f3f43703","id":74,"mutability":"mutable","name":"pendingWithdrawals","nameLocation":"1109:18:0","nodeType":"VariableDeclaration","scope":924,"src":"1074:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":73,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"1082:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1074:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"a20ded433b888a649d4d8f7862a100fe47f47441b8b01e11ec294b10bc5ea5ee","id":84,"name":"GameStarted","nameLocation":"1158:11:0","nodeType":"EventDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1186:6:0","nodeType":"VariableDeclaration","scope":84,"src":"1170:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1202:9:0","nodeType":"VariableDeclaration","scope":84,"src":"1194:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1194:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":80,"indexed":false,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"1221:17:0","nodeType":"VariableDeclaration","scope":84,"src":"1213:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1213:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":82,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1248:7:0","nodeType":"VariableDeclaration","scope":84,"src":"1240:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1240:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1169:87:0"},"src":"1152:105:0"},{"anonymous":false,"eventSelector":"51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f","id":94,"name":"BidPlaced","nameLocation":"1268:9:0","nodeType":"EventDefinition","parameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":86,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1294:6:0","nodeType":"VariableDeclaration","scope":94,"src":"1278:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1318:6:0","nodeType":"VariableDeclaration","scope":94,"src":"1302:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"1302:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1334:6:0","nodeType":"VariableDeclaration","scope":94,"src":"1326:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":89,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":92,"indexed":false,"mutability":"mutable","name":"totalBid","nameLocation":"1350:8:0","nodeType":"VariableDeclaration","scope":94,"src":"1342:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1277:82:0"},"src":"1262:98:0"},{"anonymous":false,"eventSelector":"64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800","id":104,"name":"GameEnded","nameLocation":"1371:9:0","nodeType":"EventDefinition","parameters":{"id":103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":96,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1397:6:0","nodeType":"VariableDeclaration","scope":104,"src":"1381:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1381:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1421:6:0","nodeType":"VariableDeclaration","scope":104,"src":"1405:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"prizeAmount","nameLocation":"1437:11:0","nodeType":"VariableDeclaration","scope":104,"src":"1429:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"1429:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":102,"indexed":false,"mutability":"mutable","name":"treasuryAmount","nameLocation":"1458:14:0","nodeType":"VariableDeclaration","scope":104,"src":"1450:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1380:93:0"},"src":"1365:109:0"},{"anonymous":false,"eventSelector":"86ed31336f526d2a8d9eed7596b4e5f8d4ef5c5a9384792afa58506239913a8b","id":110,"name":"CandleEndDetermined","nameLocation":"1485:19:0","nodeType":"EventDefinition","parameters":{"id":109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1521:6:0","nodeType":"VariableDeclaration","scope":110,"src":"1505:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":105,"name":"uint256","nodeType":"ElementaryTypeName","src":"1505:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":108,"indexed":false,"mutability":"mutable","name":"candleEnd","nameLocation":"1537:9:0","nodeType":"VariableDeclaration","scope":110,"src":"1529:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1529:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1504:43:0"},"src":"1479:69:0"},{"anonymous":false,"eventSelector":"61f4a796c29c0b19830a107f63c010f13bcd46bf2118e1747abc3dedad4c2403","id":116,"name":"WithdrawalReady","nameLocation":"1559:15:0","nodeType":"EventDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1591:6:0","nodeType":"VariableDeclaration","scope":116,"src":"1575:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"1575:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1607:6:0","nodeType":"VariableDeclaration","scope":116,"src":"1599:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1574:40:0"},"src":"1553:62:0"},{"body":{"id":127,"nodeType":"Block","src":"1663:93:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":119,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1681:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1685:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1681:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":121,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1695:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1681:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1702:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""},"value":"Only owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""}],"id":118,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1673:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1673:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":125,"nodeType":"ExpressionStatement","src":"1673:65:0"},{"id":126,"nodeType":"PlaceholderStatement","src":"1748:1:0"}]},"id":128,"name":"onlyOwner","nameLocation":"1651:9:0","nodeType":"ModifierDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1660:2:0"},"src":"1642:114:0","virtual":false,"visibility":"internal"},{"body":{"id":143,"nodeType":"Block","src":"1802:90:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":133,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1820:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":135,"indexExpression":{"id":134,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1826:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1820:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":136,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1834:6:0","memberName":"gameId","nodeType":"MemberAccess","referencedDeclaration":8,"src":"1820:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":137,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":130,"src":"1844:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1820:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520646f6573206e6f74206578697374","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1852:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""},"value":"Game does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""}],"id":132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1812:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":141,"nodeType":"ExpressionStatement","src":"1812:62:0"},{"id":142,"nodeType":"PlaceholderStatement","src":"1884:1:0"}]},"id":144,"name":"gameExists","nameLocation":"1775:10:0","nodeType":"ModifierDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":130,"mutability":"mutable","name":"gameId","nameLocation":"1794:6:0","nodeType":"VariableDeclaration","scope":144,"src":"1786:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1786:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1785:16:0"},"src":"1766:126:0","virtual":false,"visibility":"internal"},{"body":{"id":168,"nodeType":"Block","src":"1942:157:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":149,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1960:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":151,"indexExpression":{"id":150,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1966:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1960:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1974:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"1960:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":153,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1983:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1993:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1983:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"1960:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":156,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2011:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":158,"indexExpression":{"id":157,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2017:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2011:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2025:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"2011:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":160,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2034:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2044:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"2034:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"2011:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1960:96:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420696e2070726f6772657373","id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2058:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf008ded0954b5cea0bd82ea6867da9c65a7bdfbe8a7ed259836a49dae7b8c4e","typeString":"literal_string \"Game not in progress\""},"value":"Game not in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf008ded0954b5cea0bd82ea6867da9c65a7bdfbe8a7ed259836a49dae7b8c4e","typeString":"literal_string \"Game not in progress\""}],"id":148,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1952:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1952:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":166,"nodeType":"ExpressionStatement","src":"1952:129:0"},{"id":167,"nodeType":"PlaceholderStatement","src":"2091:1:0"}]},"id":169,"name":"gameInProgress","nameLocation":"1911:14:0","nodeType":"ModifierDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"gameId","nameLocation":"1934:6:0","nodeType":"VariableDeclaration","scope":169,"src":"1926:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1925:16:0"},"src":"1902:197:0","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"2123:62:0","statements":[{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":172,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2133:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":173,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2141:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2145:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2141:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2133:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":176,"nodeType":"ExpressionStatement","src":"2133:18:0"},{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":177,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2161:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2177:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2161:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"2161:17:0"}]},"id":182,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":170,"nodeType":"ParameterList","parameters":[],"src":"2120:2:0"},"returnParameters":{"id":171,"nodeType":"ParameterList","parameters":[],"src":"2123:0:0"},"scope":924,"src":"2109:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":254,"nodeType":"Block","src":"2256:841:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":190,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2274:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2291:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2274:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":193,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2296:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":195,"indexExpression":{"id":194,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2302:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2296:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":196,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2317:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"2296:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":197,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2326:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2336:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2326:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"2296:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2274:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43757272656e742067616d65206d75737420626520656e646564","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2343:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0549921b13bfefc9725ba3d66707ec2cba4700f446eef8d27a0ccf3de98bebe1","typeString":"literal_string \"Current game must be ended\""},"value":"Current game must be ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0549921b13bfefc9725ba3d66707ec2cba4700f446eef8d27a0ccf3de98bebe1","typeString":"literal_string \"Current game must be ended\""}],"id":189,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2266:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"2266:106:0"},{"expression":{"id":205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2391:15:0","subExpression":{"id":204,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2391:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":206,"nodeType":"ExpressionStatement","src":"2391:15:0"},{"assignments":[208],"declarations":[{"constant":false,"id":208,"mutability":"mutable","name":"startTime","nameLocation":"2424:9:0","nodeType":"VariableDeclaration","scope":254,"src":"2416:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":207,"name":"uint256","nodeType":"ElementaryTypeName","src":"2416:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":211,"initialValue":{"expression":{"id":209,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2436:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2442:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"2436:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2416:35:0"},{"assignments":[213],"declarations":[{"constant":false,"id":213,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"2469:17:0","nodeType":"VariableDeclaration","scope":254,"src":"2461:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2461:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":217,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":214,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2489:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":215,"name":"STARTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2501:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2489:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2461:55:0"},{"assignments":[219],"declarations":[{"constant":false,"id":219,"mutability":"mutable","name":"endTime","nameLocation":"2534:7:0","nodeType":"VariableDeclaration","scope":254,"src":"2526:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":218,"name":"uint256","nodeType":"ElementaryTypeName","src":"2526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":223,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":220,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2544:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":221,"name":"ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2564:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2544:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2526:51:0"},{"expression":{"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":224,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2596:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":226,"indexExpression":{"id":225,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2602:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2596:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":228,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2646:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":229,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"2684:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":230,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2726:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":231,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"2766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2797:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2826:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2857:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":234,"name":"address","nodeType":"ElementaryTypeName","src":"2849:7:0","typeDescriptions":{}}},"id":237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":238,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2880:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2890:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"2880:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},{"hexValue":"30","id":240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2929:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2955:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":227,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2619:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$28_storage_ptr_$","typeString":"type(struct BigWickGame.Game storage pointer)"}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2638:6:0","2673:9:0","2707:17:0","2757:7:0","2787:8:0","2812:12:0","2841:6:0","2873:5:0","2918:9:0","2944:9:0"],"names":["gameId","startTime","endingPeriodStart","endTime","totalPot","treasuryFund","winner","state","candleEnd","finalized"],"nodeType":"FunctionCall","src":"2619:352:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"src":"2596:375:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":244,"nodeType":"ExpressionStatement","src":"2596:375:0"},{"eventCall":{"arguments":[{"id":246,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"3007:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":247,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"3022:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":248,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"3033:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":249,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"3052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":245,"name":"GameStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"2995:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2995:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":251,"nodeType":"EmitStatement","src":"2990:70:0"},{"expression":{"id":252,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"3077:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":188,"id":253,"nodeType":"Return","src":"3070:20:0"}]},"functionSelector":"482d51e0","id":255,"implemented":true,"kind":"function","modifiers":[{"id":185,"kind":"modifierInvocation","modifierName":{"id":184,"name":"onlyOwner","nameLocations":["2228:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":128,"src":"2228:9:0"},"nodeType":"ModifierInvocation","src":"2228:9:0"}],"name":"startNewGame","nameLocation":"2204:12:0","nodeType":"FunctionDefinition","parameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"2216:2:0"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":187,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":255,"src":"2247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"2247:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2246:9:0"},"scope":924,"src":"2195:902:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":377,"nodeType":"Block","src":"3200:957:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3218:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3222:5:0","memberName":"value","nodeType":"MemberAccess","src":"3218:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3230:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3218:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420616d6f756e74206d7573742062652067726561746572207468616e2030","id":271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3233:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5882313ad2953dc0b1088d9a14e993caf03e9dd7190cacb11b6e11ae20890871","typeString":"literal_string \"Bid amount must be greater than 0\""},"value":"Bid amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5882313ad2953dc0b1088d9a14e993caf03e9dd7190cacb11b6e11ae20890871","typeString":"literal_string \"Bid amount must be greater than 0\""}],"id":266,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3210:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3210:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":273,"nodeType":"ExpressionStatement","src":"3210:59:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":275,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3287:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3293:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3287:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":277,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3305:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":279,"indexExpression":{"id":278,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3311:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3305:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3319:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"3305:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3287:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d652068617320656e646564","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3328:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea","typeString":"literal_string \"Game has ended\""},"value":"Game has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea","typeString":"literal_string \"Game has ended\""}],"id":274,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3279:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3279:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":284,"nodeType":"ExpressionStatement","src":"3279:66:0"},{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"game","nameLocation":"3377:4:0","nodeType":"VariableDeclaration","scope":377,"src":"3364:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":286,"nodeType":"UserDefinedTypeName","pathNode":{"id":285,"name":"Game","nameLocations":["3364:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"3364:4:0"},"referencedDeclaration":28,"src":"3364:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":291,"initialValue":{"baseExpression":{"id":288,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3384:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":290,"indexExpression":{"id":289,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3390:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3384:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3364:33:0"},{"assignments":[294],"declarations":[{"constant":false,"id":294,"mutability":"mutable","name":"player","nameLocation":"3422:6:0","nodeType":"VariableDeclaration","scope":377,"src":"3407:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":293,"nodeType":"UserDefinedTypeName","pathNode":{"id":292,"name":"Player","nameLocations":["3407:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3407:6:0"},"referencedDeclaration":37,"src":"3407:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":301,"initialValue":{"baseExpression":{"baseExpression":{"id":295,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3431:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":297,"indexExpression":{"id":296,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3443:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":300,"indexExpression":{"expression":{"id":298,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3451:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3455:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3451:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3431:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3407:55:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":302,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3528:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3534:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3528:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":304,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3547:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3552:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"3547:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3528:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":307,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3573:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3578:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"3573:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":309,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3587:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3597:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3587:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"3573:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3528:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":321,"nodeType":"IfStatement","src":"3524:149:0","trueBody":{"id":320,"nodeType":"Block","src":"3613:60:0","statements":[{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":313,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3627:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":315,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3632:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"3627:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":316,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3640:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3650:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"3640:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"3627:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":319,"nodeType":"ExpressionStatement","src":"3627:35:0"}]}},{"condition":{"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3735:14:0","subExpression":{"expression":{"id":322,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3736:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":323,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3743:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3736:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":340,"nodeType":"IfStatement","src":"3731:118:0","trueBody":{"id":339,"nodeType":"Block","src":"3751:98:0","statements":[{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3765:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3772:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3765:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3781:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3765:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":330,"nodeType":"ExpressionStatement","src":"3765:20:0"},{"expression":{"arguments":[{"expression":{"id":335,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3827:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3831:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3827:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":331,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"3799:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":333,"indexExpression":{"id":332,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3814:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3799:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3822:4:0","memberName":"push","nodeType":"MemberAccess","src":"3799:27:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3799:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"3799:39:0"}]}},{"expression":{"id":346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":341,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3896:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3903:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"3896:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":344,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3915:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3919:5:0","memberName":"value","nodeType":"MemberAccess","src":"3915:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3896:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":347,"nodeType":"ExpressionStatement","src":"3896:28:0"},{"expression":{"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3934:17:0","subExpression":{"expression":{"id":348,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3934:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":350,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3941:8:0","memberName":"bidCount","nodeType":"MemberAccess","referencedDeclaration":32,"src":"3934:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":352,"nodeType":"ExpressionStatement","src":"3934:17:0"},{"expression":{"id":358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":353,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"3961:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":355,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3968:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3961:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":356,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3982:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3988:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3982:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3961:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":359,"nodeType":"ExpressionStatement","src":"3961:36:0"},{"expression":{"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":360,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4043:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":362,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4048:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"4043:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":363,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4060:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4064:5:0","memberName":"value","nodeType":"MemberAccess","src":"4060:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4043:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":366,"nodeType":"ExpressionStatement","src":"4043:26:0"},{"eventCall":{"arguments":[{"id":368,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4103:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":369,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4111:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4115:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4111:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":371,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4123:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4127:5:0","memberName":"value","nodeType":"MemberAccess","src":"4123:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":373,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4134:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4141:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"4134:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":367,"name":"BidPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"4093:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4093:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":376,"nodeType":"EmitStatement","src":"4088:62:0"}]},"functionSelector":"9979ef45","id":378,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":260,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3169:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":261,"kind":"modifierInvocation","modifierName":{"id":259,"name":"gameExists","nameLocations":["3158:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"3158:10:0"},"nodeType":"ModifierInvocation","src":"3158:18:0"},{"arguments":[{"id":263,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"3192:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":264,"kind":"modifierInvocation","modifierName":{"id":262,"name":"gameInProgress","nameLocations":["3177:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":169,"src":"3177:14:0"},"nodeType":"ModifierInvocation","src":"3177:22:0"}],"name":"placeBid","nameLocation":"3116:8:0","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"gameId","nameLocation":"3133:6:0","nodeType":"VariableDeclaration","scope":378,"src":"3125:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3125:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3124:16:0"},"returnParameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"3200:0:0"},"scope":924,"src":"3107:1050:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":526,"nodeType":"Block","src":"4228:1480:0","statements":[{"assignments":[388],"declarations":[{"constant":false,"id":388,"mutability":"mutable","name":"game","nameLocation":"4251:4:0","nodeType":"VariableDeclaration","scope":526,"src":"4238:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":387,"nodeType":"UserDefinedTypeName","pathNode":{"id":386,"name":"Game","nameLocations":["4238:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"4238:4:0"},"referencedDeclaration":28,"src":"4238:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":392,"initialValue":{"baseExpression":{"id":389,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"4258:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":391,"indexExpression":{"id":390,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"4264:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4258:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4238:33:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":394,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4289:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4295:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4289:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":396,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4308:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4313:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"4308:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4289:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520686173206e6f7420656e64656420796574","id":399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4322:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f","typeString":"literal_string \"Game has not ended yet\""},"value":"Game has not ended yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f","typeString":"literal_string \"Game has not ended yet\""}],"id":393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4281:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4281:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":401,"nodeType":"ExpressionStatement","src":"4281:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":403,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4365:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":404,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4370:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"4365:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":405,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4379:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4389:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4379:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"4365:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c726561647920656e646564","id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4396:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""},"value":"Game already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""}],"id":402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4357:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4357:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"4357:60:0"},{"expression":{"arguments":[{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4435:15:0","subExpression":{"expression":{"id":412,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4436:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4441:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"4436:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c72656164792066696e616c697a6564","id":415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4452:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc20c9aecc765d0b4a39de05c936055bd74f0368c6f2cb73e0c208db66f7977","typeString":"literal_string \"Game already finalized\""},"value":"Game already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cc20c9aecc765d0b4a39de05c936055bd74f0368c6f2cb73e0c208db66f7977","typeString":"literal_string \"Game already finalized\""}],"id":411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4427:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4427:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"4427:50:0"},{"assignments":[419],"declarations":[{"constant":false,"id":419,"mutability":"mutable","name":"candleEnd","nameLocation":"4626:9:0","nodeType":"VariableDeclaration","scope":526,"src":"4618:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":418,"name":"uint256","nodeType":"ElementaryTypeName","src":"4618:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":439,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":420,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4638:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4643:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"4638:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":427,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4712:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4718:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4712:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":429,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4729:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4735:10:0","memberName":"prevrandao","nodeType":"MemberAccess","src":"4729:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":431,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"4747:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":425,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4695:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4699:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4695:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":424,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4685:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4685:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4677:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:0","typeDescriptions":{}}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4677:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":435,"name":"ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"4759:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4677:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":437,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4676:97:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4638:135:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4618:155:0"},{"expression":{"id":444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":440,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4792:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":442,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4797:9:0","memberName":"candleEnd","nodeType":"MemberAccess","referencedDeclaration":25,"src":"4792:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":443,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4809:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4792:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":445,"nodeType":"ExpressionStatement","src":"4792:26:0"},{"expression":{"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":446,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"4828:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4833:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"4828:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":449,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4841:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4851:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4841:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"4828:28:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":452,"nodeType":"ExpressionStatement","src":"4828:28:0"},{"eventCall":{"arguments":[{"id":454,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"4900:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":455,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4908:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":453,"name":"CandleEndDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"4880:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":457,"nodeType":"EmitStatement","src":"4875:43:0"},{"assignments":[459],"declarations":[{"constant":false,"id":459,"mutability":"mutable","name":"winner","nameLocation":"5013:6:0","nodeType":"VariableDeclaration","scope":526,"src":"5005:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"5005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":464,"initialValue":{"arguments":[{"id":461,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5038:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":462,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5046:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":460,"name":"determineWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5022:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (uint256,uint256) view returns (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5022:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5005:51:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":465,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5079:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5097:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":467,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5089:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":466,"name":"address","nodeType":"ElementaryTypeName","src":"5089:7:0","typeDescriptions":{}}},"id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5089:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5079:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":519,"nodeType":"IfStatement","src":"5075:587:0","trueBody":{"id":518,"nodeType":"Block","src":"5101:561:0","statements":[{"expression":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":471,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5115:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5120:6:0","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":20,"src":"5115:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":474,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5129:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5115:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":476,"nodeType":"ExpressionStatement","src":"5115:20:0"},{"assignments":[478],"declarations":[{"constant":false,"id":478,"mutability":"mutable","name":"winnerPrize","nameLocation":"5214:11:0","nodeType":"VariableDeclaration","scope":518,"src":"5206:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":486,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":479,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5229:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5234:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"5229:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":481,"name":"WINNER_SHARE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5245:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5229:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5228:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5261:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5228:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5206:58:0"},{"assignments":[488],"declarations":[{"constant":false,"id":488,"mutability":"mutable","name":"treasuryAmount","nameLocation":"5286:14:0","nodeType":"VariableDeclaration","scope":518,"src":"5278:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":493,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":489,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5303:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":490,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5308:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"5303:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":491,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5319:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5303:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5278:52:0"},{"expression":{"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":494,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5357:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5362:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"5357:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":497,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5377:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":499,"nodeType":"ExpressionStatement","src":"5357:34:0"},{"expression":{"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":500,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"5469:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":502,"indexExpression":{"id":501,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5488:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5469:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":503,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5499:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5469:41:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":505,"nodeType":"ExpressionStatement","src":"5469:41:0"},{"eventCall":{"arguments":[{"id":507,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5552:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":508,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5560:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":509,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5568:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":510,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"5581:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":506,"name":"GameEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"5542:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5542:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":512,"nodeType":"EmitStatement","src":"5537:59:0"},{"eventCall":{"arguments":[{"id":514,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":459,"src":"5631:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":515,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5639:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":513,"name":"WithdrawalReady","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"5615:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5615:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":517,"nodeType":"EmitStatement","src":"5610:41:0"}]}},{"expression":{"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":520,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"5680:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":522,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5685:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"5680:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5697:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5680:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":525,"nodeType":"ExpressionStatement","src":"5680:21:0"}]},"functionSelector":"d0399bb8","id":527,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":383,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"4220:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":384,"kind":"modifierInvocation","modifierName":{"id":382,"name":"gameExists","nameLocations":["4209:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"4209:10:0"},"nodeType":"ModifierInvocation","src":"4209:18:0"}],"name":"endGame","nameLocation":"4176:7:0","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"gameId","nameLocation":"4192:6:0","nodeType":"VariableDeclaration","scope":527,"src":"4184:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":379,"name":"uint256","nodeType":"ElementaryTypeName","src":"4184:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4183:16:0"},"returnParameters":{"id":385,"nodeType":"ParameterList","parameters":[],"src":"4228:0:0"},"scope":924,"src":"4167:1541:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":606,"nodeType":"Block","src":"5810:640:0","statements":[{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"playerList","nameLocation":"5837:10:0","nodeType":"VariableDeclaration","scope":606,"src":"5820:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"5820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":539,"nodeType":"ArrayTypeName","src":"5820:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":544,"initialValue":{"baseExpression":{"id":541,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"5850:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":543,"indexExpression":{"id":542,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"5865:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5850:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5820:52:0"},{"assignments":[546],"declarations":[{"constant":false,"id":546,"mutability":"mutable","name":"currentWinner","nameLocation":"5890:13:0","nodeType":"VariableDeclaration","scope":606,"src":"5882:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"5882:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":551,"initialValue":{"arguments":[{"hexValue":"30","id":549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5914:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5906:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":547,"name":"address","nodeType":"ElementaryTypeName","src":"5906:7:0","typeDescriptions":{}}},"id":550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5906:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5882:34:0"},{"assignments":[553],"declarations":[{"constant":false,"id":553,"mutability":"mutable","name":"highestBid","nameLocation":"5934:10:0","nodeType":"VariableDeclaration","scope":606,"src":"5926:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"5926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":555,"initialValue":{"hexValue":"30","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5947:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5926:22:0"},{"body":{"id":602,"nodeType":"Block","src":"6015:390:0","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"player","nameLocation":"6037:6:0","nodeType":"VariableDeclaration","scope":602,"src":"6029:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"6029:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":572,"initialValue":{"baseExpression":{"id":569,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6046:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":571,"indexExpression":{"id":570,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6057:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6046:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6029:30:0"},{"assignments":[575],"declarations":[{"constant":false,"id":575,"mutability":"mutable","name":"playerData","nameLocation":"6087:10:0","nodeType":"VariableDeclaration","scope":602,"src":"6073:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":574,"nodeType":"UserDefinedTypeName","pathNode":{"id":573,"name":"Player","nameLocations":["6073:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6073:6:0"},"referencedDeclaration":37,"src":"6073:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":581,"initialValue":{"baseExpression":{"baseExpression":{"id":576,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"6100:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":578,"indexExpression":{"id":577,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"6112:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":580,"indexExpression":{"id":579,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6120:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6073:54:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":582,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6217:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":583,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6228:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6217:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":584,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"6243:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6217:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":586,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6256:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":587,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6267:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6256:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":588,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6278:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6256:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6217:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"6213:182:0","trueBody":{"id":600,"nodeType":"Block","src":"6290:105:0","statements":[{"expression":{"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":591,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":553,"src":"6308:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":592,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"6321:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":593,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6332:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6321:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6308:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":595,"nodeType":"ExpressionStatement","src":"6308:32:0"},{"expression":{"id":598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":596,"name":"currentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6358:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":597,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"6374:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6358:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":599,"nodeType":"ExpressionStatement","src":"6358:22:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":560,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"5987:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":561,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"5991:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6002:6:0","memberName":"length","nodeType":"MemberAccess","src":"5991:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5987:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":603,"initializationExpression":{"assignments":[557],"declarations":[{"constant":false,"id":557,"mutability":"mutable","name":"i","nameLocation":"5980:1:0","nodeType":"VariableDeclaration","scope":603,"src":"5972:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":556,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":559,"initialValue":{"hexValue":"30","id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5984:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5972:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6010:3:0","subExpression":{"id":564,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":557,"src":"6010:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":566,"nodeType":"ExpressionStatement","src":"6010:3:0"},"nodeType":"ForStatement","src":"5967:438:0"},{"expression":{"id":604,"name":"currentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"6430:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":535,"id":605,"nodeType":"Return","src":"6423:20:0"}]},"id":607,"implemented":true,"kind":"function","modifiers":[],"name":"determineWinner","nameLocation":"5727:15:0","nodeType":"FunctionDefinition","parameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"gameId","nameLocation":"5751:6:0","nodeType":"VariableDeclaration","scope":607,"src":"5743:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":528,"name":"uint256","nodeType":"ElementaryTypeName","src":"5743:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"candleEnd","nameLocation":"5767:9:0","nodeType":"VariableDeclaration","scope":607,"src":"5759:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"5759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5742:35:0"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":534,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":607,"src":"5801:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":533,"name":"address","nodeType":"ElementaryTypeName","src":"5801:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5800:9:0"},"scope":924,"src":"5718:732:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":653,"nodeType":"Block","src":"6532:322:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":615,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6546:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":617,"indexExpression":{"id":616,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"6552:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6546:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":618,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6560:6:0","memberName":"gameId","nodeType":"MemberAccess","referencedDeclaration":8,"src":"6546:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6570:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6546:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"6542:58:0","trueBody":{"expression":{"expression":{"id":621,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6580:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:10:0","memberName":"NotStarted","nodeType":"MemberAccess","referencedDeclaration":2,"src":"6580:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":614,"id":623,"nodeType":"Return","src":"6573:27:0"}},{"assignments":[627],"declarations":[{"constant":false,"id":627,"mutability":"mutable","name":"game","nameLocation":"6631:4:0","nodeType":"VariableDeclaration","scope":653,"src":"6619:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":626,"nodeType":"UserDefinedTypeName","pathNode":{"id":625,"name":"Game","nameLocations":["6619:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"6619:4:0"},"referencedDeclaration":28,"src":"6619:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":631,"initialValue":{"baseExpression":{"id":628,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6638:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":630,"indexExpression":{"id":629,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"6644:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6638:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6619:32:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":632,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6665:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6671:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6665:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":634,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6684:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"id":635,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6689:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"6684:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6665:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":640,"nodeType":"IfStatement","src":"6661:59:0","trueBody":{"expression":{"expression":{"id":637,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6705:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6715:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"6705:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":614,"id":639,"nodeType":"Return","src":"6698:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":641,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6734:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6740:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6734:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":643,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":627,"src":"6753:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"id":644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6758:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"6753:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6734:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":649,"nodeType":"IfStatement","src":"6730:76:0","trueBody":{"expression":{"expression":{"id":646,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6784:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6794:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"6784:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":614,"id":648,"nodeType":"Return","src":"6777:29:0"}},{"expression":{"expression":{"id":650,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6823:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6833:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"6823:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":614,"id":652,"nodeType":"Return","src":"6816:31:0"}]},"functionSelector":"ffde0c74","id":654,"implemented":true,"kind":"function","modifiers":[],"name":"getGameState","nameLocation":"6469:12:0","nodeType":"FunctionDefinition","parameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"gameId","nameLocation":"6490:6:0","nodeType":"VariableDeclaration","scope":654,"src":"6482:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":608,"name":"uint256","nodeType":"ElementaryTypeName","src":"6482:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6481:16:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":654,"src":"6521:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"typeName":{"id":612,"nodeType":"UserDefinedTypeName","pathNode":{"id":611,"name":"GameState","nameLocations":["6521:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":6,"src":"6521:9:0"},"referencedDeclaration":6,"src":"6521:9:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"visibility":"internal"}],"src":"6520:11:0"},"scope":924,"src":"6460:394:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":684,"nodeType":"Block","src":"6968:154:0","statements":[{"assignments":[669],"declarations":[{"constant":false,"id":669,"mutability":"mutable","name":"playerData","nameLocation":"6992:10:0","nodeType":"VariableDeclaration","scope":684,"src":"6978:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":668,"nodeType":"UserDefinedTypeName","pathNode":{"id":667,"name":"Player","nameLocations":["6978:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6978:6:0"},"referencedDeclaration":37,"src":"6978:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":675,"initialValue":{"baseExpression":{"baseExpression":{"id":670,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"7005:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":672,"indexExpression":{"id":671,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"7017:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7005:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":674,"indexExpression":{"id":673,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"7025:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7005:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6978:54:0"},{"expression":{"components":[{"expression":{"id":676,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"7050:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7061:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"7050:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":678,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"7071:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":679,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7082:8:0","memberName":"bidCount","nodeType":"MemberAccess","referencedDeclaration":32,"src":"7071:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":680,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":669,"src":"7092:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7103:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"7092:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":682,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7049:66:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":666,"id":683,"nodeType":"Return","src":"7042:73:0"}]},"functionSelector":"a59d9ab7","id":685,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerBid","nameLocation":"6873:12:0","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"gameId","nameLocation":"6894:6:0","nodeType":"VariableDeclaration","scope":685,"src":"6886:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":655,"name":"uint256","nodeType":"ElementaryTypeName","src":"6886:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"player","nameLocation":"6910:6:0","nodeType":"VariableDeclaration","scope":685,"src":"6902:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":657,"name":"address","nodeType":"ElementaryTypeName","src":"6902:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6885:32:0"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6941:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":660,"name":"uint256","nodeType":"ElementaryTypeName","src":"6941:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":663,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6950:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":662,"name":"uint256","nodeType":"ElementaryTypeName","src":"6950:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":665,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6959:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":664,"name":"uint256","nodeType":"ElementaryTypeName","src":"6959:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6940:27:0"},"scope":924,"src":"6864:258:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":697,"nodeType":"Block","src":"7213:46:0","statements":[{"expression":{"baseExpression":{"id":693,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7230:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":695,"indexExpression":{"id":694,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7245:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7230:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":692,"id":696,"nodeType":"Return","src":"7223:29:0"}]},"functionSelector":"15a40f49","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"getGamePlayers","nameLocation":"7141:14:0","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"gameId","nameLocation":"7164:6:0","nodeType":"VariableDeclaration","scope":698,"src":"7156:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7156:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7155:16:0"},"returnParameters":{"id":692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"7195:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"7195:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":690,"nodeType":"ArrayTypeName","src":"7195:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7194:18:0"},"scope":924,"src":"7132:127:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":710,"nodeType":"Block","src":"7345:53:0","statements":[{"expression":{"expression":{"baseExpression":{"id":705,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7362:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":707,"indexExpression":{"id":706,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"7377:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7362:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7385:6:0","memberName":"length","nodeType":"MemberAccess","src":"7362:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":704,"id":709,"nodeType":"Return","src":"7355:36:0"}]},"functionSelector":"ff8fb35c","id":711,"implemented":true,"kind":"function","modifiers":[],"name":"getGamePlayerCount","nameLocation":"7278:18:0","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":700,"mutability":"mutable","name":"gameId","nameLocation":"7305:6:0","nodeType":"VariableDeclaration","scope":711,"src":"7297:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":699,"name":"uint256","nodeType":"ElementaryTypeName","src":"7297:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7296:16:0"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"7336:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":702,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7335:9:0"},"scope":924,"src":"7269:129:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":753,"nodeType":"Block","src":"7437:296:0","statements":[{"assignments":[715],"declarations":[{"constant":false,"id":715,"mutability":"mutable","name":"amount","nameLocation":"7455:6:0","nodeType":"VariableDeclaration","scope":753,"src":"7447:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":720,"initialValue":{"baseExpression":{"id":716,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"7464:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":719,"indexExpression":{"expression":{"id":717,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7483:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7487:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7483:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7464:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7447:47:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":722,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7512:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7521:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7512:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e647320746f207769746864726177","id":725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7524:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""},"value":"No funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""}],"id":721,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7504:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7504:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"7504:43:0"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":728,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"7566:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":731,"indexExpression":{"expression":{"id":729,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7585:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7589:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7585:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7566:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7599:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7566:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":734,"nodeType":"ExpressionStatement","src":"7566:34:0"},{"assignments":[736,null],"declarations":[{"constant":false,"id":736,"mutability":"mutable","name":"success","nameLocation":"7625:7:0","nodeType":"VariableDeclaration","scope":753,"src":"7620:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":735,"name":"bool","nodeType":"ElementaryTypeName","src":"7620:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":747,"initialValue":{"arguments":[{"hexValue":"","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7678:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":739,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"7646:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7650:6:0","memberName":"sender","nodeType":"MemberAccess","src":"7646:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7638:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":737,"name":"address","nodeType":"ElementaryTypeName","src":"7638:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7638:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7658:4:0","memberName":"call","nodeType":"MemberAccess","src":"7638:24:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"7670:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7638:39:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7638:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7619:62:0"},{"expression":{"arguments":[{"id":749,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":736,"src":"7699:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7708:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":748,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7691:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7691:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":752,"nodeType":"ExpressionStatement","src":"7691:35:0"}]},"functionSelector":"3ccfd60b","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"7417:8:0","nodeType":"FunctionDefinition","parameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"7425:2:0"},"returnParameters":{"id":713,"nodeType":"ParameterList","parameters":[],"src":"7437:0:0"},"scope":924,"src":"7408:325:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":819,"nodeType":"Block","src":"7790:530:0","statements":[{"assignments":[760],"declarations":[{"constant":false,"id":760,"mutability":"mutable","name":"totalTreasury","nameLocation":"7808:13:0","nodeType":"VariableDeclaration","scope":819,"src":"7800:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7800:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":762,"initialValue":{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7824:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7800:25:0"},{"body":{"id":793,"nodeType":"Block","src":"7946:162:0","statements":[{"condition":{"expression":{"baseExpression":{"id":773,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7964:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":775,"indexExpression":{"id":774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7970:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7964:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7973:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"7964:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":792,"nodeType":"IfStatement","src":"7960:138:0","trueBody":{"id":791,"nodeType":"Block","src":"7984:114:0","statements":[{"expression":{"id":782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":777,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8002:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":778,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"8019:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":780,"indexExpression":{"id":779,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8025:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8019:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":781,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8028:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"8019:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8002:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":783,"nodeType":"ExpressionStatement","src":"8002:38:0"},{"expression":{"id":789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":784,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"8058:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":786,"indexExpression":{"id":785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"8064:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8058:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8067:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"8058:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8082:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8058:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":790,"nodeType":"ExpressionStatement","src":"8058:25:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":767,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7921:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":768,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"7926:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7921:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":794,"initializationExpression":{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"i","nameLocation":"7914:1:0","nodeType":"VariableDeclaration","scope":794,"src":"7906:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"7906:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":766,"initialValue":{"hexValue":"31","id":765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7918:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7906:13:0"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7941:3:0","subExpression":{"id":770,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"7941:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":772,"nodeType":"ExpressionStatement","src":"7941:3:0"},"nodeType":"ForStatement","src":"7901:207:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":796,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8134:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8150:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8134:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2074726561737572792066756e647320746f207769746864726177","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8153:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_afa61b47edd5c78db3a86067b76f0091e67103fda79d528a96b3b8dfbf84cdd3","typeString":"literal_string \"No treasury funds to withdraw\""},"value":"No treasury funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afa61b47edd5c78db3a86067b76f0091e67103fda79d528a96b3b8dfbf84cdd3","typeString":"literal_string \"No treasury funds to withdraw\""}],"id":795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8126:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8126:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":801,"nodeType":"ExpressionStatement","src":"8126:59:0"},{"assignments":[803,null],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"success","nameLocation":"8210:7:0","nodeType":"VariableDeclaration","scope":819,"src":"8205:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":802,"name":"bool","nodeType":"ElementaryTypeName","src":"8205:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":813,"initialValue":{"arguments":[{"hexValue":"","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8265:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":806,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"8231:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8223:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"8223:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8223:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8238:4:0","memberName":"call","nodeType":"MemberAccess","src":"8223:19:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":809,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":760,"src":"8250:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8223:41:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8223:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8204:64:0"},{"expression":{"arguments":[{"id":815,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"8286:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572206661696c6564","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8295:17:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""},"value":"Transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51","typeString":"literal_string \"Transfer failed\""}],"id":814,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8278:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8278:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"8278:35:0"}]},"functionSelector":"166bab95","id":820,"implemented":true,"kind":"function","modifiers":[{"id":757,"kind":"modifierInvocation","modifierName":{"id":756,"name":"onlyOwner","nameLocations":["7780:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":128,"src":"7780:9:0"},"nodeType":"ModifierInvocation","src":"7780:9:0"}],"name":"withdrawTreasury","nameLocation":"7752:16:0","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[],"src":"7768:2:0"},"returnParameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"7790:0:0"},"scope":924,"src":"7743:577:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":922,"nodeType":"Block","src":"8458:738:0","statements":[{"assignments":[832],"declarations":[{"constant":false,"id":832,"mutability":"mutable","name":"game","nameLocation":"8481:4:0","nodeType":"VariableDeclaration","scope":922,"src":"8468:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":831,"nodeType":"UserDefinedTypeName","pathNode":{"id":830,"name":"Game","nameLocations":["8468:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"8468:4:0"},"referencedDeclaration":28,"src":"8468:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":836,"initialValue":{"baseExpression":{"id":833,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"8488:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":835,"indexExpression":{"id":834,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8494:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8488:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8468:33:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":838,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8519:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8524:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"8519:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":840,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"8533:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8543:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"8533:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"8519:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c726561647920656e646564","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8550:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""},"value":"Game already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""}],"id":837,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8511:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8511:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"8511:60:0"},{"expression":{"id":851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":846,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8590:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8595:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"8590:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":849,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"8603:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8613:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"8603:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"8590:28:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":852,"nodeType":"ExpressionStatement","src":"8590:28:0"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":853,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"8628:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8633:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"8628:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8645:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8628:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"ExpressionStatement","src":"8628:21:0"},{"assignments":[863],"declarations":[{"constant":false,"id":863,"mutability":"mutable","name":"playerList","nameLocation":"8730:10:0","nodeType":"VariableDeclaration","scope":922,"src":"8713:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"8713:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":862,"nodeType":"ArrayTypeName","src":"8713:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":867,"initialValue":{"baseExpression":{"id":864,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"8743:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":866,"indexExpression":{"id":865,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8758:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8743:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8713:52:0"},{"body":{"id":910,"nodeType":"Block","src":"8832:299:0","statements":[{"assignments":[880],"declarations":[{"constant":false,"id":880,"mutability":"mutable","name":"player","nameLocation":"8854:6:0","nodeType":"VariableDeclaration","scope":910,"src":"8846:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":879,"name":"address","nodeType":"ElementaryTypeName","src":"8846:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":884,"initialValue":{"baseExpression":{"id":881,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"8863:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":883,"indexExpression":{"id":882,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8874:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8863:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8846:30:0"},{"assignments":[886],"declarations":[{"constant":false,"id":886,"mutability":"mutable","name":"playerBid","nameLocation":"8898:9:0","nodeType":"VariableDeclaration","scope":910,"src":"8890:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":893,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":887,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"8910:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":889,"indexExpression":{"id":888,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8922:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8910:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":891,"indexExpression":{"id":890,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"8930:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8910:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"id":892,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8938:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8910:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8890:56:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":894,"name":"playerBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8977:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8989:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8977:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":909,"nodeType":"IfStatement","src":"8973:148:0","trueBody":{"id":908,"nodeType":"Block","src":"8992:129:0","statements":[{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":897,"name":"pendingWithdrawals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":74,"src":"9010:18:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":899,"indexExpression":{"id":898,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9029:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9010:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":900,"name":"playerBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9040:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9010:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":902,"nodeType":"ExpressionStatement","src":"9010:39:0"},{"eventCall":{"arguments":[{"id":904,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9088:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"playerBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9096:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":903,"name":"WithdrawalReady","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"9072:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9072:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":907,"nodeType":"EmitStatement","src":"9067:39:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8804:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":873,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":863,"src":"8808:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8819:6:0","memberName":"length","nodeType":"MemberAccess","src":"8808:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8804:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":911,"initializationExpression":{"assignments":[869],"declarations":[{"constant":false,"id":869,"mutability":"mutable","name":"i","nameLocation":"8797:1:0","nodeType":"VariableDeclaration","scope":911,"src":"8789:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":868,"name":"uint256","nodeType":"ElementaryTypeName","src":"8789:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":871,"initialValue":{"hexValue":"30","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8801:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8789:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8827:3:0","subExpression":{"id":876,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"8827:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":878,"nodeType":"ExpressionStatement","src":"8827:3:0"},"nodeType":"ForStatement","src":"8784:347:0"},{"eventCall":{"arguments":[{"id":913,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"9164:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9172:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":914,"name":"address","nodeType":"ElementaryTypeName","src":"9172:7:0","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9172:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9184:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9187:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":912,"name":"GameEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"9154:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9154:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"EmitStatement","src":"9149:40:0"}]},"functionSelector":"b256b11b","id":923,"implemented":true,"kind":"function","modifiers":[{"id":825,"kind":"modifierInvocation","modifierName":{"id":824,"name":"onlyOwner","nameLocations":["8429:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":128,"src":"8429:9:0"},"nodeType":"ModifierInvocation","src":"8429:9:0"},{"arguments":[{"id":827,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":822,"src":"8450:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":828,"kind":"modifierInvocation","modifierName":{"id":826,"name":"gameExists","nameLocations":["8439:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":144,"src":"8439:10:0"},"nodeType":"ModifierInvocation","src":"8439:18:0"}],"name":"emergencyEndGame","nameLocation":"8387:16:0","nodeType":"FunctionDefinition","parameters":{"id":823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":822,"mutability":"mutable","name":"gameId","nameLocation":"8412:6:0","nodeType":"VariableDeclaration","scope":923,"src":"8404:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":821,"name":"uint256","nodeType":"ElementaryTypeName","src":"8404:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8403:16:0"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[],"src":"8458:0:0"},"scope":924,"src":"8378:818:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":925,"src":"58:9140:0","usedErrors":[],"usedEvents":[84,94,104,110,116]}],"src":"32:9166:0"}}},"contracts":{"contracts/BigWickGame.sol":{"BigWickGame":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalBid","type":"uint256"}],"name":"BidPlaced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"candleEnd","type":"uint256"}],"name":"CandleEndDetermined","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"prizeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"treasuryAmount","type":"uint256"}],"name":"GameEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endingPeriodStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"GameStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"WithdrawalReady","type":"event"},{"inputs":[],"name":"ENDING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STARTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY_SHARE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WINNER_SHARE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"emergencyEndGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"endGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"gamePlayerList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"gamePlayers","outputs":[{"internalType":"uint256","name":"totalBid","type":"uint256"},{"internalType":"uint256","name":"bidCount","type":"uint256"},{"internalType":"uint256","name":"lastBidTime","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endingPeriodStart","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPot","type":"uint256"},{"internalType":"uint256","name":"treasuryFund","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"enum BigWickGame.GameState","name":"state","type":"uint8"},{"internalType":"uint256","name":"candleEnd","type":"uint256"},{"internalType":"bool","name":"finalized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGamePlayerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGamePlayers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameState","outputs":[{"internalType":"enum BigWickGame.GameState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerBid","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"pendingWithdrawals","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"startNewGame","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBid\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"candleEnd\",\"type\":\"uint256\"}],\"name\":\"CandleEndDetermined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endingPeriodStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalReady\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENDING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STARTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"emergencyEndGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamePlayerList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamePlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBidTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endingPeriodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasuryFund\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"enum BigWickGame.GameState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"candleEnd\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGamePlayerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGamePlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGameState\",\"outputs\":[{\"internalType\":\"enum BigWickGame.GameState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewGame\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BigWickGame.sol\":\"BigWickGame\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BigWickGame.sol\":{\"keccak256\":\"0x9e4303bdd5b2f7703e757e764322aa135e13b2f7d115e16c0eca41d9cf27a9f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df204f8dd3cb6f3e5d247b1b871d4dcac798f79fc55f1c09921391637dec1861\",\"dweb:/ipfs/QmYEswaNh4enVarrsi55SfDaf8GHmowb4kHwJVEAqkQkKC\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 400/65984 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 13189\n// Code size = 47729 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20198]\n     5: jump @36 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x301c0\n    14: i32 a0 = a0 + 0\n    16: ecalli 13 // 'set_immutable_data'\n    18: jump @36\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @16\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @16\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 32)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ra = 0x6\n   659: ecalli 6 // 'get_storage'\n   661: fallthrough\n      : @7 [@dyn 3] (gas: 5)\n   662: a0 = u64 [sp + 0x38]\n   665: a1 = u64 [sp + 0x30]\n   668: a2 = u64 [sp + 0x28]\n   671: a3 = u64 [sp + 0x20]\n   674: t0 = 8, jump @1606\n      : @8 [@dyn 4] (gas: 10)\n   680: u64 [s1 + 0x18] = a3\n   683: u64 [s1 + 0x10] = a2\n   686: u64 [s1 + 0x8] = a1\n   689: u64 [s1] = a0\n   691: sp = s0 + 0xffffffffffffffa0\n   694: ra = u64 [sp + 0x58]\n   697: s0 = u64 [sp + 0x50]\n   700: s1 = u64 [sp + 0x48]\n   703: sp = sp + 0x60\n   706: ret\n      : @9 (gas: 40)\n   708: sp = sp + 0xffffffffffffffa0\n   711: u64 [sp + 0x58] = ra\n   714: u64 [sp + 0x50] = s0\n   717: s0 = sp + 0x60\n   720: sp = sp & 0xffffffffffffffe0\n   723: t0 = u64 [a0]\n   725: a3 = u64 [a0 + 0x8]\n   728: a4 = u64 [a0 + 0x10]\n   731: a0 = u64 [a0 + 0x18]\n   734: t1 = u64 [a1]\n   736: a2 = u64 [a1 + 0x8]\n   739: a5 = u64 [a1 + 0x10]\n   742: a1 = u64 [a1 + 0x18]\n   745: t2 = reverse a0\n   747: a4 = reverse a4\n   749: a3 = reverse a3\n   751: a0 = reverse t0\n   753: t0 = reverse a1\n   755: a5 = reverse a5\n   757: a2 = reverse a2\n   759: a1 = reverse t1\n   761: u64 [sp + 0x18] = a0\n   764: u64 [sp + 0x10] = a3\n   767: u64 [sp + 0x8] = a4\n   770: u64 [sp] = t2\n   772: u64 [sp + 0x38] = a1\n   775: u64 [sp + 0x30] = a2\n   778: u64 [sp + 0x28] = a5\n   781: u64 [sp + 0x20] = t0\n   784: i32 a1 = sp + 0\n   786: i32 a3 = sp + 0x20\n   789: a2 = 0xffffffffffffffff\n   792: a4 = 0x20\n   795: a0 = 0\n   797: ecalli 14 // 'set_storage'\n   799: sp = s0 + 0xffffffffffffffa0\n   802: ra = u64 [sp + 0x58]\n   805: s0 = u64 [sp + 0x50]\n   808: sp = sp + 0x60\n   811: ret\n      : @10 (gas: 24)\n   813: sp = sp + 0xffffffffffffff60\n   817: u64 [sp + 0x98] = ra\n   821: u64 [sp + 0x90] = s0\n   825: u64 [sp + 0x88] = s1\n   829: s0 = sp + 0xa0\n   833: sp = sp & 0xffffffffffffffe0\n   836: a4 = u64 [a3]\n   838: u64 [sp + 0x38] = a4\n   841: a4 = u64 [a3 + 0x8]\n   844: u64 [sp + 0x30] = a4\n   847: a4 = u64 [a3 + 0x10]\n   850: u64 [sp + 0x28] = a4\n   853: a3 = u64 [a3 + 0x18]\n   856: u64 [sp + 0x20] = a3\n   859: a3 = u64 [a2]\n   861: u64 [sp + 0x18] = a3\n   864: a3 = u64 [a2 + 0x8]\n   867: u64 [sp + 0x10] = a3\n   870: a3 = u64 [a2 + 0x10]\n   873: u64 [sp + 0x8] = a3\n   876: a2 = u64 [a2 + 0x18]\n   879: u64 [sp] = a2\n   881: s1 = a1\n   883: ra = 10, jump @16\n      : @11 [@dyn 5] (gas: 35)\n   888: a1 = u64 [sp]\n   890: a1 = reverse a1\n   892: a2 = u64 [sp + 0x8]\n   895: a2 = reverse a2\n   897: a3 = u64 [sp + 0x10]\n   900: a3 = reverse a3\n   902: a4 = u64 [sp + 0x18]\n   905: a4 = reverse a4\n   907: u64 [sp + 0x58] = a4\n   910: u64 [sp + 0x50] = a3\n   913: u64 [sp + 0x48] = a2\n   916: u64 [sp + 0x40] = a1\n   919: a1 = u64 [sp + 0x20]\n   922: a1 = reverse a1\n   924: a2 = u64 [sp + 0x28]\n   927: a2 = reverse a2\n   929: a3 = u64 [sp + 0x30]\n   932: a3 = reverse a3\n   934: a4 = u64 [sp + 0x38]\n   937: a4 = reverse a4\n   939: u64 [sp + 0x78] = a4\n   942: u64 [sp + 0x70] = a3\n   945: u64 [sp + 0x68] = a2\n   948: u64 [sp + 0x60] = a1\n   951: i32 a2 = a0 + 0\n   953: i32 a3 = s1 + 0\n   955: i32 a0 = sp + 0x40\n   958: a1 = 0x2\n   961: ecalli 5 // 'deposit_event'\n   963: sp = s0 + 0xffffffffffffff60\n   967: ra = u64 [sp + 0x98]\n   971: s0 = u64 [sp + 0x90]\n   975: s1 = u64 [sp + 0x88]\n   979: sp = sp + 0xa0\n   983: ret\n      : @12 (gas: 33)\n   985: sp = sp + 0xffffffffffffff20\n   989: u64 [sp + 0xd8] = ra\n   993: u64 [sp + 0xd0] = s0\n   997: u64 [sp + 0xc8] = s1\n  1001: s0 = sp + 0xe0\n  1005: sp = sp & 0xffffffffffffffe0\n  1008: a5 = u64 [a4]\n  1010: u64 [sp + 0x40] = a5\n  1013: a5 = u64 [a4 + 0x8]\n  1016: u64 [sp + 0x48] = a5\n  1019: a5 = u64 [a4 + 0x10]\n  1022: u64 [sp + 0x50] = a5\n  1025: a4 = u64 [a4 + 0x18]\n  1028: u64 [sp + 0x58] = a4\n  1031: t0 = 0xc\n  1034: a4 = u64 [a3]\n  1036: u64 [sp + 0x18] = a4\n  1039: a4 = u64 [a3 + 0x8]\n  1042: u64 [sp + 0x20] = a4\n  1045: a4 = u64 [a3 + 0x10]\n  1048: u64 [sp + 0x28] = a4\n  1051: a3 = u64 [a3 + 0x18]\n  1054: u64 [sp + 0x30] = a3\n  1057: s1 = u64 [a2]\n  1059: a3 = u64 [a2 + 0x8]\n  1062: u64 [sp] = a3\n  1064: a3 = u64 [a2 + 0x10]\n  1067: u64 [sp + 0x8] = a3\n  1070: a2 = u64 [a2 + 0x18]\n  1073: u64 [sp + 0x10] = a2\n  1076: u64 [sp + 56] = 0x40\n  1080: ra = 0xe\n  1083: jump @16\n      : @13 [@dyn 6] (gas: 2)\n  1086: u64 [sp + 0x38] = a1\n  1089: ra = 14, jump @16\n      : @14 [@dyn 7] (gas: 41)\n  1093: a1 = reverse s1\n  1095: u64 [sp + 0x78] = a1\n  1098: a1 = u64 [sp]\n  1100: a1 = reverse a1\n  1102: u64 [sp + 0x70] = a1\n  1105: a1 = u64 [sp + 0x8]\n  1108: a1 = reverse a1\n  1110: u64 [sp + 0x68] = a1\n  1113: a1 = u64 [sp + 0x10]\n  1116: a1 = reverse a1\n  1118: u64 [sp + 0x60] = a1\n  1121: a1 = u64 [sp + 0x18]\n  1124: a1 = reverse a1\n  1126: u64 [sp + 0x98] = a1\n  1130: a1 = u64 [sp + 0x20]\n  1133: a1 = reverse a1\n  1135: u64 [sp + 0x90] = a1\n  1139: a1 = u64 [sp + 0x28]\n  1142: a1 = reverse a1\n  1144: u64 [sp + 0x88] = a1\n  1148: a1 = u64 [sp + 0x30]\n  1151: a1 = reverse a1\n  1153: u64 [sp + 0x80] = a1\n  1157: a1 = u64 [sp + 0x40]\n  1160: a1 = reverse a1\n  1162: u64 [sp + 0xb8] = a1\n  1166: a1 = u64 [sp + 0x48]\n  1169: a1 = reverse a1\n  1171: u64 [sp + 0xb0] = a1\n  1175: a1 = u64 [sp + 0x50]\n  1178: a1 = reverse a1\n  1180: u64 [sp + 0xa8] = a1\n  1184: a1 = u64 [sp + 0x58]\n  1187: a1 = reverse a1\n  1189: u64 [sp + 0xa0] = a1\n  1193: i32 a2 = a0 + 0\n  1195: a3 = i32 [sp + 0x38]\n  1198: i32 a0 = sp + 0x60\n  1201: a1 = 0x3\n  1204: ecalli 5 // 'deposit_event'\n  1206: t0 = 16, jump @1624\n      : @15 [@dyn 8] (gas: 1)\n  1212: ret\n      : @16 (gas: 2)\n  1214: i32 a2 = a0 >> 0x10\n  1217: jump @21 if a2 != 0\n      : @17 (gas: 4)\n  1220: a1 = a1 + a0\n  1223: i32 a1 = a1 + 0x1f\n  1226: a1 = a1 & 0xffffffffffffffe0\n  1229: jump @21 if a1 >u 65536\n      : @18 (gas: 3)\n  1235: a2 = 0x20194\n  1240: a3 = i32 [0x20194]\n  1245: jump @20 if a3 >=u a1\n      : @19 (gas: 2)\n  1248: u32 [0x20194] = a1\n  1253: fallthrough\n      : @20 (gas: 4)\n  1254: a1 = 0x201a0\n  1259: i32 a0 = a0 + 0\n  1261: a0 = a0 + a1\n  1264: ret\n      : @21 (gas: 1)\n  1266: trap\n      : @22 (gas: 6)\n  1267: sp = sp + 0xfffffffffffffff0\n  1270: u64 [sp + 0x8] = ra\n  1273: u64 [sp] = s0\n  1275: s0 = a0 & 0x1\n  1278: ecalli 3 // 'call_data_size'\n  1280: fallthrough\n      : @23 (gas: 2)\n  1281: u32 [0x20190] = a0\n  1286: jump @25 if s0 == 0\n      : @24 (gas: 1)\n  1289: ra = 18, jump @26\n      : @25 [@dyn 9] (gas: 1)\n  1293: ra = 20, jump @38\n      : @26 [@dyn 10] (gas: 13)\n  1298: sp = sp + 0xfffffffffffffec0\n  1302: u64 [sp + 0x138] = ra\n  1306: u64 [sp + 0x130] = s0\n  1310: u64 [sp + 0x128] = s1\n  1314: s0 = sp + 0x140\n  1318: sp = sp & 0xffffffffffffffe0\n  1321: u64 [sp + 88] = 0\n  1324: u64 [sp + 80] = 0\n  1327: u64 [sp + 64] = 0x80\n  1332: a0 = 0x40\n  1335: a1 = sp + a0\n  1338: u64 [sp + 72] = 0\n  1341: ra = 22, jump @4\n      : @27 [@dyn 11] (gas: 7)\n  1346: u64 [sp + 120] = 0\n  1349: u64 [sp + 112] = 0\n  1352: u64 [sp + 104] = 0\n  1355: u64 [sp + 96] = 0\n  1358: i32 a0 = sp + 0x60\n  1361: ecalli 15 // 'value_transferred'\n  1363: fallthrough\n      : @28 (gas: 8)\n  1364: a0 = u64 [sp + 0x70]\n  1367: a1 = u64 [sp + 0x78]\n  1370: a2 = u64 [sp + 0x68]\n  1373: a3 = u64 [sp + 0x60]\n  1376: a1 = a1 | a2\n  1379: a0 = a0 | a3\n  1382: a0 = a0 | a1\n  1385: jump @30 if a0 == 0\n      : @29 (gas: 7)\n  1388: a1 = 0x201a0\n  1393: i32 a1 = a1 + 0\n  1395: a0 = 0x1\n  1398: a2 = 0\n  1400: ra = 0x20\n  1403: ecalli 12 // 'seal_return'\n  1405: jump @38\n      : @30 (gas: 25)\n  1408: s1 = 0x301a0\n  1413: i32 a0 = s1 + 0\n  1415: ecalli 4 // 'caller'\n  1417: a0 = u64 [0x301a8]\n  1422: a1 = i32 [0x301b0]\n  1427: a2 = u64 [0x301a0]\n  1432: a0 = reverse a0\n  1434: a3 = a0 << 0x20\n  1437: a1 = reverse a1\n  1439: a1 = a1 >> 0x20\n  1442: a1 = a1 | a3\n  1445: u64 [sp + 0x18] = a1\n  1448: a0 = a0 >> 0x20\n  1451: a1 = reverse a2\n  1453: s1 = a1 << 0x20\n  1456: a0 = a0 | s1\n  1459: u64 [sp + 0x10] = a0\n  1462: s1 = a1 >> 0x20\n  1465: u64 [sp + 152] = 0\n  1469: u64 [sp + 144] = 0\n  1473: u64 [sp + 136] = 0\n  1477: u64 [sp + 128] = 0\n  1481: a0 = sp + 0x20\n  1484: a1 = sp + 0x80\n  1488: ra = 24, jump @6\n      : @31 [@dyn 12] (gas: 17)\n  1493: a0 = u32 [sp + 0x34]\n  1496: a0 = a0 << 0x20\n  1499: a1 = u64 [sp + 0x38]\n  1502: a0 = a0 | s1\n  1505: u64 [sp + 184] = 0\n  1509: u64 [sp + 176] = 0\n  1513: u64 [sp + 168] = 0\n  1517: u64 [sp + 160] = 0\n  1521: u64 [sp + 0xd8] = a1\n  1525: a1 = u64 [sp + 0x10]\n  1528: u64 [sp + 0xc8] = a1\n  1532: a1 = u64 [sp + 0x18]\n  1535: u64 [sp + 0xc0] = a1\n  1539: u64 [sp + 0xd0] = a0\n  1543: a0 = sp + 0xa0\n  1547: a1 = sp + 0xc0\n  1551: ra = 26, jump @9\n      : @32 [@dyn 13] (gas: 11)\n  1556: u64 [sp + 248] = 0\n  1560: u64 [sp + 240] = 0\n  1564: u64 [sp + 232] = 0\n  1568: u64 [sp + 224] = 0x1\n  1573: u64 [sp + 280] = 0\n  1577: u64 [sp + 272] = 0\n  1581: u64 [sp + 264] = 0\n  1585: u64 [sp + 256] = 0\n  1589: a0 = sp + 0xe0\n  1593: a1 = sp + 0x100\n  1597: ra = 28, jump @9\n      : @33 [@dyn 14] (gas: 2)\n  1602: a1 = i32 [0x20194]\n  1607: jump @35 if a1 >u 127\n      : @34 (gas: 2)\n  1611: u32 [0x20194] = 0x80\n  1618: fallthrough\n      : @35 (gas: 6)\n  1619: a0 = 0x201a0\n  1624: i32 a0 = a0 + 0x80\n  1628: a1 = 0\n  1630: a2 = 0\n  1632: ecalli 1 // 'call_data_copy'\n  1634: jump @0\n      : @36 (gas: 3)\n  1637: a0 = 0x80\n  1641: a1 = 0\n  1643: ra = 30, jump @16\n      : @37 [@dyn 15] (gas: 6)\n  1648: i32 a1 = a0 + 0\n  1650: a0 = 0\n  1652: a2 = 0\n  1654: ra = 0x20\n  1657: ecalli 12 // 'seal_return'\n  1659: fallthrough\n      : @38 [@dyn 16] (gas: 16)\n  1660: sp = sp + 0xfffffffffffffe10\n  1664: u64 [sp + 0x1e8] = ra\n  1668: u64 [sp + 0x1e0] = s0\n  1672: u64 [sp + 0x1d8] = s1\n  1676: s0 = sp + 0x1f0\n  1680: sp = sp + 0xffffffffffffbad0\n  1684: sp = sp & 0xffffffffffffffe0\n  1687: s1 = sp\n  1689: a2 = s1 + 0x3138\n  1693: u64 [a2 + 1280] = 0\n  1697: u64 [a2 + 1272] = 0\n  1701: u64 [a2 + 1256] = 0x80\n  1707: a0 = 0x40\n  1710: a1 = s1 + 0x3620\n  1714: u64 [a2 + 1264] = 0\n  1718: ra = 34, jump @4\n      : @39 [@dyn 17] (gas: 4)\n  1723: a0 = 0x20190\n  1728: u64 [s1 + 0x1b8] = a0\n  1732: a0 = i32 [0x20190]\n  1737: jump @41 if a0 >=u 4\n      : @40 (gas: 1)\n  1741: jump @1174\n      : @41 (gas: 6)\n  1745: a0 = s1 + 0x3000\n  1749: i32 a0 = a0 + 0x640\n  1753: a1 = 0\n  1755: ra = 0x24\n  1758: ecalli 2 // 'call_data_load'\n  1760: fallthrough\n      : @42 [@dyn 18] (gas: 3)\n  1761: a3 = s1 + 0x3138\n  1765: a0 = i32 [a3 + 0x524]\n  1769: jump @44 if a0 != 2376452955\n      : @43 (gas: 1)\n  1776: jump @660\n      : @44 (gas: 2)\n  1779: a2 = s1 + 0x4138\n  1783: jump @46 if a0 != 2574905157\n      : @45 (gas: 1)\n  1790: jump @540\n      : @46 (gas: 1)\n  1793: jump @86 if a0 == 2778569399\n      : @47 (gas: 2)\n  1801: a1 = 0xffffffffb256b11b\n  1807: jump @49 if a0 != a1\n      : @48 (gas: 1)\n  1810: jump @387\n      : @49 (gas: 1)\n  1813: jump @135 if a0 == 3493436344\n      : @50 (gas: 1)\n  1821: jump @52 if a0 != 3689087244\n      : @51 (gas: 1)\n  1828: jump @611\n      : @52 (gas: 1)\n  1831: jump @54 if a0 != 3980750564\n      : @53 (gas: 1)\n  1838: jump @221\n      : @54 (gas: 1)\n  1841: jump @177 if a0 == 4047311449\n      : @55 (gas: 2)\n  1849: a1 = 0xfffffffff3f43703\n  1855: jump @57 if a0 != a1\n      : @56 (gas: 1)\n  1858: jump @672\n      : @57 (gas: 1)\n  1861: jump @59 if a0 != 4287607644\n      : @58 (gas: 1)\n  1867: jump @247\n      : @59 (gas: 1)\n  1870: jump @61 if a0 != 4292742260\n      : @60 (gas: 1)\n  1876: jump @699\n      : @61 (gas: 1)\n  1879: jump @63 if a0 != 363073353\n      : @62 (gas: 1)\n  1886: jump @462\n      : @63 (gas: 1)\n  1889: jump @65 if a0 != 376155029\n      : @64 (gas: 1)\n  1896: jump @623\n      : @65 (gas: 1)\n  1899: jump @67 if a0 != 845767028\n      : @66 (gas: 1)\n  1906: jump @601\n      : @67 (gas: 2)\n  1909: a2 = s1 + 0x3938\n  1913: jump @188 if a0 == 1020253707\n      : @68 (gas: 1)\n  1921: jump @70 if a0 != 1031109195\n      : @69 (gas: 1)\n  1928: jump @451\n      : @70 (gas: 2)\n  1931: a1 = 0x482d51e0\n  1937: jump @72 if a0 != a1\n      : @71 (gas: 1)\n  1940: jump @270\n      : @72 (gas: 1)\n  1943: jump @74 if a0 == 1399471580\n      : @73 (gas: 1)\n  1950: jump @492\n      : @74 (gas: 8)\n  1953: u64 [a2 + 1184] = 0\n  1957: u64 [a2 + 1176] = 0\n  1961: u64 [a2 + 1168] = 0\n  1965: u64 [a2 + 1160] = 0\n  1969: a0 = s1 + 0x4000\n  1973: i32 a0 = a0 + 0xfffffffffffffdc0\n  1977: ecalli 15 // 'value_transferred'\n  1979: fallthrough\n      : @75 (gas: 10)\n  1980: a4 = s1 + 0x3938\n  1984: a5 = a4 + 0x400\n  1988: a0 = u64 [a5 + 0x98]\n  1992: a1 = u64 [a5 + 0xa0]\n  1996: a2 = u64 [a5 + 0x90]\n  2000: a3 = u64 [a5 + 0x88]\n  2004: a1 = a1 | a2\n  2007: a0 = a0 | a3\n  2010: a0 = a0 | a1\n  2013: jump @77 if a0 == 0\n      : @76 (gas: 1)\n  2016: jump @1128\n      : @77 (gas: 3)\n  2020: a0 = u64 [s1 + 0x1b8]\n  2024: a0 = i32 [a0]\n  2026: jump @79 if a0 >u 3\n      : @78 (gas: 1)\n  2030: jump @1129\n      : @79 (gas: 7)\n  2034: u64 [a4 + 1216] = 0\n  2038: u64 [a4 + 1208] = 0\n  2042: u64 [a4 + 1200] = 0\n  2046: u64 [a4 + 1192] = 0x1\n  2051: a0 = s1 + 0x1320\n  2055: a1 = s1 + 0x3de0\n  2059: ra = 38, jump @6\n      : @80 [@dyn 19] (gas: 3)\n  2064: t0 = 0x28\n  2067: a1 = s1 + 0x1138\n  2071: fallthrough\n      : @81 [@dyn 20] (gas: 13)\n  2072: a0 = u64 [a1 + 0x200]\n  2076: a2 = s1 + 0x100\n  2080: u64 [a2 + 0xb8] = a0\n  2084: a3 = a1 + 0x100\n  2088: a0 = u64 [a3 + 0xf8]\n  2092: u64 [a2 + 0xb0] = a0\n  2096: a0 = u64 [a3 + 0xf0]\n  2100: u64 [a2 + 0xa8] = a0\n  2104: a0 = u64 [a3 + 0xe8]\n  2108: u64 [a2 + 0xa0] = a0\n  2112: a0 = s1 + 0x1300\n  2116: a1 = 0x40\n  2119: ra = 42, jump @2\n      : @82 [@dyn 21] (gas: 7)\n  2124: a3 = s1 + 0x1138\n  2128: a5 = a3 + 0x100\n  2132: a0 = u64 [a5 + 0xe0]\n  2136: a1 = u64 [a5 + 0xd8]\n  2140: a2 = u64 [a5 + 0xd0]\n  2144: a4 = u64 [a5 + 0xc8]\n  2148: t0 = 44, jump @1577\n      : @83 [@dyn 22] (gas: 1)\n  2154: jump @85 if a0 == 0\n      : @84 (gas: 1)\n  2157: jump @993\n      : @85 (gas: 15)\n  2160: a2 = s1 + 0x100\n  2164: a0 = u64 [a2 + 0xa0]\n  2168: a5 = a3 + 0x100\n  2172: u64 [a5 + 0xa8] = a0\n  2176: a0 = u64 [a2 + 0xa8]\n  2180: u64 [a5 + 0xb0] = a0\n  2184: a0 = u64 [a2 + 0xb0]\n  2188: u64 [a5 + 0xb8] = a0\n  2192: a1 = s1 + 0x12e0\n  2196: a0 = u64 [a2 + 0xb8]\n  2200: u64 [a5 + 0xc0] = a0\n  2204: a0 = a4\n  2206: u64 [s1 + 0x1b8] = a4\n  2210: ra = 0x2ca\n  2214: jump @4\n      : @86 (gas: 8)\n  2217: u64 [a2 + 160] = 0\n  2221: u64 [a2 + 152] = 0\n  2225: u64 [a2 + 144] = 0\n  2229: u64 [a2 + 136] = 0\n  2233: a0 = s1 + 0x4000\n  2237: i32 a0 = a0 + 0x1c0\n  2241: ecalli 15 // 'value_transferred'\n  2243: fallthrough\n      : @87 (gas: 9)\n  2244: a3 = s1 + 0x4138\n  2248: a0 = u64 [a3 + 0x98]\n  2252: a1 = u64 [a3 + 0xa0]\n  2256: a2 = u64 [a3 + 0x90]\n  2260: a3 = u64 [a3 + 0x88]\n  2264: a1 = a1 | a2\n  2267: a0 = a0 | a3\n  2270: a0 = a0 | a1\n  2273: jump @89 if a0 == 0\n      : @88 (gas: 1)\n  2276: jump @1130\n      : @89 (gas: 3)\n  2280: a0 = u64 [s1 + 0x1b8]\n  2284: a0 = i32 [a0]\n  2286: jump @91 if a0 >u 67\n      : @90 (gas: 1)\n  2290: jump @1131\n      : @91 (gas: 2)\n  2294: a0 = s1 + 0x2100\n  2298: ra = 46, jump @1296\n      : @92 [@dyn 23] (gas: 27)\n  2304: a1 = s1 + 0x1938\n  2308: a2 = a1 + 0x700\n  2312: a0 = u64 [a2 + 0xd8]\n  2316: a1 = s1 + 0x100\n  2320: u64 [a1 + 0xa0] = a0\n  2324: a0 = u64 [a2 + 0xd0]\n  2328: u64 [a1 + 0xa8] = a0\n  2332: a0 = u64 [a2 + 0xc8]\n  2336: u64 [a1 + 0xb8] = a0\n  2340: a0 = s1 + 0x4000\n  2344: i32 a0 = a0 + 0x1e0\n  2348: a1 = 0x4\n  2351: ecalli 2 // 'call_data_load'\n  2353: a3 = s1 + 0x4138\n  2357: a0 = u64 [a3 + 0xa8]\n  2361: a1 = u64 [a3 + 0xb0]\n  2365: a2 = u64 [a3 + 0xb8]\n  2369: a3 = u64 [a3 + 0xc0]\n  2373: a4 = s1 + 0x1938\n  2377: a5 = a4 + 0x700\n  2381: u64 [a5 + 0xc0] = a3\n  2385: u64 [a5 + 0xb8] = a2\n  2389: u64 [a5 + 0xb0] = a1\n  2393: a1 = s1 + 0x20e0\n  2397: u64 [a5 + 0xa8] = a0\n  2401: a0 = 0\n  2403: ra = 48, jump @4\n      : @93 [@dyn 24] (gas: 3)\n  2408: t0 = 0x32\n  2411: a1 = s1 + 0x1938\n  2415: fallthrough\n      : @94 [@dyn 25] (gas: 8)\n  2416: u64 [a1 + 1952] = 0\n  2420: u64 [a1 + 1944] = 0\n  2424: u64 [a1 + 1928] = 0x3\n  2429: a2 = a1\n  2431: a0 = 0x20\n  2434: a1 = s1 + 0x20c0\n  2438: u64 [a2 + 1936] = 0\n  2442: ra = 52, jump @4\n      : @95 [@dyn 26] (gas: 3)\n  2447: a1 = 0x20194\n  2452: a0 = i32 [0x20194]\n  2457: jump @97 if a0 >u 63\n      : @96 (gas: 3)\n  2461: u32 [0x20194] = 0x40\n  2467: t0 = 0x36\n  2470: jump @1627\n      : @97 (gas: 1)\n  2474: t0 = 54, jump @1627\n      : @98 [@dyn 27] (gas: 11)\n  2480: a0 = 0x201a0\n  2485: i32 a0 = a0 + 0\n  2487: i32 a2 = a2 + 0\n  2489: u64 [s1 + 0x198] = a1\n  2493: a1 = 0x40\n  2496: u64 [s1 + 0x190] = a0\n  2500: ra = 0x38\n  2503: ecalli 7 // 'hash_keccak_256'\n  2505: a3 = u64 [s1 + 0x1b0]\n  2509: t0 = 0x3a\n  2512: jump @1587\n      : @99 [@dyn 28] (gas: 2)\n  2516: a3 = u64 [s1 + 0x1b0]\n  2520: t0 = 58, jump @1587\n      : @100 [@dyn 29] (gas: 16)\n  2526: u64 [s1 + 0x1b0] = a0\n  2530: sp = a0\n  2532: a0 = u64 [s1 + 0x1a0]\n  2536: a0 = a0 << 0x20\n  2539: a0 = a0 >> 0x20\n  2542: a2 = s1 + 0x1938\n  2546: u64 [a2 + 1920] = 0\n  2550: a3 = a2 + 0x700\n  2554: u64 [a3 + 0x78] = a0\n  2557: a0 = u64 [s1 + 0x1a8]\n  2561: u64 [a3 + 0x70] = a0\n  2564: a1 = s1 + 0x20a0\n  2568: a0 = u64 [s1 + 0x1b8]\n  2572: u64 [a3 + 0x68] = a0\n  2575: a0 = 0\n  2577: ra = 60, jump @4\n      : @101 [@dyn 30] (gas: 14)\n  2582: a0 = u64 [s1 + 0x170]\n  2586: a1 = s1 + 0x1938\n  2590: a2 = a1 + 0x700\n  2594: u64 [a2 + 0x60] = a0\n  2597: a0 = u64 [s1 + 0x178]\n  2601: u64 [a2 + 0x58] = a0\n  2604: a0 = u64 [s1 + 0x180]\n  2608: u64 [a2 + 0x50] = a0\n  2611: a3 = a1\n  2613: a0 = 0x20\n  2616: a1 = s1 + 0x2080\n  2620: a2 = u64 [s1 + 0x188]\n  2624: u64 [a3 + 0x748] = a2\n  2628: ra = 62, jump @4\n      : @102 [@dyn 31] (gas: 3)\n  2633: a1 = u64 [s1 + 0x198]\n  2637: a0 = i32 [a1]\n  2639: jump @104 if a0 >u 63\n      : @103 (gas: 2)\n  2643: u32 [a1 + 0] = 0x40\n  2646: fallthrough\n      : @104 (gas: 12)\n  2647: a0 = sp + 0xffffffffffffffe0\n  2650: a0 = a0 & 0xffffffffffffffe0\n  2653: u64 [s1 + 0x1b8] = a0\n  2657: sp = a0\n  2659: i32 a2 = a0 + 0\n  2661: a1 = 0x40\n  2664: a0 = u64 [s1 + 0x190]\n  2668: ra = 0x40\n  2671: ecalli 7 // 'hash_keccak_256'\n  2673: a3 = u64 [s1 + 0x1b8]\n  2677: t0 = 0x42\n  2680: jump @1592\n      : @105 [@dyn 32] (gas: 2)\n  2684: a3 = u64 [s1 + 0x1b8]\n  2688: t0 = 66, jump @1592\n      : @106 [@dyn 33] (gas: 12)\n  2694: u64 [s1 + 0x188] = a1\n  2698: a2 = u64 [s1 + 0x1b0]\n  2702: u64 [a2 + 0x18] = a1\n  2705: u64 [s1 + 0x190] = a0\n  2709: u64 [a2 + 0x10] = a0\n  2712: u64 [s1 + 0x180] = a4\n  2716: u64 [a2 + 0x8] = a4\n  2719: u64 [s1 + 0x178] = a5\n  2723: u64 [a2] = a5\n  2725: a0 = s1 + 0x2060\n  2729: a1 = 0x40\n  2732: ra = 68, jump @2\n      : @107 [@dyn 34] (gas: 18)\n  2737: a1 = s1 + 0x1938\n  2741: a5 = a1 + 0x700\n  2745: a0 = u64 [a5 + 0x40]\n  2748: u64 [s1 + 0x1a0] = a0\n  2752: a2 = u64 [a5 + 0x38]\n  2755: u64 [s1 + 0x198] = a2\n  2759: a4 = u64 [a5 + 0x30]\n  2762: u64 [s1 + 0x1a8] = a4\n  2766: a3 = u64 [a5 + 0x28]\n  2769: u64 [s1 + 0x1b8] = a3\n  2773: u64 [a5 + 0x20] = a0\n  2776: u64 [a5 + 0x18] = a2\n  2779: u64 [a5 + 0x10] = a4\n  2782: a0 = s1 + 0x2040\n  2786: u64 [a5 + 0x8] = a3\n  2789: ra = 0x46\n  2792: t0 = 0x5a8\n  2796: jump @1600\n      : @108 [@dyn 35] (gas: 3)\n  2800: a0 = s1 + 0x2020\n  2804: a1 = u64 [s1 + 0x1b0]\n  2808: ra = 72, jump @6\n      : @109 [@dyn 36] (gas: 7)\n  2813: a3 = s1 + 0x100\n  2817: a0 = u64 [a3 + 0xa0]\n  2821: a1 = u64 [a3 + 0xa8]\n  2825: a0 = a0 | a1\n  2828: a2 = u64 [a3 + 0x98]\n  2832: a1 = u64 [a3 + 0xb8]\n  2836: t0 = 74, jump @1631\n      : @110 [@dyn 37] (gas: 1)\n  2842: jump @112 if a0 == 0\n      : @111 (gas: 1)\n  2845: jump @993\n      : @112 (gas: 17)\n  2848: a0 = s1 + 0x1938\n  2852: a4 = u64 [a0 + 0x700]\n  2856: a5 = a0 + 0x600\n  2860: a3 = u64 [a5 + 0xf8]\n  2864: a2 = u64 [a5 + 0xf0]\n  2868: a1 = u64 [a5 + 0xe8]\n  2872: u64 [s1 + 0x170] = a1\n  2876: u64 [a5 + 0xc8] = a1\n  2880: u64 [s1 + 0x168] = a2\n  2884: u64 [a5 + 0xd0] = a2\n  2888: u64 [s1 + 0x160] = a3\n  2892: u64 [a5 + 0xd8] = a3\n  2896: a1 = s1 + 0x2000\n  2900: u64 [s1 + 0x158] = a4\n  2904: u64 [a5 + 0xe0] = a4\n  2908: a0 = u64 [s1 + 0x1b8]\n  2912: ra = 76, jump @4\n      : @113 [@dyn 38] (gas: 20)\n  2917: a0 = u64 [s1 + 0x178]\n  2921: a0 = a0 + 0x1\n  2924: a1 = a0 <u 0x1\n  2927: a2 = u64 [s1 + 0x180]\n  2931: a1 = a1 + a2\n  2934: a2 = a0 | a1\n  2937: a2 = a2 <u 0x1\n  2940: a3 = u64 [s1 + 0x190]\n  2944: a2 = a2 + a3\n  2947: a3 = a2 <u a3\n  2950: a4 = u64 [s1 + 0x188]\n  2954: a3 = a3 + a4\n  2957: a4 = s1 + 0x4138\n  2961: u64 [a4 + 0xd0] = a1\n  2965: u64 [a4 + 0xc8] = a0\n  2969: u64 [a4 + 0xd8] = a2\n  2973: u64 [a4 + 0xe0] = a3\n  2977: a0 = s1 + 0x1fe0\n  2981: a1 = s1 + 0x4200\n  2985: ra = 78, jump @6\n      : @114 [@dyn 39] (gas: 12)\n  2990: a4 = s1 + 0x100\n  2994: a0 = u64 [a4 + 0xa0]\n  2998: a2 = u64 [a4 + 0x98]\n  3002: a2 = a2 | a0\n  3005: a3 = 0x100000000\n  3015: a0 = 0xffffffe0\n  3025: a1 = u64 [a4 + 0xb8]\n  3029: a0 = a1 <u a0\n  3032: a1 = u64 [a4 + 0xa8]\n  3036: a0 = 0 if a1 != 0\n  3038: a0 = 0 if a2 != 0\n  3040: jump @116 if a0 != 0\n      : @115 (gas: 1)\n  3043: jump @993\n      : @116 (gas: 22)\n  3046: a0 = s1 + 0x1938\n  3050: u64 [s1 + 0x1b0] = a2\n  3054: a2 = a0\n  3056: t0 = u64 [a0 + 0x6c0]\n  3060: a5 = a0 + 0x600\n  3064: a4 = u64 [a5 + 0xb8]\n  3068: u64 [s1 + 0x1a0] = a3\n  3072: a3 = u64 [a5 + 0xb0]\n  3076: a1 = u64 [a5 + 0xa8]\n  3080: a0 = u64 [s1 + 0x1b8]\n  3084: i32 a0 = a0 + 0x20\n  3087: u64 [s1 + 0x198] = a1\n  3091: a5 = a2 + 0x600\n  3095: u64 [a5 + 0x88] = a1\n  3099: u64 [s1 + 0x150] = a3\n  3103: u64 [a5 + 0x90] = a3\n  3107: u64 [s1 + 0x148] = a4\n  3111: u64 [a5 + 0x98] = a4\n  3115: a1 = s1 + 0x1fc0\n  3119: u64 [s1 + 0x140] = t0\n  3123: u64 [a2 + 0x6a0] = t0\n  3127: ra = 80, jump @4\n      : @117 [@dyn 40] (gas: 3)\n  3132: a1 = u64 [s1 + 0x178]\n  3136: a0 = a1 + 0x2\n  3139: t0 = 82, jump @1590\n      : @118 [@dyn 41] (gas: 7)\n  3145: u64 [a4 + 0xf0] = a2\n  3149: u64 [a4 + 0xe8] = a0\n  3153: u64 [a4 + 0xf8] = a3\n  3157: u64 [a4 + 0x100] = a1\n  3161: a0 = s1 + 0x1fa0\n  3165: a1 = s1 + 0x4220\n  3169: ra = 84, jump @6\n      : @119 [@dyn 42] (gas: 10)\n  3174: a3 = s1 + 0x100\n  3178: a2 = u64 [a3 + 0xb0]\n  3182: a0 = u64 [a3 + 0xa0]\n  3186: a0 = a0 + 0xffffffffffffffc0\n  3189: a1 = u64 [a3 + 0xb8]\n  3193: a0 = a1 <u a0\n  3196: a1 = u64 [a3 + 0xa8]\n  3200: a0 = 0 if a1 != 0\n  3202: a0 = 0 if a2 != 0\n  3204: jump @121 if a0 != 0\n      : @120 (gas: 1)\n  3207: jump @993\n      : @121 (gas: 18)\n  3210: a2 = s1 + 0x1938\n  3214: t0 = u64 [a2 + 0x680]\n  3218: a5 = a2 + 0x600\n  3222: a4 = u64 [a5 + 0x78]\n  3225: a3 = u64 [a5 + 0x70]\n  3228: a1 = u64 [a5 + 0x68]\n  3231: a0 = u64 [s1 + 0x1b8]\n  3235: i32 a0 = a0 + 0x40\n  3238: u64 [s1 + 0x1a0] = a1\n  3242: u64 [a5 + 0x48] = a1\n  3245: u64 [s1 + 0x138] = a3\n  3249: u64 [a5 + 0x50] = a3\n  3252: u64 [s1 + 0x130] = a4\n  3256: u64 [a5 + 0x58] = a4\n  3259: a1 = s1 + 0x1f80\n  3263: u64 [s1 + 0x128] = t0\n  3267: u64 [a2 + 0x660] = t0\n  3271: ra = 86, jump @4\n      : @122 [@dyn 43] (gas: 3)\n  3276: a1 = u64 [s1 + 0x178]\n  3280: a0 = a1 + 0x3\n  3283: t0 = 88, jump @1590\n      : @123 [@dyn 44] (gas: 8)\n  3289: a5 = a4 + 0x100\n  3293: u64 [a5 + 0x10] = a2\n  3296: u64 [a5 + 0x8] = a0\n  3299: u64 [a5 + 0x18] = a3\n  3302: u64 [a5 + 0x20] = a1\n  3305: a0 = s1 + 0x1f60\n  3309: a1 = s1 + 0x4240\n  3313: ra = 90, jump @6\n      : @124 [@dyn 45] (gas: 9)\n  3318: a0 = 0xffffffa0\n  3328: a2 = s1 + 0x100\n  3332: a1 = u64 [a2 + 0xb8]\n  3336: a0 = a1 <u a0\n  3339: a1 = u64 [a2 + 0xa8]\n  3343: a0 = 0 if a1 != 0\n  3345: a1 = u64 [a2 + 0xb0]\n  3349: a0 = 0 if a1 != 0\n  3351: jump @126 if a0 != 0\n      : @125 (gas: 1)\n  3354: jump @993\n      : @126 (gas: 3)\n  3357: t0 = 0x5c\n  3360: a2 = s1 + 0x1938\n  3364: fallthrough\n      : @127 [@dyn 46] (gas: 11)\n  3365: a0 = u64 [a2 + 0x628]\n  3369: a0 = a0 & 0xff\n  3373: a1 = a0 >u 0\n  3375: a0 = u64 [s1 + 0x1b8]\n  3379: i32 a0 = a0 + 0x60\n  3382: u64 [a2 + 1568] = 0\n  3386: u64 [a2 + 1560] = 0\n  3390: u64 [a2 + 0x608] = a1\n  3394: a1 = s1 + 0x1f40\n  3398: u64 [a2 + 1552] = 0\n  3402: ra = 94, jump @4\n      : @128 [@dyn 47] (gas: 3)\n  3407: a0 = s1 + 0x1f20\n  3411: a1 = 0x40\n  3414: ra = 96, jump @2\n      : @129 [@dyn 48] (gas: 45)\n  3419: a1 = s1 + 0x1938\n  3423: a3 = u64 [a1 + 0x600]\n  3427: u64 [s1 + 0x1b8] = a3\n  3431: a2 = u64 [a1 + 0x5f8]\n  3435: u64 [s1 + 0x1b0] = a2\n  3439: a4 = u64 [a1 + 0x5f0]\n  3443: u64 [s1 + 0x1a8] = a4\n  3447: a5 = u64 [a1 + 0x5e8]\n  3451: u64 [s1 + 0x190] = a5\n  3455: a0 = u64 [s1 + 0x128]\n  3459: u64 [a1 + 0x560] = a0\n  3463: a0 = u64 [s1 + 0x130]\n  3467: u64 [a1 + 0x558] = a0\n  3471: a0 = u64 [s1 + 0x138]\n  3475: u64 [a1 + 0x550] = a0\n  3479: a0 = u64 [s1 + 0x1a0]\n  3483: u64 [a1 + 0x548] = a0\n  3487: a0 = u64 [s1 + 0x140]\n  3491: u64 [a1 + 0x580] = a0\n  3495: a0 = u64 [s1 + 0x148]\n  3499: u64 [a1 + 0x578] = a0\n  3503: a0 = u64 [s1 + 0x150]\n  3507: u64 [a1 + 0x570] = a0\n  3511: a0 = u64 [s1 + 0x198]\n  3515: u64 [a1 + 0x568] = a0\n  3519: a0 = u64 [s1 + 0x158]\n  3523: u64 [a1 + 0x5a0] = a0\n  3527: a0 = u64 [s1 + 0x160]\n  3531: u64 [a1 + 0x598] = a0\n  3535: a0 = u64 [s1 + 0x168]\n  3539: u64 [a1 + 0x590] = a0\n  3543: a0 = u64 [s1 + 0x170]\n  3547: u64 [a1 + 0x588] = a0\n  3551: a0 = a1 + 0x500\n  3555: u64 [a0 + 0xc0] = a3\n  3559: u64 [a0 + 0xb8] = a2\n  3563: u64 [a0 + 0xb0] = a4\n  3567: t0 = a1\n  3569: a0 = s1 + 0x1f00\n  3573: a1 = s1 + 0x1ee0\n  3577: a2 = s1 + 0x1ec0\n  3581: a3 = s1 + 0x1ea0\n  3585: a4 = s1 + 0x1e80\n  3589: u64 [t0 + 0x5a8] = a5\n  3593: ra = 98, jump @1300\n      : @130 [@dyn 49] (gas: 13)\n  3599: a1 = s1 + 0x100\n  3603: a4 = u64 [a1 + 0xa8]\n  3607: a2 = u64 [a1 + 0x90]\n  3611: a0 = u64 [a1 + 0xb8]\n  3615: a0 = a0 | a4\n  3618: a3 = u64 [a1 + 0xb0]\n  3622: a1 = a2 | a3\n  3625: a1 = a1 | a0\n  3628: a1 = a1 >> 0x20\n  3631: a0 = a0 | a3\n  3634: a0 = a0 << 0x20\n  3637: a0 = a0 | a1\n  3640: jump @132 if a0 == 0\n      : @131 (gas: 1)\n  3643: jump @993\n      : @132 (gas: 34)\n  3646: t0 = a3\n  3648: a1 = s1 + 0x1938\n  3652: a5 = a1 + 0x500\n  3656: a0 = u64 [a5 + 0xd0]\n  3660: a3 = u64 [a5 + 0xe0]\n  3664: u64 [s1 + 0x1a0] = a3\n  3668: t1 = u64 [a1 + 0x5c8]\n  3672: a3 = u64 [a5 + 0xd8]\n  3676: t2 = a0 ^ a4\n  3679: a5 = a0 <u a4\n  3682: ra = t1 <u a2\n  3685: a5 = ra if t2 == 0\n  3688: a1 = a3 - t0\n  3691: t2 = a1 - a5\n  3694: a1 = a1 <u a5\n  3697: u64 [s1 + 0x198] = a1\n  3701: a3 = a3 <u t0\n  3704: a5 = u64 [s1 + 0x1b8]\n  3708: a1 = u64 [s1 + 0x1a0]\n  3712: a5 = a1 - a5\n  3715: a5 = a5 - a3\n  3718: a1 = u64 [s1 + 0x198]\n  3722: a5 = a5 - a1\n  3725: a0 = a0 - a4\n  3728: a0 = a0 - ra\n  3731: a1 = t1 - a2\n  3734: a0 = a0 | a5\n  3737: a3 = a1 | t2\n  3740: a3 = a3 | a0\n  3743: a0 = a0 | t2\n  3746: a3 = a3 >> 0x20\n  3749: a0 = a0 << 0x20\n  3752: a0 = a0 | a3\n  3755: jump @134 if a0 == 0\n      : @133 (gas: 1)\n  3758: jump @993\n      : @134 (gas: 4)\n  3761: a0 = a2\n  3763: u64 [s1 + 0x1b8] = a1\n  3767: ra = 0x530\n  3771: jump @16\n      : @135 (gas: 9)\n  3774: u64 [a2 + 544] = 0\n  3778: u64 [a2 + 536] = 0\n  3782: u64 [a2 + 528] = 0\n  3786: u64 [a2 + 520] = 0\n  3790: a0 = s1 + 0x4000\n  3794: i32 a0 = a0 + 0x340\n  3798: ra = 0x64\n  3801: ecalli 15 // 'value_transferred'\n  3803: fallthrough\n      : @136 [@dyn 50] (gas: 10)\n  3804: a3 = s1 + 0x4138\n  3808: a4 = a3 + 0x200\n  3812: a0 = u64 [a4 + 0x18]\n  3815: a1 = u64 [a4 + 0x20]\n  3818: a2 = u64 [a4 + 0x10]\n  3821: a3 = u64 [a4 + 0x8]\n  3824: a1 = a1 | a2\n  3827: a0 = a0 | a3\n  3830: a0 = a0 | a1\n  3833: jump @138 if a0 == 0\n      : @137 (gas: 1)\n  3836: jump @1132\n      : @138 (gas: 1)\n  3839: t0 = 102, jump @1625\n      : @139 [@dyn 51] (gas: 1)\n  3845: jump @141 if a1 <u a0\n      : @140 (gas: 1)\n  3848: jump @1133\n      : @141 (gas: 23)\n  3851: a0 = s1 + 0x4000\n  3855: i32 a0 = a0 + 0x360\n  3859: a1 = 0x4\n  3862: ecalli 2 // 'call_data_load'\n  3864: a0 = s1 + 0x4138\n  3868: a4 = a0 + 0x200\n  3872: a3 = u64 [a4 + 0x40]\n  3875: a2 = u64 [a4 + 0x38]\n  3878: a1 = u64 [a4 + 0x30]\n  3881: a0 = u64 [a4 + 0x28]\n  3884: u64 [s1 + 0x88] = a3\n  3888: a4 = s1 + 0x3138\n  3892: a5 = a4 + 0x100\n  3896: u64 [a5 + 0x40] = a3\n  3899: u64 [s1 + 0x90] = a2\n  3903: u64 [a5 + 0x38] = a2\n  3906: u64 [s1 + 0x98] = a1\n  3910: u64 [a5 + 0x30] = a1\n  3913: a1 = s1 + 0x3260\n  3917: u64 [s1 + 0xa0] = a0\n  3921: u64 [a5 + 0x28] = a0\n  3924: a0 = 0\n  3926: ra = 104, jump @4\n      : @142 [@dyn 52] (gas: 9)\n  3931: a0 = s1 + 0x3138\n  3935: u64 [a0 + 288] = 0\n  3939: u64 [a0 + 280] = 0\n  3943: u64 [a0 + 272] = 0\n  3947: a3 = a0\n  3949: a0 = 0x20\n  3952: a1 = s1 + 0x3240\n  3956: u64 [a3 + 264] = 0x2\n  3961: ra = 106, jump @4\n      : @143 [@dyn 53] (gas: 3)\n  3966: a1 = 0x20194\n  3971: a0 = i32 [0x20194]\n  3976: jump @145 if a0 >u 63\n      : @144 (gas: 3)\n  3980: u32 [0x20194] = 0x40\n  3986: t0 = 0x6c\n  3989: jump @1603\n      : @145 (gas: 1)\n  3993: t0 = 108, jump @1603\n      : @146 [@dyn 54] (gas: 10)\n  3999: a0 = 0x201a0\n  4004: i32 a0 = a0 + 0\n  4006: u64 [s1 + 0x100] = a1\n  4010: i32 a2 = a2 + 0\n  4012: a1 = 0x40\n  4015: u64 [s1 + 0xf8] = a0\n  4019: ra = 0x6e\n  4022: ecalli 7 // 'hash_keccak_256'\n  4024: t0 = 0x70\n  4027: jump @1597\n      : @147 [@dyn 55] (gas: 1)\n  4031: t0 = 112, jump @1597\n      : @148 [@dyn 56] (gas: 8)\n  4037: a5 = a4 + 0x200\n  4041: u64 [a5 + 0x60] = a3\n  4044: u64 [a5 + 0x58] = a2\n  4047: u64 [a5 + 0x50] = a1\n  4050: u64 [a5 + 0x48] = a0\n  4053: a0 = s1 + 0x3220\n  4057: a1 = s1 + 0x4380\n  4061: ra = 114, jump @6\n      : @149 [@dyn 57] (gas: 25)\n  4066: a4 = s1 + 0x3138\n  4070: a0 = u64 [a4 + 0x100]\n  4074: a1 = u64 [a4 + 0xf0]\n  4078: a2 = u64 [a4 + 0xe8]\n  4082: a3 = u64 [a4 + 0xf8]\n  4086: a5 = u64 [s1 + 0x88]\n  4090: a0 = a0 ^ a5\n  4093: a5 = u64 [s1 + 0x98]\n  4097: a1 = a1 ^ a5\n  4100: a0 = a0 | a1\n  4103: a1 = u64 [s1 + 0x90]\n  4107: a1 = a1 ^ a3\n  4110: a3 = u64 [s1 + 0xa0]\n  4114: a2 = a2 ^ a3\n  4117: a1 = a1 | a2\n  4120: a0 = a0 | a1\n  4123: a0 = a0 <u 0x1\n  4126: u64 [a4 + 224] = 0\n  4130: u64 [a4 + 216] = 0\n  4134: u64 [a4 + 0xc8] = a0\n  4138: a0 = s1 + 0x3200\n  4142: u64 [a4 + 208] = 0\n  4146: ra = 0x74\n  4149: t0 = 0x610\n  4153: jump @1586\n      : @150 [@dyn 58] (gas: 12)\n  4157: a0 = s1 + 0x3138\n  4161: a1 = u64 [s1 + 0x88]\n  4165: u64 [a0 + 0xc0] = a1\n  4169: a1 = u64 [s1 + 0x90]\n  4173: u64 [a0 + 0xb8] = a1\n  4177: a1 = u64 [s1 + 0x98]\n  4181: u64 [a0 + 0xb0] = a1\n  4185: a1 = s1 + 0x31e0\n  4189: a2 = u64 [s1 + 0xa0]\n  4193: u64 [a0 + 0xa8] = a2\n  4197: a0 = 0\n  4199: ra = 118, jump @4\n      : @151 [@dyn 59] (gas: 9)\n  4204: a1 = s1 + 0x3138\n  4208: u64 [a1 + 160] = 0\n  4212: u64 [a1 + 152] = 0\n  4216: u64 [a1 + 136] = 0x2\n  4221: a2 = a1\n  4223: a0 = 0x20\n  4226: a1 = s1 + 0x31c0\n  4230: u64 [a2 + 144] = 0\n  4234: ra = 120, jump @4\n      : @152 [@dyn 60] (gas: 3)\n  4239: a1 = u64 [s1 + 0x100]\n  4243: a0 = i32 [a1]\n  4245: jump @154 if a0 >u 63\n      : @153 (gas: 3)\n  4249: u32 [a1 + 0] = 0x40\n  4252: t0 = 0x7a\n  4255: jump @1598\n      : @154 (gas: 1)\n  4259: t0 = 122, jump @1598\n      : @155 [@dyn 61] (gas: 31)\n  4265: ecalli 7 // 'hash_keccak_256'\n  4267: a3 = u64 [s1 + 0x1b8]\n  4271: a0 = u64 [a3]\n  4273: a1 = u64 [a3 + 0x8]\n  4276: a2 = u64 [a3 + 0x10]\n  4279: a3 = u64 [a3 + 0x18]\n  4282: a4 = reverse a0\n  4284: a5 = reverse a1\n  4286: a2 = reverse a2\n  4288: a0 = reverse a3\n  4290: t0 = a0 + 0x3\n  4293: u64 [s1 + 0x28] = a0\n  4296: a1 = t0 <u a0\n  4299: a0 = a2 + a1\n  4302: u64 [s1 + 0x30] = a2\n  4305: a3 = a0 <u a2\n  4308: a3 = a1 if a1 == 0\n  4311: a3 = a3 + a5\n  4314: u64 [s1 + 0x38] = a5\n  4317: a1 = a3 <u a5\n  4320: u64 [s1 + 0x40] = a4\n  4323: a1 = a1 + a4\n  4326: a4 = s1 + 0x4138\n  4330: u64 [a4 + 0x268] = t0\n  4334: a2 = a4 + 0x200\n  4338: u64 [a2 + 0x70] = a0\n  4341: u64 [a2 + 0x78] = a3\n  4344: u64 [a2 + 0x80] = a1\n  4348: a0 = s1 + 0x31a0\n  4352: a1 = s1 + 0x43a0\n  4356: ra = 124, jump @6\n      : @156 [@dyn 62] (gas: 14)\n  4361: a0 = s1 + 0x3138\n  4365: a1 = u64 [a0 + 0x68]\n  4368: u64 [s1 + 0x1b8] = a1\n  4372: a1 = u64 [a0 + 0x70]\n  4375: u64 [s1 + 0x1b0] = a1\n  4379: a1 = u64 [a0 + 0x78]\n  4382: u64 [s1 + 0x1a8] = a1\n  4386: a0 = u64 [a0 + 0x80]\n  4390: u64 [s1 + 0x1a0] = a0\n  4394: a0 = s1 + 0x4000\n  4398: i32 a0 = a0 + 0x3c0\n  4402: ra = 0x7e\n  4405: ecalli 8 // 'now'\n  4407: fallthrough\n      : @157 [@dyn 63] (gas: 18)\n  4408: a1 = s1 + 0x4138\n  4412: a4 = a1 + 0x200\n  4416: a0 = u64 [a4 + 0xa0]\n  4420: t0 = u64 [a1 + 0x288]\n  4424: a2 = u64 [a4 + 0x98]\n  4428: a3 = u64 [a4 + 0x90]\n  4432: a1 = u64 [s1 + 0x1a0]\n  4436: a4 = a0 ^ a1\n  4439: a1 = a0 <u a1\n  4442: a0 = u64 [s1 + 0x1a8]\n  4446: a5 = a2 <u a0\n  4449: a5 = a1 if a4 != 0\n  4452: a1 = u64 [s1 + 0x1b0]\n  4456: t1 = a3 ^ a1\n  4459: a3 = a3 <u a1\n  4462: a1 = u64 [s1 + 0x1b8]\n  4466: a1 = t0 <u a1\n  4469: t0 = 128, jump @1613\n      : @158 [@dyn 64] (gas: 1)\n  4476: jump @160 if a1 != 0\n      : @159 (gas: 1)\n  4479: jump @733\n      : @160 (gas: 3)\n  4482: a0 = s1 + 0x27e0\n  4486: a1 = 0x40\n  4489: ra = 130, jump @2\n      : @161 [@dyn 65] (gas: 2)\n  4495: a2 = s1 + 0x2138\n  4499: fallthrough\n      : @162 (gas: 13)\n  4500: t0 = u64 [a2 + 0x6c0]\n  4504: a1 = a2 + 0x600\n  4508: a5 = u64 [a1 + 0xb8]\n  4512: a4 = u64 [a1 + 0xb0]\n  4516: a0 = u64 [a1 + 0xa8]\n  4520: a3 = a4 | t0\n  4523: a1 = a0 | a5\n  4526: a1 = a1 | a3\n  4529: a1 = a1 >> 0x20\n  4532: a3 = a3 | a5\n  4535: a3 = a3 << 0x20\n  4538: a1 = a1 | a3\n  4541: jump @164 if a1 == 0\n      : @163 (gas: 1)\n  4544: jump @993\n      : @164 (gas: 11)\n  4547: u64 [a2 + 1688] = 0\n  4551: u64 [a2 + 1680] = 0\n  4555: u64 [a2 + 1672] = 0\n  4559: a3 = 0x8c379a000000000\n  4569: a1 = s1 + 0x27c0\n  4573: u64 [a2 + 0x6a0] = a3\n  4577: u64 [s1 + 0x1b8] = a0\n  4581: u64 [s1 + 0x1b0] = a4\n  4585: u64 [s1 + 0x1a0] = t0\n  4589: u64 [s1 + 0x1a8] = a5\n  4593: ra = 132, jump @4\n      : @165 [@dyn 66] (gas: 1)\n  4599: t0 = 134, jump @1561\n      : @166 [@dyn 67] (gas: 1)\n  4606: jump @168 if a0 != 0\n      : @167 (gas: 1)\n  4609: jump @993\n      : @168 (gas: 10)\n  4612: i32 a0 = a1 + 0x4\n  4615: a2 = s1 + 0x2138\n  4619: u64 [a2 + 1664] = 0\n  4623: u64 [a2 + 1656] = 0\n  4627: u64 [a2 + 1640] = 0x20\n  4632: a1 = s1 + 0x27a0\n  4636: u64 [a2 + 1648] = 0\n  4640: u64 [s1 + 0x1a8] = a3\n  4644: u64 [s1 + 0x1a0] = a4\n  4648: ra = 136, jump @4\n      : @169 [@dyn 68] (gas: 1)\n  4654: t0 = 138, jump @1565\n      : @170 [@dyn 69] (gas: 1)\n  4661: jump @172 if a0 != 0\n      : @171 (gas: 1)\n  4664: jump @993\n      : @172 (gas: 8)\n  4667: i32 a0 = a1 + 0x24\n  4670: a3 = s1 + 0x2138\n  4674: u64 [a3 + 1632] = 0\n  4678: u64 [a3 + 1624] = 0\n  4682: u64 [a3 + 1608] = 0x16\n  4687: a1 = s1 + 0x2780\n  4691: u64 [a3 + 1616] = 0\n  4695: ra = 140, jump @4\n      : @173 [@dyn 70] (gas: 1)\n  4701: t0 = 142, jump @1567\n      : @174 [@dyn 71] (gas: 1)\n  4708: jump @176 if a0 != 0\n      : @175 (gas: 1)\n  4711: jump @993\n      : @176 (gas: 13)\n  4714: i32 a0 = a3 + 0x44\n  4717: a1 = u64 [0x20078]\n  4722: a2 = u64 [0x20080]\n  4727: a3 = u64 [0x20088]\n  4732: a4 = s1 + 0x2138\n  4736: a5 = a4 + 0x600\n  4740: u64 [a5 + 0x40] = a1\n  4743: u64 [a5 + 0x38] = a2\n  4746: u64 [a5 + 0x30] = a3\n  4749: a1 = s1 + 0x2760\n  4753: u64 [a4 + 1576] = 0\n  4757: ra = 0x426\n  4761: jump @4\n      : @177 (gas: 11)\n  4764: u64 [a2 + 1216] = 0\n  4768: u64 [a2 + 1208] = 0\n  4772: u64 [a2 + 1200] = 0\n  4776: u64 [a2 + 1192] = 0\n  4780: a0 = s1 + 0x4000\n  4784: i32 a0 = a0 + 0x5e0\n  4788: ra = 0x90\n  4792: ecalli 15 // 'value_transferred'\n  4794: a0 = 0x4000\n  4798: t0 = 0x92\n  4802: jump @1607\n      : @178 [@dyn 72] (gas: 2)\n  4806: a0 = 0x4000\n  4810: t0 = 146, jump @1607\n      : @179 [@dyn 73] (gas: 8)\n  4817: a0 = u64 [a4 + 0xb8]\n  4821: a1 = u64 [a4 + 0xc0]\n  4825: a2 = u64 [a4 + 0xb0]\n  4829: a3 = u64 [a4 + 0xa8]\n  4833: a1 = a1 | a2\n  4836: a0 = a0 | a3\n  4839: a0 = a0 | a1\n  4842: jump @181 if a0 == 0\n      : @180 (gas: 1)\n  4845: jump @1134\n      : @181 (gas: 3)\n  4848: a0 = u64 [s1 + 0x1b8]\n  4852: a0 = i32 [a0]\n  4854: jump @183 if a0 >u 3\n      : @182 (gas: 1)\n  4858: jump @1135\n      : @183 (gas: 3)\n  4861: a0 = s1 + 0x3420\n  4865: a1 = 0x40\n  4868: ra = 148, jump @2\n      : @184 [@dyn 74] (gas: 7)\n  4874: a3 = s1 + 0x3138\n  4878: a4 = u64 [a3 + 0x300]\n  4882: a5 = a3 + 0x200\n  4886: a1 = u64 [a5 + 0xf8]\n  4890: a2 = u64 [a5 + 0xf0]\n  4894: a0 = u64 [a5 + 0xe8]\n  4898: t0 = 150, jump @1593\n      : @185 [@dyn 75] (gas: 1)\n  4905: jump @187 if a1 == 0\n      : @186 (gas: 1)\n  4908: jump @993\n      : @187 (gas: 8)\n  4911: u64 [a3 + 736] = 0\n  4915: u64 [a3 + 728] = 0\n  4919: u64 [a3 + 712] = 0x69780\n  4926: a1 = s1 + 0x3400\n  4930: u64 [a3 + 720] = 0\n  4934: u64 [s1 + 0x1b8] = a0\n  4938: ra = 0x2ca\n  4942: jump @4\n      : @188 (gas: 8)\n  4945: u64 [a2 + 64] = 0\n  4948: u64 [a2 + 56] = 0\n  4951: u64 [a2 + 48] = 0\n  4954: u64 [a2 + 40] = 0\n  4957: a0 = s1 + 0x4000\n  4961: i32 a0 = a0 + 0xfffffffffffff960\n  4965: ecalli 15 // 'value_transferred'\n  4967: fallthrough\n      : @189 (gas: 9)\n  4968: a3 = s1 + 0x3938\n  4972: a0 = u64 [a3 + 0x38]\n  4975: a1 = u64 [a3 + 0x40]\n  4978: a2 = u64 [a3 + 0x30]\n  4981: a3 = u64 [a3 + 0x28]\n  4984: a1 = a1 | a2\n  4987: a0 = a0 | a3\n  4990: a0 = a0 | a1\n  4993: jump @191 if a0 == 0\n      : @190 (gas: 1)\n  4996: jump @1136\n      : @191 (gas: 3)\n  4999: a0 = u64 [s1 + 0x1b8]\n  5003: a0 = i32 [a0]\n  5005: jump @193 if a0 >u 3\n      : @192 (gas: 1)\n  5009: jump @1137\n      : @193 (gas: 8)\n  5012: a0 = 0x301a0\n  5017: u64 [s1 + 0x1b8] = a0\n  5021: i32 a0 = a0 + 0\n  5023: u64 [s1 + 0x1a0] = a0\n  5027: ra = 0x98\n  5031: ecalli 4 // 'caller'\n  5033: t0 = 0x9a\n  5037: jump @1582\n      : @194 [@dyn 76] (gas: 1)\n  5041: t0 = 154, jump @1582\n      : @195 [@dyn 77] (gas: 8)\n  5048: u64 [a2 + 520] = 0\n  5052: u64 [a2 + 0x200] = a1\n  5056: u64 [a2 + 0x1f8] = a0\n  5060: a1 = s1 + 0x7ff\n  5064: a1 = a1 + 0x321\n  5068: u64 [a2 + 0x1f0] = a3\n  5072: a0 = 0\n  5074: ra = 156, jump @4\n      : @196 [@dyn 78] (gas: 11)\n  5080: a1 = s1 + 0x7ff\n  5084: a1 = a1 + 0x131\n  5088: u64 [a1 + 488] = 0\n  5092: u64 [a1 + 480] = 0\n  5096: u64 [a1 + 464] = 0x5\n  5101: a2 = a1\n  5103: a0 = 0x20\n  5106: a1 = s1 + 0x7ff\n  5110: a1 = a1 + 0x301\n  5114: u64 [a2 + 472] = 0\n  5118: ra = 158, jump @4\n      : @197 [@dyn 79] (gas: 4)\n  5124: a2 = 0x20194\n  5129: a0 = i32 [0x20194]\n  5134: a1 = 0x3f\n  5137: jump @199 if a1 <u a0\n      : @198 (gas: 4)\n  5140: u32 [0x20194] = 0x40\n  5146: u64 [s1 + 0x190] = a2\n  5150: t0 = 0xa0\n  5154: jump @1627\n      : @199 (gas: 2)\n  5158: u64 [s1 + 0x190] = a2\n  5162: t0 = 160, jump @1627\n      : @200 [@dyn 80] (gas: 11)\n  5169: a0 = 0x201a0\n  5174: u64 [s1 + 0x198] = a0\n  5178: i32 a0 = a0 + 0\n  5180: i32 a2 = a2 + 0\n  5182: a1 = 0x40\n  5185: u64 [s1 + 0x1a8] = a0\n  5189: ra = 0xa2\n  5193: ecalli 7 // 'hash_keccak_256'\n  5195: a3 = u64 [s1 + 0x1b0]\n  5199: t0 = 0xa4\n  5203: jump @1574\n      : @201 [@dyn 81] (gas: 2)\n  5207: a3 = u64 [s1 + 0x1b0]\n  5211: t0 = 164, jump @1574\n      : @202 [@dyn 82] (gas: 8)\n  5218: u64 [a4 + 0x60] = a3\n  5221: u64 [a4 + 0x58] = a2\n  5224: u64 [a4 + 0x50] = a1\n  5227: u64 [a4 + 0x48] = a0\n  5230: a0 = s1 + 0x7ff\n  5234: a0 = a0 + 0x2e1\n  5238: a1 = s1 + 0x3980\n  5242: ra = 166, jump @6\n      : @203 [@dyn 83] (gas: 11)\n  5248: a0 = s1 + 0x7ff\n  5252: a0 = a0 + 0x131\n  5256: a1 = a0 + 0x100\n  5260: a5 = u64 [a1 + 0xc8]\n  5264: a4 = u64 [a1 + 0xc0]\n  5268: a3 = u64 [a1 + 0xb8]\n  5272: a2 = u64 [a1 + 0xb0]\n  5276: a0 = a3 | a5\n  5279: a1 = a2 | a4\n  5282: a0 = a0 | a1\n  5285: jump @205 if a0 == 0\n      : @204 (gas: 1)\n  5288: jump @1138\n      : @205 (gas: 4)\n  5291: a0 = s1 + 0x7ff\n  5295: a0 = a0 + 0x241\n  5299: a1 = 0x40\n  5302: ra = 168, jump @2\n      : @206 [@dyn 84] (gas: 15)\n  5308: a4 = s1 + 0x7ff\n  5312: a4 = a4 + 0x131\n  5316: t0 = u64 [a4 + 0x128]\n  5320: a1 = a4 + 0x100\n  5324: a5 = u64 [a1 + 0x20]\n  5327: a3 = u64 [a1 + 0x18]\n  5330: a0 = u64 [a1 + 0x10]\n  5333: a2 = a3 | t0\n  5336: a1 = a0 | a5\n  5339: a1 = a1 | a2\n  5342: a1 = a1 >> 0x20\n  5345: a2 = a2 | a5\n  5348: a2 = a2 << 0x20\n  5351: a1 = a1 | a2\n  5354: jump @208 if a1 == 0\n      : @207 (gas: 1)\n  5357: jump @993\n      : @208 (gas: 12)\n  5360: u64 [a4 + 256] = 0\n  5364: u64 [a4 + 248] = 0\n  5368: u64 [a4 + 240] = 0\n  5372: u64 [s1 + 0x1b0] = a3\n  5376: a3 = 0x8c379a000000000\n  5386: a1 = s1 + 0x7ff\n  5390: a1 = a1 + 0x221\n  5394: u64 [a4 + 0x108] = a3\n  5398: u64 [s1 + 0x1b8] = a0\n  5402: u64 [s1 + 0x1a8] = t0\n  5406: u64 [s1 + 0x1a0] = a5\n  5410: ra = 170, jump @4\n      : @209 [@dyn 85] (gas: 6)\n  5416: a5 = s1 + 0x100\n  5420: a1 = u64 [a5 + 0xb8]\n  5424: a0 = u64 [a5 + 0xa8]\n  5428: a3 = u64 [a5 + 0xa0]\n  5432: a3 = a3 | a0\n  5435: t0 = 172, jump @1562\n      : @210 [@dyn 86] (gas: 1)\n  5442: jump @212 if a0 != 0\n      : @211 (gas: 1)\n  5445: jump @993\n      : @212 (gas: 13)\n  5448: i32 a0 = a1 + 0x4\n  5451: a2 = s1 + 0x7ff\n  5455: a2 = a2 + 0x131\n  5459: a5 = 0\n  5461: u64 [a2 + 232] = 0\n  5465: u64 [a2 + 224] = 0\n  5469: u64 [a2 + 208] = 0x20\n  5474: a1 = s1 + 0x7ff\n  5478: a1 = a1 + 0x201\n  5482: u64 [a2 + 216] = 0\n  5486: u64 [s1 + 0x1a8] = a3\n  5490: u64 [s1 + 0x1a0] = a4\n  5494: ra = 174, jump @4\n      : @213 [@dyn 87] (gas: 1)\n  5500: t0 = 176, jump @1565\n      : @214 [@dyn 88] (gas: 1)\n  5507: jump @216 if a0 != 0\n      : @215 (gas: 1)\n  5510: jump @993\n      : @216 (gas: 10)\n  5513: i32 a0 = a1 + 0x24\n  5516: a3 = s1 + 0x7ff\n  5520: a3 = a3 + 0x131\n  5524: u64 [a3 + 200] = 0\n  5528: u64 [a3 + 192] = 0\n  5532: u64 [a3 + 176] = 0x14\n  5537: a1 = s1 + 0x7ff\n  5541: a1 = a1 + 0x1e1\n  5545: u64 [a3 + 184] = 0\n  5549: ra = 178, jump @4\n      : @217 [@dyn 89] (gas: 1)\n  5555: t0 = 180, jump @1567\n      : @218 [@dyn 90] (gas: 1)\n  5562: jump @220 if a0 != 0\n      : @219 (gas: 1)\n  5565: jump @993\n      : @220 (gas: 14)\n  5568: i32 a0 = a3 + 0x44\n  5571: a1 = u64 [0x20118]\n  5576: a2 = u64 [0x20120]\n  5581: a4 = s1 + 0x7ff\n  5585: a4 = a4 + 0x131\n  5589: u64 [a4 + 0xa8] = a1\n  5593: u64 [a4 + 0xa0] = a2\n  5597: a1 = 0x6472617700000000\n  5607: u64 [a4 + 0x98] = a1\n  5611: a1 = s1 + 0x7ff\n  5615: a1 = a1 + 0x1c1\n  5619: u64 [a4 + 144] = 0\n  5623: ra = 0x426\n  5627: jump @4\n      : @221 (gas: 11)\n  5630: u64 [a2 + 1120] = 0\n  5634: u64 [a2 + 1112] = 0\n  5638: u64 [a2 + 1104] = 0\n  5642: u64 [a2 + 1096] = 0\n  5646: a0 = s1 + 0x4000\n  5650: i32 a0 = a0 + 0x580\n  5654: ra = 0xb6\n  5658: ecalli 15 // 'value_transferred'\n  5660: a0 = 0x4000\n  5664: t0 = 0xb8\n  5668: jump @1607\n      : @222 [@dyn 91] (gas: 2)\n  5672: a0 = 0x4000\n  5676: t0 = 184, jump @1607\n      : @223 [@dyn 92] (gas: 8)\n  5683: a0 = u64 [a4 + 0x58]\n  5686: a1 = u64 [a4 + 0x60]\n  5689: a2 = u64 [a4 + 0x50]\n  5692: a3 = u64 [a4 + 0x48]\n  5695: a1 = a1 | a2\n  5698: a0 = a0 | a3\n  5701: a0 = a0 | a1\n  5704: jump @225 if a0 == 0\n      : @224 (gas: 1)\n  5707: jump @1151\n      : @225 (gas: 3)\n  5710: a0 = u64 [s1 + 0x1b8]\n  5714: a0 = i32 [a0]\n  5716: jump @227 if a0 >u 67\n      : @226 (gas: 1)\n  5720: jump @1152\n      : @227 (gas: 22)\n  5723: a0 = s1 + 0x4000\n  5727: i32 a0 = a0 + 0x5a0\n  5731: a1 = 0x24\n  5734: ecalli 2 // 'call_data_load'\n  5736: a1 = s1 + 0x4138\n  5740: a2 = a1 + 0x400\n  5744: a0 = u64 [a2 + 0x80]\n  5748: u64 [s1 + 0x1a0] = a0\n  5752: a0 = u64 [a2 + 0x78]\n  5755: u64 [s1 + 0x1a8] = a0\n  5759: a0 = u64 [a2 + 0x70]\n  5762: u64 [s1 + 0x1b0] = a0\n  5766: a0 = u64 [a2 + 0x68]\n  5769: u64 [s1 + 0x1b8] = a0\n  5773: a0 = s1 + 0x4000\n  5777: i32 a0 = a0 + 0x5c0\n  5781: a1 = 0x4\n  5784: ra = 0xba\n  5788: ecalli 2 // 'call_data_load'\n  5790: a0 = 0x4000\n  5794: t0 = 0xbc\n  5798: jump @1607\n      : @228 [@dyn 93] (gas: 2)\n  5802: a0 = 0x4000\n  5806: t0 = 188, jump @1607\n      : @229 [@dyn 94] (gas: 13)\n  5813: a0 = u64 [a4 + 0x88]\n  5817: a1 = u64 [a4 + 0x90]\n  5821: a2 = u64 [a4 + 0x98]\n  5825: a3 = u64 [a4 + 0xa0]\n  5829: a4 = s1 + 0x3138\n  5833: a5 = a4 + 0x200\n  5837: u64 [a5 + 0xc0] = a3\n  5841: u64 [a5 + 0xb8] = a2\n  5845: u64 [a5 + 0xb0] = a1\n  5849: a1 = s1 + 0x33e0\n  5853: u64 [a5 + 0xa8] = a0\n  5857: a0 = 0\n  5859: ra = 190, jump @4\n      : @230 [@dyn 95] (gas: 9)\n  5865: a1 = s1 + 0x3138\n  5869: u64 [a1 + 672] = 0\n  5873: u64 [a1 + 664] = 0\n  5877: u64 [a1 + 648] = 0x4\n  5882: a2 = a1\n  5884: a0 = 0x20\n  5887: a1 = s1 + 0x33c0\n  5891: u64 [a2 + 656] = 0\n  5895: ra = 192, jump @4\n      : @231 [@dyn 96] (gas: 6)\n  5901: a0 = sp + 0xffffffffffffffe0\n  5904: a0 = a0 & 0xffffffffffffffe0\n  5907: u64 [s1 + 0x180] = a0\n  5911: sp = a0\n  5913: a1 = i32 [0x20194]\n  5918: jump @233 if a1 >u 63\n      : @232 (gas: 2)\n  5922: u32 [0x20194] = 0x40\n  5928: fallthrough\n      : @233 (gas: 30)\n  5929: a0 = sp + 0xffffffffffffffe0\n  5932: a2 = a0 & 0xffffffffffffffe0\n  5935: u64 [s1 + 0x198] = a2\n  5939: sp = a2\n  5941: a0 = 0x201a0\n  5946: i32 a0 = a0 + 0\n  5948: i32 a2 = a2 + 0\n  5950: a1 = 0x40\n  5953: u64 [s1 + 0x170] = a0\n  5957: ecalli 7 // 'hash_keccak_256'\n  5959: a3 = u64 [s1 + 0x198]\n  5963: a0 = u64 [a3 + 0x18]\n  5966: a1 = u64 [a3 + 0x10]\n  5969: a2 = u64 [a3 + 0x8]\n  5972: a3 = u64 [a3]\n  5974: a0 = reverse a0\n  5976: a4 = reverse a1\n  5978: a2 = reverse a2\n  5980: a3 = reverse a3\n  5982: a1 = u64 [s1 + 0x180]\n  5986: u64 [s1 + 0x178] = a3\n  5990: u64 [a1 + 0x18] = a3\n  5993: u64 [s1 + 0x188] = a2\n  5997: u64 [a1 + 0x10] = a2\n  6000: u64 [s1 + 0x190] = a4\n  6004: u64 [a1 + 0x8] = a4\n  6007: u64 [s1 + 0x198] = a0\n  6011: u64 [a1] = a0\n  6013: a0 = s1 + 0x33a0\n  6017: ra = 194, jump @6\n      : @234 [@dyn 97] (gas: 22)\n  6023: ra = s1 + 0x3138\n  6027: a2 = ra + 0x200\n  6031: a0 = u64 [a2 + 0x70]\n  6034: a1 = u64 [a2 + 0x68]\n  6037: t2 = u64 [ra + 0x278]\n  6041: a3 = u64 [a2 + 0x80]\n  6045: t1 = u64 [s1 + 0x1b0]\n  6049: a4 = t1 ^ a0\n  6052: a0 = t1 <u a0\n  6055: t0 = u64 [s1 + 0x1b8]\n  6059: a1 = t0 <u a1\n  6062: a1 = a0 if a4 != 0\n  6065: a5 = u64 [s1 + 0x1a0]\n  6069: a0 = a5 ^ a3\n  6072: a2 = a5 <u a3\n  6075: a3 = u64 [s1 + 0x1a8]\n  6079: a4 = a3 <u t2\n  6082: a4 = a2 if a0 != 0\n  6085: a2 = a3 ^ t2\n  6088: a0 = a0 | a2\n  6091: a1 = a4 if a0 != 0\n  6094: jump @236 if a1 != 0\n      : @235 (gas: 1)\n  6097: jump @1153\n      : @236 (gas: 21)\n  6100: a0 = sp + 0xffffffffffffffe0\n  6103: a0 = a0 & 0xffffffffffffffe0\n  6106: u64 [s1 + 0x180] = a0\n  6110: sp = a0\n  6112: a4 = ra + 0x200\n  6116: u64 [a4] = a5\n  6118: u64 [ra + 0x1f8] = a3\n  6122: u64 [ra + 0x1f0] = t1\n  6126: u64 [ra + 0x1e8] = t0\n  6130: a0 = u64 [s1 + 0x178]\n  6134: u64 [a4 + 0x20] = a0\n  6137: a0 = u64 [s1 + 0x188]\n  6141: u64 [a4 + 0x18] = a0\n  6144: a0 = u64 [s1 + 0x190]\n  6148: u64 [a4 + 0x10] = a0\n  6151: a0 = s1 + 0x3360\n  6155: a1 = s1 + 0x3340\n  6159: a2 = s1 + 0x3320\n  6163: a3 = u64 [s1 + 0x198]\n  6167: u64 [a4 + 0x8] = a3\n  6170: ra = 196, jump @1308\n      : @237 [@dyn 98] (gas: 28)\n  6177: a0 = s1 + 0x3138\n  6181: a0 = u64 [a0 + 0x260]\n  6185: u64 [s1 + 0x178] = a0\n  6189: a0 = s1 + 0x3138\n  6193: a0 = u64 [a0 + 0x258]\n  6197: u64 [s1 + 0x190] = a0\n  6201: a0 = s1 + 0x3138\n  6205: a0 = u64 [a0 + 0x250]\n  6209: u64 [s1 + 0x188] = a0\n  6213: a0 = s1 + 0x3138\n  6217: a0 = u64 [a0 + 0x248]\n  6221: u64 [s1 + 0x198] = a0\n  6225: a0 = s1 + 0x3138\n  6229: a0 = u64 [a0 + 0x238]\n  6233: a1 = s1 + 0x3138\n  6237: a1 = u64 [a1 + 0x240]\n  6241: a2 = s1 + 0x3138\n  6245: a2 = u64 [a2 + 0x228]\n  6249: a3 = s1 + 0x3138\n  6253: a3 = u64 [a3 + 0x230]\n  6257: a4 = u64 [s1 + 0x180]\n  6261: u64 [a4 + 0x10] = a0\n  6264: u64 [a4 + 0x18] = a1\n  6267: u64 [a4] = a2\n  6269: u64 [a4 + 0x8] = a3\n  6272: a1 = a4\n  6274: a0 = s1 + 0x3300\n  6278: ra = 198, jump @6\n      : @238 [@dyn 99] (gas: 16)\n  6284: a0 = s1 + 0x3138\n  6288: a0 = u64 [a0 + 0x1e0]\n  6292: a1 = s1 + 0x100\n  6296: u64 [a1 + 0xb8] = a0\n  6300: a0 = s1 + 0x3138\n  6304: a0 = u64 [a0 + 0x1d8]\n  6308: u64 [a1 + 0xb0] = a0\n  6312: a0 = s1 + 0x3138\n  6316: a0 = u64 [a0 + 0x1d0]\n  6320: u64 [a1 + 0xa0] = a0\n  6324: a0 = s1 + 0x3138\n  6328: a0 = u64 [a0 + 0x1c8]\n  6332: u64 [a1 + 0xa8] = a0\n  6336: a0 = s1 + 0x32e0\n  6340: a1 = 0x40\n  6343: ra = 200, jump @2\n      : @239 [@dyn 100] (gas: 14)\n  6349: a3 = s1 + 0x3138\n  6353: a4 = a3 + 0x100\n  6357: a0 = u64 [a4 + 0xc0]\n  6361: a1 = u64 [a4 + 0xb8]\n  6365: a2 = u64 [a4 + 0xb0]\n  6369: a3 = u64 [a4 + 0xa8]\n  6373: a0 = a0 | a2\n  6376: a2 = a3 | a1\n  6379: a2 = a2 | a0\n  6382: a2 = a2 >> 0x20\n  6385: a0 = a0 | a1\n  6388: a0 = a0 << 0x20\n  6391: a0 = a0 | a2\n  6394: jump @241 if a0 == 0\n      : @240 (gas: 1)\n  6397: jump @993\n      : @241 (gas: 30)\n  6400: a0 = u64 [s1 + 0x198]\n  6404: a2 = a0 >> 0x3d\n  6407: a5 = u64 [s1 + 0x188]\n  6411: a1 = a5 << 0x3\n  6414: t1 = a1 | a2\n  6417: a4 = u64 [s1 + 0x190]\n  6421: a1 = a4 >> 0x3d\n  6424: a2 = u64 [s1 + 0x178]\n  6428: a2 = a2 << 0x3\n  6431: a1 = a1 | a2\n  6434: a2 = a5 >> 0x3d\n  6437: u64 [s1 + 0x188] = a3\n  6441: a3 = a4 << 0x3\n  6444: a2 = a2 | a3\n  6447: a3 = a0 << 0x3\n  6450: u64 [s1 + 0x190] = a3\n  6454: a5 = a2 >u 0\n  6456: a4 = a1 >u 0\n  6458: a4 = a5 if a1 == 0\n  6461: t0 = t1 >u 0\n  6463: a5 = a3 <u 0x100\n  6467: a5 = a5 ^ 0x1\n  6470: a5 = t0 if t1 != 0\n  6473: a1 = a1 | a2\n  6476: a5 = a4 if a1 != 0\n  6479: u64 [s1 + 0x180] = a5\n  6483: i32 a2 = a3 + 0xffffffffffffff80\n  6486: a0 = u64 [s1 + 0x1b0]\n  6490: a1 = u64 [s1 + 0x1b8]\n  6494: ra = 202, jump @1634\n      : @242 [@dyn 101] (gas: 8)\n  6501: u64 [s1 + 0x178] = a0\n  6505: u64 [s1 + 0x170] = a1\n  6509: a0 = u64 [s1 + 0x198]\n  6513: i32 a2 = a0 << 0x3\n  6516: u64 [s1 + 0x198] = a2\n  6520: a0 = u64 [s1 + 0x1a8]\n  6524: a1 = u64 [s1 + 0x1a0]\n  6528: ra = 204, jump @1634\n      : @243 [@dyn 102] (gas: 7)\n  6535: u64 [s1 + 0x160] = a0\n  6539: u64 [s1 + 0x168] = a1\n  6543: a1 = u64 [s1 + 0x190]\n  6547: i32 a2 = 0x80 - a1\n  6551: a0 = u64 [s1 + 0x1b0]\n  6555: a1 = u64 [s1 + 0x1b8]\n  6559: ra = 206, jump @1639\n      : @244 [@dyn 103] (gas: 21)\n  6566: a2 = u64 [s1 + 0x168]\n  6570: a2 = a2 | a1\n  6573: a1 = u64 [s1 + 0x190]\n  6577: a3 = a1 <u 0x80\n  6581: u64 [s1 + 0x168] = a3\n  6585: a4 = u64 [s1 + 0x170]\n  6589: a2 = a4 if a3 == 0\n  6592: a4 = u64 [s1 + 0x1a0]\n  6596: a2 = a4 if a1 == 0\n  6599: u64 [s1 + 0x1a0] = a2\n  6603: a2 = u64 [s1 + 0x160]\n  6607: a0 = a0 | a2\n  6610: a2 = u64 [s1 + 0x178]\n  6614: a0 = a2 if a3 == 0\n  6617: a2 = u64 [s1 + 0x1a8]\n  6621: a0 = a2 if a1 == 0\n  6624: u64 [s1 + 0x1a8] = a0\n  6628: a0 = u64 [s1 + 0x1b0]\n  6632: a1 = u64 [s1 + 0x1b8]\n  6636: a2 = u64 [s1 + 0x198]\n  6640: ra = 208, jump @1634\n      : @245 [@dyn 104] (gas: 21)\n  6647: a1 = 0\n  6649: a2 = u64 [s1 + 0x168]\n  6653: a0 = 0 if a2 == 0\n  6655: a0 = a0 << 0x20\n  6658: a0 = a0 >> 0x20\n  6661: a2 = u64 [s1 + 0x180]\n  6665: a4 = u64 [s1 + 0x1a8]\n  6669: a4 = 0 if a2 != 0\n  6671: a3 = u64 [s1 + 0x1a0]\n  6675: a3 = 0 if a2 != 0\n  6677: a0 = 0 if a2 != 0\n  6679: a1 = 0 if a2 == 0\n  6681: a2 = s1 + 0x3138\n  6685: a5 = a2 + 0x100\n  6689: u64 [a5 + 0xa0] = a1\n  6693: u64 [a5 + 0x98] = a0\n  6697: u64 [a5 + 0x90] = a3\n  6701: a1 = s1 + 0x32c0\n  6705: u64 [a5 + 0x88] = a4\n  6709: a0 = u64 [s1 + 0x188]\n  6713: ra = 210, jump @4\n      : @246 [@dyn 105] (gas: 4)\n  6719: a1 = 0x20\n  6722: a0 = u64 [s1 + 0x188]\n  6726: ra = 0x2cc\n  6730: jump @16\n      : @247 (gas: 10)\n  6733: u64 [a2 + 1344] = 0\n  6737: u64 [a2 + 1336] = 0\n  6741: u64 [a2 + 1328] = 0\n  6745: u64 [a2 + 1320] = 0\n  6749: a0 = s1 + 0x4000\n  6753: i32 a0 = a0 + 0x660\n  6757: ra = 0xd4\n  6761: ecalli 15 // 'value_transferred'\n  6763: t0 = 0xd6\n  6767: jump @1616\n      : @248 [@dyn 106] (gas: 1)\n  6771: t0 = 214, jump @1616\n      : @249 [@dyn 107] (gas: 1)\n  6778: t0 = 216, jump @1608\n      : @250 [@dyn 108] (gas: 1)\n  6785: jump @252 if a0 == 0\n      : @251 (gas: 1)\n  6788: jump @1154\n      : @252 (gas: 1)\n  6791: t0 = 218, jump @1625\n      : @253 [@dyn 109] (gas: 1)\n  6798: jump @255 if a1 <u a0\n      : @254 (gas: 1)\n  6801: jump @1155\n      : @255 (gas: 7)\n  6804: a0 = s1 + 0x4000\n  6808: i32 a0 = a0 + 0x680\n  6812: a1 = 0x4\n  6815: ra = 0xdc\n  6819: ecalli 2 // 'call_data_load'\n  6821: t0 = 0xde\n  6825: jump @1616\n      : @256 [@dyn 110] (gas: 1)\n  6829: t0 = 222, jump @1616\n      : @257 [@dyn 111] (gas: 13)\n  6836: a0 = u64 [a4 + 0x48]\n  6839: a1 = u64 [a4 + 0x50]\n  6842: a2 = u64 [a4 + 0x58]\n  6845: a3 = u64 [a4 + 0x60]\n  6848: a4 = s1 + 0x3138\n  6852: a5 = a4 + 0x400\n  6856: u64 [a5 + 0x40] = a3\n  6859: u64 [a5 + 0x38] = a2\n  6862: u64 [a5 + 0x30] = a1\n  6865: a1 = s1 + 0x3560\n  6869: u64 [a5 + 0x28] = a0\n  6872: a0 = 0\n  6874: ra = 224, jump @4\n      : @258 [@dyn 112] (gas: 9)\n  6880: a1 = s1 + 0x3138\n  6884: u64 [a1 + 1056] = 0\n  6888: u64 [a1 + 1048] = 0\n  6892: u64 [a1 + 1032] = 0x4\n  6897: a2 = a1\n  6899: a0 = 0x20\n  6902: a1 = s1 + 0x3540\n  6906: u64 [a2 + 1040] = 0\n  6910: ra = 226, jump @4\n      : @259 [@dyn 113] (gas: 2)\n  6916: a1 = i32 [0x20194]\n  6921: jump @261 if a1 >u 63\n      : @260 (gas: 4)\n  6925: a1 = 0x40\n  6928: u32 [0x20194] = a1\n  6933: t0 = 0xe4\n  6937: jump @1603\n      : @261 (gas: 1)\n  6941: t0 = 228, jump @1603\n      : @262 [@dyn 114] (gas: 8)\n  6948: a0 = 0x201a0\n  6953: i32 a0 = a0 + 0\n  6955: i32 a2 = a2 + 0\n  6957: a1 = 0x40\n  6960: ra = 0xe6\n  6964: ecalli 7 // 'hash_keccak_256'\n  6966: t0 = 0xe8\n  6970: jump @1591\n      : @263 [@dyn 115] (gas: 1)\n  6974: t0 = 232, jump @1591\n      : @264 [@dyn 116] (gas: 7)\n  6981: u64 [a5 + 0x80] = a3\n  6985: u64 [a5 + 0x78] = a2\n  6988: u64 [a5 + 0x70] = a1\n  6991: u64 [a5 + 0x68] = a0\n  6994: a0 = s1 + 0x3520\n  6998: a1 = s1 + 0x46a0\n  7002: ra = 234, jump @6\n      : @265 [@dyn 117] (gas: 14)\n  7008: a1 = s1 + 0x3138\n  7012: a0 = u64 [a1 + 0x400]\n  7016: a2 = s1 + 0x100\n  7020: u64 [a2 + 0xb8] = a0\n  7024: a3 = a1 + 0x300\n  7028: a0 = u64 [a3 + 0xf8]\n  7032: u64 [a2 + 0xb0] = a0\n  7036: a0 = u64 [a3 + 0xf0]\n  7040: u64 [a2 + 0xa8] = a0\n  7044: a0 = u64 [a3 + 0xe8]\n  7048: u64 [a2 + 0xa0] = a0\n  7052: a0 = s1 + 0x3500\n  7056: a1 = 0x40\n  7059: ra = 236, jump @2\n      : @266 [@dyn 118] (gas: 7)\n  7065: a3 = s1 + 0x3138\n  7069: a5 = a3 + 0x300\n  7073: a0 = u64 [a5 + 0xe0]\n  7077: a1 = u64 [a5 + 0xd8]\n  7081: a2 = u64 [a5 + 0xd0]\n  7085: a4 = u64 [a5 + 0xc8]\n  7089: t0 = 238, jump @1577\n      : @267 [@dyn 119] (gas: 1)\n  7096: jump @269 if a0 == 0\n      : @268 (gas: 1)\n  7099: jump @993\n      : @269 (gas: 15)\n  7102: a2 = s1 + 0x100\n  7106: a0 = u64 [a2 + 0xa0]\n  7110: a5 = a3 + 0x300\n  7114: u64 [a5 + 0xa8] = a0\n  7118: a0 = u64 [a2 + 0xa8]\n  7122: u64 [a5 + 0xb0] = a0\n  7126: a0 = u64 [a2 + 0xb0]\n  7130: u64 [a5 + 0xb8] = a0\n  7134: a1 = s1 + 0x34e0\n  7138: a0 = u64 [a2 + 0xb8]\n  7142: u64 [a5 + 0xc0] = a0\n  7146: a0 = a4\n  7148: u64 [s1 + 0x1b8] = a4\n  7152: ra = 0x2ca\n  7156: jump @4\n      : @270 (gas: 1)\n  7159: t0 = 240, jump @1633\n      : @271 [@dyn 120] (gas: 3)\n  7166: i32 a0 = a0 + 0xfffffffffffffa60\n  7170: ecalli 15 // 'value_transferred'\n  7172: fallthrough\n      : @272 (gas: 10)\n  7173: a4 = s1 + 0x3938\n  7177: a5 = a4 + 0x100\n  7181: a0 = u64 [a5 + 0x38]\n  7184: a1 = u64 [a5 + 0x40]\n  7187: a2 = u64 [a5 + 0x30]\n  7190: a3 = u64 [a5 + 0x28]\n  7193: a1 = a1 | a2\n  7196: a0 = a0 | a3\n  7199: a0 = a0 | a1\n  7202: jump @274 if a0 == 0\n      : @273 (gas: 1)\n  7205: jump @1156\n      : @274 (gas: 3)\n  7208: a0 = u64 [s1 + 0x1b8]\n  7212: a0 = i32 [a0]\n  7214: jump @276 if a0 >u 3\n      : @275 (gas: 1)\n  7218: jump @1157\n      : @276 (gas: 7)\n  7221: u64 [a4 + 352] = 0\n  7225: u64 [a4 + 344] = 0\n  7229: u64 [a4 + 336] = 0\n  7233: u64 [a4 + 328] = 0\n  7237: a0 = s1 + 0x12c0\n  7241: a1 = s1 + 0x3a80\n  7245: ra = 242, jump @6\n      : @277 [@dyn 121] (gas: 14)\n  7251: a0 = s1 + 0x1138\n  7255: a1 = u64 [a0 + 0x190]\n  7259: u64 [s1 + 0x1b8] = a1\n  7263: a1 = u64 [a0 + 0x188]\n  7267: u64 [s1 + 0x1b0] = a1\n  7271: a0 = u32 [a0 + 0x198]\n  7275: u64 [s1 + 0x1a8] = a0\n  7279: a0 = 0x301a0\n  7284: u64 [s1 + 0x1a0] = a0\n  7288: i32 a0 = a0 + 0\n  7290: ra = 0xf4\n  7294: ecalli 4 // 'caller'\n  7296: t0 = 0xf6\n  7300: jump @1571\n      : @278 [@dyn 122] (gas: 1)\n  7304: t0 = 246, jump @1571\n      : @279 [@dyn 123] (gas: 7)\n  7311: a1 = s1 + 0x1138\n  7315: u64 [a1 + 384] = 0\n  7319: u64 [a1 + 376] = 0\n  7323: u64 [a1 + 0x168] = a0\n  7327: a0 = s1 + 0x12a0\n  7331: u64 [a1 + 368] = 0\n  7335: ra = 248, jump @1353\n      : @280 [@dyn 124] (gas: 9)\n  7342: a0 = s1 + 0x3938\n  7346: u64 [a0 + 384] = 0\n  7350: u64 [a0 + 376] = 0\n  7354: u64 [a0 + 368] = 0\n  7358: a1 = a0\n  7360: u64 [a1 + 360] = 0x1\n  7365: a0 = s1 + 0x1280\n  7369: a1 = s1 + 0x3aa0\n  7373: ra = 250, jump @6\n      : @281 [@dyn 125] (gas: 10)\n  7379: a2 = s1 + 0x1138\n  7383: t1 = u64 [a2 + 0x160]\n  7387: a0 = a2 + 0x100\n  7391: a3 = u64 [a0 + 0x58]\n  7394: a5 = u64 [a0 + 0x50]\n  7397: a4 = u64 [a0 + 0x48]\n  7400: a0 = a5 | t1\n  7403: a1 = a4 | a3\n  7406: a0 = a0 | a1\n  7409: jump @294 if a0 == 0\n      : @282 (gas: 13)\n  7413: a0 = s1 + 0x100\n  7417: u64 [a0 + 0xb8] = a4\n  7421: a1 = a2 + 0x100\n  7425: u64 [a1 + 0x28] = a4\n  7428: u64 [a0 + 0xb0] = a5\n  7432: u64 [a1 + 0x30] = a5\n  7435: u64 [a0 + 0xa8] = a3\n  7439: u64 [a1 + 0x38] = a3\n  7442: a1 = s1 + 0x1260\n  7446: u64 [s1 + 0x1a0] = t1\n  7450: u64 [a2 + 0x140] = t1\n  7454: a0 = 0\n  7456: ra = 252, jump @4\n      : @283 [@dyn 126] (gas: 3)\n  7462: t0 = 0xfe\n  7466: a1 = s1 + 0x1138\n  7470: fallthrough\n      : @284 [@dyn 127] (gas: 8)\n  7471: u64 [a1 + 288] = 0\n  7475: u64 [a1 + 280] = 0\n  7479: u64 [a1 + 264] = 0x2\n  7484: a2 = a1\n  7486: a0 = 0x20\n  7489: a1 = s1 + 0x1240\n  7493: u64 [a2 + 272] = 0\n  7497: ra = 256, jump @4\n      : @285 [@dyn 128] (gas: 3)\n  7503: a2 = 0x20194\n  7508: a0 = i32 [0x20194]\n  7513: jump @287 if a0 >u 63\n      : @286 (gas: 2)\n  7517: u32 [0x20194] = 0x40\n  7523: fallthrough\n      : @287 (gas: 15)\n  7524: u64 [s1 + 0x190] = a2\n  7528: a0 = sp + 0xffffffffffffffe0\n  7531: a2 = a0 & 0xffffffffffffffe0\n  7534: u64 [s1 + 0x198] = a2\n  7538: sp = a2\n  7540: a0 = 0x201a0\n  7545: i32 a0 = a0 + 0\n  7547: i32 a2 = a2 + 0\n  7549: a1 = 0x40\n  7552: u64 [s1 + 0x188] = a0\n  7556: ra = 0x102\n  7560: ecalli 7 // 'hash_keccak_256'\n  7562: a3 = u64 [s1 + 0x198]\n  7566: t0 = 0x104\n  7570: jump @1563\n      : @288 [@dyn 129] (gas: 2)\n  7574: a3 = u64 [s1 + 0x198]\n  7578: t0 = 260, jump @1563\n      : @289 [@dyn 130] (gas: 8)\n  7585: a3 = a1 + 0x100\n  7589: u64 [a3 + 0x88] = a4\n  7593: u64 [a3 + 0x90] = a5\n  7597: u64 [a3 + 0x98] = a2\n  7601: u64 [a3 + 0xa0] = a0\n  7605: a0 = s1 + 0x1220\n  7609: a1 = s1 + 0x3ac0\n  7613: ra = 262, jump @6\n      : @290 [@dyn 131] (gas: 4)\n  7619: a2 = s1 + 0x1138\n  7623: a0 = u8 [a2 + 0xfc]\n  7627: a1 = 0x3\n  7630: jump @292 if a1 >=u a0\n      : @291 (gas: 1)\n  7633: jump @1213\n      : @292 (gas: 6)\n  7636: a2 = s1 + 0x100\n  7640: a4 = u64 [a2 + 0xb8]\n  7644: a5 = u64 [a2 + 0xb0]\n  7648: a3 = u64 [a2 + 0xa8]\n  7652: t1 = u64 [s1 + 0x1a0]\n  7656: jump @294 if a0 == 3\n      : @293 (gas: 1)\n  7660: jump @944\n      : @294 (gas: 1)\n  7663: t0 = 264, jump @1620\n      : @295 [@dyn 132] (gas: 10)\n  7670: t0 = s1 + 0x7ff\n  7674: t0 = t0 + 0x131\n  7678: u64 [t0 + 0x7e8] = t1\n  7682: a2 = t0 + 0x700\n  7686: u64 [a2 + 0xe0] = a3\n  7690: u64 [a2 + 0xd8] = a5\n  7694: a0 = s1 + 0x1120\n  7698: a1 = s1 + 0x1100\n  7702: u64 [a2 + 0xd0] = a4\n  7706: ra = 266, jump @1372\n      : @296 [@dyn 133] (gas: 23)\n  7713: a3 = s1 + 0x1138\n  7717: a4 = a3 + 0xffffffffffffff00\n  7721: a1 = u64 [a4 + 0xf8]\n  7725: a2 = u64 [a3]\n  7727: a0 = u64 [a4 + 0xe8]\n  7731: a3 = u64 [a4 + 0xf0]\n  7735: u64 [s1 + 0x170] = a1\n  7739: a4 = u64 [s1 + 0x1b8]\n  7743: u64 [a4 + 0x10] = a1\n  7746: u64 [s1 + 0x168] = a2\n  7750: u64 [a4 + 0x18] = a2\n  7753: u64 [s1 + 0x178] = a0\n  7757: u64 [a4] = a0\n  7759: u64 [s1 + 0x160] = a3\n  7763: u64 [a4 + 0x8] = a3\n  7766: a1 = a4\n  7768: a2 = s1 + 0x3938\n  7772: u64 [a2 + 448] = 0\n  7776: u64 [a2 + 440] = 0\n  7780: u64 [a2 + 432] = 0\n  7784: u64 [a2 + 424] = 0x1\n  7789: a0 = s1 + 0x3ae0\n  7793: ra = 268, jump @9\n      : @297 [@dyn 134] (gas: 7)\n  7799: a0 = s1 + 0x4000\n  7803: i32 a0 = a0 + 0xfffffffffffffb00\n  7807: ra = 0x10e\n  7811: ecalli 8 // 'now'\n  7813: a0 = 0x4000\n  7817: t0 = 0x110\n  7821: jump @1629\n      : @298 [@dyn 135] (gas: 2)\n  7825: a0 = 0x4000\n  7829: t0 = 272, jump @1629\n      : @299 [@dyn 136] (gas: 21)\n  7836: a0 = u64 [a4 + 0xe0]\n  7840: a1 = u64 [a4 + 0xd8]\n  7844: a2 = u64 [a4 + 0xc8]\n  7848: a3 = u64 [a4 + 0xd0]\n  7852: a4 = a2 + 0x2a300\n  7857: u64 [s1 + 0x1b8] = a4\n  7861: a2 = a4 <u a2\n  7864: a4 = a3 + a2\n  7867: u64 [s1 + 0x1b0] = a4\n  7871: a3 = a4 <u a3\n  7874: a3 = a2 if a2 == 0\n  7877: a3 = a3 + a1\n  7880: u64 [s1 + 0x1a8] = a3\n  7884: a1 = a3 <u a1\n  7887: a0 = a0 + a1\n  7890: u64 [s1 + 0x1a0] = a0\n  7894: a0 = s1 + 0x4000\n  7898: i32 a0 = a0 + 0xfffffffffffffb20\n  7902: ra = 0x112\n  7906: ecalli 8 // 'now'\n  7908: fallthrough\n      : @300 [@dyn 137] (gas: 22)\n  7909: a3 = s1 + 0x3938\n  7913: a0 = u64 [a3 + 0x1f0]\n  7917: a1 = u64 [a3 + 0x1e8]\n  7921: a2 = u64 [a3 + 0x200]\n  7925: t0 = u64 [a3 + 0x1f8]\n  7929: a3 = s1 + 0x100\n  7933: a5 = u64 [a3 + 0xb0]\n  7937: a4 = a0 ^ a5\n  7940: a0 = a5 <u a0\n  7943: a5 = u64 [a3 + 0xb8]\n  7947: a1 = a5 <u a1\n  7950: a1 = a0 if a4 != 0\n  7953: a5 = u64 [a3 + 0xa8]\n  7957: a0 = a5 <u t0\n  7960: a4 = u64 [a3 + 0xa0]\n  7964: a3 = a2 ^ a4\n  7967: a2 = a4 <u a2\n  7970: a2 = a0 if a3 == 0\n  7973: a0 = t0 ^ a5\n  7976: a0 = a0 | a3\n  7979: a1 = a2 if a0 != 0\n  7982: jump @302 if a1 == 0\n      : @301 (gas: 1)\n  7985: jump @1200\n      : @302 (gas: 5)\n  7988: a0 = s1 + 0x4000\n  7992: i32 a0 = a0 + 0xfffffffffffffb40\n  7996: ra = 0x114\n  8000: ecalli 8 // 'now'\n  8002: fallthrough\n      : @303 [@dyn 138] (gas: 34)\n  8003: a0 = s1 + 0x3938\n  8007: t0 = u64 [a0 + 0x220]\n  8011: a2 = a0 + 0x200\n  8015: a1 = u64 [a2 + 0x18]\n  8018: a5 = u64 [a2 + 0x8]\n  8021: a3 = u64 [a2 + 0x10]\n  8024: a2 = a5 + 0x93a80\n  8029: a0 = a2 <u a5\n  8032: a5 = a3 + a0\n  8035: a3 = a5 <u a3\n  8038: a3 = a0 if a0 == 0\n  8041: a0 = a1 + a3\n  8044: a1 = a0 <u a1\n  8047: a1 = a1 + t0\n  8050: a4 = u64 [s1 + 0x1a8]\n  8054: t0 = a0 <u a4\n  8057: u64 [s1 + 0x158] = a2\n  8061: a3 = u64 [s1 + 0x1b8]\n  8065: t1 = a2 <u a3\n  8068: a3 = u64 [s1 + 0x1b0]\n  8072: a2 = a3 ^ a5\n  8075: u64 [s1 + 0x150] = a5\n  8079: a3 = a5 <u a3\n  8082: a3 = t1 if a2 == 0\n  8085: a2 = u64 [s1 + 0x1a0]\n  8089: a5 = a2 ^ a1\n  8092: u64 [s1 + 0x140] = a1\n  8096: a2 = a1 <u a2\n  8099: a2 = t0 if a5 == 0\n  8102: u64 [s1 + 0x148] = a0\n  8106: a0 = a0 ^ a4\n  8109: a0 = a0 | a5\n  8112: a3 = a2 if a0 != 0\n  8115: jump @305 if a3 == 0\n      : @304 (gas: 1)\n  8118: jump @1206\n      : @305 (gas: 3)\n  8121: a0 = s1 + 0x10e0\n  8125: a1 = 0x40\n  8128: ra = 278, jump @2\n      : @306 [@dyn 139] (gas: 19)\n  8134: a1 = s1 + 0x7ff\n  8138: a1 = a1 + 0x131\n  8142: a5 = a1 + 0x700\n  8146: a0 = u64 [a5 + 0xc8]\n  8150: u64 [s1 + 0x188] = a0\n  8154: a2 = u64 [a5 + 0xc0]\n  8158: u64 [s1 + 0x180] = a2\n  8162: a3 = u64 [a5 + 0xb8]\n  8166: u64 [s1 + 0x190] = a3\n  8170: a4 = u64 [a5 + 0xb0]\n  8174: u64 [s1 + 0x198] = a4\n  8178: u64 [a5 + 0xa8] = a0\n  8182: u64 [a5 + 0xa0] = a2\n  8186: u64 [a5 + 0x98] = a3\n  8190: a0 = s1 + 0x10c0\n  8194: u64 [a5 + 0x90] = a4\n  8198: ra = 0x118\n  8202: t0 = 0x59a\n  8206: jump @1600\n      : @307 [@dyn 140] (gas: 13)\n  8210: a4 = s1 + 0x100\n  8214: a2 = u64 [a4 + 0x98]\n  8218: a0 = u64 [a4 + 0x88]\n  8222: a1 = u64 [a4 + 0x90]\n  8226: a0 = a0 | a1\n  8229: a3 = u64 [a4 + 0x80]\n  8233: a1 = a2 | a3\n  8236: a1 = a1 | a0\n  8239: a1 = a1 >> 0x20\n  8242: a0 = a0 | a3\n  8245: a0 = a0 << 0x20\n  8248: a0 = a0 | a1\n  8251: jump @309 if a0 == 0\n      : @308 (gas: 1)\n  8254: jump @993\n      : @309 (gas: 14)\n  8257: a0 = u64 [s1 + 0x178]\n  8261: a3 = s1 + 0x7ff\n  8265: a3 = a3 + 0x131\n  8269: a4 = a3 + 0x700\n  8273: u64 [a4 + 0x70] = a0\n  8276: a0 = u64 [s1 + 0x160]\n  8280: u64 [a4 + 0x78] = a0\n  8283: a0 = u64 [s1 + 0x170]\n  8287: u64 [a4 + 0x80] = a0\n  8291: a1 = s1 + 0x10a0\n  8295: a0 = u64 [s1 + 0x168]\n  8299: u64 [a4 + 0x88] = a0\n  8303: a0 = a2\n  8305: ra = 282, jump @4\n      : @310 [@dyn 141] (gas: 4)\n  8311: a0 = s1 + 0x4000\n  8315: i32 a0 = a0 + 0xfffffffffffffb60\n  8319: ecalli 8 // 'now'\n  8321: fallthrough\n      : @311 (gas: 12)\n  8322: a5 = s1 + 0x100\n  8326: a4 = u64 [a5 + 0x98]\n  8330: a0 = u64 [a5 + 0x88]\n  8334: a2 = u64 [a5 + 0x80]\n  8338: a2 = a2 | a0\n  8341: a3 = 0x100000000\n  8351: a0 = 0xffffffe0\n  8361: a0 = a4 <u a0\n  8364: a1 = u64 [a5 + 0x90]\n  8368: a0 = 0 if a1 != 0\n  8370: a0 = 0 if a2 != 0\n  8372: jump @313 if a0 != 0\n      : @312 (gas: 1)\n  8375: jump @993\n      : @313 (gas: 18)\n  8378: a0 = s1 + 0x3938\n  8382: u64 [s1 + 0x188] = a2\n  8386: u64 [s1 + 0x180] = a3\n  8390: a5 = u64 [a0 + 0x228]\n  8394: a1 = u64 [a0 + 0x230]\n  8398: a2 = u64 [a0 + 0x238]\n  8402: a3 = u64 [a0 + 0x240]\n  8406: i32 a0 = a4 + 0x20\n  8409: a4 = s1 + 0x7ff\n  8413: a4 = a4 + 0x131\n  8417: u64 [a4 + 0x768] = a3\n  8421: a3 = a4 + 0x700\n  8425: u64 [a3 + 0x60] = a2\n  8428: u64 [a3 + 0x58] = a1\n  8431: a1 = s1 + 0x1080\n  8435: u64 [a3 + 0x50] = a5\n  8438: u64 [s1 + 0x138] = a0\n  8442: ra = 284, jump @4\n      : @314 [@dyn 142] (gas: 5)\n  8448: a3 = s1 + 0x100\n  8452: a1 = u64 [a3 + 0x98]\n  8456: a0 = u64 [a3 + 0x80]\n  8460: a0 = a0 + 0xffffffffffffffc0\n  8463: t0 = 286, jump @1618\n      : @315 [@dyn 143] (gas: 1)\n  8470: jump @317 if a0 != 0\n      : @316 (gas: 1)\n  8473: jump @993\n      : @317 (gas: 16)\n  8476: i32 a2 = a1 + 0x40\n  8479: a0 = u64 [s1 + 0x1b8]\n  8483: a3 = s1 + 0x7ff\n  8487: a3 = a3 + 0x131\n  8491: a4 = a3 + 0x700\n  8495: u64 [a4 + 0x30] = a0\n  8498: a0 = u64 [s1 + 0x1b0]\n  8502: u64 [a4 + 0x38] = a0\n  8505: a0 = u64 [s1 + 0x1a8]\n  8509: u64 [a4 + 0x40] = a0\n  8512: a1 = s1 + 0x1060\n  8516: a0 = u64 [s1 + 0x1a0]\n  8520: u64 [a4 + 0x48] = a0\n  8523: u64 [s1 + 0x180] = a2\n  8527: a0 = a2\n  8529: ra = 288, jump @4\n      : @318 [@dyn 144] (gas: 10)\n  8535: a4 = s1 + 0x100\n  8539: a1 = u64 [a4 + 0x98]\n  8543: a3 = 0x100000000\n  8553: a0 = 0xffffffa0\n  8563: a0 = a1 <u a0\n  8566: a2 = u64 [a4 + 0x90]\n  8570: a0 = 0 if a2 != 0\n  8572: a2 = u64 [a4 + 0x88]\n  8576: a0 = 0 if a2 != 0\n  8578: jump @320 if a0 != 0\n      : @319 (gas: 1)\n  8581: jump @993\n      : @320 (gas: 18)\n  8584: i32 a2 = a1 + 0x60\n  8587: a0 = u64 [s1 + 0x158]\n  8591: a1 = s1 + 0x7ff\n  8595: a1 = a1 + 0x131\n  8599: u64 [s1 + 0x130] = a3\n  8603: a3 = a1\n  8605: a4 = a1 + 0x700\n  8609: u64 [a4 + 0x10] = a0\n  8612: a0 = u64 [s1 + 0x150]\n  8616: u64 [a4 + 0x18] = a0\n  8619: a0 = u64 [s1 + 0x148]\n  8623: u64 [a4 + 0x20] = a0\n  8626: a1 = s1 + 0x1040\n  8630: a0 = u64 [s1 + 0x140]\n  8634: u64 [a3 + 0x728] = a0\n  8638: u64 [s1 + 0x128] = a2\n  8642: a0 = a2\n  8644: ra = 290, jump @4\n      : @321 [@dyn 145] (gas: 5)\n  8650: a3 = s1 + 0x100\n  8654: a1 = u64 [a3 + 0x98]\n  8658: a0 = u64 [a3 + 0x30]\n  8661: a0 = a0 + 0xffffffffffffff80\n  8664: t0 = 292, jump @1618\n      : @322 [@dyn 146] (gas: 1)\n  8671: jump @324 if a0 != 0\n      : @323 (gas: 1)\n  8674: jump @993\n      : @324 (gas: 10)\n  8677: i32 a0 = a1 + 0x80\n  8681: a2 = s1 + 0x7ff\n  8685: a2 = a2 + 0x131\n  8689: u64 [a2 + 1800] = 0\n  8693: u64 [a2 + 1792] = 0\n  8697: u64 [a2 + 1784] = 0\n  8701: a1 = s1 + 0x1020\n  8705: u64 [a2 + 1776] = 0\n  8709: u64 [s1 + 0x130] = a0\n  8713: ra = 294, jump @4\n      : @325 [@dyn 147] (gas: 10)\n  8719: a4 = s1 + 0x100\n  8723: a1 = u64 [a4 + 0x98]\n  8727: a3 = 0x100000000\n  8737: a0 = 0xffffff60\n  8747: a0 = a1 <u a0\n  8750: a2 = u64 [a4 + 0x90]\n  8754: a0 = 0 if a2 != 0\n  8756: a2 = u64 [a4 + 0x88]\n  8760: a0 = 0 if a2 != 0\n  8762: jump @327 if a0 != 0\n      : @326 (gas: 1)\n  8765: jump @993\n      : @327 (gas: 11)\n  8768: i32 a0 = a1 + 0xa0\n  8772: a2 = s1 + 0x7ff\n  8776: a2 = a2 + 0x131\n  8780: u64 [a2 + 1768] = 0\n  8784: u64 [a2 + 1760] = 0\n  8788: u64 [a2 + 1752] = 0\n  8792: a1 = s1 + 0x1000\n  8796: u64 [a2 + 1744] = 0\n  8800: u64 [s1 + 0x118] = a0\n  8804: u64 [s1 + 0x120] = a3\n  8808: ra = 296, jump @4\n      : @328 [@dyn 148] (gas: 5)\n  8814: a3 = s1 + 0x100\n  8818: a1 = u64 [a3 + 0x98]\n  8822: a0 = u64 [a3 + 0x20]\n  8825: a0 = a0 + 0xffffffffffffff40\n  8829: t0 = 298, jump @1618\n      : @329 [@dyn 149] (gas: 1)\n  8836: jump @331 if a0 != 0\n      : @330 (gas: 1)\n  8839: jump @993\n      : @331 (gas: 11)\n  8842: i32 a0 = a1 + 0xc0\n  8846: a2 = s1 + 0x7ff\n  8850: a2 = a2 + 0x131\n  8854: u64 [a2 + 1736] = 0\n  8858: u64 [a2 + 1728] = 0\n  8862: u64 [a2 + 1720] = 0\n  8866: a1 = s1 + 0x7ff\n  8870: a1 = a1 + 0x7e1\n  8874: u64 [a2 + 1712] = 0\n  8878: u64 [s1 + 0x120] = a0\n  8882: ra = 300, jump @4\n      : @332 [@dyn 150] (gas: 10)\n  8888: a5 = s1 + 0x100\n  8892: a0 = u64 [a5 + 0x98]\n  8896: a4 = 0x100000000\n  8906: a1 = 0xffffff20\n  8916: a1 = a0 <u a1\n  8919: a3 = u64 [a5 + 0x90]\n  8923: a1 = 0 if a3 != 0\n  8925: a3 = u64 [a5 + 0x88]\n  8929: a1 = 0 if a3 != 0\n  8931: jump @334 if a1 != 0\n      : @333 (gas: 1)\n  8934: jump @993\n      : @334 (gas: 12)\n  8937: i32 a0 = a0 + 0xe0\n  8941: a3 = s1 + 0x7ff\n  8945: a3 = a3 + 0x131\n  8949: u64 [a3 + 1704] = 0\n  8953: u64 [a3 + 1696] = 0\n  8957: u64 [a3 + 1688] = 0\n  8961: a1 = s1 + 0x7ff\n  8965: a1 = a1 + 0x7c1\n  8969: u64 [a3 + 1680] = 0x1\n  8974: u64 [s1 + 0x108] = a0\n  8978: u64 [s1 + 0x110] = a4\n  8982: ra = 302, jump @4\n      : @335 [@dyn 151] (gas: 10)\n  8988: a3 = s1 + 0x100\n  8992: a2 = u64 [a3 + 0x98]\n  8996: a0 = u64 [a3 + 0x10]\n  8999: a0 = a0 + 0xffffffffffffff00\n  9003: a0 = a2 <u a0\n  9006: a1 = u64 [a3 + 0x90]\n  9010: a0 = 0 if a1 != 0\n  9012: a1 = u64 [a3 + 0x88]\n  9016: a0 = 0 if a1 != 0\n  9018: jump @337 if a0 != 0\n      : @336 (gas: 1)\n  9021: jump @993\n      : @337 (gas: 11)\n  9024: i32 a0 = a2 + 0x100\n  9028: a3 = s1 + 0x7ff\n  9032: a3 = a3 + 0x131\n  9036: u64 [a3 + 1672] = 0\n  9040: u64 [a3 + 1664] = 0\n  9044: u64 [a3 + 1656] = 0\n  9048: a1 = s1 + 0x7ff\n  9052: a1 = a1 + 0x7a1\n  9056: u64 [a3 + 1648] = 0\n  9060: u64 [s1 + 0x110] = a0\n  9064: ra = 304, jump @4\n      : @338 [@dyn 152] (gas: 9)\n  9070: a0 = 0xfffffee0\n  9080: a2 = s1 + 0x100\n  9084: a1 = u64 [a2 + 0x98]\n  9088: a0 = a1 <u a0\n  9091: a1 = u64 [a2 + 0x90]\n  9095: a0 = 0 if a1 != 0\n  9097: a1 = u64 [a2 + 0x88]\n  9101: a0 = 0 if a1 != 0\n  9103: jump @340 if a0 != 0\n      : @339 (gas: 1)\n  9106: jump @993\n      : @340 (gas: 13)\n  9109: a0 = u64 [s1 + 0x198]\n  9113: i32 a2 = a0 + 0x120\n  9117: a0 = s1 + 0x7ff\n  9121: a0 = a0 + 0x131\n  9125: u64 [a0 + 1640] = 0\n  9129: u64 [a0 + 1632] = 0\n  9133: u64 [a0 + 1624] = 0\n  9137: a1 = s1 + 0x7ff\n  9141: a1 = a1 + 0x781\n  9145: u64 [a0 + 1616] = 0\n  9149: u64 [s1 + 0x100] = a2\n  9153: a0 = a2\n  9155: ra = 306, jump @4\n      : @341 [@dyn 153] (gas: 15)\n  9161: a0 = u64 [s1 + 0x168]\n  9165: a2 = s1 + 0x7ff\n  9169: a2 = a2 + 0x131\n  9173: a3 = a2 + 0x600\n  9177: u64 [a3 + 0x48] = a0\n  9180: a0 = u64 [s1 + 0x170]\n  9184: u64 [a3 + 0x40] = a0\n  9187: a0 = u64 [s1 + 0x160]\n  9191: u64 [a3 + 0x38] = a0\n  9194: a1 = s1 + 0x7ff\n  9198: a1 = a1 + 0x761\n  9202: a0 = u64 [s1 + 0x178]\n  9206: u64 [a3 + 0x30] = a0\n  9209: a0 = 0\n  9211: ra = 308, jump @4\n      : @342 [@dyn 154] (gas: 11)\n  9217: a1 = s1 + 0x7ff\n  9221: a1 = a1 + 0x131\n  9225: u64 [a1 + 1576] = 0\n  9229: u64 [a1 + 1568] = 0\n  9233: u64 [a1 + 1552] = 0x2\n  9238: a2 = a1\n  9240: a0 = 0x20\n  9243: a1 = s1 + 0x7ff\n  9247: a1 = a1 + 0x741\n  9251: u64 [a2 + 1560] = 0\n  9255: ra = 310, jump @4\n      : @343 [@dyn 155] (gas: 8)\n  9261: a0 = sp + 0xffffffffffffffe0\n  9264: a0 = a0 & 0xffffffffffffffe0\n  9267: u64 [s1 + 0x168] = a0\n  9271: sp = a0\n  9273: a0 = 0x20194\n  9278: u64 [s1 + 0xf8] = a0\n  9282: a0 = i32 [0x20194]\n  9287: jump @345 if a0 >u 63\n      : @344 (gas: 3)\n  9291: a1 = u64 [s1 + 0xf8]\n  9295: u32 [a1 + 0] = 0x40\n  9298: fallthrough\n      : @345 (gas: 32)\n  9299: a0 = sp + 0xffffffffffffffe0\n  9302: a2 = a0 & 0xffffffffffffffe0\n  9305: u64 [s1 + 0x190] = a2\n  9309: sp = a2\n  9311: a0 = 0x201a0\n  9316: i32 a0 = a0 + 0\n  9318: i32 a2 = a2 + 0\n  9320: a1 = 0x40\n  9323: u64 [s1 + 0xf0] = a0\n  9327: ecalli 7 // 'hash_keccak_256'\n  9329: a3 = u64 [s1 + 0x190]\n  9333: a0 = u64 [a3 + 0x18]\n  9336: a1 = u64 [a3 + 0x10]\n  9339: a2 = u64 [a3 + 0x8]\n  9342: a3 = u64 [a3]\n  9344: a4 = reverse a0\n  9346: u64 [s1 + 0x170] = a4\n  9350: a1 = reverse a1\n  9352: u64 [s1 + 0x178] = a1\n  9356: a2 = reverse a2\n  9358: u64 [s1 + 0x190] = a2\n  9362: a0 = reverse a3\n  9364: u64 [s1 + 0x188] = a0\n  9368: a3 = u64 [s1 + 0x168]\n  9372: u64 [a3 + 0x18] = a0\n  9375: u64 [a3 + 0x10] = a2\n  9378: u64 [a3 + 0x8] = a1\n  9381: u64 [a3] = a4\n  9383: a0 = s1 + 0x7ff\n  9387: a0 = a0 + 0x721\n  9391: a1 = u64 [s1 + 0x198]\n  9395: ra = 312, jump @2\n      : @346 [@dyn 156] (gas: 15)\n  9401: a3 = s1 + 0x7ff\n  9405: a3 = a3 + 0x131\n  9409: a0 = u64 [a3 + 0x608]\n  9413: a1 = u64 [a3 + 0x600]\n  9417: a2 = u64 [a3 + 0x5f8]\n  9421: a3 = u64 [a3 + 0x5f0]\n  9425: a4 = s1 + 0x3938\n  9429: a5 = a4 + 0x200\n  9433: u64 [a5 + 0x60] = a0\n  9436: u64 [a5 + 0x58] = a1\n  9439: u64 [a5 + 0x50] = a2\n  9442: u64 [a5 + 0x48] = a3\n  9445: a1 = s1 + 0x3b80\n  9449: a0 = u64 [s1 + 0x168]\n  9453: ra = 314, jump @9\n      : @347 [@dyn 157] (gas: 4)\n  9459: a0 = s1 + 0x7ff\n  9463: a0 = a0 + 0x701\n  9467: a1 = u64 [s1 + 0x138]\n  9471: ra = 316, jump @2\n      : @348 [@dyn 158] (gas: 31)\n  9477: a0 = s1 + 0x7ff\n  9481: a0 = a0 + 0x131\n  9485: t0 = u64 [a0 + 0x5d0]\n  9489: t1 = u64 [a0 + 0x5d8]\n  9493: t2 = u64 [a0 + 0x5e0]\n  9497: a3 = u64 [a0 + 0x5e8]\n  9501: a0 = u64 [s1 + 0x170]\n  9505: a0 = a0 + 0x1\n  9508: a5 = a0 <u 0x1\n  9511: a1 = u64 [s1 + 0x178]\n  9515: a5 = a5 + a1\n  9518: a4 = a0 | a5\n  9521: a4 = a4 <u 0x1\n  9524: a1 = u64 [s1 + 0x190]\n  9528: a4 = a4 + a1\n  9531: a1 = a4 <u a1\n  9534: a2 = u64 [s1 + 0x188]\n  9538: a1 = a1 + a2\n  9541: a2 = s1 + 0x3938\n  9545: u64 [a2 + 0x280] = a1\n  9549: a1 = a2 + 0x200\n  9553: u64 [a1 + 0x78] = a4\n  9556: u64 [a1 + 0x70] = a5\n  9559: u64 [a1 + 0x68] = a0\n  9562: u64 [a1 + 0xa0] = a3\n  9566: u64 [a2 + 0x298] = t2\n  9570: u64 [a2 + 0x290] = t1\n  9574: u64 [a2 + 0x288] = t0\n  9578: a0 = s1 + 0x3ba0\n  9582: a1 = s1 + 0x3bc0\n  9586: ra = 318, jump @9\n      : @349 [@dyn 159] (gas: 4)\n  9592: a0 = s1 + 0x7ff\n  9596: a0 = a0 + 0x6e1\n  9600: a1 = u64 [s1 + 0x180]\n  9604: ra = 320, jump @2\n      : @350 [@dyn 160] (gas: 31)\n  9610: a0 = s1 + 0x7ff\n  9614: a0 = a0 + 0x131\n  9618: t0 = u64 [a0 + 0x5b0]\n  9622: t1 = u64 [a0 + 0x5b8]\n  9626: t2 = u64 [a0 + 0x5c0]\n  9630: a3 = u64 [a0 + 0x5c8]\n  9634: a0 = u64 [s1 + 0x170]\n  9638: a4 = a0 + 0x2\n  9641: a5 = a4 <u a0\n  9644: a1 = u64 [s1 + 0x178]\n  9648: a0 = a1 + a5\n  9651: a1 = a0 <u a1\n  9654: a1 = a5 if a5 == 0\n  9657: a2 = u64 [s1 + 0x190]\n  9661: a1 = a1 + a2\n  9664: a5 = a1 <u a2\n  9667: a2 = u64 [s1 + 0x188]\n  9671: a5 = a5 + a2\n  9674: a2 = s1 + 0x3938\n  9678: u64 [a2 + 0x2c0] = a5\n  9682: a5 = a2 + 0x200\n  9686: u64 [a5 + 0xb8] = a1\n  9690: u64 [a5 + 0xb0] = a0\n  9694: u64 [a5 + 0xa8] = a4\n  9698: u64 [a5 + 0xe0] = a3\n  9702: u64 [a2 + 0x2d8] = t2\n  9706: u64 [a2 + 0x2d0] = t1\n  9710: u64 [a2 + 0x2c8] = t0\n  9714: a0 = s1 + 0x3be0\n  9718: a1 = s1 + 0x3c00\n  9722: ra = 322, jump @9\n      : @351 [@dyn 161] (gas: 4)\n  9728: a0 = s1 + 0x7ff\n  9732: a0 = a0 + 0x6c1\n  9736: a1 = u64 [s1 + 0x128]\n  9740: ra = 324, jump @2\n      : @352 [@dyn 162] (gas: 31)\n  9746: a0 = s1 + 0x7ff\n  9750: a0 = a0 + 0x131\n  9754: t0 = u64 [a0 + 0x590]\n  9758: t1 = u64 [a0 + 0x598]\n  9762: t2 = u64 [a0 + 0x5a0]\n  9766: a3 = u64 [a0 + 0x5a8]\n  9770: a0 = u64 [s1 + 0x170]\n  9774: a4 = a0 + 0x3\n  9777: a5 = a4 <u a0\n  9780: a1 = u64 [s1 + 0x178]\n  9784: a0 = a1 + a5\n  9787: a1 = a0 <u a1\n  9790: a1 = a5 if a5 == 0\n  9793: a2 = u64 [s1 + 0x190]\n  9797: a1 = a1 + a2\n  9800: a5 = a1 <u a2\n  9803: a2 = u64 [s1 + 0x188]\n  9807: a5 = a5 + a2\n  9810: a2 = s1 + 0x3938\n  9814: u64 [a2 + 0x300] = a5\n  9818: a5 = a2 + 0x200\n  9822: u64 [a5 + 0xf8] = a1\n  9826: u64 [a5 + 0xf0] = a0\n  9830: u64 [a5 + 0xe8] = a4\n  9834: u64 [a2 + 0x320] = a3\n  9838: u64 [a2 + 0x318] = t2\n  9842: u64 [a2 + 0x310] = t1\n  9846: u64 [a2 + 0x308] = t0\n  9850: a0 = s1 + 0x3c20\n  9854: a1 = s1 + 0x3c40\n  9858: ra = 326, jump @9\n      : @353 [@dyn 163] (gas: 4)\n  9864: a0 = s1 + 0x7ff\n  9868: a0 = a0 + 0x6a1\n  9872: a1 = u64 [s1 + 0x130]\n  9876: ra = 328, jump @2\n      : @354 [@dyn 164] (gas: 31)\n  9882: a0 = s1 + 0x7ff\n  9886: a0 = a0 + 0x131\n  9890: t0 = u64 [a0 + 0x570]\n  9894: t1 = u64 [a0 + 0x578]\n  9898: t2 = u64 [a0 + 0x580]\n  9902: a3 = u64 [a0 + 0x588]\n  9906: a0 = u64 [s1 + 0x170]\n  9910: a4 = a0 + 0x4\n  9913: a5 = a4 <u a0\n  9916: a1 = u64 [s1 + 0x178]\n  9920: a0 = a1 + a5\n  9923: a1 = a0 <u a1\n  9926: a1 = a5 if a5 == 0\n  9929: a2 = u64 [s1 + 0x190]\n  9933: a1 = a1 + a2\n  9936: a5 = a1 <u a2\n  9939: a2 = u64 [s1 + 0x188]\n  9943: a5 = a5 + a2\n  9946: a2 = s1 + 0x3938\n  9950: u64 [a2 + 0x340] = a5\n  9954: a5 = a2 + 0x300\n  9958: u64 [a5 + 0x38] = a1\n  9961: u64 [a5 + 0x30] = a0\n  9964: u64 [a5 + 0x28] = a4\n  9967: u64 [a5 + 0x60] = a3\n  9970: u64 [a2 + 0x358] = t2\n  9974: u64 [a2 + 0x350] = t1\n  9978: u64 [a2 + 0x348] = t0\n  9982: a0 = s1 + 0x3c60\n  9986: a1 = s1 + 0x3c80\n  9990: ra = 330, jump @9\n      : @355 [@dyn 165] (gas: 4)\n  9996: a0 = s1 + 0x7ff\n 10000: a0 = a0 + 0x681\n 10004: a1 = u64 [s1 + 0x118]\n 10008: ra = 332, jump @2\n      : @356 [@dyn 166] (gas: 31)\n 10014: a0 = s1 + 0x7ff\n 10018: a0 = a0 + 0x131\n 10022: t0 = u64 [a0 + 0x550]\n 10026: t1 = u64 [a0 + 0x558]\n 10030: t2 = u64 [a0 + 0x560]\n 10034: a3 = u64 [a0 + 0x568]\n 10038: a0 = u64 [s1 + 0x170]\n 10042: a4 = a0 + 0x5\n 10045: a5 = a4 <u a0\n 10048: a1 = u64 [s1 + 0x178]\n 10052: a0 = a1 + a5\n 10055: a1 = a0 <u a1\n 10058: a1 = a5 if a5 == 0\n 10061: a2 = u64 [s1 + 0x190]\n 10065: a1 = a1 + a2\n 10068: a5 = a1 <u a2\n 10071: a2 = u64 [s1 + 0x188]\n 10075: a5 = a5 + a2\n 10078: a2 = s1 + 0x3938\n 10082: u64 [a2 + 0x380] = a5\n 10086: a5 = a2 + 0x300\n 10090: u64 [a5 + 0x78] = a1\n 10093: u64 [a5 + 0x70] = a0\n 10096: u64 [a5 + 0x68] = a4\n 10099: u64 [a5 + 0xa0] = a3\n 10103: u64 [a2 + 0x398] = t2\n 10107: u64 [a2 + 0x390] = t1\n 10111: u64 [a2 + 0x388] = t0\n 10115: a0 = s1 + 0x3ca0\n 10119: a1 = s1 + 0x3cc0\n 10123: ra = 334, jump @9\n      : @357 [@dyn 167] (gas: 6)\n 10129: a0 = sp + 0xffffffffffffffe0\n 10132: a5 = a0 & 0xffffffffffffffe0\n 10135: sp = a5\n 10137: a1 = u64 [s1 + 0x170]\n 10141: a0 = a1 + 0x6\n 10144: t0 = 336, jump @1611\n      : @358 [@dyn 168] (gas: 11)\n 10151: a4 = u64 [s1 + 0x188]\n 10155: a1 = a1 + a4\n 10158: u64 [s1 + 0x198] = a5\n 10162: u64 [a5 + 0x18] = a1\n 10165: u64 [a5 + 0x10] = a3\n 10168: u64 [a5 + 0x8] = a2\n 10171: u64 [a5] = a0\n 10173: a0 = s1 + 0x7ff\n 10177: a0 = a0 + 0x661\n 10181: a1 = u64 [s1 + 0x120]\n 10185: ra = 338, jump @2\n      : @359 [@dyn 169] (gas: 12)\n 10191: a0 = s1 + 0x7ff\n 10195: a0 = a0 + 0x131\n 10199: a1 = u64 [a0 + 0x530]\n 10203: u64 [s1 + 0x180] = a1\n 10207: a1 = u64 [a0 + 0x538]\n 10211: u64 [s1 + 0x168] = a1\n 10215: a1 = u32 [a0 + 0x540]\n 10219: u64 [s1 + 0x160] = a1\n 10223: a0 = s1 + 0x7ff\n 10227: a0 = a0 + 0x641\n 10231: a1 = u64 [s1 + 0x198]\n 10235: ra = 340, jump @6\n      : @360 [@dyn 170] (gas: 18)\n 10241: a1 = s1 + 0x7ff\n 10245: a1 = a1 + 0x131\n 10249: a0 = u32 [a1 + 0x524]\n 10253: a0 = a0 << 0x20\n 10256: a1 = u64 [a1 + 0x528]\n 10260: a2 = u64 [s1 + 0x160]\n 10264: a0 = a0 | a2\n 10267: a2 = s1 + 0x3938\n 10271: a3 = u64 [s1 + 0x168]\n 10275: a4 = a2 + 0x300\n 10279: u64 [a4 + 0xb0] = a3\n 10283: a3 = u64 [s1 + 0x180]\n 10287: u64 [a4 + 0xa8] = a3\n 10291: u64 [a4 + 0xc0] = a1\n 10295: u64 [a4 + 0xb8] = a0\n 10299: a1 = s1 + 0x3ce0\n 10303: a0 = u64 [s1 + 0x198]\n 10307: ra = 342, jump @9\n      : @361 [@dyn 171] (gas: 4)\n 10313: a0 = s1 + 0x7ff\n 10317: a0 = a0 + 0x621\n 10321: a1 = u64 [s1 + 0x108]\n 10325: ra = 344, jump @2\n      : @362 [@dyn 172] (gas: 18)\n 10331: a2 = s1 + 0x7ff\n 10335: a2 = a2 + 0x131\n 10339: a0 = u64 [a2 + 0x508]\n 10343: a1 = u64 [a2 + 0x500]\n 10347: a5 = u64 [a2 + 0x4f8]\n 10351: a4 = u64 [a2 + 0x4f0]\n 10355: a2 = a0 >u 0\n 10357: a3 = a1 >u 0\n 10359: a3 = a2 if a0 != 0\n 10362: a2 = a5 >u 0\n 10364: u64 [s1 + 0x180] = a4\n 10368: a4 = a4 <u 0x4\n 10371: a4 = a4 ^ 0x1\n 10374: u64 [s1 + 0x168] = a5\n 10378: a4 = a2 if a5 != 0\n 10381: a0 = a0 | a1\n 10384: a4 = a3 if a0 != 0\n 10387: jump @364 if a4 == 0\n      : @363 (gas: 1)\n 10390: jump @1224\n      : @364 (gas: 4)\n 10393: a0 = s1 + 0x7ff\n 10397: a0 = a0 + 0x601\n 10401: a1 = u64 [s1 + 0x198]\n 10405: ra = 346, jump @6\n      : @365 [@dyn 173] (gas: 26)\n 10411: a0 = s1 + 0x7ff\n 10415: a0 = a0 + 0x131\n 10419: t0 = u64 [a0 + 0x4d0]\n 10423: a4 = a0 + 0x400\n 10427: a1 = u64 [a4 + 0xd8]\n 10431: a2 = u64 [a4 + 0xe8]\n 10435: a3 = u64 [a4 + 0xe0]\n 10439: a0 = u64 [s1 + 0x180]\n 10443: a4 = a0 >> 0x20\n 10446: a5 = u64 [s1 + 0x168]\n 10450: a5 = a5 << 0x20\n 10453: a4 = a4 | a5\n 10456: a5 = a0 << 0x20\n 10459: a0 = 0xffffff00ffffffff\n 10469: a0 = a0 & a3\n 10472: a0 = a0 | a5\n 10475: a2 = a2 | a4\n 10478: a3 = s1 + 0x3938\n 10482: a4 = a3 + 0x300\n 10486: u64 [a4 + 0xd0] = a1\n 10490: u64 [a3 + 0x3c8] = t0\n 10494: u64 [a4 + 0xe0] = a2\n 10498: u64 [a4 + 0xd8] = a0\n 10502: a1 = s1 + 0x3d00\n 10506: a0 = u64 [s1 + 0x198]\n 10510: ra = 348, jump @9\n      : @366 [@dyn 174] (gas: 4)\n 10516: a0 = s1 + 0x7ff\n 10520: a0 = a0 + 0x5e1\n 10524: a1 = u64 [s1 + 0x110]\n 10528: ra = 350, jump @2\n      : @367 [@dyn 175] (gas: 31)\n 10534: a0 = s1 + 0x7ff\n 10538: a0 = a0 + 0x131\n 10542: t0 = u64 [a0 + 0x4b0]\n 10546: t1 = u64 [a0 + 0x4b8]\n 10550: t2 = u64 [a0 + 0x4c0]\n 10554: a3 = u64 [a0 + 0x4c8]\n 10558: a0 = u64 [s1 + 0x170]\n 10562: a4 = a0 + 0x7\n 10565: a5 = a4 <u a0\n 10568: a1 = u64 [s1 + 0x178]\n 10572: a0 = a1 + a5\n 10575: a1 = a0 <u a1\n 10578: a1 = a5 if a5 == 0\n 10581: a2 = u64 [s1 + 0x190]\n 10585: a1 = a1 + a2\n 10588: a5 = a1 <u a2\n 10591: a2 = u64 [s1 + 0x188]\n 10595: a5 = a5 + a2\n 10598: a2 = s1 + 0x3938\n 10602: u64 [a2 + 0x400] = a5\n 10606: a5 = a2 + 0x300\n 10610: u64 [a5 + 0xf8] = a1\n 10614: u64 [a5 + 0xf0] = a0\n 10618: u64 [a5 + 0xe8] = a4\n 10622: u64 [a2 + 0x420] = a3\n 10626: u64 [a2 + 0x418] = t2\n 10630: u64 [a2 + 0x410] = t1\n 10634: u64 [a2 + 0x408] = t0\n 10638: a0 = s1 + 0x3d20\n 10642: a1 = s1 + 0x3d40\n 10646: ra = 352, jump @9\n      : @368 [@dyn 176] (gas: 7)\n 10652: a0 = sp + 0xffffffffffffffe0\n 10655: a4 = a0 & 0xffffffffffffffe0\n 10658: u64 [s1 + 0x198] = a4\n 10662: sp = a4\n 10664: a1 = u64 [s1 + 0x170]\n 10668: a0 = a1 + 0x8\n 10671: t0 = 354, jump @1611\n      : @369 [@dyn 177] (gas: 10)\n 10678: a5 = u64 [s1 + 0x188]\n 10682: a1 = a1 + a5\n 10685: u64 [a4 + 0x18] = a1\n 10688: u64 [a4 + 0x10] = a3\n 10691: u64 [a4 + 0x8] = a2\n 10694: u64 [a4] = a0\n 10696: a0 = s1 + 0x7ff\n 10700: a0 = a0 + 0x5c1\n 10704: a1 = u64 [s1 + 0x100]\n 10708: ra = 356, jump @2\n      : @370 [@dyn 178] (gas: 16)\n 10714: a3 = s1 + 0x7ff\n 10718: a3 = a3 + 0x131\n 10722: a4 = a3 + 0x400\n 10726: a0 = u64 [a4 + 0xa0]\n 10730: a1 = u64 [a4 + 0xa8]\n 10734: a2 = u64 [a4 + 0x98]\n 10738: a3 = u64 [a4 + 0x90]\n 10742: a1 = a1 | a2\n 10745: a0 = a0 | a3\n 10748: a0 = a0 | a1\n 10751: a0 = a0 >u 0\n 10753: u64 [s1 + 0x190] = a0\n 10757: a0 = s1 + 0x7ff\n 10761: a0 = a0 + 0x5a1\n 10765: a1 = u64 [s1 + 0x198]\n 10769: ra = 358, jump @6\n      : @371 [@dyn 179] (gas: 19)\n 10775: a3 = s1 + 0x7ff\n 10779: a3 = a3 + 0x131\n 10783: a4 = a3 + 0x400\n 10787: a0 = u64 [a4 + 0x70]\n 10790: a1 = u64 [a4 + 0x78]\n 10793: a2 = u64 [a4 + 0x88]\n 10797: a3 = u64 [a4 + 0x80]\n 10801: a0 = a0 & 0xffffffffffffff00\n 10805: a4 = u64 [s1 + 0x190]\n 10809: a0 = a0 | a4\n 10812: a4 = s1 + 0x3938\n 10816: a5 = a4 + 0x400\n 10820: u64 [a5 + 0x40] = a2\n 10823: u64 [a5 + 0x38] = a3\n 10826: u64 [a5 + 0x30] = a1\n 10829: u64 [a5 + 0x28] = a0\n 10832: a1 = s1 + 0x3d60\n 10836: a0 = u64 [s1 + 0x198]\n 10840: ra = 360, jump @9\n      : @372 [@dyn 180] (gas: 9)\n 10846: a1 = s1 + 0x3938\n 10850: u64 [a1 + 1120] = 0\n 10854: u64 [a1 + 1112] = 0\n 10858: u64 [a1 + 1104] = 0\n 10862: u64 [a1 + 1096] = 0x1\n 10867: a0 = s1 + 0x7ff\n 10871: a0 = a0 + 0x581\n 10875: a1 = s1 + 0x3d80\n 10879: ra = 362, jump @6\n      : @373 [@dyn 181] (gas: 15)\n 10885: a1 = s1 + 0x7ff\n 10889: a1 = a1 + 0x131\n 10893: a2 = a1 + 0x400\n 10897: a0 = u64 [a2 + 0x68]\n 10900: u64 [s1 + 0x178] = a0\n 10904: a0 = u64 [a2 + 0x60]\n 10907: u64 [s1 + 0x170] = a0\n 10911: a0 = u64 [a2 + 0x58]\n 10914: u64 [s1 + 0x168] = a0\n 10918: a0 = u64 [a2 + 0x50]\n 10921: u64 [s1 + 0x160] = a0\n 10925: a0 = s1 + 0x7ff\n 10929: a0 = a0 + 0x561\n 10933: a1 = 0x40\n 10936: ra = 364, jump @2\n      : @374 [@dyn 182] (gas: 17)\n 10942: a0 = s1 + 0x7ff\n 10946: a0 = a0 + 0x131\n 10950: a2 = a0 + 0x400\n 10954: a1 = u64 [a2 + 0x48]\n 10957: u64 [s1 + 0x190] = a1\n 10961: a1 = u64 [a2 + 0x40]\n 10964: u64 [s1 + 0x188] = a1\n 10968: a1 = u64 [a2 + 0x38]\n 10971: u64 [s1 + 0x180] = a1\n 10975: a1 = u64 [a2 + 0x30]\n 10978: u64 [s1 + 0x198] = a1\n 10982: a0 = s1 + 0x4000\n 10986: i32 a0 = a0 + 0xfffffffffffffda0\n 10990: ra = 0x16e\n 10994: ecalli 8 // 'now'\n 10996: t0 = 0x170\n 11000: jump @1630\n      : @375 [@dyn 183] (gas: 1)\n 11004: t0 = 368, jump @1630\n      : @376 [@dyn 184] (gas: 46)\n 11011: a0 = u64 [a4 + 0x68]\n 11014: a1 = u64 [a4 + 0x70]\n 11017: a2 = u64 [a4 + 0x78]\n 11020: a3 = u64 [a4 + 0x80]\n 11024: a4 = u64 [s1 + 0x140]\n 11028: a5 = s1 + 0x7ff\n 11032: a5 = a5 + 0x131\n 11036: u64 [a5 + 0x3a8] = a4\n 11040: a4 = u64 [s1 + 0x148]\n 11044: u64 [a5 + 0x3a0] = a4\n 11048: a4 = u64 [s1 + 0x150]\n 11052: u64 [a5 + 0x398] = a4\n 11056: a4 = u64 [s1 + 0x158]\n 11060: u64 [a5 + 0x390] = a4\n 11064: a4 = u64 [s1 + 0x1a0]\n 11068: u64 [a5 + 0x3c8] = a4\n 11072: a4 = u64 [s1 + 0x1a8]\n 11076: u64 [a5 + 0x3c0] = a4\n 11080: a4 = u64 [s1 + 0x1b0]\n 11084: u64 [a5 + 0x3b8] = a4\n 11088: a4 = u64 [s1 + 0x1b8]\n 11092: u64 [a5 + 0x3b0] = a4\n 11096: a4 = a5 + 0x300\n 11100: u64 [a4 + 0xe8] = a3\n 11104: u64 [a4 + 0xe0] = a2\n 11108: u64 [a4 + 0xd8] = a1\n 11112: u64 [a4 + 0xd0] = a0\n 11116: a0 = u64 [s1 + 0x190]\n 11120: u64 [a5 + 0x408] = a0\n 11124: a0 = u64 [s1 + 0x188]\n 11128: u64 [a5 + 0x400] = a0\n 11132: a0 = u64 [s1 + 0x180]\n 11136: u64 [a4 + 0xf8] = a0\n 11140: a0 = s1 + 0x7ff\n 11144: a0 = a0 + 0x541\n 11148: a1 = s1 + 0x7ff\n 11152: a1 = a1 + 0x521\n 11156: a2 = s1 + 0x7ff\n 11160: a2 = a2 + 0x501\n 11164: a3 = s1 + 0x7ff\n 11168: a3 = a3 + 0x4e1\n 11172: a4 = s1 + 0x7ff\n 11176: a4 = a4 + 0x4c1\n 11180: t0 = u64 [s1 + 0x198]\n 11184: u64 [a5 + 0x3f0] = t0\n 11188: ra = 370, jump @1300\n      : @377 [@dyn 185] (gas: 14)\n 11194: a4 = s1 + 0x100\n 11198: a1 = u64 [a4 + 0x80]\n 11202: a2 = a1\n 11204: a0 = u64 [a4 + 0x90]\n 11208: a0 = a0 | a1\n 11211: a3 = u64 [a4 + 0x88]\n 11215: a1 = u64 [a4 + 0x98]\n 11219: a1 = a1 | a3\n 11222: a1 = a1 | a0\n 11225: a1 = a1 >> 0x20\n 11228: a0 = a0 | a3\n 11231: a0 = a0 << 0x20\n 11234: a0 = a0 | a1\n 11237: jump @379 if a0 == 0\n      : @378 (gas: 1)\n 11240: jump @993\n      : @379 (gas: 36)\n 11243: t0 = a3\n 11245: a1 = s1 + 0x7ff\n 11249: a1 = a1 + 0x131\n 11253: a4 = a1 + 0x400\n 11257: a0 = u64 [a4 + 0x18]\n 11260: a3 = u64 [a4 + 0x28]\n 11263: u64 [s1 + 0x1b8] = a3\n 11267: t1 = u64 [a1 + 0x410]\n 11271: a3 = u64 [a4 + 0x20]\n 11274: ra = a0 ^ a2\n 11277: a5 = a0 <u a2\n 11280: t2 = u64 [s1 + 0x198]\n 11284: a1 = t1 <u t2\n 11287: a5 = a1 if ra == 0\n 11290: a4 = a3 - t0\n 11293: ra = a4 - a5\n 11296: a4 = a4 <u a5\n 11299: u64 [s1 + 0x1b0] = a4\n 11303: a3 = a3 <u t0\n 11306: a5 = u64 [s1 + 0x190]\n 11310: a4 = u64 [s1 + 0x1b8]\n 11314: a5 = a4 - a5\n 11317: a5 = a5 - a3\n 11320: a3 = u64 [s1 + 0x1b0]\n 11324: a5 = a5 - a3\n 11327: a0 = a0 - a2\n 11330: a0 = a0 - a1\n 11333: a1 = t1 - t2\n 11336: a0 = a0 | a5\n 11339: a3 = a1 | ra\n 11342: a3 = a3 | a0\n 11345: a0 = a0 | ra\n 11348: a3 = a3 >> 0x20\n 11351: a0 = a0 << 0x20\n 11354: a0 = a0 | a3\n 11357: jump @381 if a0 == 0\n      : @380 (gas: 1)\n 11360: jump @993\n      : @381 (gas: 26)\n 11363: a0 = u64 [0x200f8]\n 11368: a2 = u64 [0x20100]\n 11373: a4 = s1 + 0x7ff\n 11377: a4 = a4 + 0x131\n 11381: a5 = a4 + 0x300\n 11385: u64 [a5 + 0x88] = a0\n 11389: u64 [a5 + 0x80] = a2\n 11393: a0 = u64 [0x20108]\n 11398: a2 = u64 [0x20110]\n 11403: a4 = s1 + 0x100\n 11407: a3 = u64 [a4 + 0x60]\n 11410: u64 [a5 + 0x50] = a3\n 11413: a3 = u64 [a4 + 0x68]\n 11416: u64 [a5 + 0x58] = a3\n 11419: u64 [a5 + 0x78] = a0\n 11422: u64 [a5 + 0x70] = a2\n 11425: a0 = u64 [a4 + 0x70]\n 11428: u64 [a5 + 0x60] = a0\n 11431: a2 = s1 + 0x7ff\n 11435: a2 = a2 + 0x4a1\n 11439: a3 = s1 + 0x7ff\n 11443: a3 = a3 + 0x481\n 11447: a0 = u64 [a4 + 0x78]\n 11450: u64 [a5 + 0x68] = a0\n 11453: a0 = u64 [a4 + 0x98]\n 11457: ra = 372, jump @10\n      : @382 [@dyn 186] (gas: 4)\n 11463: a0 = s1 + 0x7ff\n 11467: a0 = a0 + 0x461\n 11471: a1 = 0x40\n 11474: ra = 374, jump @2\n      : @383 [@dyn 187] (gas: 8)\n 11480: a3 = s1 + 0x7ff\n 11484: a3 = a3 + 0x131\n 11488: a5 = a3 + 0x300\n 11492: a0 = u64 [a5 + 0x48]\n 11495: a1 = u64 [a5 + 0x40]\n 11498: a2 = u64 [a5 + 0x38]\n 11501: a4 = u64 [a5 + 0x30]\n 11504: t0 = 376, jump @1577\n      : @384 [@dyn 188] (gas: 1)\n 11511: jump @386 if a0 == 0\n      : @385 (gas: 1)\n 11514: jump @993\n      : @386 (gas: 18)\n 11517: a3 = a4\n 11519: a0 = s1 + 0x7ff\n 11523: a0 = a0 + 0x131\n 11527: a5 = s1 + 0x100\n 11531: a1 = u64 [a5 + 0x60]\n 11534: u64 [a0 + 0x310] = a1\n 11538: a1 = u64 [a5 + 0x68]\n 11541: u64 [a0 + 0x318] = a1\n 11545: a1 = u64 [a5 + 0x70]\n 11548: u64 [a0 + 0x320] = a1\n 11552: a1 = s1 + 0x7ff\n 11556: a1 = a1 + 0x441\n 11560: a2 = u64 [a5 + 0x78]\n 11563: u64 [a0 + 0x328] = a2\n 11567: a0 = a4\n 11569: u64 [a5 + 0xb8] = a3\n 11573: ra = 0x2ca\n 11577: jump @4\n      : @387 (gas: 1)\n 11580: t0 = 378, jump @1633\n      : @388 [@dyn 189] (gas: 4)\n 11587: i32 a0 = a0 + 0x260\n 11591: ra = 0x17c\n 11595: ecalli 15 // 'value_transferred'\n 11597: fallthrough\n      : @389 [@dyn 190] (gas: 3)\n 11598: a3 = s1 + 0x4138\n 11602: a4 = a3 + 0x100\n 11606: t0 = 382, jump @1608\n      : @390 [@dyn 191] (gas: 1)\n 11613: jump @392 if a0 == 0\n      : @391 (gas: 1)\n 11616: jump @1158\n      : @392 (gas: 1)\n 11619: t0 = 384, jump @1625\n      : @393 [@dyn 192] (gas: 1)\n 11626: jump @395 if a1 <u a0\n      : @394 (gas: 1)\n 11629: jump @1159\n      : @395 (gas: 21)\n 11632: a0 = s1 + 0x4000\n 11636: i32 a0 = a0 + 0x280\n 11640: a1 = 0x4\n 11643: ecalli 2 // 'call_data_load'\n 11645: a0 = s1 + 0x4138\n 11649: a2 = a0 + 0x100\n 11653: a1 = u64 [a2 + 0x60]\n 11656: u64 [s1 + 0xd0] = a1\n 11660: a1 = u64 [a2 + 0x58]\n 11663: u64 [s1 + 0xd8] = a1\n 11667: a1 = u64 [a2 + 0x50]\n 11670: u64 [s1 + 0xe0] = a1\n 11674: a1 = u64 [a2 + 0x48]\n 11677: u64 [s1 + 0xe8] = a1\n 11681: u64 [a0 + 384] = 0\n 11685: u64 [a0 + 376] = 0\n 11689: u64 [a0 + 368] = 0\n 11693: u64 [a0 + 360] = 0\n 11697: a0 = s1 + 0x2740\n 11701: a1 = s1 + 0x42a0\n 11705: ra = 386, jump @6\n      : @396 [@dyn 193] (gas: 14)\n 11711: a0 = s1 + 0x2138\n 11715: a1 = u64 [a0 + 0x610]\n 11719: u64 [s1 + 0x1b8] = a1\n 11723: a1 = u64 [a0 + 0x608]\n 11727: u64 [s1 + 0x1b0] = a1\n 11731: a0 = u32 [a0 + 0x618]\n 11735: u64 [s1 + 0x1a8] = a0\n 11739: a0 = 0x301a0\n 11744: u64 [s1 + 0x1a0] = a0\n 11748: i32 a0 = a0 + 0\n 11750: ra = 0x184\n 11754: ecalli 4 // 'caller'\n 11756: t0 = 0x186\n 11760: jump @1571\n      : @397 [@dyn 194] (gas: 1)\n 11764: t0 = 390, jump @1571\n      : @398 [@dyn 195] (gas: 7)\n 11771: a1 = s1 + 0x2138\n 11775: u64 [a1 + 1536] = 0\n 11779: u64 [a1 + 1528] = 0\n 11783: u64 [a1 + 0x5e8] = a0\n 11787: a0 = s1 + 0x2720\n 11791: u64 [a1 + 1520] = 0\n 11795: ra = 392, jump @1353\n      : @399 [@dyn 196] (gas: 13)\n 11801: a0 = u64 [s1 + 0xd0]\n 11805: a2 = s1 + 0x2138\n 11809: a3 = a2 + 0x500\n 11813: u64 [a3 + 0xe0] = a0\n 11817: a0 = u64 [s1 + 0xd8]\n 11821: u64 [a3 + 0xd8] = a0\n 11825: a0 = u64 [s1 + 0xe0]\n 11829: u64 [a3 + 0xd0] = a0\n 11833: a1 = s1 + 0x2700\n 11837: a0 = u64 [s1 + 0xe8]\n 11841: u64 [a3 + 0xc8] = a0\n 11845: a0 = 0\n 11847: ra = 394, jump @4\n      : @400 [@dyn 197] (gas: 9)\n 11853: a0 = s1 + 0x2138\n 11857: u64 [a0 + 1472] = 0\n 11861: u64 [a0 + 1464] = 0\n 11865: u64 [a0 + 1456] = 0\n 11869: a3 = a0\n 11871: a0 = 0x20\n 11874: a1 = s1 + 0x26e0\n 11878: u64 [a3 + 1448] = 0x2\n 11883: ra = 396, jump @4\n      : @401 [@dyn 198] (gas: 3)\n 11889: a1 = 0x20194\n 11894: a0 = i32 [0x20194]\n 11899: jump @403 if a0 >u 63\n      : @402 (gas: 3)\n 11903: u32 [0x20194] = 0x40\n 11909: t0 = 0x18e\n 11913: jump @1603\n      : @403 (gas: 1)\n 11917: t0 = 398, jump @1603\n      : @404 [@dyn 199] (gas: 10)\n 11924: a0 = 0x201a0\n 11929: i32 a0 = a0 + 0\n 11931: u64 [s1 + 0x128] = a1\n 11935: i32 a2 = a2 + 0\n 11937: a1 = 0x40\n 11940: u64 [s1 + 0x130] = a0\n 11944: ra = 0x190\n 11948: ecalli 7 // 'hash_keccak_256'\n 11950: t0 = 0x192\n 11954: jump @1597\n      : @405 [@dyn 200] (gas: 1)\n 11958: t0 = 402, jump @1597\n      : @406 [@dyn 201] (gas: 8)\n 11965: a5 = a4 + 0x100\n 11969: u64 [a5 + 0xa0] = a3\n 11973: u64 [a5 + 0x98] = a2\n 11977: u64 [a5 + 0x90] = a1\n 11981: u64 [a5 + 0x88] = a0\n 11985: a0 = s1 + 0x26c0\n 11989: a1 = s1 + 0x42c0\n 11993: ra = 404, jump @6\n      : @407 [@dyn 202] (gas: 25)\n 11999: a4 = s1 + 0x2138\n 12003: a0 = u64 [a4 + 0x5a0]\n 12007: a1 = u64 [a4 + 0x590]\n 12011: a2 = u64 [a4 + 0x588]\n 12015: a3 = u64 [a4 + 0x598]\n 12019: a5 = u64 [s1 + 0xd0]\n 12023: a0 = a0 ^ a5\n 12026: a5 = u64 [s1 + 0xe0]\n 12030: a1 = a1 ^ a5\n 12033: a0 = a0 | a1\n 12036: a1 = u64 [s1 + 0xd8]\n 12040: a1 = a1 ^ a3\n 12043: a3 = u64 [s1 + 0xe8]\n 12047: a2 = a2 ^ a3\n 12050: a1 = a1 | a2\n 12053: a0 = a0 | a1\n 12056: a0 = a0 <u 0x1\n 12059: u64 [a4 + 1408] = 0\n 12063: u64 [a4 + 1400] = 0\n 12067: u64 [a4 + 0x568] = a0\n 12071: a0 = s1 + 0x26a0\n 12075: u64 [a4 + 1392] = 0\n 12079: ra = 0x196\n 12083: t0 = 0x610\n 12087: jump @1586\n      : @408 [@dyn 203] (gas: 13)\n 12091: a0 = s1 + 0x2138\n 12095: a1 = u64 [s1 + 0xd0]\n 12099: a3 = a0 + 0x500\n 12103: u64 [a3 + 0x60] = a1\n 12106: a1 = u64 [s1 + 0xd8]\n 12110: u64 [a3 + 0x58] = a1\n 12113: a1 = u64 [s1 + 0xe0]\n 12117: u64 [a3 + 0x50] = a1\n 12120: a1 = s1 + 0x2680\n 12124: a2 = u64 [s1 + 0xe8]\n 12128: u64 [a3 + 0x48] = a2\n 12131: a0 = 0\n 12133: ra = 408, jump @4\n      : @409 [@dyn 204] (gas: 9)\n 12139: a1 = s1 + 0x2138\n 12143: u64 [a1 + 1344] = 0\n 12147: u64 [a1 + 1336] = 0\n 12151: u64 [a1 + 1320] = 0x2\n 12156: a2 = a1\n 12158: a0 = 0x20\n 12161: a1 = s1 + 0x2660\n 12165: u64 [a2 + 1328] = 0\n 12169: ra = 410, jump @4\n      : @410 [@dyn 205] (gas: 3)\n 12175: a1 = u64 [s1 + 0x128]\n 12179: a0 = i32 [a1]\n 12181: jump @412 if a0 >u 63\n      : @411 (gas: 2)\n 12185: u32 [a1 + 0] = 0x40\n 12188: fallthrough\n      : @412 (gas: 4)\n 12189: a0 = sp + 0xffffffffffffffe0\n 12192: a0 = a0 & 0xffffffffffffffe0\n 12195: u64 [s1 + 0x1b8] = a0\n 12199: t0 = 412, jump @1602\n      : @413 [@dyn 206] (gas: 32)\n 12206: ecalli 7 // 'hash_keccak_256'\n 12208: a3 = u64 [s1 + 0x1b8]\n 12212: a0 = u64 [a3]\n 12214: a1 = u64 [a3 + 0x8]\n 12217: a2 = u64 [a3 + 0x10]\n 12220: a3 = u64 [a3 + 0x18]\n 12223: t0 = reverse a0\n 12225: a5 = reverse a1\n 12227: a2 = reverse a2\n 12229: a3 = reverse a3\n 12231: a0 = sp + 0xffffffffffffffe0\n 12234: a1 = a0 & 0xffffffffffffffe0\n 12237: sp = a1\n 12239: t1 = a3 + 0x6\n 12242: u64 [s1 + 0x198] = a3\n 12246: a4 = t1 <u a3\n 12249: a0 = a2 + a4\n 12252: u64 [s1 + 0x1a0] = a2\n 12256: a3 = a0 <u a2\n 12259: a3 = a4 if a4 == 0\n 12262: a3 = a3 + a5\n 12265: u64 [s1 + 0x1a8] = a5\n 12269: a2 = a3 <u a5\n 12272: u64 [s1 + 0x1b0] = t0\n 12276: a2 = a2 + t0\n 12279: u64 [a1 + 0x8] = a0\n 12282: u64 [a1] = t1\n 12284: u64 [a1 + 0x10] = a3\n 12287: u64 [a1 + 0x18] = a2\n 12290: a0 = s1 + 0x2640\n 12294: u64 [s1 + 0x1b8] = a1\n 12298: ra = 414, jump @6\n      : @414 [@dyn 207] (gas: 3)\n 12304: t0 = 0x1a0\n 12308: a2 = s1 + 0x2138\n 12312: fallthrough\n      : @415 [@dyn 208] (gas: 2)\n 12313: a0 = u8 [a2 + 0x51c]\n 12317: jump @417 if a0 <=u 3\n      : @416 (gas: 1)\n 12321: jump @1160\n      : @417 (gas: 10)\n 12324: a0 = a0 + 0xfffffffffffffffd\n 12327: a0 = a0 >u 0\n 12329: u64 [a2 + 1280] = 0\n 12333: u64 [a2 + 1272] = 0\n 12337: u64 [a2 + 0x4e8] = a0\n 12341: a0 = s1 + 0x2620\n 12345: u64 [a2 + 1264] = 0\n 12349: ra = 0x1a2\n 12353: t0 = 0x62e\n 12357: jump @1586\n      : @418 [@dyn 209] (gas: 3)\n 12361: a0 = s1 + 0x2600\n 12365: a1 = u64 [s1 + 0x1b8]\n 12369: ra = 420, jump @6\n      : @419 [@dyn 210] (gas: 2)\n 12375: a0 = 0x2000\n 12379: t0 = 422, jump @1607\n      : @420 [@dyn 211] (gas: 1)\n 12386: t0 = 424, jump @1605\n      : @421 [@dyn 212] (gas: 8)\n 12393: a5 = a4 + 0x100\n 12397: u64 [a5 + 0xc0] = a3\n 12401: u64 [a5 + 0xb0] = a1\n 12405: u64 [a5 + 0xa8] = a0\n 12409: u64 [a5 + 0xb8] = a2\n 12413: a1 = s1 + 0x42e0\n 12417: a0 = u64 [s1 + 0x1b8]\n 12421: ra = 426, jump @9\n      : @422 [@dyn 213] (gas: 23)\n 12427: a0 = sp + 0xffffffffffffffe0\n 12430: a5 = a0 & 0xffffffffffffffe0\n 12433: sp = a5\n 12435: a1 = u64 [s1 + 0x198]\n 12439: a0 = a1 + 0x8\n 12442: a1 = a0 <u a1\n 12445: a3 = u64 [s1 + 0x1a0]\n 12449: a2 = a3 + a1\n 12452: a3 = a2 <u a3\n 12455: a3 = a1 if a1 == 0\n 12458: a1 = u64 [s1 + 0x1a8]\n 12462: a3 = a3 + a1\n 12465: a1 = a3 <u a1\n 12468: a4 = u64 [s1 + 0x1b0]\n 12472: a4 = a4 + a1\n 12475: a1 = a5\n 12477: u64 [s1 + 0x1b8] = a5\n 12481: u64 [a5 + 0x18] = a4\n 12484: u64 [a5 + 0x10] = a3\n 12487: u64 [a5 + 0x8] = a2\n 12490: u64 [a5] = a0\n 12492: a0 = s1 + 0x25e0\n 12496: ra = 428, jump @6\n      : @423 [@dyn 214] (gas: 2)\n 12502: a0 = 0x2000\n 12506: t0 = 430, jump @1607\n      : @424 [@dyn 215] (gas: 15)\n 12513: a0 = u64 [a4 + 0xa8]\n 12517: a1 = u64 [a4 + 0xb0]\n 12521: a2 = u64 [a4 + 0xc0]\n 12525: a3 = u64 [a4 + 0xb8]\n 12529: a0 = a0 & 0xffffffffffffff00\n 12533: a0 = a0 | 0x1\n 12536: a4 = s1 + 0x4138\n 12540: a5 = a4 + 0x100\n 12544: u64 [a5 + 0xe0] = a2\n 12548: u64 [a5 + 0xd8] = a3\n 12552: u64 [a5 + 0xd0] = a1\n 12556: u64 [a5 + 0xc8] = a0\n 12560: a1 = s1 + 0x4300\n 12564: a0 = u64 [s1 + 0x1b8]\n 12568: ra = 432, jump @9\n      : @425 [@dyn 216] (gas: 13)\n 12574: a0 = u64 [s1 + 0xd0]\n 12578: a2 = s1 + 0x2138\n 12582: a3 = a2 + 0x400\n 12586: u64 [a3 + 0xa0] = a0\n 12590: a0 = u64 [s1 + 0xd8]\n 12594: u64 [a3 + 0x98] = a0\n 12598: a0 = u64 [s1 + 0xe0]\n 12602: u64 [a3 + 0x90] = a0\n 12606: a1 = s1 + 0x25c0\n 12610: a0 = u64 [s1 + 0xe8]\n 12614: u64 [a3 + 0x88] = a0\n 12618: a0 = 0\n 12620: ra = 434, jump @4\n      : @426 [@dyn 217] (gas: 9)\n 12626: a1 = s1 + 0x2138\n 12630: u64 [a1 + 1152] = 0\n 12634: u64 [a1 + 1144] = 0\n 12638: u64 [a1 + 1128] = 0x4\n 12643: a2 = a1\n 12645: a0 = 0x20\n 12648: a1 = s1 + 0x25a0\n 12652: u64 [a2 + 1136] = 0\n 12656: ra = 436, jump @4\n      : @427 [@dyn 218] (gas: 1)\n 12662: t0 = 438, jump @1620\n      : @428 [@dyn 219] (gas: 3)\n 12669: a2 = u64 [s1 + 0x128]\n 12673: a0 = i32 [a2]\n 12675: jump @430 if a0 >u 63\n      : @429 (gas: 2)\n 12679: u32 [a2 + 0] = 0x40\n 12682: fallthrough\n      : @430 (gas: 4)\n 12683: a0 = sp + 0xffffffffffffffe0\n 12686: a0 = a0 & 0xffffffffffffffe0\n 12689: u64 [s1 + 0x1b0] = a0\n 12693: t0 = 440, jump @1602\n      : @431 [@dyn 220] (gas: 4)\n 12700: ra = 0x1ba\n 12704: ecalli 7 // 'hash_keccak_256'\n 12706: t0 = 0x1bc\n 12710: jump @1575\n      : @432 [@dyn 221] (gas: 1)\n 12714: t0 = 444, jump @1575\n      : @433 [@dyn 222] (gas: 3)\n 12721: a0 = s1 + 0x2580\n 12725: a1 = 0x40\n 12728: ra = 446, jump @2\n      : @434 [@dyn 223] (gas: 13)\n 12734: a0 = s1 + 0x2138\n 12738: a2 = a0 + 0x400\n 12742: a1 = u64 [a2 + 0x60]\n 12745: u64 [s1 + 0xc8] = a1\n 12749: a1 = u64 [a2 + 0x58]\n 12752: u64 [s1 + 0xc0] = a1\n 12756: a1 = u64 [a2 + 0x50]\n 12759: u64 [s1 + 0xb8] = a1\n 12763: a0 = u64 [a2 + 0x48]\n 12766: u64 [s1 + 0xf0] = a0\n 12770: a0 = s1 + 0x2560\n 12774: a1 = u64 [s1 + 0x1b8]\n 12778: ra = 448, jump @6\n      : @435 [@dyn 224] (gas: 6)\n 12784: a0 = u64 [s1 + 0xf0]\n 12788: a1 = u64 [s1 + 0xc8]\n 12792: a2 = u64 [s1 + 0xb8]\n 12796: a2 = a2 | a1\n 12799: a3 = u64 [s1 + 0xc0]\n 12803: t0 = 450, jump @1601\n      : @436 [@dyn 225] (gas: 1)\n 12810: jump @438 if a1 == 0\n      : @437 (gas: 1)\n 12813: jump @993\n      : @438 (gas: 16)\n 12816: a5 = s1 + 0x2138\n 12820: a2 = u64 [a5 + 0x440]\n 12824: a1 = u64 [a5 + 0x438]\n 12828: a3 = u64 [a5 + 0x430]\n 12832: a4 = u64 [a5 + 0x428]\n 12836: u64 [s1 + 0x108] = a4\n 12840: u64 [a5 + 0x408] = a4\n 12844: u64 [s1 + 0x110] = a3\n 12848: a4 = a5 + 0x400\n 12852: u64 [a4 + 0x10] = a3\n 12855: u64 [s1 + 0x118] = a1\n 12859: u64 [a4 + 0x18] = a1\n 12862: a1 = s1 + 0x2540\n 12866: u64 [s1 + 0x120] = a2\n 12870: u64 [a4 + 0x20] = a2\n 12873: ra = 452, jump @4\n      : @439 [@dyn 226] (gas: 13)\n 12879: a0 = u64 [s1 + 0x198]\n 12883: a1 = s1 + 0x2138\n 12887: u64 [a1 + 0x400] = a0\n 12891: a0 = u64 [s1 + 0x1a0]\n 12895: u64 [a1 + 0x3f8] = a0\n 12899: a0 = u64 [s1 + 0x1a8]\n 12903: u64 [a1 + 0x3f0] = a0\n 12907: a2 = a1\n 12909: a1 = s1 + 0x2520\n 12913: a0 = u64 [s1 + 0x1b0]\n 12917: u64 [a2 + 0x3e8] = a0\n 12921: a0 = 0\n 12923: ra = 454, jump @4\n      : @440 [@dyn 227] (gas: 7)\n 12929: a0 = sp + 0xffffffffffffffe0\n 12932: a0 = a0 & 0xffffffffffffffe0\n 12935: u64 [s1 + 0x100] = a0\n 12939: sp = a0\n 12941: a2 = u64 [s1 + 0x128]\n 12945: a0 = i32 [a2]\n 12947: jump @442 if a0 >u 31\n      : @441 (gas: 2)\n 12951: u32 [a2 + 0] = 0x20\n 12954: fallthrough\n      : @442 (gas: 3)\n 12955: a0 = 0xffffffff\n 12965: u64 [s1 + 0x138] = a0\n 12969: t0 = 456, jump @1604\n      : @443 [@dyn 228] (gas: 36)\n 12976: a0 = u64 [s1 + 0x130]\n 12980: ecalli 7 // 'hash_keccak_256'\n 12982: u64 [s1 + 408] = 0\n 12986: u64 [s1 + 400] = 0\n 12990: a5 = 0\n 12992: u64 [s1 + 392] = 0\n 12996: a3 = u64 [s1 + 0x1b8]\n 13000: a0 = u64 [a3 + 0x18]\n 13003: a1 = u64 [a3 + 0x10]\n 13006: a2 = u64 [a3 + 0x8]\n 13009: a3 = u64 [a3]\n 13011: t0 = reverse a0\n 13013: a0 = reverse a1\n 13015: a4 = reverse a2\n 13017: a2 = reverse a3\n 13019: a1 = u64 [s1 + 0x100]\n 13023: a3 = a2\n 13025: u64 [a1 + 0x18] = a2\n 13028: u64 [s1 + 0x150] = a4\n 13032: u64 [a1 + 0x10] = a4\n 13035: a2 = a0\n 13037: u64 [a1 + 0x8] = a0\n 13040: u64 [s1 + 0x158] = t0\n 13044: u64 [a1] = t0\n 13046: a0 = 0xffffffe0\n 13056: u64 [s1 + 0xf8] = a0\n 13060: a0 = u64 [s1 + 0xf0]\n 13064: a4 = s1 + 0x100\n 13068: u64 [a4 + 0xb8] = a0\n 13072: a0 = u64 [s1 + 0xb8]\n 13076: u64 [a4 + 0xb0] = a0\n 13080: a0 = u64 [s1 + 0xc0]\n 13084: u64 [a4 + 0xa8] = a0\n 13088: a0 = u64 [s1 + 0xc8]\n 13092: u64 [a4 + 0xa0] = a0\n 13096: fallthrough\n      : @444 (gas: 37)\n 13097: u64 [s1 + 0x168] = a3\n 13101: u64 [s1 + 0x170] = a2\n 13105: t1 = u64 [s1 + 0x1b8]\n 13109: t2 = t1 + 0x20\n 13112: a0 = u64 [s1 + 0x108]\n 13116: a2 = u64 [s1 + 0x198]\n 13120: a0 = a2 <u a0\n 13123: a2 = u64 [s1 + 0x110]\n 13127: a4 = u64 [s1 + 0x190]\n 13131: a3 = a4 ^ a2\n 13134: a2 = a4 <u a2\n 13137: a2 = a0 if a3 == 0\n 13140: a4 = u64 [s1 + 0x118]\n 13144: a0 = a5 <u a4\n 13147: a3 = u64 [s1 + 0x120]\n 13151: t0 = u64 [s1 + 0x188]\n 13155: ra = t0 ^ a3\n 13158: a3 = t0 <u a3\n 13161: a3 = a0 if ra == 0\n 13164: u64 [s1 + 0x160] = a5\n 13168: a0 = a5 ^ a4\n 13171: a0 = a0 | ra\n 13174: u64 [s1 + 0x180] = t2\n 13178: a4 = t2 <u t1\n 13181: a3 = a2 if a0 == 0\n 13184: a2 = s1 + 0x100\n 13188: a0 = u64 [a2 + 0xb0]\n 13192: t0 = a0 + a4\n 13195: a0 = t0 <u a0\n 13198: a0 = a4 if a4 == 0\n 13201: a5 = u64 [a2 + 0xa8]\n 13205: a4 = a5 + a0\n 13208: a0 = a4 <u a5\n 13211: a5 = u64 [a2 + 0xa0]\n 13215: a0 = a0 + a5\n 13218: u64 [a2 + 0x78] = a0\n 13221: jump @446 if a3 != 0\n      : @445 (gas: 1)\n 13224: jump @892\n      : @446 (gas: 4)\n 13227: u64 [s1 + 0x140] = a4\n 13231: u64 [s1 + 0x148] = t0\n 13235: a0 = s1 + 0x2180\n 13239: ra = 458, jump @6\n      : @447 [@dyn 229] (gas: 11)\n 13245: a3 = s1 + 0x100\n 13249: a0 = u64 [a3 + 0xa8]\n 13253: a1 = u64 [a3 + 0xa0]\n 13257: a0 = a0 | a1\n 13260: a1 = u64 [s1 + 0xf8]\n 13264: a2 = u64 [a3 + 0xb8]\n 13268: a1 = a2 <u a1\n 13271: a2 = u64 [a3 + 0xb0]\n 13275: a1 = 0 if a2 != 0\n 13277: a1 = 0 if a0 != 0\n 13279: jump @449 if a1 != 0\n      : @448 (gas: 1)\n 13282: jump @993\n      : @449 (gas: 16)\n 13285: a3 = s1 + 0x2138\n 13289: a0 = u64 [a3 + 0x58]\n 13292: a1 = u64 [a3 + 0x50]\n 13295: a2 = u64 [a3 + 0x48]\n 13298: a4 = u64 [s1 + 0x138]\n 13302: a0 = a0 & a4\n 13305: a4 = 0xffffffffffffffff\n 13308: a1 = a1 & a4\n 13311: a2 = a2 & a4\n 13314: u64 [a3 + 64] = 0\n 13317: u64 [a3 + 0x28] = a2\n 13320: u64 [a3 + 0x30] = a1\n 13323: a1 = s1 + 0x2160\n 13327: u64 [a3 + 0x38] = a0\n 13330: a0 = u64 [s1 + 0x180]\n 13334: ra = 460, jump @4\n      : @450 [@dyn 230] (gas: 47)\n 13340: a4 = u64 [s1 + 0x158]\n 13344: a4 = a4 + 0x1\n 13347: u64 [s1 + 0x158] = a4\n 13351: a0 = a4 <u 0x1\n 13354: a3 = u64 [s1 + 0x170]\n 13358: a3 = a3 + a0\n 13361: a0 = a4 | a3\n 13364: a0 = a0 <u 0x1\n 13367: a1 = u64 [s1 + 0x150]\n 13371: t1 = a1 + a0\n 13374: a1 = t1 <u a1\n 13377: a0 = u64 [s1 + 0x168]\n 13381: a0 = a0 + a1\n 13384: a2 = u64 [s1 + 0x198]\n 13388: a2 = a2 + 0x1\n 13391: a1 = a2 <u 0x1\n 13394: a5 = u64 [s1 + 0x190]\n 13398: a5 = a5 + a1\n 13401: u64 [s1 + 0x198] = a2\n 13405: u64 [s1 + 0x190] = a5\n 13409: a1 = a2 | a5\n 13412: a1 = a1 <u 0x1\n 13415: a2 = u64 [s1 + 0x160]\n 13419: t0 = a2 + a1\n 13422: a2 = t0 <u a2\n 13425: a5 = u64 [s1 + 0x188]\n 13429: a5 = a5 + a2\n 13432: u64 [s1 + 0x188] = a5\n 13436: a2 = a3\n 13438: a5 = s1 + 0x100\n 13442: a1 = u64 [a5]\n 13444: u64 [a1 + 0x8] = a3\n 13447: u64 [a1] = a4\n 13449: u64 [a1 + 0x10] = t1\n 13452: a3 = a0\n 13454: u64 [a1 + 0x18] = a0\n 13457: u64 [s1 + 0x150] = t1\n 13461: a0 = u64 [a5 + 0x80]\n 13465: u64 [a5 + 0xb8] = a0\n 13469: a0 = u64 [a5 + 0x48]\n 13472: u64 [a5 + 0xb0] = a0\n 13476: a0 = u64 [a5 + 0x40]\n 13479: u64 [a5 + 0xa8] = a0\n 13483: a0 = u64 [a5 + 0x78]\n 13486: u64 [a5 + 0xa0] = a0\n 13490: a5 = t0\n 13492: jump @444\n      : @451 (gas: 11)\n 13495: u64 [a2 + 288] = 0\n 13499: u64 [a2 + 280] = 0\n 13503: u64 [a2 + 272] = 0\n 13507: u64 [a2 + 264] = 0\n 13511: a0 = s1 + 0x4000\n 13515: i32 a0 = a0 + 0xfffffffffffffa40\n 13519: ra = 0x1ce\n 13523: ecalli 15 // 'value_transferred'\n 13525: a0 = 0x4000\n 13529: t0 = 0x1d0\n 13533: jump @1629\n      : @452 [@dyn 231] (gas: 2)\n 13537: a0 = 0x4000\n 13541: t0 = 464, jump @1629\n      : @453 [@dyn 232] (gas: 8)\n 13548: a0 = u64 [a4 + 0x18]\n 13551: a1 = u64 [a4 + 0x20]\n 13554: a2 = u64 [a4 + 0x10]\n 13557: a3 = u64 [a4 + 0x8]\n 13560: a1 = a1 | a2\n 13563: a0 = a0 | a3\n 13566: a0 = a0 | a1\n 13569: jump @455 if a0 == 0\n      : @454 (gas: 1)\n 13572: jump @1165\n      : @455 (gas: 3)\n 13575: a0 = u64 [s1 + 0x1b8]\n 13579: a0 = i32 [a0]\n 13581: jump @457 if a0 >u 3\n      : @456 (gas: 1)\n 13585: jump @1166\n      : @457 (gas: 4)\n 13588: a0 = s1 + 0x7ff\n 13592: a0 = a0 + 0x361\n 13596: a1 = 0x40\n 13599: ra = 466, jump @2\n      : @458 [@dyn 233] (gas: 8)\n 13605: a3 = s1 + 0x7ff\n 13609: a3 = a3 + 0x131\n 13613: a5 = a3 + 0x200\n 13617: a4 = u64 [a5 + 0x48]\n 13620: a1 = u64 [a5 + 0x40]\n 13623: a2 = u64 [a5 + 0x38]\n 13626: a0 = u64 [a5 + 0x30]\n 13629: t0 = 468, jump @1593\n      : @459 [@dyn 234] (gas: 1)\n 13636: jump @461 if a1 == 0\n      : @460 (gas: 1)\n 13639: jump @993\n      : @461 (gas: 9)\n 13642: u64 [a3 + 552] = 0\n 13646: u64 [a3 + 544] = 0\n 13650: u64 [a3 + 528] = 0x2a300\n 13657: a1 = s1 + 0x7ff\n 13661: a1 = a1 + 0x341\n 13665: u64 [a3 + 536] = 0\n 13669: u64 [s1 + 0x1b8] = a0\n 13673: ra = 0x2ca\n 13677: jump @4\n      : @462 (gas: 9)\n 13680: u64 [a3 + 1664] = 0\n 13684: u64 [a3 + 1656] = 0\n 13688: u64 [a3 + 1648] = 0\n 13692: u64 [a3 + 1640] = 0\n 13696: a0 = s1 + 0x3000\n 13700: i32 a0 = a0 + 0x7a0\n 13704: ra = 0x1d6\n 13708: ecalli 15 // 'value_transferred'\n 13710: fallthrough\n      : @463 [@dyn 235] (gas: 10)\n 13711: a3 = s1 + 0x3138\n 13715: a4 = a3 + 0x600\n 13719: a0 = u64 [a4 + 0x78]\n 13722: a1 = u64 [a4 + 0x80]\n 13726: a2 = u64 [a4 + 0x70]\n 13729: a3 = u64 [a4 + 0x68]\n 13732: a1 = a1 | a2\n 13735: a0 = a0 | a3\n 13738: a0 = a0 | a1\n 13741: jump @465 if a0 == 0\n      : @464 (gas: 1)\n 13744: jump @1167\n      : @465 (gas: 1)\n 13747: t0 = 472, jump @1625\n      : @466 [@dyn 236] (gas: 1)\n 13754: jump @468 if a1 <u a0\n      : @467 (gas: 1)\n 13757: jump @1168\n      : @468 (gas: 17)\n 13760: a0 = s1 + 0x3000\n 13764: i32 a0 = a0 + 0x7c0\n 13768: a1 = 0x4\n 13771: ecalli 2 // 'call_data_load'\n 13773: a3 = s1 + 0x3138\n 13777: a4 = a3 + 0x600\n 13781: a0 = u64 [a4 + 0x88]\n 13785: a1 = u64 [a4 + 0x90]\n 13789: a2 = u64 [a4 + 0x98]\n 13793: a3 = u64 [a4 + 0xa0]\n 13797: u64 [s1 + 0x678] = a3\n 13801: u64 [s1 + 0x670] = a2\n 13805: u64 [s1 + 0x668] = a1\n 13809: a1 = s1 + 0x660\n 13813: u64 [s1 + 0x660] = a0\n 13817: a0 = 0\n 13819: ra = 474, jump @4\n      : @469 [@dyn 237] (gas: 7)\n 13825: u64 [s1 + 1624] = 0\n 13829: u64 [s1 + 1616] = 0\n 13833: u64 [s1 + 1600] = 0x4\n 13838: a0 = 0x20\n 13841: a1 = s1 + 0x640\n 13845: u64 [s1 + 1608] = 0\n 13849: ra = 476, jump @4\n      : @470 [@dyn 238] (gas: 1)\n 13855: t0 = 478, jump @1620\n      : @471 [@dyn 239] (gas: 4)\n 13862: a2 = 0x20194\n 13867: a0 = i32 [0x20194]\n 13872: a1 = 0x3f\n 13875: jump @473 if a1 <u a0\n      : @472 (gas: 4)\n 13878: u32 [0x20194] = 0x40\n 13884: u64 [s1 + 0x1a8] = a2\n 13888: t0 = 0x1e0\n 13892: jump @1627\n      : @473 (gas: 2)\n 13896: u64 [s1 + 0x1a8] = a2\n 13900: t0 = 480, jump @1627\n      : @474 [@dyn 240] (gas: 27)\n 13907: a0 = 0x201a0\n 13912: i32 a0 = a0 + 0\n 13914: i32 a2 = a2 + 0\n 13916: a1 = 0x40\n 13919: u64 [s1 + 0x1a0] = a0\n 13923: ecalli 7 // 'hash_keccak_256'\n 13925: a3 = u64 [s1 + 0x1b0]\n 13929: a0 = u64 [a3 + 0x18]\n 13932: a1 = u64 [a3 + 0x10]\n 13935: a2 = u64 [a3 + 0x8]\n 13938: a3 = u64 [a3]\n 13940: a0 = reverse a0\n 13942: a1 = reverse a1\n 13944: a2 = reverse a2\n 13946: a3 = reverse a3\n 13948: a4 = u64 [s1 + 0x1b8]\n 13952: u64 [s1 + 0x188] = a3\n 13956: u64 [a4 + 0x18] = a3\n 13959: u64 [s1 + 0x190] = a2\n 13963: u64 [a4 + 0x10] = a2\n 13966: u64 [s1 + 0x198] = a1\n 13970: u64 [a4 + 0x8] = a1\n 13973: u64 [s1 + 0x1b0] = a0\n 13977: u64 [a4] = a0\n 13979: a0 = s1 + 0x620\n 13983: a1 = 0x40\n 13986: ra = 482, jump @2\n      : @475 [@dyn 241] (gas: 12)\n 13992: a1 = s1 + 0x600\n 13996: a0 = u64 [a1 + 0x38]\n 13999: u64 [s1 + 0xf0] = a0\n 14003: a0 = u64 [a1 + 0x30]\n 14006: u64 [s1 + 0xe8] = a0\n 14010: a0 = u64 [a1 + 0x28]\n 14013: u64 [s1 + 0xe0] = a0\n 14017: a0 = u64 [a1 + 0x20]\n 14020: u64 [s1 + 0xf8] = a0\n 14024: a0 = s1 + 0x600\n 14028: a1 = u64 [s1 + 0x1b8]\n 14032: ra = 484, jump @6\n      : @476 [@dyn 242] (gas: 6)\n 14038: a4 = u64 [s1 + 0xe0]\n 14042: a3 = u64 [s1 + 0xe8]\n 14046: a0 = u64 [s1 + 0xf8]\n 14050: a2 = u64 [s1 + 0xf0]\n 14054: a2 = a2 | a4\n 14057: t0 = 486, jump @1601\n      : @477 [@dyn 243] (gas: 1)\n 14064: jump @479 if a1 == 0\n      : @478 (gas: 1)\n 14067: jump @993\n      : @479 (gas: 15)\n 14070: t0 = u64 [s1 + 0x618]\n 14074: a3 = s1 + 0x600\n 14078: a1 = u64 [a3 + 0x10]\n 14081: a5 = u64 [a3 + 0x8]\n 14084: a2 = u64 [a3]\n 14086: u64 [s1 + 0x128] = a2\n 14090: u64 [s1 + 0x5e0] = a2\n 14094: u64 [s1 + 0x130] = a5\n 14098: u64 [s1 + 0x5e8] = a5\n 14102: u64 [s1 + 0x138] = a1\n 14106: u64 [s1 + 0x5f0] = a1\n 14110: a1 = s1 + 0x5e0\n 14114: u64 [s1 + 0x140] = t0\n 14118: u64 [s1 + 0x5f8] = t0\n 14122: ra = 488, jump @4\n      : @480 [@dyn 244] (gas: 26)\n 14128: a1 = u64 [s1 + 0xf8]\n 14132: a0 = a1 + 0x20\n 14135: u64 [s1 + 0x108] = a0\n 14139: a0 = a0 <u a1\n 14142: a2 = u64 [s1 + 0xe0]\n 14146: a1 = a2 + a0\n 14149: u64 [s1 + 0x118] = a1\n 14153: a1 = a1 <u a2\n 14156: a1 = a0 if a0 == 0\n 14159: a0 = u64 [s1 + 0xe8]\n 14163: a1 = a1 + a0\n 14166: u64 [s1 + 0x100] = a1\n 14170: a0 = a1 <u a0\n 14173: u64 [s1 + 0x1b8] = a0\n 14177: a0 = u64 [s1 + 0x188]\n 14181: a2 = s1 + 0x500\n 14185: u64 [a2 + 0xd8] = a0\n 14189: a0 = u64 [s1 + 0x190]\n 14193: u64 [a2 + 0xd0] = a0\n 14197: a0 = u64 [s1 + 0x198]\n 14201: u64 [a2 + 0xc8] = a0\n 14205: a1 = s1 + 0x5c0\n 14209: a0 = u64 [s1 + 0x1b0]\n 14213: u64 [a2 + 0xc0] = a0\n 14217: a0 = 0\n 14219: ra = 490, jump @4\n      : @481 [@dyn 245] (gas: 7)\n 14225: a0 = sp + 0xffffffffffffffe0\n 14228: a0 = a0 & 0xffffffffffffffe0\n 14231: u64 [s1 + 0x120] = a0\n 14235: sp = a0\n 14237: a2 = u64 [s1 + 0x1a8]\n 14241: a0 = i32 [a2]\n 14243: jump @483 if a0 >u 31\n      : @482 (gas: 2)\n 14247: u32 [a2 + 0] = 0x20\n 14250: fallthrough\n      : @483 (gas: 7)\n 14251: a0 = u64 [s1 + 0xf0]\n 14255: a1 = u64 [s1 + 0x1b8]\n 14259: a0 = a0 + a1\n 14262: u64 [s1 + 0x110] = a0\n 14266: a0 = 0xffffffff\n 14276: u64 [s1 + 0x148] = a0\n 14280: t0 = 492, jump @1604\n      : @484 [@dyn 246] (gas: 34)\n 14286: a0 = u64 [s1 + 0x1a0]\n 14290: ecalli 7 // 'hash_keccak_256'\n 14292: t0 = 0\n 14294: t1 = 0\n 14296: ra = 0\n 14298: u64 [s1 + 408] = 0\n 14302: a3 = u64 [s1 + 0x1b8]\n 14306: a0 = u64 [a3 + 0x18]\n 14309: a1 = u64 [a3 + 0x10]\n 14312: a2 = u64 [a3 + 0x8]\n 14315: a5 = u64 [a3]\n 14317: t2 = reverse a0\n 14319: a4 = reverse a1\n 14321: a3 = reverse a2\n 14323: a2 = reverse a5\n 14325: a1 = u64 [s1 + 0x120]\n 14329: a0 = a2\n 14331: u64 [a1 + 0x18] = a2\n 14334: u64 [s1 + 0x178] = a3\n 14338: u64 [a1 + 0x10] = a3\n 14341: a5 = a4\n 14343: u64 [a1 + 0x8] = a4\n 14346: u64 [s1 + 0x180] = t2\n 14350: u64 [a1] = t2\n 14352: a3 = s1 + 0x100\n 14356: a2 = u64 [a3 + 0x8]\n 14359: u64 [a3 + 0xb8] = a2\n 14363: a2 = u64 [a3 + 0x18]\n 14366: u64 [a3 + 0xa8] = a2\n 14370: a2 = u64 [a3]\n 14372: u64 [a3 + 0xa0] = a2\n 14376: a2 = u64 [a3 + 0x10]\n 14379: u64 [a3 + 0xb0] = a2\n 14383: fallthrough\n      : @485 (gas: 20)\n 14384: a4 = s1 + 0x100\n 14388: u64 [a4 + 0x88] = a0\n 14392: u64 [a4 + 0x90] = a5\n 14396: a0 = u64 [a4 + 0x28]\n 14399: a0 = t0 <u a0\n 14402: a2 = u64 [a4 + 0x30]\n 14405: a3 = t1 ^ a2\n 14408: a2 = t1 <u a2\n 14411: a2 = a0 if a3 == 0\n 14414: a0 = u64 [a4 + 0x38]\n 14417: t2 = ra <u a0\n 14420: a3 = u64 [a4 + 0x40]\n 14423: a5 = u64 [a4 + 0x98]\n 14427: a4 = a5 ^ a3\n 14430: a3 = a5 <u a3\n 14433: a3 = t2 if a4 == 0\n 14436: a0 = ra ^ a0\n 14439: a0 = a0 | a4\n 14442: a3 = a2 if a0 == 0\n 14445: jump @487 if a3 != 0\n      : @486 (gas: 1)\n 14448: jump @874\n      : @487 (gas: 5)\n 14451: u64 [s1 + 0x160] = ra\n 14455: u64 [s1 + 0x168] = t1\n 14459: u64 [s1 + 0x170] = t0\n 14463: a0 = s1 + 0x4a0\n 14467: ra = 494, jump @6\n      : @488 [@dyn 247] (gas: 13)\n 14473: a1 = s1 + 0x100\n 14477: a0 = u64 [a1 + 0xb8]\n 14481: a4 = u64 [a1 + 0xa0]\n 14485: a2 = a0 | a4\n 14488: a3 = u64 [a1 + 0xb0]\n 14492: a5 = u64 [a1 + 0xa8]\n 14496: a1 = a5 | a3\n 14499: a2 = a2 | a1\n 14502: a2 = a2 >> 0x20\n 14505: a1 = a1 | a4\n 14508: a1 = a1 << 0x20\n 14511: a1 = a1 | a2\n 14514: jump @490 if a1 == 0\n      : @489 (gas: 1)\n 14517: jump @993\n      : @490 (gas: 18)\n 14520: u64 [s1 + 0x1a0] = a4\n 14524: a4 = u64 [s1 + 0x4b0]\n 14528: a1 = u64 [s1 + 0x4a8]\n 14532: a2 = u64 [s1 + 0x4a0]\n 14536: u64 [s1 + 0x1b0] = a3\n 14540: a3 = u64 [s1 + 0x148]\n 14544: a4 = a4 & a3\n 14547: a1 = a1 & 0xffffffffffffffff\n 14550: a2 = a2 & 0xffffffffffffffff\n 14553: u64 [s1 + 1176] = 0\n 14557: a3 = s1 + 0x400\n 14561: u64 [a3 + 0x80] = a2\n 14565: u64 [a3 + 0x88] = a1\n 14569: a1 = s1 + 0x480\n 14573: u64 [a3 + 0x90] = a4\n 14577: u64 [s1 + 0x1b8] = a0\n 14581: u64 [s1 + 0x1a8] = a5\n 14585: ra = 496, jump @4\n      : @491 [@dyn 248] (gas: 57)\n 14591: a1 = u64 [s1 + 0x1b8]\n 14595: a0 = a1 + 0x20\n 14598: u64 [s1 + 0x158] = a0\n 14602: a2 = a0 <u a1\n 14605: a1 = u64 [s1 + 0x1a8]\n 14609: a0 = a1 + a2\n 14612: u64 [s1 + 0x150] = a0\n 14616: a3 = a0 <u a1\n 14619: a3 = a2 if a2 == 0\n 14622: a0 = u64 [s1 + 0x1a0]\n 14626: ra = a0 + a3\n 14629: a3 = ra <u a0\n 14632: a0 = u64 [s1 + 0x1b0]\n 14636: a0 = a0 + a3\n 14639: u64 [s1 + 0x1b0] = a0\n 14643: t2 = u64 [s1 + 0x180]\n 14647: t2 = t2 + 0x1\n 14650: u64 [s1 + 0x180] = t2\n 14654: a3 = t2 <u 0x1\n 14657: a0 = u64 [s1 + 0x190]\n 14661: a0 = a0 + a3\n 14664: a3 = t2 | a0\n 14667: a3 = a3 <u 0x1\n 14670: a1 = u64 [s1 + 0x178]\n 14674: a3 = a3 + a1\n 14677: a4 = a3 <u a1\n 14680: a2 = u64 [s1 + 0x188]\n 14684: a2 = a2 + a4\n 14687: t0 = u64 [s1 + 0x170]\n 14691: t0 = t0 + 0x1\n 14694: a4 = t0 <u 0x1\n 14697: t1 = u64 [s1 + 0x168]\n 14701: t1 = t1 + a4\n 14704: a4 = t0 | t1\n 14707: a4 = a4 <u 0x1\n 14710: a5 = u64 [s1 + 0x160]\n 14714: a4 = a4 + a5\n 14717: a5 = a4 <u a5\n 14720: a1 = u64 [s1 + 0x198]\n 14724: a1 = a1 + a5\n 14727: u64 [s1 + 0x198] = a1\n 14731: a5 = a0\n 14733: a1 = u64 [s1 + 0x120]\n 14737: u64 [a1 + 0x8] = a0\n 14740: u64 [a1] = t2\n 14742: u64 [a1 + 0x10] = a3\n 14745: a0 = a2\n 14747: u64 [a1 + 0x18] = a2\n 14750: u64 [s1 + 0x178] = a3\n 14754: a3 = s1 + 0x100\n 14758: a2 = u64 [a3 + 0x58]\n 14761: u64 [a3 + 0xb8] = a2\n 14765: a2 = u64 [a3 + 0x50]\n 14768: u64 [a3 + 0xa8] = a2\n 14772: u64 [s1 + 0x1a0] = ra\n 14776: ra = a4\n 14778: jump @485\n      : @492 (gas: 2)\n 14781: a1 = 0x62e2961b\n 14787: jump @494 if a0 == a1\n      : @493 (gas: 1)\n 14790: jump @1169\n      : @494 (gas: 1)\n 14793: t0 = 498, jump @1632\n      : @495 [@dyn 249] (gas: 5)\n 14800: i32 a0 = a0 + 0xfffffffffffffe00\n 14804: ra = 0x1f4\n 14808: ecalli 15 // 'value_transferred'\n 14810: t0 = 0x1f6\n 14814: jump @1630\n      : @496 [@dyn 250] (gas: 1)\n 14817: t0 = 502, jump @1630\n      : @497 [@dyn 251] (gas: 8)\n 14823: a0 = u64 [a4 + 0xd8]\n 14827: a1 = u64 [a4 + 0xe0]\n 14831: a2 = u64 [a4 + 0xd0]\n 14835: a3 = u64 [a4 + 0xc8]\n 14839: a1 = a1 | a2\n 14842: a0 = a0 | a3\n 14845: a0 = a0 | a1\n 14848: jump @499 if a0 == 0\n      : @498 (gas: 1)\n 14851: jump @1177\n      : @499 (gas: 3)\n 14854: a0 = u64 [s1 + 0x1b8]\n 14858: a0 = i32 [a0]\n 14860: jump @501 if a0 >u 67\n      : @500 (gas: 1)\n 14864: jump @1178\n      : @501 (gas: 2)\n 14867: a0 = s1 + 0x14e0\n 14871: ra = 504, jump @1296\n      : @502 [@dyn 252] (gas: 16)\n 14877: a1 = s1 + 0x1138\n 14881: a2 = a1 + 0x300\n 14885: a0 = u64 [a2 + 0xb8]\n 14889: a1 = s1 + 0x100\n 14893: u64 [a1 + 0xa8] = a0\n 14897: a0 = u64 [a2 + 0xb0]\n 14901: u64 [a1 + 0xb0] = a0\n 14905: a0 = u64 [a2 + 0xa8]\n 14909: u64 [a1 + 0xb8] = a0\n 14913: a0 = s1 + 0x4000\n 14917: i32 a0 = a0 + 0xfffffffffffffe20\n 14921: a1 = 0x4\n 14924: ra = 0x1fa\n 14928: ecalli 2 // 'call_data_load'\n 14930: t0 = 0x1fc\n 14934: jump @1630\n      : @503 [@dyn 253] (gas: 1)\n 14937: t0 = 508, jump @1630\n      : @504 [@dyn 254] (gas: 13)\n 14943: a0 = u64 [a4 + 0xe8]\n 14947: a1 = u64 [a4 + 0xf0]\n 14951: a2 = u64 [a4 + 0xf8]\n 14955: a3 = u64 [a3 + 0x500]\n 14959: a4 = s1 + 0x1138\n 14963: a5 = a4 + 0x300\n 14967: u64 [a5 + 0xa0] = a3\n 14971: u64 [a5 + 0x98] = a2\n 14975: u64 [a5 + 0x90] = a1\n 14979: a1 = s1 + 0x14c0\n 14983: u64 [a5 + 0x88] = a0\n 14987: a0 = 0\n 14989: ra = 510, jump @4\n      : @505 [@dyn 255] (gas: 3)\n 14995: t0 = 0x200\n 14999: a1 = s1 + 0x1138\n 15003: fallthrough\n      : @506 [@dyn 256] (gas: 8)\n 15004: u64 [a1 + 896] = 0\n 15008: u64 [a1 + 888] = 0\n 15012: u64 [a1 + 872] = 0x3\n 15017: a2 = a1\n 15019: a0 = 0x20\n 15022: a1 = s1 + 0x14a0\n 15026: u64 [a2 + 880] = 0\n 15030: ra = 514, jump @4\n      : @507 [@dyn 257] (gas: 3)\n 15036: a1 = 0x20194\n 15041: a0 = i32 [0x20194]\n 15046: jump @509 if a0 >u 63\n      : @508 (gas: 2)\n 15050: u32 [0x20194] = 0x40\n 15056: fallthrough\n      : @509 (gas: 15)\n 15057: a0 = sp + 0xffffffffffffffe0\n 15060: a2 = a0 & 0xffffffffffffffe0\n 15063: u64 [s1 + 0x190] = a2\n 15067: sp = a2\n 15069: a0 = 0x201a0\n 15074: i32 a0 = a0 + 0\n 15076: i32 a2 = a2 + 0\n 15078: u64 [s1 + 0x1a0] = a1\n 15082: a1 = 0x40\n 15085: u64 [s1 + 0x198] = a0\n 15089: ra = 0x204\n 15093: ecalli 7 // 'hash_keccak_256'\n 15095: a3 = u64 [s1 + 0x190]\n 15099: t0 = 0x206\n 15103: jump @1587\n      : @510 [@dyn 258] (gas: 2)\n 15106: a3 = u64 [s1 + 0x190]\n 15110: t0 = 518, jump @1587\n      : @511 [@dyn 259] (gas: 16)\n 15116: u64 [s1 + 0x190] = a0\n 15120: sp = a0\n 15122: a0 = u64 [s1 + 0x1a8]\n 15126: a0 = a0 << 0x20\n 15129: a0 = a0 >> 0x20\n 15132: a2 = s1 + 0x1138\n 15136: u64 [a2 + 864] = 0\n 15140: a3 = a2 + 0x300\n 15144: u64 [a3 + 0x58] = a0\n 15147: a0 = u64 [s1 + 0x1b0]\n 15151: u64 [a3 + 0x50] = a0\n 15154: a1 = s1 + 0x1480\n 15158: a0 = u64 [s1 + 0x1b8]\n 15162: u64 [a3 + 0x48] = a0\n 15165: a0 = 0\n 15167: ra = 520, jump @4\n      : @512 [@dyn 260] (gas: 14)\n 15173: a0 = u64 [s1 + 0x170]\n 15177: a1 = s1 + 0x1138\n 15181: a2 = a1 + 0x300\n 15185: u64 [a2 + 0x40] = a0\n 15188: a0 = u64 [s1 + 0x178]\n 15192: u64 [a2 + 0x38] = a0\n 15195: a0 = u64 [s1 + 0x180]\n 15199: u64 [a2 + 0x30] = a0\n 15202: a3 = a1\n 15204: a0 = 0x20\n 15207: a1 = s1 + 0x1460\n 15211: a2 = u64 [s1 + 0x188]\n 15215: u64 [a3 + 0x328] = a2\n 15219: ra = 522, jump @4\n      : @513 [@dyn 261] (gas: 3)\n 15225: a1 = u64 [s1 + 0x1a0]\n 15229: a0 = i32 [a1]\n 15231: jump @515 if a0 >u 63\n      : @514 (gas: 2)\n 15235: u32 [a1 + 0] = 0x40\n 15238: fallthrough\n      : @515 (gas: 4)\n 15239: a0 = sp + 0xffffffffffffffe0\n 15242: a0 = a0 & 0xffffffffffffffe0\n 15245: u64 [s1 + 0x1b8] = a0\n 15249: t0 = 524, jump @1579\n      : @516 [@dyn 262] (gas: 4)\n 15255: ra = 0x20e\n 15259: ecalli 7 // 'hash_keccak_256'\n 15261: t0 = 0x210\n 15265: jump @1573\n      : @517 [@dyn 263] (gas: 1)\n 15268: t0 = 528, jump @1573\n      : @518 [@dyn 264] (gas: 2)\n 15274: a0 = s1 + 0x1440\n 15278: ra = 530, jump @6\n      : @519 [@dyn 265] (gas: 31)\n 15284: a1 = s1 + 0x1138\n 15288: a2 = a1 + 0x300\n 15292: a0 = u64 [a2 + 0x20]\n 15295: u64 [s1 + 0x198] = a0\n 15299: a0 = u64 [a2 + 0x18]\n 15302: u64 [s1 + 0x190] = a0\n 15306: a0 = u64 [a2 + 0x10]\n 15309: u64 [s1 + 0x188] = a0\n 15313: a0 = u64 [a2 + 0x8]\n 15316: u64 [s1 + 0x180] = a0\n 15320: a0 = u64 [s1 + 0x1a8]\n 15324: a0 = a0 + 0x1\n 15327: a1 = a0 <u 0x1\n 15330: a2 = u64 [s1 + 0x1b0]\n 15334: a1 = a1 + a2\n 15337: a2 = s1 + 0x3938\n 15341: a3 = a2 + 0x500\n 15345: u64 [a3 + 0x10] = a1\n 15348: a1 = a1 | a0\n 15351: u64 [a3 + 0x8] = a0\n 15354: a0 = a1 <u 0x1\n 15357: a1 = u64 [s1 + 0x1a0]\n 15361: a0 = a0 + a1\n 15364: u64 [a3 + 0x18] = a0\n 15367: a0 = a0 <u a1\n 15370: a1 = u64 [s1 + 0x1b8]\n 15374: a0 = a0 + a1\n 15377: u64 [a3 + 0x20] = a0\n 15380: a0 = s1 + 0x1420\n 15384: a1 = s1 + 0x3e40\n 15388: ra = 532, jump @6\n      : @520 [@dyn 266] (gas: 18)\n 15394: a1 = s1 + 0x1138\n 15398: a0 = u64 [a1 + 0x300]\n 15402: u64 [s1 + 0x178] = a0\n 15406: a2 = a1 + 0x200\n 15410: a0 = u64 [a2 + 0xf8]\n 15414: u64 [s1 + 0x170] = a0\n 15418: a0 = u64 [a2 + 0xf0]\n 15422: u64 [s1 + 0x168] = a0\n 15426: a0 = u64 [a2 + 0xe8]\n 15430: u64 [s1 + 0x160] = a0\n 15434: a1 = u64 [s1 + 0x1a8]\n 15438: a0 = a1 + 0x2\n 15441: a1 = a0 <u a1\n 15444: a3 = u64 [s1 + 0x1b0]\n 15448: a2 = a3 + a1\n 15451: a3 = a2 <u a3\n 15454: a3 = a1 if a1 == 0\n 15457: t0 = 534, jump @1621\n      : @521 [@dyn 267] (gas: 9)\n 15463: a4 = s1 + 0x3938\n 15467: a5 = a4 + 0x500\n 15471: u64 [a5 + 0x40] = a1\n 15474: u64 [a5 + 0x38] = a3\n 15477: u64 [a5 + 0x30] = a2\n 15480: u64 [a5 + 0x28] = a0\n 15483: a0 = s1 + 0x1400\n 15487: a1 = s1 + 0x3e60\n 15491: ra = 536, jump @6\n      : @522 [@dyn 268] (gas: 10)\n 15497: a5 = s1 + 0x1138\n 15501: a0 = u64 [a5 + 0x2e0]\n 15505: u64 [s1 + 0x158] = a0\n 15509: a0 = u64 [a5 + 0x2d8]\n 15513: u64 [s1 + 0x150] = a0\n 15517: a1 = u64 [s1 + 0x1a8]\n 15521: a0 = a1 + 0x3\n 15524: a1 = a0 <u a1\n 15527: a3 = u64 [s1 + 0x1b0]\n 15531: t0 = 538, jump @1623\n      : @523 [@dyn 269] (gas: 3)\n 15537: a1 = u64 [a5 + 0x2d0]\n 15541: u64 [s1 + 0x1a8] = a1\n 15545: t0 = 540, jump @1621\n      : @524 [@dyn 270] (gas: 11)\n 15551: a4 = u64 [a5 + 0x2c8]\n 15555: u64 [s1 + 0x1a0] = a4\n 15559: a4 = s1 + 0x3938\n 15563: a5 = a4 + 0x500\n 15567: u64 [a5 + 0x60] = a1\n 15570: u64 [a5 + 0x58] = a3\n 15573: u64 [a5 + 0x50] = a2\n 15576: u64 [a5 + 0x48] = a0\n 15579: a0 = s1 + 0x13e0\n 15583: a1 = s1 + 0x3e80\n 15587: ra = 542, jump @6\n      : @525 [@dyn 271] (gas: 6)\n 15593: a0 = s1 + 0x1138\n 15597: a0 = u64 [a0 + 0x2a8]\n 15601: u64 [s1 + 0x148] = a0\n 15605: a0 = s1 + 0x13c0\n 15609: a1 = 0x40\n 15612: ra = 544, jump @2\n      : @526 [@dyn 272] (gas: 14)\n 15618: a2 = s1 + 0x1138\n 15622: t0 = u64 [a2 + 0x2a0]\n 15626: a0 = a2 + 0x200\n 15630: a5 = u64 [a0 + 0x98]\n 15634: a4 = u64 [a0 + 0x90]\n 15638: a3 = u64 [a0 + 0x88]\n 15642: a0 = a4 | t0\n 15645: a1 = a3 | a5\n 15648: a1 = a1 | a0\n 15651: a1 = a1 >> 0x20\n 15654: a0 = a0 | a5\n 15657: a0 = a0 << 0x20\n 15660: a0 = a0 | a1\n 15663: jump @528 if a0 == 0\n      : @527 (gas: 1)\n 15666: jump @993\n      : @528 (gas: 15)\n 15669: a0 = u64 [s1 + 0x180]\n 15673: u64 [a2 + 0x268] = a0\n 15677: a0 = u64 [s1 + 0x188]\n 15681: u64 [a2 + 0x270] = a0\n 15685: a0 = u64 [s1 + 0x190]\n 15689: u64 [a2 + 0x278] = a0\n 15693: a1 = s1 + 0x13a0\n 15697: a0 = u64 [s1 + 0x198]\n 15701: u64 [a2 + 0x280] = a0\n 15705: a0 = a3\n 15707: u64 [s1 + 0x1b8] = a3\n 15711: u64 [s1 + 0x1b0] = a4\n 15715: u64 [s1 + 0x190] = t0\n 15719: u64 [s1 + 0x198] = a5\n 15723: ra = 546, jump @4\n      : @529 [@dyn 273] (gas: 12)\n 15729: a5 = s1 + 0x100\n 15733: a1 = u64 [a5 + 0xb8]\n 15737: a0 = u64 [a5 + 0x98]\n 15741: a4 = u64 [a5 + 0x90]\n 15745: a4 = a4 | a0\n 15748: a3 = 0x100000000\n 15758: a0 = 0xffffffe0\n 15768: a0 = a1 <u a0\n 15771: a2 = u64 [a5 + 0xb0]\n 15775: a0 = 0 if a2 != 0\n 15777: a0 = 0 if a4 != 0\n 15779: jump @531 if a0 != 0\n      : @530 (gas: 1)\n 15782: jump @993\n      : @531 (gas: 16)\n 15785: i32 a0 = a1 + 0x20\n 15788: a1 = u64 [s1 + 0x160]\n 15792: a2 = s1 + 0x1138\n 15796: u64 [s1 + 0x190] = a3\n 15800: a3 = a2\n 15802: a5 = a2 + 0x200\n 15806: u64 [a5 + 0x48] = a1\n 15809: a1 = u64 [s1 + 0x168]\n 15813: u64 [a5 + 0x50] = a1\n 15816: a1 = u64 [s1 + 0x170]\n 15820: u64 [a5 + 0x58] = a1\n 15823: a1 = s1 + 0x1380\n 15827: a2 = u64 [s1 + 0x178]\n 15831: u64 [a3 + 0x260] = a2\n 15835: u64 [s1 + 0x198] = a4\n 15839: ra = 548, jump @4\n      : @532 [@dyn 274] (gas: 10)\n 15845: a2 = s1 + 0x100\n 15849: a4 = u64 [a2 + 0x98]\n 15853: a3 = u64 [a2 + 0xb0]\n 15857: a1 = u64 [a2 + 0xb8]\n 15861: a0 = u64 [a2 + 0x90]\n 15865: a0 = a0 + 0xffffffffffffffc0\n 15868: a0 = a1 <u a0\n 15871: a0 = 0 if a3 != 0\n 15873: a0 = 0 if a4 != 0\n 15875: jump @534 if a0 != 0\n      : @533 (gas: 1)\n 15878: jump @993\n      : @534 (gas: 13)\n 15881: i32 a0 = a1 + 0x40\n 15884: a1 = u64 [s1 + 0x1a0]\n 15888: a4 = s1 + 0x1138\n 15892: a3 = a4 + 0x200\n 15896: u64 [a3 + 0x28] = a1\n 15899: a1 = u64 [s1 + 0x1a8]\n 15903: u64 [a3 + 0x30] = a1\n 15906: a1 = u64 [s1 + 0x150]\n 15910: u64 [a3 + 0x38] = a1\n 15913: a1 = s1 + 0x1360\n 15917: a2 = u64 [s1 + 0x158]\n 15921: u64 [a3 + 0x40] = a2\n 15924: ra = 550, jump @4\n      : @535 [@dyn 275] (gas: 9)\n 15930: a3 = s1 + 0x100\n 15934: a2 = u64 [a3 + 0xb8]\n 15938: a0 = 0xffffffa0\n 15948: a0 = a2 <u a0\n 15951: a1 = u64 [a3 + 0xb0]\n 15955: a0 = 0 if a1 != 0\n 15957: a1 = u64 [a3 + 0x98]\n 15961: a0 = 0 if a1 != 0\n 15963: jump @537 if a0 != 0\n      : @536 (gas: 1)\n 15966: jump @993\n      : @537 (gas: 10)\n 15969: a0 = u8 [s1 + 0x148]\n 15973: a1 = a0 >u 0\n 15975: i32 a0 = a2 + 0x60\n 15978: a3 = s1 + 0x1138\n 15982: u64 [a3 + 544] = 0\n 15986: u64 [a3 + 536] = 0\n 15990: u64 [a3 + 0x208] = a1\n 15994: a1 = s1 + 0x1340\n 15998: u64 [a3 + 528] = 0\n 16002: ra = 552, jump @4\n      : @538 [@dyn 276] (gas: 3)\n 16008: a1 = 0x80\n 16012: a0 = u64 [s1 + 0x1b8]\n 16016: ra = 554, jump @16\n      : @539 [@dyn 277] (gas: 5)\n 16022: i32 a1 = a0 + 0\n 16024: a2 = 0x80\n 16028: a0 = 0\n 16030: ecalli 12 // 'seal_return'\n 16032: jump @699\n      : @540 (gas: 1)\n 16035: t0 = 556, jump @1625\n      : @541 [@dyn 278] (gas: 1)\n 16041: jump @543 if a1 <u a0\n      : @542 (gas: 1)\n 16044: jump @1179\n      : @543 (gas: 24)\n 16047: a0 = s1 + 0x4000\n 16051: i32 a0 = a0 + 0xfffffffffffffee0\n 16055: a1 = 0x4\n 16058: ecalli 2 // 'call_data_load'\n 16060: a0 = s1 + 0x3938\n 16064: a5 = a0 + 0x500\n 16068: a4 = u64 [a5 + 0xc0]\n 16072: a3 = u64 [a5 + 0xb8]\n 16076: a1 = u64 [a5 + 0xb0]\n 16080: a2 = u64 [a5 + 0xa8]\n 16084: a0 = s1 + 0x1938\n 16088: a5 = s1 + 0x100\n 16092: u64 [a5 + 0xa0] = a4\n 16096: u64 [a0 + 0x540] = a4\n 16100: u64 [a5 + 0xa8] = a3\n 16104: a4 = a0 + 0x500\n 16108: u64 [a4 + 0x38] = a3\n 16111: u64 [a5 + 0xb0] = a1\n 16115: u64 [a4 + 0x30] = a1\n 16118: a1 = s1 + 0x1e60\n 16122: u64 [a5 + 0xb8] = a2\n 16126: u64 [a4 + 0x28] = a2\n 16129: a0 = 0\n 16131: ra = 558, jump @4\n      : @544 [@dyn 279] (gas: 9)\n 16137: a0 = s1 + 0x1938\n 16141: u64 [a0 + 1312] = 0\n 16145: u64 [a0 + 1304] = 0\n 16149: u64 [a0 + 1296] = 0\n 16153: a3 = a0\n 16155: a0 = 0x20\n 16158: a1 = s1 + 0x1e40\n 16162: u64 [a3 + 1288] = 0x2\n 16167: ra = 560, jump @4\n      : @545 [@dyn 280] (gas: 3)\n 16173: a1 = 0x20194\n 16178: a0 = i32 [0x20194]\n 16183: jump @547 if a0 >u 63\n      : @546 (gas: 2)\n 16187: u32 [0x20194] = 0x40\n 16193: fallthrough\n      : @547 (gas: 15)\n 16194: a0 = sp + 0xffffffffffffffe0\n 16197: a2 = a0 & 0xffffffffffffffe0\n 16200: u64 [s1 + 0x188] = a2\n 16204: sp = a2\n 16206: a0 = 0x201a0\n 16211: i32 a0 = a0 + 0\n 16213: u64 [s1 + 0x190] = a1\n 16217: i32 a2 = a2 + 0\n 16219: a1 = 0x40\n 16222: u64 [s1 + 0x198] = a0\n 16226: ra = 0x232\n 16230: ecalli 7 // 'hash_keccak_256'\n 16232: a3 = u64 [s1 + 0x188]\n 16236: t0 = 0x234\n 16240: jump @1574\n      : @548 [@dyn 281] (gas: 2)\n 16243: a3 = u64 [s1 + 0x188]\n 16247: t0 = 564, jump @1574\n      : @549 [@dyn 282] (gas: 8)\n 16253: a5 = a4 + 0x500\n 16257: u64 [a5 + 0xe0] = a3\n 16261: u64 [a5 + 0xd8] = a2\n 16265: u64 [a5 + 0xd0] = a1\n 16269: u64 [a5 + 0xc8] = a0\n 16273: a0 = s1 + 0x1e20\n 16277: a1 = s1 + 0x3f00\n 16281: ra = 566, jump @6\n      : @550 [@dyn 283] (gas: 25)\n 16287: a4 = s1 + 0x1938\n 16291: a0 = u64 [a4 + 0x500]\n 16295: a1 = u64 [a4 + 0x4f0]\n 16299: a2 = u64 [a4 + 0x4e8]\n 16303: a3 = u64 [a4 + 0x4f8]\n 16307: a5 = u64 [s1 + 0x1a0]\n 16311: a0 = a0 ^ a5\n 16314: a5 = u64 [s1 + 0x1b0]\n 16318: a1 = a1 ^ a5\n 16321: a0 = a0 | a1\n 16324: a1 = u64 [s1 + 0x1a8]\n 16328: a1 = a1 ^ a3\n 16331: a3 = u64 [s1 + 0x1b8]\n 16335: a2 = a2 ^ a3\n 16338: a1 = a1 | a2\n 16341: a0 = a0 | a1\n 16344: a0 = a0 <u 0x1\n 16347: u64 [a4 + 1248] = 0\n 16351: u64 [a4 + 1240] = 0\n 16355: u64 [a4 + 0x4c8] = a0\n 16359: a0 = s1 + 0x1e00\n 16363: u64 [a4 + 1232] = 0\n 16367: ra = 0x238\n 16371: t0 = 0x610\n 16375: jump @1586\n      : @551 [@dyn 284] (gas: 13)\n 16378: a0 = s1 + 0x1938\n 16382: a1 = u64 [s1 + 0x1a0]\n 16386: a3 = a0 + 0x400\n 16390: u64 [a3 + 0xc0] = a1\n 16394: a1 = u64 [s1 + 0x1a8]\n 16398: u64 [a3 + 0xb8] = a1\n 16402: a1 = u64 [s1 + 0x1b0]\n 16406: u64 [a3 + 0xb0] = a1\n 16410: a1 = s1 + 0x1de0\n 16414: a2 = u64 [s1 + 0x1b8]\n 16418: u64 [a3 + 0xa8] = a2\n 16422: a0 = 0\n 16424: ra = 570, jump @4\n      : @552 [@dyn 285] (gas: 3)\n 16430: t0 = 0x23c\n 16434: a1 = s1 + 0x1938\n 16438: fallthrough\n      : @553 [@dyn 286] (gas: 8)\n 16439: u64 [a1 + 1184] = 0\n 16443: u64 [a1 + 1176] = 0\n 16447: u64 [a1 + 1160] = 0x2\n 16452: a2 = a1\n 16454: a0 = 0x20\n 16457: a1 = s1 + 0x1dc0\n 16461: u64 [a2 + 1168] = 0\n 16465: ra = 574, jump @4\n      : @554 [@dyn 287] (gas: 3)\n 16471: a1 = u64 [s1 + 0x190]\n 16475: a0 = i32 [a1]\n 16477: jump @556 if a0 >u 63\n      : @555 (gas: 3)\n 16481: u32 [a1 + 0] = 0x40\n 16484: t0 = 0x240\n 16488: jump @1576\n      : @556 (gas: 1)\n 16491: t0 = 576, jump @1576\n      : @557 [@dyn 288] (gas: 5)\n 16497: ra = 0x242\n 16501: ecalli 7 // 'hash_keccak_256'\n 16503: a3 = u64 [s1 + 0x188]\n 16507: t0 = 0x244\n 16511: jump @1563\n      : @558 [@dyn 289] (gas: 2)\n 16514: a3 = u64 [s1 + 0x188]\n 16518: t0 = 580, jump @1563\n      : @559 [@dyn 290] (gas: 8)\n 16524: a3 = a1 + 0x500\n 16528: u64 [a3 + 0xe8] = a4\n 16532: u64 [a3 + 0xf0] = a5\n 16536: u64 [a3 + 0xf8] = a2\n 16540: u64 [a1 + 0x600] = a0\n 16544: a0 = s1 + 0x1da0\n 16548: a1 = s1 + 0x3f20\n 16552: ra = 582, jump @6\n      : @560 [@dyn 291] (gas: 3)\n 16558: t0 = 0x248\n 16562: a2 = s1 + 0x1938\n 16566: fallthrough\n      : @561 [@dyn 292] (gas: 2)\n 16567: a0 = u8 [a2 + 0x47c]\n 16571: jump @563 if a0 <=u 3\n      : @562 (gas: 1)\n 16575: jump @1180\n      : @563 (gas: 1)\n 16578: jump @578 if a0 == 1\n      : @564 (gas: 12)\n 16583: a0 = u64 [s1 + 0x1b8]\n 16587: a3 = a2 + 0x400\n 16591: u64 [a3 + 0x48] = a0\n 16594: a0 = u64 [s1 + 0x1b0]\n 16598: u64 [a3 + 0x50] = a0\n 16601: a0 = u64 [s1 + 0x1a8]\n 16605: u64 [a3 + 0x58] = a0\n 16608: a1 = s1 + 0x1d80\n 16612: a0 = u64 [s1 + 0x1a0]\n 16616: u64 [a3 + 0x60] = a0\n 16619: a0 = 0\n 16621: ra = 586, jump @4\n      : @565 [@dyn 293] (gas: 3)\n 16627: t0 = 0x24c\n 16631: a1 = s1 + 0x1938\n 16635: fallthrough\n      : @566 [@dyn 294] (gas: 8)\n 16636: u64 [a1 + 1088] = 0\n 16640: u64 [a1 + 1080] = 0\n 16644: u64 [a1 + 1064] = 0x2\n 16649: a2 = a1\n 16651: a0 = 0x20\n 16654: a1 = s1 + 0x1d60\n 16658: u64 [a2 + 1072] = 0\n 16662: ra = 590, jump @4\n      : @567 [@dyn 295] (gas: 3)\n 16668: a2 = u64 [s1 + 0x190]\n 16672: a0 = i32 [a2]\n 16674: jump @569 if a0 >u 63\n      : @568 (gas: 3)\n 16678: u32 [a2 + 0] = 0x40\n 16681: t0 = 0x250\n 16685: jump @1576\n      : @569 (gas: 1)\n 16688: t0 = 592, jump @1576\n      : @570 [@dyn 296] (gas: 5)\n 16694: ra = 0x252\n 16698: ecalli 7 // 'hash_keccak_256'\n 16700: a3 = u64 [s1 + 0x188]\n 16704: t0 = 0x254\n 16708: jump @1563\n      : @571 [@dyn 297] (gas: 2)\n 16711: a3 = u64 [s1 + 0x188]\n 16715: t0 = 596, jump @1563\n      : @572 [@dyn 298] (gas: 8)\n 16721: a3 = a1 + 0x600\n 16725: u64 [a3 + 0x8] = a4\n 16728: u64 [a3 + 0x10] = a5\n 16731: u64 [a3 + 0x18] = a2\n 16734: u64 [a3 + 0x20] = a0\n 16737: a0 = s1 + 0x1d40\n 16741: a1 = s1 + 0x3f40\n 16745: ra = 598, jump @6\n      : @573 [@dyn 299] (gas: 3)\n 16751: t0 = 0x258\n 16755: a2 = s1 + 0x1938\n 16759: fallthrough\n      : @574 [@dyn 300] (gas: 2)\n 16760: a0 = u8 [a2 + 0x41c]\n 16764: jump @576 if a0 <=u 3\n      : @575 (gas: 1)\n 16768: jump @1219\n      : @576 (gas: 1)\n 16771: jump @578 if a0 == 2\n      : @577 (gas: 1)\n 16775: jump @956\n      : @578 (gas: 10)\n 16778: a0 = s1 + 0x3938\n 16782: u64 [a0 + 1600] = 0\n 16786: u64 [a0 + 1592] = 0\n 16790: u64 [a0 + 1584] = 0\n 16794: u64 [a0 + 1576] = 0\n 16798: a0 = s1 + 0x4000\n 16802: i32 a0 = a0 + 0xffffffffffffff60\n 16806: ra = 0x25a\n 16810: ecalli 15 // 'value_transferred'\n 16812: fallthrough\n      : @579 [@dyn 301] (gas: 3)\n 16813: a3 = s1 + 0x3938\n 16817: a4 = a3 + 0x600\n 16821: t0 = 604, jump @1608\n      : @580 [@dyn 302] (gas: 1)\n 16827: jump @582 if a0 == 0\n      : @581 (gas: 1)\n 16830: jump @779\n      : @582 (gas: 3)\n 16833: a0 = s1 + 0x1640\n 16837: a1 = 0x40\n 16840: ra = 606, jump @2\n      : @583 [@dyn 303] (gas: 14)\n 16846: a2 = s1 + 0x1138\n 16850: t0 = u64 [a2 + 0x520]\n 16854: a1 = a2 + 0x500\n 16858: a5 = u64 [a1 + 0x18]\n 16861: a4 = u64 [a1 + 0x10]\n 16864: a0 = u64 [a1 + 0x8]\n 16867: a3 = a4 | t0\n 16870: a1 = a0 | a5\n 16873: a1 = a1 | a3\n 16876: a1 = a1 >> 0x20\n 16879: a3 = a3 | a5\n 16882: a3 = a3 << 0x20\n 16885: a1 = a1 | a3\n 16888: jump @585 if a1 == 0\n      : @584 (gas: 1)\n 16891: jump @993\n      : @585 (gas: 11)\n 16894: u64 [a2 + 1272] = 0\n 16898: u64 [a2 + 1264] = 0\n 16902: u64 [a2 + 1256] = 0\n 16906: a3 = 0x8c379a000000000\n 16916: a1 = s1 + 0x1620\n 16920: u64 [a2 + 0x500] = a3\n 16924: u64 [s1 + 0x1b8] = a0\n 16928: u64 [s1 + 0x1b0] = a4\n 16932: u64 [s1 + 0x1a0] = t0\n 16936: u64 [s1 + 0x1a8] = a5\n 16940: ra = 608, jump @4\n      : @586 [@dyn 304] (gas: 1)\n 16946: t0 = 610, jump @1561\n      : @587 [@dyn 305] (gas: 1)\n 16952: jump @589 if a0 != 0\n      : @588 (gas: 1)\n 16955: jump @993\n      : @589 (gas: 10)\n 16958: i32 a0 = a1 + 0x4\n 16961: a2 = s1 + 0x1138\n 16965: u64 [a2 + 1248] = 0\n 16969: u64 [a2 + 1240] = 0\n 16973: u64 [a2 + 1224] = 0x20\n 16978: a1 = s1 + 0x1600\n 16982: u64 [a2 + 1232] = 0\n 16986: u64 [s1 + 0x1a8] = a3\n 16990: u64 [s1 + 0x1a0] = a4\n 16994: ra = 612, jump @4\n      : @590 [@dyn 306] (gas: 10)\n 17000: a3 = s1 + 0x100\n 17004: a1 = u64 [a3 + 0xb8]\n 17008: a0 = u64 [a3 + 0xa0]\n 17012: a0 = a0 + 0xffffffffffffffdc\n 17015: a0 = a1 <u a0\n 17018: a2 = u64 [a3 + 0xb0]\n 17022: a0 = 0 if a2 != 0\n 17024: a2 = u64 [a3 + 0xa8]\n 17028: a0 = 0 if a2 != 0\n 17030: jump @592 if a0 != 0\n      : @591 (gas: 1)\n 17033: jump @993\n      : @592 (gas: 8)\n 17036: i32 a0 = a1 + 0x24\n 17039: a2 = s1 + 0x1138\n 17043: u64 [a2 + 1216] = 0\n 17047: u64 [a2 + 1208] = 0\n 17051: u64 [a2 + 1192] = 0x21\n 17056: a1 = s1 + 0x15e0\n 17060: u64 [a2 + 1200] = 0\n 17064: ra = 614, jump @4\n      : @593 [@dyn 307] (gas: 10)\n 17070: a0 = s1 + 0x100\n 17074: a3 = u64 [a0 + 0xa8]\n 17078: a4 = u64 [a0 + 0xb0]\n 17082: a1 = u64 [a0 + 0xb8]\n 17086: a2 = 0x100000000\n 17096: a0 = 0xffffffbc\n 17106: a0 = a1 <u a0\n 17109: a0 = 0 if a4 != 0\n 17111: a0 = 0 if a3 != 0\n 17113: jump @595 if a0 != 0\n      : @594 (gas: 1)\n 17116: jump @993\n      : @595 (gas: 14)\n 17119: i32 a0 = a1 + 0x44\n 17122: a1 = u64 [0x200c0]\n 17127: u64 [s1 + 0x1a0] = a2\n 17131: a5 = s1 + 0x1138\n 17135: a4 = a5 + 0x400\n 17139: u64 [a4 + 0xa0] = a1\n 17143: a1 = u64 [0x200c8]\n 17148: a2 = u64 [0x200d0]\n 17153: a3 = u64 [0x200d8]\n 17158: u64 [a4 + 0x98] = a1\n 17162: u64 [a4 + 0x90] = a2\n 17166: a1 = s1 + 0x15c0\n 17170: u64 [a4 + 0x88] = a3\n 17174: ra = 616, jump @4\n      : @596 [@dyn 308] (gas: 10)\n 17180: a3 = s1 + 0x100\n 17184: a2 = u64 [a3 + 0xb8]\n 17188: a0 = u64 [a3 + 0xa0]\n 17192: a0 = a0 + 0xffffffffffffff9c\n 17195: a0 = a2 <u a0\n 17198: a1 = u64 [a3 + 0xb0]\n 17202: a0 = 0 if a1 != 0\n 17204: a1 = u64 [a3 + 0xa8]\n 17208: a0 = 0 if a1 != 0\n 17210: jump @598 if a0 != 0\n      : @597 (gas: 1)\n 17213: jump @993\n      : @598 (gas: 9)\n 17216: i32 a0 = a2 + 0x64\n 17219: a3 = s1 + 0x1138\n 17223: u64 [a3 + 1144] = 0\n 17227: u64 [a3 + 1136] = 0\n 17231: a1 = 0x3000000000000000\n 17241: u64 [a3 + 0x480] = a1\n 17245: a1 = s1 + 0x15a0\n 17249: u64 [a3 + 1128] = 0\n 17253: ra = 618, jump @4\n      : @599 [@dyn 309] (gas: 3)\n 17259: a1 = 0x84\n 17263: a0 = u64 [s1 + 0x1b8]\n 17267: ra = 620, jump @16\n      : @600 [@dyn 310] (gas: 5)\n 17273: i32 a1 = a0 + 0\n 17275: a0 = 0x1\n 17278: a2 = 0x84\n 17282: ecalli 12 // 'seal_return'\n 17284: fallthrough\n      : @601 (gas: 9)\n 17285: a0 = s1 + 0x3938\n 17289: u64 [a0 + 32] = 0\n 17292: u64 [a0 + 24] = 0\n 17295: u64 [a0 + 16] = 0\n 17298: u64 [a0 + 8] = 0\n 17301: a0 = s1 + 0x4000\n 17305: i32 a0 = a0 + 0xfffffffffffff940\n 17309: ecalli 15 // 'value_transferred'\n 17311: fallthrough\n      : @602 (gas: 9)\n 17312: a3 = s1 + 0x3938\n 17316: a0 = u64 [a3 + 0x18]\n 17319: a1 = u64 [a3 + 0x20]\n 17322: a2 = u64 [a3 + 0x10]\n 17325: a3 = u64 [a3 + 0x8]\n 17328: a1 = a1 | a2\n 17331: a0 = a0 | a3\n 17334: a0 = a0 | a1\n 17337: jump @604 if a0 == 0\n      : @603 (gas: 1)\n 17340: jump @1183\n      : @604 (gas: 3)\n 17343: a0 = u64 [s1 + 0x1b8]\n 17347: a0 = i32 [a0]\n 17349: jump @606 if a0 >u 3\n      : @605 (gas: 1)\n 17353: jump @1184\n      : @606 (gas: 4)\n 17356: a0 = s1 + 0x7ff\n 17360: a0 = a0 + 0x1a1\n 17364: a1 = 0x40\n 17367: ra = 622, jump @2\n      : @607 [@dyn 311] (gas: 7)\n 17373: a3 = s1 + 0x7ff\n 17377: a3 = a3 + 0x131\n 17381: a4 = u64 [a3 + 0x88]\n 17385: a1 = u64 [a3 + 0x80]\n 17389: a2 = u64 [a3 + 0x78]\n 17392: a0 = u64 [a3 + 0x70]\n 17395: t0 = 624, jump @1593\n      : @608 [@dyn 312] (gas: 1)\n 17401: jump @610 if a1 == 0\n      : @609 (gas: 1)\n 17404: jump @993\n      : @610 (gas: 9)\n 17407: u64 [a3 + 104] = 0\n 17410: u64 [a3 + 96] = 0\n 17413: u64 [a3 + 80] = 0xa\n 17417: a1 = s1 + 0x7ff\n 17421: a1 = a1 + 0x181\n 17425: u64 [a3 + 88] = 0\n 17428: u64 [s1 + 0x1b8] = a0\n 17432: ra = 0x2ca\n 17436: jump @4\n      : @611 (gas: 11)\n 17439: u64 [a2 + 1088] = 0\n 17443: u64 [a2 + 1080] = 0\n 17447: u64 [a2 + 1072] = 0\n 17451: u64 [a2 + 1064] = 0\n 17455: a0 = s1 + 0x4000\n 17459: i32 a0 = a0 + 0x560\n 17463: ra = 0x272\n 17467: ecalli 15 // 'value_transferred'\n 17469: a0 = 0x4000\n 17473: t0 = 0x274\n 17477: jump @1607\n      : @612 [@dyn 313] (gas: 2)\n 17480: a0 = 0x4000\n 17484: t0 = 628, jump @1607\n      : @613 [@dyn 314] (gas: 1)\n 17490: t0 = 630, jump @1608\n      : @614 [@dyn 315] (gas: 1)\n 17496: jump @616 if a0 == 0\n      : @615 (gas: 1)\n 17499: jump @1185\n      : @616 (gas: 3)\n 17502: a0 = u64 [s1 + 0x1b8]\n 17506: a0 = i32 [a0]\n 17508: jump @618 if a0 >u 3\n      : @617 (gas: 1)\n 17512: jump @1186\n      : @618 (gas: 3)\n 17515: a0 = s1 + 0x32a0\n 17519: a1 = 0x40\n 17522: ra = 632, jump @2\n      : @619 [@dyn 316] (gas: 7)\n 17528: a3 = s1 + 0x3138\n 17532: a5 = a3 + 0x100\n 17536: a4 = u64 [a5 + 0x80]\n 17540: a1 = u64 [a5 + 0x78]\n 17543: a2 = u64 [a5 + 0x70]\n 17546: a0 = u64 [a5 + 0x68]\n 17549: t0 = 634, jump @1593\n      : @620 [@dyn 317] (gas: 1)\n 17555: jump @622 if a1 == 0\n      : @621 (gas: 1)\n 17558: jump @993\n      : @622 (gas: 8)\n 17561: u64 [a3 + 352] = 0\n 17565: u64 [a3 + 344] = 0\n 17569: u64 [a3 + 328] = 0x5a\n 17574: a1 = s1 + 0x3280\n 17578: u64 [a3 + 336] = 0\n 17582: u64 [s1 + 0x1b8] = a0\n 17586: ra = 0x2ca\n 17590: jump @4\n      : @623 (gas: 8)\n 17593: u64 [a3 + 1728] = 0\n 17597: u64 [a3 + 1720] = 0\n 17601: u64 [a3 + 1712] = 0\n 17605: u64 [a3 + 1704] = 0\n 17609: a0 = s1 + 0x3000\n 17613: i32 a0 = a0 + 0x7e0\n 17617: ecalli 15 // 'value_transferred'\n 17619: fallthrough\n      : @624 (gas: 10)\n 17620: a4 = s1 + 0x3138\n 17624: a5 = a4 + 0x600\n 17628: a0 = u64 [a5 + 0xb8]\n 17632: a1 = u64 [a5 + 0xc0]\n 17636: a2 = u64 [a5 + 0xb0]\n 17640: a3 = u64 [a5 + 0xa8]\n 17644: a1 = a1 | a2\n 17647: a0 = a0 | a3\n 17650: a0 = a0 | a1\n 17653: jump @626 if a0 == 0\n      : @625 (gas: 1)\n 17656: jump @1187\n      : @626 (gas: 3)\n 17659: a0 = u64 [s1 + 0x1b8]\n 17663: a0 = i32 [a0]\n 17665: jump @628 if a0 >u 3\n      : @627 (gas: 1)\n 17669: jump @1188\n      : @628 (gas: 8)\n 17672: u64 [a4 + 1760] = 0\n 17676: u64 [a4 + 1752] = 0\n 17680: u64 [a4 + 1744] = 0\n 17684: u64 [a4 + 1736] = 0\n 17688: a0 = s1 + 0x7ff\n 17692: a0 = a0 + 0x161\n 17696: a1 = s1 + 0x3800\n 17700: ra = 636, jump @6\n      : @629 [@dyn 318] (gas: 44)\n 17706: a0 = s1 + 0x7ff\n 17710: a0 = a0 + 0x131\n 17714: a1 = u64 [a0 + 0x38]\n 17717: u64 [s1 + 0x1b8] = a1\n 17721: a1 = u64 [a0 + 0x30]\n 17724: u64 [s1 + 0x1b0] = a1\n 17728: a0 = u32 [a0 + 0x40]\n 17731: u64 [s1 + 0x1a8] = a0\n 17735: a0 = 0x301a0\n 17740: u64 [s1 + 0x160] = a0\n 17744: i32 a0 = a0 + 0\n 17746: ecalli 4 // 'caller'\n 17748: a2 = u64 [s1 + 0x160]\n 17752: a0 = u64 [a2 + 0x8]\n 17755: a1 = u64 [a2]\n 17757: a2 = i32 [a2 + 0x10]\n 17760: a0 = reverse a0\n 17762: a3 = a0 >> 0x20\n 17765: a1 = reverse a1\n 17767: a4 = a1 << 0x20\n 17770: a3 = a3 | a4\n 17773: a0 = a0 << 0x20\n 17776: a2 = reverse a2\n 17778: a2 = a2 >> 0x20\n 17781: a0 = a0 | a2\n 17784: a1 = a1 >> 0x20\n 17787: a2 = u64 [s1 + 0x1a8]\n 17791: a1 = a1 ^ a2\n 17794: a2 = u64 [s1 + 0x1b0]\n 17798: a0 = a0 ^ a2\n 17801: a0 = a0 | a1\n 17804: a1 = u64 [s1 + 0x1b8]\n 17808: a1 = a1 ^ a3\n 17811: a0 = a0 | a1\n 17814: a0 = a0 <u 0x1\n 17817: a1 = s1 + 0x7ff\n 17821: a1 = a1 + 0x131\n 17825: u64 [a1 + 40] = 0\n 17828: u64 [a1 + 32] = 0\n 17831: u64 [a1 + 0x10] = a0\n 17834: a0 = s1 + 0x7ff\n 17838: a0 = a0 + 0x141\n 17842: u64 [a1 + 24] = 0\n 17845: ra = 638, jump @1353\n      : @630 [@dyn 319] (gas: 11)\n 17851: u64 [s1 + 384] = 0\n 17855: u64 [s1 + 376] = 0\n 17859: u64 [s1 + 368] = 0\n 17863: u64 [s1 + 360] = 0\n 17867: u64 [s1 + 424] = 0\n 17871: u64 [s1 + 432] = 0\n 17875: u64 [s1 + 440] = 0\n 17879: a0 = 0x20194\n 17884: u64 [s1 + 0x198] = a0\n 17888: a0 = 0x1\n 17891: fallthrough\n      : @631 (gas: 10)\n 17892: u64 [s1 + 0x1a0] = a0\n 17896: a0 = s1 + 0x3138\n 17900: u64 [a0 + 1792] = 0\n 17904: u64 [a0 + 1784] = 0\n 17908: u64 [a0 + 1776] = 0\n 17912: u64 [a0 + 1768] = 0x1\n 17917: a0 = s1 + 0x7ff\n 17921: a0 = a0 + 0x121\n 17925: a1 = s1 + 0x3820\n 17929: ra = 640, jump @6\n      : @632 [@dyn 320] (gas: 24)\n 17935: a0 = s1 + 0x1000\n 17939: a0 = u64 [a0 + 0xfffffffffffff928]\n 17943: a1 = s1 + 0x1000\n 17947: a1 = u64 [a1 + 0xfffffffffffff920]\n 17951: a3 = s1 + 0x7ff\n 17955: a3 = a3 + 0x131\n 17959: t0 = u64 [a3]\n 17961: a3 = u64 [a3 + 0x8]\n 17964: t1 = u64 [s1 + 0x1a8]\n 17968: a4 = t1 ^ a0\n 17971: a0 = a0 <u t1\n 17974: t2 = u64 [s1 + 0x1a0]\n 17978: a1 = a1 <u t2\n 17981: a1 = a0 if a4 != 0\n 17984: a5 = u64 [s1 + 0x1b8]\n 17988: a0 = a5 ^ a3\n 17991: a2 = a3 <u a5\n 17994: a3 = u64 [s1 + 0x1b0]\n 17998: a4 = t0 <u a3\n 18001: a4 = a2 if a0 != 0\n 18004: a2 = a3 ^ t0\n 18007: a0 = a0 | a2\n 18010: a1 = a4 if a0 != 0\n 18013: jump @715 if a1 != 0\n      : @633 (gas: 12)\n 18017: a1 = s1 + 0x1000\n 18021: u64 [a1 + 0xfffffffffffff900] = t2\n 18025: a1 = s1 + 0x1000\n 18029: u64 [a1 + 0xfffffffffffff908] = t1\n 18033: a1 = s1 + 0x1000\n 18037: u64 [a1 + 0xfffffffffffff910] = a3\n 18041: a1 = s1 + 0x7ff\n 18045: a1 = a1 + 0x101\n 18049: a2 = s1 + 0x1000\n 18053: u64 [a2 + 0xfffffffffffff918] = a5\n 18057: a0 = 0\n 18059: ra = 642, jump @4\n      : @634 [@dyn 321] (gas: 12)\n 18065: a0 = s1 + 0x1000\n 18069: u64 [a0 + 4294965496] = 0\n 18073: a0 = s1 + 0x1000\n 18077: u64 [a0 + 4294965488] = 0\n 18081: a0 = s1 + 0x1000\n 18085: u64 [a0 + 4294965480] = 0\n 18089: a0 = 0x20\n 18092: a1 = s1 + 0x7ff\n 18096: a1 = a1 + 0xe1\n 18100: a3 = s1 + 0x1000\n 18104: u64 [a3 + 4294965472] = 0x2\n 18109: ra = 644, jump @4\n      : @635 [@dyn 322] (gas: 3)\n 18115: a1 = u64 [s1 + 0x198]\n 18119: a0 = i32 [a1]\n 18121: jump @637 if a0 >u 63\n      : @636 (gas: 2)\n 18125: u32 [a1 + 0] = 0x40\n 18128: fallthrough\n      : @637 (gas: 12)\n 18129: a0 = sp + 0xffffffffffffffe0\n 18132: a2 = a0 & 0xffffffffffffffe0\n 18135: u64 [s1 + 0x188] = a2\n 18139: sp = a2\n 18141: a0 = 0x201a0\n 18146: i32 a0 = a0 + 0\n 18148: i32 a2 = a2 + 0\n 18150: a1 = 0x40\n 18153: u64 [s1 + 0x190] = a0\n 18157: ra = 0x286\n 18161: ecalli 7 // 'hash_keccak_256'\n 18163: fallthrough\n      : @638 [@dyn 323] (gas: 6)\n 18164: a3 = u64 [s1 + 0x188]\n 18168: a0 = u64 [a3]\n 18170: a1 = u64 [a3 + 0x8]\n 18173: a2 = u64 [a3 + 0x10]\n 18176: a3 = u64 [a3 + 0x18]\n 18179: t0 = 648, jump @1606\n      : @639 [@dyn 324] (gas: 18)\n 18185: a4 = a3 + 0x8\n 18188: a3 = a4 <u a3\n 18191: a5 = a2 + a3\n 18194: a2 = a5 <u a2\n 18197: a2 = a3 if a3 == 0\n 18200: a2 = a2 + a1\n 18203: a1 = a2 <u a1\n 18206: a0 = a0 + a1\n 18209: a1 = s1 + 0x3138\n 18213: a3 = a1 + 0x700\n 18217: u64 [a3 + 0x8] = a4\n 18220: u64 [a3 + 0x10] = a5\n 18223: u64 [a3 + 0x18] = a2\n 18226: u64 [a3 + 0x20] = a0\n 18229: a0 = s1 + 0x7ff\n 18233: a0 = a0 + 0xc1\n 18237: a1 = s1 + 0x3840\n 18241: ra = 650, jump @6\n      : @640 [@dyn 325] (gas: 3)\n 18247: a0 = s1 + 0x1000\n 18251: a0 = u8 [a0 + 0xfffffffffffff8c0]\n 18255: jump @658 if a0 == 0\n      : @641 (gas: 16)\n 18259: a0 = u64 [s1 + 0x1a0]\n 18263: a1 = s1 + 0x1000\n 18267: u64 [a1 + 0xfffffffffffff8a0] = a0\n 18271: a0 = u64 [s1 + 0x1a8]\n 18275: a1 = s1 + 0x1000\n 18279: u64 [a1 + 0xfffffffffffff8a8] = a0\n 18283: a0 = u64 [s1 + 0x1b0]\n 18287: a1 = s1 + 0x1000\n 18291: u64 [a1 + 0xfffffffffffff8b0] = a0\n 18295: a1 = s1 + 0x7ff\n 18299: a1 = a1 + 0xa1\n 18303: a0 = u64 [s1 + 0x1b8]\n 18307: a2 = s1 + 0x1000\n 18311: u64 [a2 + 0xfffffffffffff8b8] = a0\n 18315: a0 = 0\n 18317: ra = 652, jump @4\n      : @642 [@dyn 326] (gas: 12)\n 18323: a0 = s1 + 0x1000\n 18327: u64 [a0 + 4294965400] = 0\n 18331: a0 = s1 + 0x1000\n 18335: u64 [a0 + 4294965392] = 0\n 18339: a0 = s1 + 0x1000\n 18343: u64 [a0 + 4294965384] = 0\n 18347: a0 = 0x20\n 18350: a1 = s1 + 0x7ff\n 18354: a1 = a1 + 0x81\n 18358: a3 = s1 + 0x1000\n 18362: u64 [a3 + 4294965376] = 0x2\n 18367: ra = 654, jump @4\n      : @643 [@dyn 327] (gas: 3)\n 18373: a1 = u64 [s1 + 0x198]\n 18377: a0 = i32 [a1]\n 18379: jump @645 if a0 >u 63\n      : @644 (gas: 3)\n 18383: u32 [a1 + 0] = 0x40\n 18386: t0 = 0x290\n 18390: jump @1619\n      : @645 (gas: 1)\n 18393: t0 = 656, jump @1619\n      : @646 [@dyn 328] (gas: 4)\n 18399: ra = 0x292\n 18403: ecalli 7 // 'hash_keccak_256'\n 18405: t0 = 0x294\n 18409: jump @1570\n      : @647 [@dyn 329] (gas: 1)\n 18412: t0 = 660, jump @1570\n      : @648 [@dyn 330] (gas: 8)\n 18418: u64 [a3 + 0x28] = a4\n 18421: u64 [a3 + 0x30] = a5\n 18424: u64 [a3 + 0x38] = a2\n 18427: u64 [a3 + 0x40] = a0\n 18430: a0 = s1 + 0x7ff\n 18434: a0 = a0 + 0x61\n 18437: a1 = s1 + 0x3860\n 18441: ra = 662, jump @6\n      : @649 [@dyn 331] (gas: 35)\n 18447: a0 = s1 + 0x1000\n 18451: a0 = u64 [a0 + 0xfffffffffffff860]\n 18455: a1 = s1 + 0x1000\n 18459: a1 = u64 [a1 + 0xfffffffffffff868]\n 18463: a2 = s1 + 0x1000\n 18467: a2 = u64 [a2 + 0xfffffffffffff870]\n 18471: a3 = s1 + 0x1000\n 18475: a3 = u64 [a3 + 0xfffffffffffff878]\n 18479: a4 = s1 + 0x1000\n 18483: u64 [a4 + 0xfffffffffffff818] = a3\n 18487: a3 = s1 + 0x1000\n 18491: u64 [a3 + 0xfffffffffffff810] = a2\n 18495: a2 = s1 + 0x1000\n 18499: u64 [a2 + 0xfffffffffffff808] = a1\n 18503: a1 = s1 + 0x1000\n 18507: u64 [a1 + 0xfffffffffffff800] = a0\n 18511: a0 = u64 [s1 + 0x168]\n 18515: a1 = s1 + 0x1000\n 18519: u64 [a1 + 0xfffffffffffff838] = a0\n 18523: a0 = u64 [s1 + 0x170]\n 18527: a1 = s1 + 0x1000\n 18531: u64 [a1 + 0xfffffffffffff830] = a0\n 18535: a0 = u64 [s1 + 0x178]\n 18539: a1 = s1 + 0x1000\n 18543: u64 [a1 + 0xfffffffffffff828] = a0\n 18547: a0 = s1 + 0x7ff\n 18551: a0 = a0 + 0x41\n 18554: a1 = s1 + 0x7ff\n 18558: a1 = a1 + 0x21\n 18561: a2 = s1 + 0x7ff\n 18565: a2 = a2 + 0x1\n 18568: a3 = u64 [s1 + 0x180]\n 18572: a4 = s1 + 0x1000\n 18576: u64 [a4 + 0xfffffffffffff820] = a3\n 18580: ra = 664, jump @1380\n      : @650 [@dyn 332] (gas: 23)\n 18586: a0 = s1 + 0x1000\n 18590: a0 = u64 [a0 + 0xfffffffffffff858]\n 18594: u64 [s1 + 0x168] = a0\n 18598: a0 = s1 + 0x1000\n 18602: a0 = u64 [a0 + 0xfffffffffffff850]\n 18606: u64 [s1 + 0x170] = a0\n 18610: a0 = s1 + 0x1000\n 18614: a0 = u64 [a0 + 0xfffffffffffff848]\n 18618: u64 [s1 + 0x178] = a0\n 18622: a0 = s1 + 0x1000\n 18626: a0 = u64 [a0 + 0xfffffffffffff840]\n 18630: u64 [s1 + 0x180] = a0\n 18634: a0 = u64 [s1 + 0x1b8]\n 18638: u64 [s1 + 0x7f8] = a0\n 18642: a0 = u64 [s1 + 0x1b0]\n 18646: u64 [s1 + 0x7f0] = a0\n 18650: a0 = u64 [s1 + 0x1a8]\n 18654: u64 [s1 + 0x7e8] = a0\n 18658: a1 = s1 + 0x7e0\n 18662: a0 = u64 [s1 + 0x1a0]\n 18666: u64 [s1 + 0x7e0] = a0\n 18670: a0 = 0\n 18672: ra = 666, jump @4\n      : @651 [@dyn 333] (gas: 7)\n 18678: u64 [s1 + 2008] = 0\n 18682: u64 [s1 + 2000] = 0\n 18686: u64 [s1 + 1992] = 0\n 18690: a0 = 0x20\n 18693: a1 = s1 + 0x7c0\n 18697: u64 [s1 + 1984] = 0x2\n 18702: ra = 668, jump @4\n      : @652 [@dyn 334] (gas: 3)\n 18708: a1 = u64 [s1 + 0x198]\n 18712: a0 = i32 [a1]\n 18714: jump @654 if a0 >u 63\n      : @653 (gas: 3)\n 18718: u32 [a1 + 0] = 0x40\n 18721: t0 = 0x29e\n 18725: jump @1619\n      : @654 (gas: 1)\n 18728: t0 = 670, jump @1619\n      : @655 [@dyn 335] (gas: 4)\n 18734: ra = 0x2a0\n 18738: ecalli 7 // 'hash_keccak_256'\n 18740: t0 = 0x2a2\n 18744: jump @1570\n      : @656 [@dyn 336] (gas: 1)\n 18747: t0 = 674, jump @1570\n      : @657 [@dyn 337] (gas: 11)\n 18753: u64 [a3 + 0x48] = a4\n 18756: u64 [a3 + 0x50] = a5\n 18759: u64 [a3 + 0x58] = a2\n 18762: u64 [a3 + 0x60] = a0\n 18765: u64 [a1 + 1920] = 0\n 18769: u64 [a1 + 1912] = 0\n 18773: u64 [a1 + 1904] = 0\n 18777: u64 [a1 + 1896] = 0\n 18781: a0 = s1 + 0x3880\n 18785: a1 = s1 + 0x38a0\n 18789: ra = 676, jump @9\n      : @658 [@dyn 338] (gas: 11)\n 18795: a2 = u64 [s1 + 0x1b8]\n 18799: a0 = u64 [s1 + 0x1b0]\n 18803: a1 = u64 [s1 + 0x1a8]\n 18807: a3 = u64 [s1 + 0x1a0]\n 18811: u64 [s1 + 0x780] = a3\n 18815: u64 [s1 + 0x788] = a1\n 18819: u64 [s1 + 0x790] = a0\n 18823: a0 = s1 + 0x7a0\n 18827: a1 = s1 + 0x780\n 18831: u64 [s1 + 0x798] = a2\n 18835: ra = 678, jump @1372\n      : @659 [@dyn 339] (gas: 10)\n 18841: a1 = s1 + 0x700\n 18845: a0 = u64 [a1 + 0xb8]\n 18849: a2 = s1 + 0x100\n 18853: u64 [a2 + 0xb8] = a0\n 18857: a0 = u64 [a1 + 0xb0]\n 18861: u64 [a2 + 0xb0] = a0\n 18865: a0 = u64 [a1 + 0xa8]\n 18869: u64 [a2 + 0xa8] = a0\n 18873: a0 = u64 [a1 + 0xa0]\n 18877: jump @631\n      : @660 (gas: 9)\n 18880: a0 = s1 + 0x3938\n 18884: u64 [a0 + 1408] = 0\n 18888: u64 [a0 + 1400] = 0\n 18892: u64 [a0 + 1392] = 0\n 18896: u64 [a0 + 1384] = 0\n 18900: a0 = s1 + 0x4000\n 18904: i32 a0 = a0 + 0xfffffffffffffea0\n 18908: ecalli 15 // 'value_transferred'\n 18910: fallthrough\n      : @661 (gas: 10)\n 18911: a4 = s1 + 0x3938\n 18915: a5 = a4 + 0x500\n 18919: a0 = u64 [a5 + 0x78]\n 18922: a1 = u64 [a5 + 0x80]\n 18926: a2 = u64 [a5 + 0x70]\n 18929: a3 = u64 [a5 + 0x68]\n 18932: a1 = a1 | a2\n 18935: a0 = a0 | a3\n 18938: a0 = a0 | a1\n 18941: jump @663 if a0 == 0\n      : @662 (gas: 1)\n 18944: jump @1189\n      : @663 (gas: 3)\n 18947: a0 = u64 [s1 + 0x1b8]\n 18951: a0 = i32 [a0]\n 18953: jump @665 if a0 >u 3\n      : @664 (gas: 1)\n 18957: jump @1190\n      : @665 (gas: 7)\n 18960: u64 [a4 + 1440] = 0\n 18964: u64 [a4 + 1432] = 0\n 18968: u64 [a4 + 1424] = 0\n 18972: u64 [a4 + 1416] = 0\n 18976: a0 = s1 + 0x1540\n 18980: a1 = s1 + 0x3ec0\n 18984: ra = 680, jump @6\n      : @666 [@dyn 340] (gas: 3)\n 18990: t0 = 0x2aa\n 18994: a1 = s1 + 0x1138\n 18998: fallthrough\n      : @667 [@dyn 341] (gas: 11)\n 18999: a2 = a1 + 0x400\n 19003: a0 = u64 [a2 + 0x18]\n 19006: a1 = s1 + 0x100\n 19010: u64 [a1 + 0xa8] = a0\n 19014: a0 = u64 [a2 + 0x10]\n 19017: u64 [a1 + 0xb8] = a0\n 19021: a0 = u64 [a2 + 0x8]\n 19024: u64 [a1 + 0xb0] = a0\n 19028: a0 = s1 + 0x1520\n 19032: a1 = 0x40\n 19035: ra = 684, jump @2\n      : @668 [@dyn 342] (gas: 7)\n 19041: a3 = s1 + 0x1138\n 19045: a4 = u64 [a3 + 0x400]\n 19049: a5 = a3 + 0x300\n 19053: a1 = u64 [a5 + 0xf8]\n 19057: a2 = u64 [a5 + 0xf0]\n 19061: a0 = u64 [a5 + 0xe8]\n 19065: t0 = 686, jump @1593\n      : @669 [@dyn 343] (gas: 1)\n 19071: jump @671 if a1 == 0\n      : @670 (gas: 1)\n 19074: jump @993\n      : @671 (gas: 15)\n 19077: a4 = s1 + 0x100\n 19081: a1 = u64 [a4 + 0xa8]\n 19085: a1 = a1 << 0x20\n 19088: a2 = a1 >> 0x20\n 19091: u64 [a3 + 992] = 0\n 19095: a1 = u64 [a4 + 0xb0]\n 19099: a5 = a3 + 0x300\n 19103: u64 [a5 + 0xc8] = a1\n 19107: a1 = u64 [a4 + 0xb8]\n 19111: u64 [a5 + 0xd0] = a1\n 19115: a1 = s1 + 0x1500\n 19119: u64 [a5 + 0xd8] = a2\n 19123: u64 [s1 + 0x1b8] = a0\n 19127: ra = 0x2ca\n 19131: jump @4\n      : @672 (gas: 1)\n 19134: t0 = 688, jump @1632\n      : @673 [@dyn 344] (gas: 6)\n 19140: i32 a0 = a0 + 0x600\n 19144: ra = 0x2b2\n 19148: ecalli 15 // 'value_transferred'\n 19150: a0 = 0x4000\n 19154: t0 = 0x2b4\n 19158: jump @1607\n      : @674 [@dyn 345] (gas: 2)\n 19161: a0 = 0x4000\n 19165: t0 = 692, jump @1607\n      : @675 [@dyn 346] (gas: 8)\n 19171: a0 = u64 [a4 + 0xd8]\n 19175: a1 = u64 [a4 + 0xe0]\n 19179: a2 = u64 [a4 + 0xd0]\n 19183: a3 = u64 [a4 + 0xc8]\n 19187: a1 = a1 | a2\n 19190: a0 = a0 | a3\n 19193: a0 = a0 | a1\n 19196: jump @677 if a0 == 0\n      : @676 (gas: 1)\n 19199: jump @1191\n      : @677 (gas: 1)\n 19202: t0 = 694, jump @1625\n      : @678 [@dyn 347] (gas: 1)\n 19208: jump @680 if a1 <u a0\n      : @679 (gas: 1)\n 19211: jump @1192\n      : @680 (gas: 5)\n 19214: a0 = s1 + 0x4000\n 19218: i32 a0 = a0 + 0x620\n 19222: a1 = 0x4\n 19225: ecalli 2 // 'call_data_load'\n 19227: fallthrough\n      : @681 (gas: 11)\n 19228: a4 = s1 + 0x4138\n 19232: a1 = u64 [a4 + 0x4f8]\n 19236: a0 = u64 [a4 + 0x500]\n 19240: a2 = 0x100000000\n 19250: a2 = a2 ^ a1\n 19253: a2 = a2 | a0\n 19256: a3 = a1 >> 0x20\n 19259: a3 = a3 <u 0x1\n 19262: a3 = 0 if a0 != 0\n 19264: a3 = 0 if a2 == 0\n 19266: jump @683 if a3 != 0\n      : @682 (gas: 1)\n 19269: jump @1193\n      : @683 (gas: 11)\n 19272: a2 = u64 [a4 + 0x4f0]\n 19276: a3 = u64 [a4 + 0x4e8]\n 19280: a4 = s1 + 0x3138\n 19284: a5 = a4 + 0x300\n 19288: u64 [a5 + 0x88] = a3\n 19292: u64 [a5 + 0x90] = a2\n 19296: u64 [a5 + 0x98] = a1\n 19300: a1 = s1 + 0x34c0\n 19304: u64 [a5 + 0xa0] = a0\n 19308: a0 = 0\n 19310: ra = 696, jump @4\n      : @684 [@dyn 348] (gas: 2)\n 19316: a0 = 0x3138\n 19320: t0 = 698, jump @1615\n      : @685 [@dyn 349] (gas: 4)\n 19326: i32 a1 = a1 + 0x4a0\n 19330: a1 = a1 + s1\n 19333: u64 [a2 + 880] = 0\n 19337: ra = 700, jump @4\n      : @686 [@dyn 350] (gas: 2)\n 19343: a1 = i32 [0x20194]\n 19348: jump @688 if a1 >u 63\n      : @687 (gas: 4)\n 19352: a1 = 0x40\n 19355: u32 [0x20194] = a1\n 19360: t0 = 0x2be\n 19364: jump @1603\n      : @688 (gas: 1)\n 19367: t0 = 702, jump @1603\n      : @689 [@dyn 351] (gas: 8)\n 19373: a0 = 0x201a0\n 19378: i32 a0 = a0 + 0\n 19380: i32 a2 = a2 + 0\n 19382: a1 = 0x40\n 19385: ra = 0x2c0\n 19389: ecalli 7 // 'hash_keccak_256'\n 19391: t0 = 0x2c2\n 19395: jump @1591\n      : @690 [@dyn 352] (gas: 1)\n 19398: t0 = 706, jump @1591\n      : @691 [@dyn 353] (gas: 7)\n 19404: u64 [a5 + 0x20] = a3\n 19407: u64 [a5 + 0x18] = a2\n 19410: u64 [a5 + 0x10] = a1\n 19413: u64 [a5 + 0x8] = a0\n 19416: a0 = s1 + 0x3480\n 19420: a1 = s1 + 0x4640\n 19424: ra = 708, jump @6\n      : @692 [@dyn 354] (gas: 14)\n 19430: a1 = s1 + 0x3138\n 19434: a2 = a1 + 0x300\n 19438: a0 = u64 [a2 + 0x60]\n 19441: a1 = s1 + 0x100\n 19445: u64 [a1 + 0xb8] = a0\n 19449: a0 = u64 [a2 + 0x58]\n 19452: u64 [a1 + 0xb0] = a0\n 19456: a0 = u64 [a2 + 0x50]\n 19459: u64 [a1 + 0xa8] = a0\n 19463: a0 = u64 [a2 + 0x48]\n 19466: u64 [a1 + 0xa0] = a0\n 19470: a0 = s1 + 0x3460\n 19474: a1 = 0x40\n 19477: ra = 710, jump @2\n      : @693 [@dyn 355] (gas: 7)\n 19483: a3 = s1 + 0x3138\n 19487: a5 = a3 + 0x300\n 19491: a0 = u64 [a5 + 0x40]\n 19494: a1 = u64 [a5 + 0x38]\n 19497: a2 = u64 [a5 + 0x30]\n 19500: a4 = u64 [a5 + 0x28]\n 19503: t0 = 712, jump @1577\n      : @694 [@dyn 356] (gas: 1)\n 19509: jump @696 if a0 == 0\n      : @695 (gas: 1)\n 19512: jump @993\n      : @696 (gas: 14)\n 19515: a2 = s1 + 0x100\n 19519: a0 = u64 [a2 + 0xa0]\n 19523: a5 = a3 + 0x300\n 19527: u64 [a5 + 0x8] = a0\n 19530: a0 = u64 [a2 + 0xa8]\n 19534: u64 [a5 + 0x10] = a0\n 19537: a0 = u64 [a2 + 0xb0]\n 19541: u64 [a5 + 0x18] = a0\n 19544: a1 = s1 + 0x3440\n 19548: a0 = u64 [a2 + 0xb8]\n 19552: u64 [a5 + 0x20] = a0\n 19555: a0 = a4\n 19557: u64 [s1 + 0x1b8] = a4\n 19561: ra = 714, jump @4\n      : @697 [@dyn 357] (gas: 3)\n 19567: a1 = 0x20\n 19570: a0 = u64 [s1 + 0x1b8]\n 19574: ra = 716, jump @16\n      : @698 [@dyn 358] (gas: 5)\n 19580: i32 a1 = a0 + 0\n 19582: a2 = 0x20\n 19585: a0 = 0\n 19587: ecalli 12 // 'seal_return'\n 19589: fallthrough\n      : @699 (gas: 10)\n 19590: u64 [a2 + 1440] = 0\n 19594: u64 [a2 + 1432] = 0\n 19598: u64 [a2 + 1424] = 0\n 19602: u64 [a2 + 1416] = 0\n 19606: a0 = s1 + 0x4000\n 19610: i32 a0 = a0 + 0x6c0\n 19614: ra = 0x2ce\n 19618: ecalli 15 // 'value_transferred'\n 19620: t0 = 0x2d0\n 19624: jump @1616\n      : @700 [@dyn 359] (gas: 1)\n 19627: t0 = 720, jump @1616\n      : @701 [@dyn 360] (gas: 8)\n 19633: a0 = u64 [a4 + 0x98]\n 19637: a1 = u64 [a4 + 0xa0]\n 19641: a2 = u64 [a4 + 0x90]\n 19645: a3 = u64 [a4 + 0x88]\n 19649: a1 = a1 | a2\n 19652: a0 = a0 | a3\n 19655: a0 = a0 | a1\n 19658: jump @703 if a0 == 0\n      : @702 (gas: 1)\n 19661: jump @1194\n      : @703 (gas: 1)\n 19664: t0 = 722, jump @1625\n      : @704 [@dyn 361] (gas: 1)\n 19670: jump @706 if a1 <u a0\n      : @705 (gas: 1)\n 19673: jump @1195\n      : @706 (gas: 7)\n 19676: a0 = s1 + 0x4000\n 19680: i32 a0 = a0 + 0x6e0\n 19684: a1 = 0x4\n 19687: ra = 0x2d4\n 19691: ecalli 2 // 'call_data_load'\n 19693: t0 = 0x2d6\n 19697: jump @1616\n      : @707 [@dyn 362] (gas: 1)\n 19700: t0 = 726, jump @1616\n      : @708 [@dyn 363] (gas: 13)\n 19706: a2 = u64 [a4 + 0xa8]\n 19710: a0 = u64 [a4 + 0xb0]\n 19714: a1 = u64 [a4 + 0xb8]\n 19718: a3 = u64 [a4 + 0xc0]\n 19722: a4 = s1 + 0x3138\n 19726: a5 = a4 + 0x400\n 19730: u64 [a5 + 0xc0] = a3\n 19734: u64 [a5 + 0xb8] = a1\n 19738: u64 [a5 + 0xb0] = a0\n 19742: a0 = s1 + 0x3600\n 19746: a1 = s1 + 0x35e0\n 19750: u64 [a5 + 0xa8] = a2\n 19754: ra = 728, jump @1480\n      : @709 [@dyn 364] (gas: 13)\n 19760: a1 = s1 + 0x3138\n 19764: a2 = a1 + 0x400\n 19768: a0 = u64 [a2 + 0xc8]\n 19772: u64 [s1 + 0x1b8] = a0\n 19776: a0 = u64 [a2 + 0xd0]\n 19780: u64 [s1 + 0x1b0] = a0\n 19784: a0 = u64 [a2 + 0xd8]\n 19788: u64 [s1 + 0x1a8] = a0\n 19792: a0 = u64 [a2 + 0xe0]\n 19796: u64 [s1 + 0x1a0] = a0\n 19800: a0 = s1 + 0x35c0\n 19804: a1 = 0x40\n 19807: ra = 730, jump @2\n      : @710 [@dyn 365] (gas: 26)\n 19813: a0 = s1 + 0x3138\n 19817: a5 = a0 + 0x400\n 19821: a1 = u64 [a5 + 0xa0]\n 19825: u64 [s1 + 0x198] = a1\n 19829: a2 = u64 [a5 + 0x98]\n 19833: u64 [s1 + 0x190] = a2\n 19837: a3 = u64 [a5 + 0x90]\n 19841: u64 [s1 + 0x188] = a3\n 19845: a4 = u64 [a5 + 0x88]\n 19849: u64 [s1 + 0x180] = a4\n 19853: u64 [a5 + 0x60] = a1\n 19856: u64 [a5 + 0x58] = a2\n 19859: u64 [a5 + 0x50] = a3\n 19862: u64 [a5 + 0x48] = a4\n 19865: a1 = u64 [s1 + 0x1a0]\n 19869: u64 [a5 + 0x80] = a1\n 19873: a1 = u64 [s1 + 0x1a8]\n 19877: u64 [a5 + 0x78] = a1\n 19880: a1 = u64 [s1 + 0x1b0]\n 19884: u64 [a5 + 0x70] = a1\n 19887: a2 = a0\n 19889: a0 = s1 + 0x35a0\n 19893: a1 = s1 + 0x3580\n 19897: a3 = u64 [s1 + 0x1b8]\n 19901: u64 [a2 + 0x468] = a3\n 19905: ra = 732, jump @1285\n      : @711 [@dyn 366] (gas: 7)\n 19911: a4 = s1 + 0x100\n 19915: a0 = u64 [a4 + 0x80]\n 19919: a1 = u64 [a4 + 0x98]\n 19923: a2 = u64 [a4 + 0x88]\n 19927: a2 = a2 | a1\n 19930: a3 = u64 [a4 + 0x90]\n 19934: t0 = 734, jump @1601\n      : @712 [@dyn 367] (gas: 1)\n 19940: jump @714 if a1 == 0\n      : @713 (gas: 1)\n 19943: jump @993\n      : @714 (gas: 3)\n 19946: a1 = 0x20\n 19949: ra = 0x2cc\n 19953: jump @16\n      : @715 (gas: 9)\n 19956: a1 = s1 + 0x100\n 19960: a2 = u64 [a1 + 0x80]\n 19964: a4 = u64 [a1 + 0x70]\n 19967: a0 = a2 | a4\n 19970: a3 = u64 [a1 + 0x78]\n 19973: a5 = u64 [a1 + 0x68]\n 19976: a1 = a3 | a5\n 19979: a0 = a0 | a1\n 19982: jump @717 if a0 == 0\n      : @716 (gas: 1)\n 19985: jump @1196\n      : @717 (gas: 3)\n 19988: a0 = s1 + 0x700\n 19992: a1 = 0x40\n 19995: ra = 736, jump @2\n      : @718 [@dyn 368] (gas: 13)\n 20001: a1 = s1 + 0x700\n 20005: a4 = u64 [a1 + 0x18]\n 20008: a5 = u64 [a1 + 0x10]\n 20011: a3 = u64 [a1 + 0x8]\n 20014: a0 = u64 [a1]\n 20016: a2 = a3 | a4\n 20019: a1 = a0 | a5\n 20022: a1 = a1 | a2\n 20025: a1 = a1 >> 0x20\n 20028: a2 = a2 | a5\n 20031: a2 = a2 << 0x20\n 20034: a1 = a1 | a2\n 20037: jump @720 if a1 == 0\n      : @719 (gas: 1)\n 20040: jump @993\n      : @720 (gas: 11)\n 20043: u64 [s1 + 1776] = 0\n 20047: u64 [s1 + 1768] = 0\n 20051: u64 [s1 + 1760] = 0\n 20055: a2 = 0x8c379a000000000\n 20065: a1 = s1 + 0x6e0\n 20069: u64 [s1 + 0x6f8] = a2\n 20073: u64 [s1 + 0x1b8] = a0\n 20077: u64 [s1 + 0x1b0] = a3\n 20081: u64 [s1 + 0x1a8] = a4\n 20085: u64 [s1 + 0x1a0] = a5\n 20089: ra = 738, jump @4\n      : @721 [@dyn 369] (gas: 6)\n 20095: a5 = s1 + 0x100\n 20099: a1 = u64 [a5 + 0xb8]\n 20103: a0 = u64 [a5 + 0xa8]\n 20107: a3 = u64 [a5 + 0xa0]\n 20111: a3 = a3 | a0\n 20114: t0 = 740, jump @1562\n      : @722 [@dyn 370] (gas: 1)\n 20120: jump @724 if a0 != 0\n      : @723 (gas: 1)\n 20123: jump @993\n      : @724 (gas: 9)\n 20126: i32 a0 = a1 + 0x4\n 20129: u64 [s1 + 1752] = 0\n 20133: u64 [s1 + 1744] = 0\n 20137: u64 [s1 + 1728] = 0x20\n 20142: a1 = s1 + 0x6c0\n 20146: u64 [s1 + 1736] = 0\n 20150: u64 [s1 + 0x1a8] = a3\n 20154: u64 [s1 + 0x1a0] = a4\n 20158: ra = 742, jump @4\n      : @725 [@dyn 371] (gas: 1)\n 20164: t0 = 744, jump @1565\n      : @726 [@dyn 372] (gas: 1)\n 20170: jump @728 if a0 != 0\n      : @727 (gas: 1)\n 20173: jump @993\n      : @728 (gas: 7)\n 20176: i32 a0 = a1 + 0x24\n 20179: u64 [s1 + 1720] = 0\n 20183: u64 [s1 + 1712] = 0\n 20187: u64 [s1 + 1696] = 0x1d\n 20192: a1 = s1 + 0x6a0\n 20196: u64 [s1 + 1704] = 0\n 20200: ra = 746, jump @4\n      : @729 [@dyn 373] (gas: 1)\n 20206: t0 = 748, jump @1578\n      : @730 [@dyn 374] (gas: 1)\n 20212: jump @732 if a0 != 0\n      : @731 (gas: 1)\n 20215: jump @993\n      : @732 (gas: 13)\n 20218: i32 a0 = a2 + 0x44\n 20221: a1 = u64 [0x20128]\n 20226: a2 = u64 [0x20130]\n 20231: a3 = u64 [0x20138]\n 20236: a4 = s1 + 0x600\n 20240: u64 [a4 + 0x98] = a1\n 20244: u64 [a4 + 0x90] = a2\n 20248: u64 [a4 + 0x88] = a3\n 20252: a2 = 0x6864726177000000\n 20262: a1 = s1 + 0x680\n 20266: u64 [a4 + 0x80] = a2\n 20270: ra = 0x426\n 20274: jump @4\n      : @733 (gas: 6)\n 20277: a0 = sp + 0xffffffffffffffe0\n 20280: a1 = a0 & 0xffffffffffffffe0\n 20283: sp = a1\n 20285: a2 = u64 [s1 + 0x28]\n 20288: a0 = a2 + 0x6\n 20291: t0 = 750, jump @1609\n      : @734 [@dyn 375] (gas: 7)\n 20297: u64 [a1 + 0x8] = a2\n 20300: u64 [a1] = a0\n 20302: u64 [a1 + 0x10] = a3\n 20305: u64 [a1 + 0x18] = a4\n 20308: a0 = s1 + 0x3180\n 20312: u64 [s1 + 0x20] = a1\n 20315: ra = 752, jump @6\n      : @735 [@dyn 376] (gas: 3)\n 20321: a2 = s1 + 0x3138\n 20325: a0 = u8 [a2 + 0x5c]\n 20328: jump @737 if a0 <=u 3\n      : @736 (gas: 1)\n 20332: jump @1222\n      : @737 (gas: 10)\n 20335: a0 = a0 + 0xfffffffffffffffd\n 20338: a0 = a0 >u 0\n 20340: u64 [a2 + 64] = 0\n 20343: u64 [a2 + 56] = 0\n 20346: u64 [a2 + 0x28] = a0\n 20349: a0 = s1 + 0x3160\n 20353: u64 [a2 + 48] = 0\n 20356: ra = 0x2f2\n 20360: t0 = 0x62e\n 20364: jump @1586\n      : @738 [@dyn 377] (gas: 6)\n 20367: a0 = sp + 0xffffffffffffffe0\n 20370: a1 = a0 & 0xffffffffffffffe0\n 20373: sp = a1\n 20375: a2 = u64 [s1 + 0x28]\n 20378: a0 = a2 + 0x8\n 20381: t0 = 756, jump @1609\n      : @739 [@dyn 378] (gas: 7)\n 20387: u64 [a1 + 0x18] = a4\n 20390: u64 [a1 + 0x10] = a3\n 20393: u64 [a1 + 0x8] = a2\n 20396: u64 [a1] = a0\n 20398: a0 = s1 + 0x3140\n 20402: u64 [s1 + 0x18] = a1\n 20405: ra = 758, jump @6\n      : @740 [@dyn 379] (gas: 3)\n 20411: a0 = s1 + 0x3138\n 20415: a0 = u8 [a0 + 0x8]\n 20418: jump @742 if a0 == 0\n      : @741 (gas: 1)\n 20421: jump @932\n      : @742 (gas: 3)\n 20424: a1 = u64 [s1 + 0x28]\n 20427: a0 = a1 + 0x2\n 20430: t0 = 760, jump @1595\n      : @743 [@dyn 380] (gas: 8)\n 20436: a5 = a4 + 0x200\n 20440: u64 [a5 + 0xa8] = a0\n 20444: u64 [a5 + 0xb0] = a2\n 20448: u64 [a5 + 0xb8] = a3\n 20452: u64 [a5 + 0xc0] = a1\n 20456: a0 = s1 + 0x3080\n 20460: a1 = s1 + 0x43e0\n 20464: ra = 762, jump @6\n      : @744 [@dyn 381] (gas: 3)\n 20470: t0 = 0x2fc\n 20474: a1 = s1 + 0x2938\n 20478: fallthrough\n      : @745 [@dyn 382] (gas: 12)\n 20479: a2 = a1 + 0x700\n 20483: a0 = u64 [a2 + 0x60]\n 20486: u64 [s1 + 0x128] = a0\n 20490: a0 = u64 [a2 + 0x58]\n 20493: u64 [s1 + 0x120] = a0\n 20497: a0 = u64 [a2 + 0x50]\n 20500: u64 [s1 + 0x118] = a0\n 20504: a0 = u64 [a2 + 0x48]\n 20507: u64 [s1 + 0x110] = a0\n 20511: a0 = s1 + 0x3060\n 20515: a1 = 0x40\n 20518: ra = 766, jump @2\n      : @746 [@dyn 383] (gas: 26)\n 20524: a3 = s1 + 0x2938\n 20528: a4 = a3 + 0x700\n 20532: a0 = u64 [a4 + 0x28]\n 20535: a2 = u64 [a4 + 0x40]\n 20538: a1 = u64 [a4 + 0x30]\n 20541: a3 = u64 [a4 + 0x38]\n 20544: a4 = a0 + 0x20\n 20547: u64 [s1 + 0x1b0] = a4\n 20551: u64 [s1 + 0x1b8] = a0\n 20555: a0 = a4 <u a0\n 20558: a4 = a1 + a0\n 20561: u64 [s1 + 0x1a8] = a4\n 20565: u64 [s1 + 0x190] = a1\n 20569: a1 = a4 <u a1\n 20572: a1 = a0 if a0 == 0\n 20575: a1 = a1 + a3\n 20578: u64 [s1 + 0x198] = a1\n 20582: u64 [s1 + 0x180] = a3\n 20586: a0 = a1 <u a3\n 20589: u64 [s1 + 0x188] = a2\n 20593: a0 = a0 + a2\n 20596: u64 [s1 + 0x1a0] = a0\n 20600: a0 = s1 + 0x4000\n 20604: i32 a0 = a0 + 0x400\n 20608: ecalli 8 // 'now'\n 20610: fallthrough\n      : @747 (gas: 13)\n 20611: a5 = s1 + 0x100\n 20615: a0 = u64 [a5 + 0xb0]\n 20619: a3 = u64 [a5 + 0x98]\n 20623: a2 = a0 | a3\n 20626: a1 = u64 [a5 + 0xa8]\n 20630: a4 = u64 [a5 + 0xa0]\n 20634: a1 = a1 | a4\n 20637: a2 = a2 | a1\n 20640: a2 = a2 >> 0x20\n 20643: a1 = a1 | a3\n 20646: a1 = a1 << 0x20\n 20649: a1 = a1 | a2\n 20652: jump @749 if a1 == 0\n      : @748 (gas: 1)\n 20655: jump @993\n      : @749 (gas: 14)\n 20658: a3 = s1 + 0x4138\n 20662: a4 = a3 + 0x200\n 20666: a5 = u64 [a4 + 0xc8]\n 20670: a1 = u64 [a4 + 0xd0]\n 20674: a2 = u64 [a4 + 0xd8]\n 20678: a3 = u64 [a4 + 0xe0]\n 20682: a4 = s1 + 0x2938\n 20686: u64 [a4 + 0x720] = a3\n 20690: a3 = a4 + 0x700\n 20694: u64 [a3 + 0x18] = a2\n 20697: u64 [a3 + 0x10] = a1\n 20700: a1 = s1 + 0x3040\n 20704: u64 [a3 + 0x8] = a5\n 20707: ra = 768, jump @4\n      : @750 [@dyn 384] (gas: 4)\n 20713: a5 = s1 + 0x100\n 20717: a1 = u64 [a5 + 0xb8]\n 20721: a0 = a1 + 0x40\n 20724: t0 = 770, jump @1588\n      : @751 [@dyn 385] (gas: 1)\n 20730: jump @753 if a1 == 0\n      : @752 (gas: 1)\n 20733: jump @993\n      : @753 (gas: 8)\n 20736: a2 = s1 + 0x2938\n 20740: u64 [a2 + 1792] = 0\n 20744: u64 [a2 + 1784] = 0\n 20748: a1 = 0x8e1bc9bf04000\n 20758: u64 [a2 + 0x6e8] = a1\n 20762: a1 = s1 + 0x3020\n 20766: u64 [a2 + 1776] = 0\n 20770: ra = 772, jump @4\n      : @754 [@dyn 386] (gas: 4)\n 20776: a5 = s1 + 0x100\n 20780: a1 = u64 [a5 + 0xb8]\n 20784: a0 = a1 + 0x60\n 20787: t0 = 774, jump @1588\n      : @755 [@dyn 387] (gas: 1)\n 20793: jump @757 if a1 == 0\n      : @756 (gas: 1)\n 20796: jump @993\n      : @757 (gas: 12)\n 20799: a1 = u64 [s1 + 0xa0]\n 20803: a3 = s1 + 0x2938\n 20807: a4 = a3 + 0x600\n 20811: u64 [a4 + 0xc8] = a1\n 20815: a1 = u64 [s1 + 0x98]\n 20819: u64 [a4 + 0xd0] = a1\n 20823: a1 = u64 [s1 + 0x90]\n 20827: u64 [a4 + 0xd8] = a1\n 20831: a1 = s1 + 0x3000\n 20835: a2 = u64 [s1 + 0x88]\n 20839: u64 [a4 + 0xe0] = a2\n 20843: ra = 776, jump @4\n      : @758 [@dyn 388] (gas: 13)\n 20849: a4 = s1 + 0x100\n 20853: a0 = u64 [a4 + 0xb8]\n 20857: a3 = u64 [a4 + 0x80]\n 20861: a0 = a0 | a3\n 20864: a1 = u64 [a4 + 0x90]\n 20868: a2 = u64 [a4 + 0x88]\n 20872: a1 = a1 | a2\n 20875: a0 = a0 | a1\n 20878: a0 = a0 >> 0x20\n 20881: a1 = a1 | a3\n 20884: a1 = a1 << 0x20\n 20887: a0 = a0 | a1\n 20890: jump @760 if a0 == 0\n      : @759 (gas: 1)\n 20893: jump @993\n      : @760 (gas: 8)\n 20896: a2 = s1 + 0x2938\n 20900: u64 [a2 + 1728] = 0\n 20904: u64 [a2 + 1720] = 0\n 20908: u64 [a2 + 1712] = 0\n 20912: a1 = s1 + 0x2fe0\n 20916: u64 [a2 + 1704] = 0x60\n 20921: a0 = u64 [s1 + 0x1b8]\n 20925: ra = 778, jump @4\n      : @761 [@dyn 389] (gas: 18)\n 20931: a1 = s1 + 0x2938\n 20935: u64 [a1 + 1664] = 0\n 20939: u64 [a1 + 1656] = 0\n 20943: u64 [a1 + 1648] = 0\n 20947: a2 = a1 + 0x600\n 20951: u64 [a2 + 104] = 0x80\n 20956: a0 = u64 [s1 + 0x188]\n 20960: u64 [a2 + 0xa0] = a0\n 20964: a0 = u64 [s1 + 0x180]\n 20968: u64 [a2 + 0x98] = a0\n 20972: a0 = u64 [s1 + 0x190]\n 20976: u64 [a2 + 0x90] = a0\n 20980: a3 = a1\n 20982: a0 = s1 + 0x2fc0\n 20986: a1 = s1 + 0x2fa0\n 20990: a2 = u64 [s1 + 0x1b8]\n 20994: u64 [a3 + 0x688] = a2\n 20998: ra = 780, jump @1343\n      : @762 [@dyn 390] (gas: 7)\n 21004: a0 = sp + 0xffffffffffffffe0\n 21007: a0 = a0 & 0xffffffffffffffe0\n 21010: u64 [s1 + 0xd8] = a0\n 21014: sp = a0\n 21016: a0 = s1 + 0x2f80\n 21020: a1 = u64 [s1 + 0x1b8]\n 21024: ra = 782, jump @2\n      : @763 [@dyn 391] (gas: 3)\n 21030: t0 = 0x310\n 21034: a1 = s1 + 0x2938\n 21038: fallthrough\n      : @764 [@dyn 392] (gas: 13)\n 21039: a4 = a1 + 0x600\n 21043: a0 = u64 [a4 + 0x60]\n 21046: a3 = u64 [a4 + 0x58]\n 21049: a2 = u64 [a4 + 0x50]\n 21052: a1 = u64 [a4 + 0x48]\n 21055: a0 = a0 | a2\n 21058: a2 = a1 | a3\n 21061: a2 = a2 | a0\n 21064: a2 = a2 >> 0x20\n 21067: a0 = a0 | a3\n 21070: a0 = a0 << 0x20\n 21073: a0 = a0 | a2\n 21076: jump @766 if a0 == 0\n      : @765 (gas: 1)\n 21079: jump @993\n      : @766 (gas: 3)\n 21082: a0 = u64 [s1 + 0x1b0]\n 21086: u64 [s1 + 0x1b8] = a1\n 21090: ra = 786, jump @16\n      : @767 [@dyn 393] (gas: 9)\n 21096: a1 = sp + 0xffffffffffffffe0\n 21099: a2 = a1 & 0xffffffffffffffe0\n 21102: u64 [s1 + 0x1b0] = a2\n 21106: sp = a2\n 21108: i32 a0 = a0 + 0\n 21110: a1 = i32 [s1 + 0x1b8]\n 21114: i32 a2 = a2 + 0\n 21116: ecalli 7 // 'hash_keccak_256'\n 21118: fallthrough\n      : @768 (gas: 61)\n 21119: a3 = u64 [s1 + 0x1b0]\n 21123: a0 = u64 [a3 + 0x8]\n 21126: a1 = u64 [a3 + 0x18]\n 21129: a2 = u64 [a3]\n 21131: a3 = u64 [a3 + 0x10]\n 21134: t1 = reverse a0\n 21136: a4 = reverse a1\n 21138: u64 [s1 + 0x108] = a4\n 21142: t2 = reverse a2\n 21144: t0 = reverse a3\n 21146: a1 = clz t2\n 21148: a0 = clz t1\n 21150: a0 = a0 + 0x40\n 21153: a0 = a1 if t2 != 0\n 21156: a1 = clz t0\n 21158: a2 = clz a4\n 21160: a2 = a2 + 0x40\n 21163: a2 = a1 if t0 != 0\n 21166: a1 = a2 + 0x80\n 21170: a3 = t1 | t2\n 21173: a0 = a1 if a3 == 0\n 21176: a1 = a1 <u a2\n 21179: a1 = 0 if a3 != 0\n 21181: a3 = a1 >u 0\n 21183: a2 = a0 <u 0xee\n 21187: a4 = a2 ^ 0x1\n 21190: a3 = a4 if a1 == 0\n 21193: a2 = a3 <u 0x1\n 21196: a2 = a2 + 0xffffffffffffffff\n 21199: a5 = -a3\n 21201: a1 = -a1\n 21203: ra = a1 - a4\n 21206: a1 = 0xed - a0\n 21210: u64 [s1 + 0x1a0] = a5\n 21214: a0 = a5 >u 0\n 21216: a4 = a2 >u 0\n 21218: u64 [s1 + 0x1a8] = a2\n 21222: a4 = a0 if a2 == 0\n 21225: u64 [s1 + 0x1b0] = a1\n 21229: a0 = a1 <u 0x100\n 21233: a0 = a0 ^ 0x1\n 21236: a5 = ra >u 0\n 21238: a0 = a5 if ra != 0\n 21241: a0 = a4 if a3 != 0\n 21244: a3 = t0 | t2\n 21247: a1 = u64 [s1 + 0x108]\n 21251: a4 = a1 | t1\n 21254: a3 = a3 | a4\n 21257: a3 = a3 <u 0x1\n 21260: a0 = a0 | a3\n 21263: a4 = 0x69780\n 21268: u64 [s1 + 0xe0] = t2\n 21272: t2 = 0 if a0 != 0\n 21274: u64 [s1 + 0xe8] = t1\n 21278: t1 = 0 if a0 != 0\n 21280: u64 [s1 + 0xf0] = t0\n 21284: a2 = t0\n 21286: a2 = 0 if a0 != 0\n 21288: a3 = a1\n 21290: a3 = 0 if a0 != 0\n 21292: jump @770 if a0 == 0\n      : @769 (gas: 1)\n 21295: jump @1001\n      : @770 (gas: 8)\n 21298: a0 = u64 [s1 + 0x1b0]\n 21302: a0 = a0 ^ 0xff\n 21306: a5 = u64 [s1 + 0x1a0]\n 21310: a1 = a0 | a5\n 21313: t0 = u64 [s1 + 0x1a8]\n 21317: a0 = ra | t0\n 21320: a0 = a0 | a1\n 21323: jump @772 if a0 != 0\n      : @771 (gas: 1)\n 21326: jump @1001\n      : @772 (gas: 20)\n 21329: u64 [s1 + 328] = 0x69780\n 21336: a1 = u64 [s1 + 0x1b0]\n 21340: a2 = a1 + 0x1\n 21343: u64 [s1 + 0x1b8] = a2\n 21347: a0 = a2 <u 0x1\n 21350: a0 = a0 + ra\n 21353: u64 [s1 + 0x198] = a0\n 21357: a0 = a0 | a2\n 21360: a0 = a0 <u 0x1\n 21363: a0 = a0 + a5\n 21366: u64 [s1 + 0x188] = a0\n 21370: a0 = a0 <u a5\n 21373: a0 = a0 + t0\n 21376: u64 [s1 + 0x190] = a0\n 21380: a1 = 0xff - a1\n 21384: u64 [s1 + 0x1b0] = a1\n 21388: a2 = 0x80 - a1\n 21392: a0 = u64 [s1 + 0x108]\n 21396: a1 = u64 [s1 + 0xf0]\n 21400: ra = 788, jump @1634\n      : @773 [@dyn 394] (gas: 6)\n 21406: u64 [s1 + 0x1a8] = a0\n 21410: u64 [s1 + 0x180] = a1\n 21414: a0 = u64 [s1 + 0xe8]\n 21418: a1 = u64 [s1 + 0xe0]\n 21422: a2 = u64 [s1 + 0x1b0]\n 21426: ra = 790, jump @1639\n      : @774 [@dyn 395] (gas: 9)\n 21432: u64 [s1 + 0x1a0] = a0\n 21436: a0 = u64 [s1 + 0x180]\n 21440: a0 = a0 | a1\n 21443: u64 [s1 + 0x178] = a0\n 21447: a0 = u64 [s1 + 0x1b0]\n 21451: a2 = a0 + 0xffffffffffffff80\n 21454: a0 = u64 [s1 + 0x108]\n 21458: a1 = u64 [s1 + 0xf0]\n 21462: ra = 792, jump @1639\n      : @775 [@dyn 396] (gas: 18)\n 21468: a2 = u64 [s1 + 0x1b0]\n 21472: a3 = a2 <u 0x80\n 21476: u64 [s1 + 0x180] = a3\n 21480: a4 = u64 [s1 + 0x178]\n 21484: a1 = a4 if a3 != 0\n 21487: a4 = u64 [s1 + 0xe0]\n 21491: a1 = a4 if a2 == 0\n 21494: u64 [s1 + 0x158] = a1\n 21498: a1 = u64 [s1 + 0x1a8]\n 21502: a4 = u64 [s1 + 0x1a0]\n 21506: a1 = a1 | a4\n 21509: a1 = a0 if a3 == 0\n 21512: a0 = u64 [s1 + 0xe8]\n 21516: a1 = a0 if a2 == 0\n 21519: u64 [s1 + 0x1a8] = a1\n 21523: a0 = u64 [s1 + 0x108]\n 21527: a1 = u64 [s1 + 0xf0]\n 21531: ra = 794, jump @1639\n      : @776 [@dyn 397] (gas: 14)\n 21537: a5 = s1 + 0x100\n 21541: a2 = u64 [a5 + 0x98]\n 21545: a3 = u64 [a5 + 0x90]\n 21549: a2 = a2 | a3\n 21552: a3 = u64 [a5 + 0xb8]\n 21556: a4 = u64 [a5 + 0x88]\n 21560: a3 = a3 | a4\n 21563: a2 = a2 | a3\n 21566: a3 = u64 [a5 + 0x80]\n 21570: a1 = 0 if a3 == 0\n 21572: u64 [a5 + 0xa0] = a1\n 21576: a0 = 0 if a3 == 0\n 21578: u64 [a5 + 0xb0] = a0\n 21582: jump @778 if a2 == 0\n      : @777 (gas: 1)\n 21585: jump @994\n      : @778 (gas: 4)\n 21588: a5 = 0\n 21590: u64 [s1 + 320] = 0\n 21594: ra = u64 [s1 + 0x158]\n 21598: jump @1000\n      : @779 (gas: 3)\n 21601: t0 = 0x31c\n 21605: a2 = s1 + 0x1938\n 21609: fallthrough\n      : @780 [@dyn 398] (gas: 12)\n 21610: a0 = u64 [s1 + 0x1b8]\n 21614: a3 = a2 + 0x300\n 21618: u64 [a3 + 0x8] = a0\n 21621: a0 = u64 [s1 + 0x1b0]\n 21625: u64 [a3 + 0x10] = a0\n 21628: a0 = u64 [s1 + 0x1a8]\n 21632: u64 [a3 + 0x18] = a0\n 21635: a1 = s1 + 0x1c40\n 21639: a0 = u64 [s1 + 0x1a0]\n 21643: u64 [a3 + 0x20] = a0\n 21646: a0 = 0\n 21648: ra = 798, jump @4\n      : @781 [@dyn 399] (gas: 3)\n 21654: t0 = 0x320\n 21658: a1 = s1 + 0x1938\n 21662: fallthrough\n      : @782 [@dyn 400] (gas: 8)\n 21663: u64 [a1 + 768] = 0\n 21667: u64 [a1 + 760] = 0\n 21671: u64 [a1 + 744] = 0x2\n 21676: a2 = a1\n 21678: a0 = 0x20\n 21681: a1 = s1 + 0x1c20\n 21685: u64 [a2 + 752] = 0\n 21689: ra = 802, jump @4\n      : @783 [@dyn 401] (gas: 3)\n 21695: a2 = u64 [s1 + 0x190]\n 21699: a0 = i32 [a2]\n 21701: jump @785 if a0 >u 63\n      : @784 (gas: 3)\n 21705: u32 [a2 + 0] = 0x40\n 21708: t0 = 0x324\n 21712: jump @1576\n      : @785 (gas: 1)\n 21715: t0 = 804, jump @1576\n      : @786 [@dyn 402] (gas: 3)\n 21721: ra = 0x326\n 21725: ecalli 7 // 'hash_keccak_256'\n 21727: fallthrough\n      : @787 [@dyn 403] (gas: 6)\n 21728: a3 = u64 [s1 + 0x188]\n 21732: a0 = u64 [a3]\n 21734: a1 = u64 [a3 + 0x8]\n 21737: a2 = u64 [a3 + 0x10]\n 21740: a3 = u64 [a3 + 0x18]\n 21743: t0 = 808, jump @1606\n      : @788 [@dyn 404] (gas: 17)\n 21749: a4 = a3 + 0x3\n 21752: a3 = a4 <u a3\n 21755: a5 = a2 + a3\n 21758: a2 = a5 <u a2\n 21761: a2 = a3 if a3 == 0\n 21764: a2 = a2 + a1\n 21767: a1 = a2 <u a1\n 21770: a0 = a0 + a1\n 21773: a1 = s1 + 0x3938\n 21777: a3 = a1 + 0x600\n 21781: u64 [a3 + 0x48] = a4\n 21784: u64 [a3 + 0x50] = a5\n 21787: u64 [a3 + 0x58] = a2\n 21790: u64 [a3 + 0x60] = a0\n 21793: a0 = s1 + 0x1c00\n 21797: a1 = s1 + 0x3f80\n 21801: ra = 810, jump @6\n      : @789 [@dyn 405] (gas: 15)\n 21807: a0 = s1 + 0x1938\n 21811: a2 = a0 + 0x200\n 21815: a1 = u64 [a2 + 0xc8]\n 21819: u64 [s1 + 0x188] = a1\n 21823: a1 = u64 [a2 + 0xd0]\n 21827: u64 [s1 + 0x180] = a1\n 21831: a1 = u64 [a2 + 0xd8]\n 21835: u64 [s1 + 0x178] = a1\n 21839: a0 = u64 [a2 + 0xe0]\n 21843: u64 [s1 + 0x170] = a0\n 21847: a0 = s1 + 0x4000\n 21851: i32 a0 = a0 + 0xffffffffffffffa0\n 21854: ra = 0x32c\n 21858: ecalli 8 // 'now'\n 21860: fallthrough\n      : @790 [@dyn 406] (gas: 18)\n 21861: a1 = s1 + 0x3938\n 21865: a4 = a1 + 0x600\n 21869: a0 = u64 [a4 + 0x80]\n 21873: t0 = u64 [a1 + 0x668]\n 21877: a2 = u64 [a4 + 0x78]\n 21880: a3 = u64 [a4 + 0x70]\n 21883: a1 = u64 [s1 + 0x170]\n 21887: a4 = a0 ^ a1\n 21890: a1 = a0 <u a1\n 21893: a0 = u64 [s1 + 0x178]\n 21897: a5 = a2 <u a0\n 21900: a5 = a1 if a4 != 0\n 21903: a1 = u64 [s1 + 0x180]\n 21907: t1 = a3 ^ a1\n 21910: a3 = a3 <u a1\n 21913: a1 = u64 [s1 + 0x188]\n 21917: a1 = t0 <u a1\n 21920: t0 = 814, jump @1613\n      : @791 [@dyn 407] (gas: 1)\n 21926: jump @793 if a1 != 0\n      : @792 (gas: 1)\n 21929: jump @969\n      : @793 (gas: 13)\n 21932: a0 = u64 [s1 + 0x1b8]\n 21936: a2 = s1 + 0x1938\n 21940: a3 = a2 + 0x200\n 21944: u64 [a3 + 0x8] = a0\n 21947: a0 = u64 [s1 + 0x1b0]\n 21951: u64 [a3 + 0x10] = a0\n 21954: a0 = u64 [s1 + 0x1a8]\n 21958: u64 [a3 + 0x18] = a0\n 21961: a1 = s1 + 0x1b40\n 21965: a0 = u64 [s1 + 0x1a0]\n 21969: u64 [a3 + 0x20] = a0\n 21972: a0 = 0\n 21974: ra = 816, jump @4\n      : @794 [@dyn 408] (gas: 3)\n 21980: t0 = 0x332\n 21984: a1 = s1 + 0x1938\n 21988: fallthrough\n      : @795 [@dyn 409] (gas: 8)\n 21989: u64 [a1 + 512] = 0\n 21993: u64 [a1 + 504] = 0\n 21997: u64 [a1 + 488] = 0x2\n 22002: a2 = a1\n 22004: a0 = 0x20\n 22007: a1 = s1 + 0x1b20\n 22011: u64 [a2 + 496] = 0\n 22015: ra = 820, jump @4\n      : @796 [@dyn 410] (gas: 3)\n 22021: a1 = u64 [s1 + 0x190]\n 22025: a0 = i32 [a1]\n 22027: jump @798 if a0 >u 63\n      : @797 (gas: 2)\n 22031: u32 [a1 + 0] = 0x40\n 22034: fallthrough\n      : @798 (gas: 4)\n 22035: a0 = sp + 0xffffffffffffffe0\n 22038: a0 = a0 & 0xffffffffffffffe0\n 22041: u64 [s1 + 0x170] = a0\n 22045: t0 = 822, jump @1579\n      : @799 [@dyn 411] (gas: 13)\n 22051: ecalli 7 // 'hash_keccak_256'\n 22053: a1 = u64 [s1 + 0x170]\n 22057: a0 = u64 [a1 + 0x18]\n 22060: u64 [s1 + 0x188] = a0\n 22064: a0 = u64 [a1 + 0x10]\n 22067: u64 [s1 + 0x180] = a0\n 22071: a0 = u64 [a1 + 0x8]\n 22074: u64 [s1 + 0x178] = a0\n 22078: a0 = u64 [a1]\n 22080: u64 [s1 + 0x170] = a0\n 22084: t0 = 0x338\n 22088: a2 = s1 + 0x1938\n 22092: fallthrough\n      : @800 [@dyn 412] (gas: 12)\n 22093: a0 = u64 [s1 + 0x1a0]\n 22097: a3 = a2 + 0x100\n 22101: u64 [a3 + 0xe0] = a0\n 22105: a0 = u64 [s1 + 0x1a8]\n 22109: u64 [a3 + 0xd8] = a0\n 22113: a0 = u64 [s1 + 0x1b0]\n 22117: u64 [a3 + 0xd0] = a0\n 22121: a1 = s1 + 0x1b00\n 22125: a0 = u64 [s1 + 0x1b8]\n 22129: u64 [a3 + 0xc8] = a0\n 22133: a0 = 0\n 22135: ra = 826, jump @4\n      : @801 [@dyn 413] (gas: 3)\n 22141: t0 = 0x33c\n 22145: a1 = s1 + 0x1938\n 22149: fallthrough\n      : @802 [@dyn 414] (gas: 8)\n 22150: u64 [a1 + 448] = 0\n 22154: u64 [a1 + 440] = 0\n 22158: u64 [a1 + 424] = 0x3\n 22163: a2 = a1\n 22165: a0 = 0x20\n 22168: a1 = s1 + 0x1ae0\n 22172: u64 [a2 + 432] = 0\n 22176: ra = 830, jump @4\n      : @803 [@dyn 415] (gas: 3)\n 22182: a1 = u64 [s1 + 0x190]\n 22186: a0 = i32 [a1]\n 22188: jump @805 if a0 >u 63\n      : @804 (gas: 2)\n 22192: u32 [a1 + 0] = 0x40\n 22195: fallthrough\n      : @805 (gas: 13)\n 22196: a0 = u64 [s1 + 0x170]\n 22200: a0 = reverse a0\n 22202: u64 [s1 + 0x160] = a0\n 22206: a0 = u64 [s1 + 0x178]\n 22210: a0 = reverse a0\n 22212: u64 [s1 + 0x158] = a0\n 22216: a0 = u64 [s1 + 0x180]\n 22220: a0 = reverse a0\n 22222: u64 [s1 + 0x150] = a0\n 22226: a0 = u64 [s1 + 0x188]\n 22230: a0 = reverse a0\n 22232: u64 [s1 + 0x148] = a0\n 22236: t0 = 832, jump @1576\n      : @806 [@dyn 416] (gas: 46)\n 22242: ecalli 7 // 'hash_keccak_256'\n 22244: a3 = u64 [s1 + 0x188]\n 22248: a0 = u64 [a3 + 0x18]\n 22251: a1 = u64 [a3 + 0x10]\n 22254: a2 = u64 [a3 + 0x8]\n 22257: a3 = u64 [a3]\n 22259: a0 = reverse a0\n 22261: u64 [s1 + 0x180] = a0\n 22265: a0 = reverse a1\n 22267: u64 [s1 + 0x178] = a0\n 22271: a0 = reverse a2\n 22273: u64 [s1 + 0x170] = a0\n 22277: a0 = reverse a3\n 22279: u64 [s1 + 0x168] = a0\n 22283: a0 = sp + 0xffffffffffffffe0\n 22286: a0 = a0 & 0xffffffffffffffe0\n 22289: u64 [s1 + 0x188] = a0\n 22293: sp = a0\n 22295: a0 = 0x301a0\n 22300: u64 [s1 + 0x140] = a0\n 22304: i32 a0 = a0 + 0\n 22306: u64 [s1 + 0x118] = a0\n 22310: ecalli 4 // 'caller'\n 22312: a2 = u64 [s1 + 0x140]\n 22316: a0 = u64 [a2 + 0x8]\n 22319: a1 = i32 [a2 + 0x10]\n 22322: a2 = u64 [a2]\n 22324: a0 = reverse a0\n 22326: a3 = a0 << 0x20\n 22329: a1 = reverse a1\n 22331: a1 = a1 >> 0x20\n 22334: a3 = a3 | a1\n 22337: a0 = a0 >> 0x20\n 22340: a1 = reverse a2\n 22342: a2 = a1 << 0x20\n 22345: a0 = a0 | a2\n 22348: a1 = a1 >> 0x20\n 22351: a2 = s1 + 0x1938\n 22355: u64 [a2 + 416] = 0\n 22359: a4 = a2 + 0x100\n 22363: u64 [a4 + 0x98] = a1\n 22367: u64 [a4 + 0x90] = a0\n 22371: a1 = s1 + 0x1ac0\n 22375: u64 [a4 + 0x88] = a3\n 22379: a0 = 0\n 22381: ra = 834, jump @4\n      : @807 [@dyn 417] (gas: 14)\n 22387: a0 = u64 [s1 + 0x168]\n 22391: a1 = s1 + 0x1938\n 22395: a2 = a1 + 0x100\n 22399: u64 [a2 + 0x80] = a0\n 22403: a0 = u64 [s1 + 0x170]\n 22407: u64 [a2 + 0x78] = a0\n 22410: a0 = u64 [s1 + 0x178]\n 22414: u64 [a2 + 0x70] = a0\n 22417: a3 = a1\n 22419: a0 = 0x20\n 22422: a1 = s1 + 0x1aa0\n 22426: a2 = u64 [s1 + 0x180]\n 22430: u64 [a3 + 0x168] = a2\n 22434: ra = 836, jump @4\n      : @808 [@dyn 418] (gas: 3)\n 22440: a1 = u64 [s1 + 0x190]\n 22444: a0 = i32 [a1]\n 22446: jump @810 if a0 >=u 64\n      : @809 (gas: 2)\n 22450: u32 [a1 + 0] = 0x40\n 22453: fallthrough\n      : @810 (gas: 4)\n 22454: a0 = sp + 0xffffffffffffffe0\n 22457: a0 = a0 & 0xffffffffffffffe0\n 22460: u64 [s1 + 0x180] = a0\n 22464: t0 = 838, jump @1579\n      : @811 [@dyn 419] (gas: 3)\n 22470: ra = 0x348\n 22474: ecalli 7 // 'hash_keccak_256'\n 22476: fallthrough\n      : @812 [@dyn 420] (gas: 5)\n 22477: a1 = u64 [s1 + 0x148]\n 22481: a0 = a1 + 0x2\n 22484: a1 = a0 <u a1\n 22487: a3 = u64 [s1 + 0x150]\n 22491: t0 = 842, jump @1623\n      : @813 [@dyn 421] (gas: 31)\n 22497: a5 = s1 + 0x3938\n 22501: u64 [a5 + 0x690] = a2\n 22505: a4 = u64 [s1 + 0x180]\n 22509: a1 = u64 [a4 + 0x10]\n 22512: u64 [a5 + 0x688] = a0\n 22516: a0 = u64 [a4 + 0x18]\n 22519: a2 = u64 [s1 + 0x158]\n 22523: a3 = a3 + a2\n 22526: u64 [a5 + 0x698] = a3\n 22530: a2 = a3 <u a2\n 22533: a3 = u64 [s1 + 0x160]\n 22537: a2 = a2 + a3\n 22540: u64 [a5 + 0x6a0] = a2\n 22544: a2 = u64 [a4 + 0x8]\n 22547: a3 = u64 [a4]\n 22549: a5 = reverse a0\n 22551: a4 = reverse a1\n 22553: a1 = reverse a2\n 22555: a2 = reverse a3\n 22557: a0 = u64 [s1 + 0x188]\n 22561: u64 [s1 + 0x178] = a2\n 22565: u64 [a0 + 0x18] = a2\n 22568: u64 [s1 + 0x180] = a1\n 22572: u64 [a0 + 0x10] = a1\n 22575: u64 [s1 + 0x170] = a4\n 22579: u64 [a0 + 0x8] = a4\n 22582: u64 [s1 + 0x168] = a5\n 22586: u64 [a0] = a5\n 22588: a0 = s1 + 0x1a80\n 22592: a1 = s1 + 0x3fc0\n 22596: ra = 844, jump @6\n      : @814 [@dyn 422] (gas: 15)\n 22602: a0 = s1 + 0x1938\n 22606: a2 = a0 + 0x100\n 22610: a1 = u64 [a2 + 0x48]\n 22613: u64 [s1 + 0x138] = a1\n 22617: a1 = u64 [a2 + 0x50]\n 22620: u64 [s1 + 0x130] = a1\n 22624: a1 = u64 [a2 + 0x58]\n 22627: u64 [s1 + 0x128] = a1\n 22631: a0 = u64 [a2 + 0x60]\n 22634: u64 [s1 + 0x120] = a0\n 22638: a0 = s1 + 0x4000\n 22642: i32 a0 = a0 + 0xffffffffffffffe0\n 22645: ra = 0x34e\n 22649: ecalli 8 // 'now'\n 22651: fallthrough\n      : @815 [@dyn 423] (gas: 18)\n 22652: a3 = s1 + 0x3938\n 22656: a1 = a3 + 0x600\n 22660: a0 = u64 [a1 + 0xc0]\n 22664: t0 = u64 [a3 + 0x6a8]\n 22668: a2 = u64 [a1 + 0xb8]\n 22672: a3 = u64 [a1 + 0xb0]\n 22676: a1 = u64 [s1 + 0x120]\n 22680: a4 = a0 ^ a1\n 22683: a1 = a0 <u a1\n 22686: a0 = u64 [s1 + 0x128]\n 22690: a5 = a2 <u a0\n 22693: a5 = a1 if a4 != 0\n 22696: a1 = u64 [s1 + 0x130]\n 22700: t1 = a3 ^ a1\n 22703: a3 = a3 <u a1\n 22706: a1 = u64 [s1 + 0x138]\n 22710: a1 = t0 <u a1\n 22713: t0 = 848, jump @1613\n      : @816 [@dyn 424] (gas: 1)\n 22719: jump @824 if a1 != 0\n      : @817 (gas: 26)\n 22723: a5 = s1 + 0x100\n 22727: a0 = u64 [a5 + 0x48]\n 22730: a2 = a0 + 0x6\n 22733: a0 = a2 <u a0\n 22736: a1 = u64 [a5 + 0x50]\n 22739: a3 = a1 + a0\n 22742: a1 = a3 <u a1\n 22745: a1 = a0 if a0 == 0\n 22748: a0 = u64 [a5 + 0x58]\n 22751: a4 = a0 + a1\n 22754: a0 = a4 <u a0\n 22757: a1 = u64 [a5 + 0x60]\n 22760: a1 = a1 + a0\n 22763: a0 = s1 + 0x3938\n 22767: u64 [a5 + 0x38] = a2\n 22770: u64 [a0 + 0x6c8] = a2\n 22774: u64 [a5 + 0x30] = a3\n 22777: a2 = a0 + 0x600\n 22781: u64 [a2 + 0xd0] = a3\n 22785: u64 [a5 + 0x28] = a4\n 22788: u64 [a2 + 0xd8] = a4\n 22792: u64 [a5 + 0x20] = a1\n 22795: u64 [a2 + 0xe0] = a1\n 22799: a0 = s1 + 0x1a60\n 22803: a1 = s1 + 0x4000\n 22807: ra = 850, jump @6\n      : @818 [@dyn 425] (gas: 3)\n 22813: a0 = s1 + 0x1938\n 22817: a0 = u8 [a0 + 0x13c]\n 22821: jump @820 if a0 <=u 3\n      : @819 (gas: 1)\n 22825: jump @1230\n      : @820 (gas: 1)\n 22828: jump @824 if a0 != 1\n      : @821 (gas: 14)\n 22833: a0 = sp + 0xffffffffffffffe0\n 22836: a1 = a0 & 0xffffffffffffffe0\n 22839: u64 [s1 + 0x110] = a1\n 22843: sp = a1\n 22845: a0 = u64 [s1 + 0x120]\n 22849: u64 [a1 + 0x18] = a0\n 22852: a0 = u64 [s1 + 0x128]\n 22856: u64 [a1 + 0x10] = a0\n 22859: a0 = u64 [s1 + 0x130]\n 22863: u64 [a1 + 0x8] = a0\n 22866: a0 = u64 [s1 + 0x138]\n 22870: u64 [a1] = a0\n 22872: a0 = s1 + 0x1a40\n 22876: ra = 852, jump @6\n      : @822 [@dyn 426] (gas: 2)\n 22882: a0 = 0x2000\n 22886: t0 = 854, jump @1629\n      : @823 [@dyn 427] (gas: 17)\n 22892: a0 = u64 [a4 + 0x8]\n 22895: a1 = u64 [a4 + 0x10]\n 22898: a2 = u64 [a4 + 0x18]\n 22901: a3 = u64 [a4 + 0x20]\n 22904: a4 = 0xffffff00ffffffff\n 22914: a2 = a2 & a4\n 22917: a4 = 0x200000000\n 22927: a2 = a2 | a4\n 22930: a4 = s1 + 0x3938\n 22934: u64 [a4 + 0x700] = a3\n 22938: a3 = a4 + 0x600\n 22942: u64 [a3 + 0xf0] = a1\n 22946: u64 [a3 + 0xe8] = a0\n 22950: u64 [a3 + 0xf8] = a2\n 22954: a1 = s1 + 0x4020\n 22958: a0 = u64 [s1 + 0x110]\n 22962: ra = 856, jump @9\n      : @824 [@dyn 428] (gas: 22)\n 22968: a0 = sp + 0xffffffffffffffe0\n 22971: a1 = a0 & 0xffffffffffffffe0\n 22974: sp = a1\n 22976: a2 = u64 [s1 + 0x168]\n 22980: a0 = a2 + 0x3\n 22983: a4 = a0 <u a2\n 22986: a3 = u64 [s1 + 0x170]\n 22990: a2 = a3 + a4\n 22993: a3 = a2 <u a3\n 22996: a3 = a4 if a4 == 0\n 22999: a4 = u64 [s1 + 0x180]\n 23003: a3 = a3 + a4\n 23006: a5 = a3 <u a4\n 23009: a4 = u64 [s1 + 0x178]\n 23013: a4 = a4 + a5\n 23016: u64 [a1 + 0x8] = a2\n 23019: u64 [a1] = a0\n 23021: u64 [a1 + 0x10] = a3\n 23024: u64 [a1 + 0x18] = a4\n 23027: a0 = s1 + 0x19e0\n 23031: u64 [s1 + 0x138] = a1\n 23035: ra = 858, jump @6\n      : @825 [@dyn 429] (gas: 4)\n 23041: a4 = s1 + 0x1938\n 23045: a0 = u64 [a4 + 0xa8]\n 23049: a1 = a0 & 0xff\n 23053: jump @849 if a1 != 0\n      : @826 (gas: 13)\n 23057: a1 = u64 [a4 + 0xb0]\n 23061: a2 = u64 [a4 + 0xc0]\n 23065: a3 = u64 [a4 + 0xb8]\n 23069: a0 = a0 | 0x1\n 23072: a4 = s1 + 0x3938\n 23076: a5 = a4 + 0x700\n 23080: u64 [a5 + 0x10] = a1\n 23083: u64 [a5 + 0x8] = a0\n 23086: u64 [a5 + 0x18] = a3\n 23089: u64 [a5 + 0x20] = a2\n 23092: a1 = s1 + 0x4040\n 23096: a0 = u64 [s1 + 0x138]\n 23100: ra = 860, jump @9\n      : @827 [@dyn 430] (gas: 12)\n 23106: a0 = u64 [s1 + 0x1a0]\n 23110: a2 = s1 + 0x1938\n 23114: u64 [a2 + 0xa0] = a0\n 23118: a0 = u64 [s1 + 0x1a8]\n 23122: u64 [a2 + 0x98] = a0\n 23126: a0 = u64 [s1 + 0x1b0]\n 23130: u64 [a2 + 0x90] = a0\n 23134: a1 = s1 + 0x19c0\n 23138: a0 = u64 [s1 + 0x1b8]\n 23142: u64 [a2 + 0x88] = a0\n 23146: a0 = 0\n 23148: ra = 862, jump @4\n      : @828 [@dyn 431] (gas: 9)\n 23154: a1 = s1 + 0x1938\n 23158: u64 [a1 + 128] = 0\n 23162: u64 [a1 + 120] = 0\n 23165: u64 [a1 + 104] = 0x4\n 23169: a2 = a1\n 23171: a0 = 0x20\n 23174: a1 = s1 + 0x19a0\n 23178: u64 [a2 + 112] = 0\n 23181: ra = 864, jump @4\n      : @829 [@dyn 432] (gas: 7)\n 23187: a0 = sp + 0xffffffffffffffe0\n 23190: a0 = a0 & 0xffffffffffffffe0\n 23193: u64 [s1 + 0x138] = a0\n 23197: sp = a0\n 23199: a2 = u64 [s1 + 0x190]\n 23203: a0 = i32 [a2]\n 23205: jump @831 if a0 >u 63\n      : @830 (gas: 2)\n 23209: u32 [a2 + 0] = 0x40\n 23212: fallthrough\n      : @831 (gas: 4)\n 23213: a0 = sp + 0xffffffffffffffe0\n 23216: a0 = a0 & 0xffffffffffffffe0\n 23219: u64 [s1 + 0x130] = a0\n 23223: t0 = 866, jump @1579\n      : @832 [@dyn 433] (gas: 3)\n 23229: ra = 0x364\n 23233: ecalli 7 // 'hash_keccak_256'\n 23235: fallthrough\n      : @833 [@dyn 434] (gas: 3)\n 23236: a5 = s1 + 0x100\n 23240: a3 = u64 [a5 + 0x30]\n 23243: t0 = 870, jump @1617\n      : @834 [@dyn 435] (gas: 11)\n 23249: a1 = u64 [a5 + 0x38]\n 23252: u64 [a5 + 0x8] = a3\n 23255: u64 [a1 + 0x18] = a3\n 23258: u64 [a5 + 0x20] = a2\n 23261: u64 [a1 + 0x10] = a2\n 23264: u64 [a5 + 0x28] = a4\n 23267: u64 [a1 + 0x8] = a4\n 23270: u64 [a5 + 0x30] = a0\n 23273: u64 [a1] = a0\n 23275: a0 = s1 + 0x1980\n 23279: ra = 872, jump @6\n      : @835 [@dyn 436] (gas: 11)\n 23285: a4 = s1 + 0x1938\n 23289: t0 = u64 [a4 + 0x60]\n 23292: a5 = u64 [a4 + 0x58]\n 23295: a3 = u64 [a4 + 0x50]\n 23298: a0 = t0 >u 0\n 23300: a1 = a5 >u 0\n 23302: a1 = a0 if t0 != 0\n 23305: a0 = a5 | t0\n 23308: a2 = a3 >u 0\n 23310: a2 = a1 if a0 != 0\n 23313: jump @837 if a2 == 0\n      : @836 (gas: 1)\n 23316: jump @1232\n      : @837 (gas: 22)\n 23319: a0 = u64 [a4 + 0x48]\n 23322: u64 [s1 + 0x190] = a0\n 23326: a0 = a0 + 0x1\n 23329: a1 = a0 <u 0x1\n 23332: a1 = a1 + a3\n 23335: a2 = a0 | a1\n 23338: a2 = a2 <u 0x1\n 23341: a2 = a2 + a5\n 23344: u64 [s1 + 0x100] = a3\n 23348: a3 = a2 <u a5\n 23351: a3 = a3 + t0\n 23354: a4 = s1 + 0x3938\n 23358: u64 [a4 + 0x728] = a0\n 23362: a0 = a4 + 0x700\n 23366: u64 [a0 + 0x30] = a1\n 23369: u64 [a0 + 0x38] = a2\n 23372: u64 [a0 + 0x40] = a3\n 23375: a1 = s1 + 0x4060\n 23379: a0 = u64 [s1 + 0x138]\n 23383: u64 [s1 + 0x138] = a5\n 23387: u64 [s1 + 0xf8] = t0\n 23391: ra = 874, jump @9\n      : @838 [@dyn 437] (gas: 28)\n 23397: a0 = sp + 0xffffffffffffffe0\n 23400: a0 = a0 & 0xffffffffffffffe0\n 23403: u64 [s1 + 0x110] = a0\n 23407: sp = a0\n 23409: a0 = s1 + 0x1138\n 23413: a1 = u64 [s1 + 0xf8]\n 23417: a2 = a0 + 0x700\n 23421: u64 [a2 + 0xe0] = a1\n 23425: a1 = u64 [s1 + 0x138]\n 23429: u64 [a2 + 0xd8] = a1\n 23433: a1 = u64 [s1 + 0x100]\n 23437: u64 [a2 + 0xd0] = a1\n 23441: a1 = u64 [s1 + 0x190]\n 23445: u64 [a2 + 0xc8] = a1\n 23449: a0 = u64 [s1 + 0x108]\n 23453: a1 = s1 + 0x1938\n 23457: u64 [a1] = a0\n 23459: a0 = u64 [s1 + 0x120]\n 23463: u64 [a1 + 0xfffffffffffffff8] = a0\n 23466: a0 = u64 [s1 + 0x128]\n 23470: u64 [a1 + 0xfffffffffffffff0] = a0\n 23473: a4 = a1\n 23475: a0 = s1 + 0x1940\n 23479: a1 = s1 + 0x1920\n 23483: a2 = s1 + 0x1900\n 23487: a3 = u64 [s1 + 0x130]\n 23491: u64 [a4 + 0xffffffffffffffe8] = a3\n 23494: ra = 876, jump @1308\n      : @839 [@dyn 438] (gas: 20)\n 23500: a1 = s1 + 0x1938\n 23504: a0 = u64 [a1 + 0x40]\n 23507: u64 [s1 + 0x190] = a0\n 23511: a0 = u64 [a1 + 0x38]\n 23514: u64 [s1 + 0x120] = a0\n 23518: a0 = u64 [a1 + 0x30]\n 23521: u64 [s1 + 0x130] = a0\n 23525: a0 = u64 [a1 + 0x28]\n 23528: u64 [s1 + 0x138] = a0\n 23532: a0 = u64 [a1 + 0x18]\n 23535: a4 = u64 [a1 + 0x20]\n 23538: a2 = u64 [a1 + 0x8]\n 23541: a3 = u64 [a1 + 0x10]\n 23544: a1 = u64 [s1 + 0x110]\n 23548: u64 [a1 + 0x10] = a0\n 23551: u64 [a1 + 0x18] = a4\n 23554: u64 [a1] = a2\n 23556: u64 [a1 + 0x8] = a3\n 23559: a0 = s1 + 0x18e0\n 23563: ra = 878, jump @6\n      : @840 [@dyn 439] (gas: 67)\n 23569: a1 = s1 + 0x1138\n 23573: a2 = a1 + 0x700\n 23577: a0 = u64 [a2 + 0xb8]\n 23581: u64 [s1 + 0xf0] = a0\n 23585: a0 = u64 [a2 + 0xc0]\n 23589: u64 [s1 + 0xe8] = a0\n 23593: a0 = u64 [a2 + 0xa8]\n 23597: a3 = a1\n 23599: u64 [s1 + 0xe0] = a0\n 23603: a2 = u64 [s1 + 0x138]\n 23607: a0 = a2 >> 0x3d\n 23610: a4 = u64 [s1 + 0x130]\n 23614: a1 = a4 << 0x3\n 23617: a0 = a0 | a1\n 23620: u64 [s1 + 0x128] = a0\n 23624: a0 = a4 >> 0x3d\n 23627: a4 = u64 [s1 + 0x120]\n 23631: a1 = a4 << 0x3\n 23634: a0 = a0 | a1\n 23637: u64 [s1 + 0x130] = a0\n 23641: a0 = u64 [a3 + 0x7b0]\n 23645: u64 [s1 + 0xd8] = a0\n 23649: a0 = a4 >> 0x3d\n 23652: a1 = u64 [s1 + 0x190]\n 23656: a1 = a1 << 0x3\n 23659: a0 = a0 | a1\n 23662: u64 [s1 + 0x120] = a0\n 23666: a2 = a2 << 0x3\n 23669: u64 [s1 + 0x190] = a2\n 23673: a0 = u64 [s1 + 0x118]\n 23677: ecalli 4 // 'caller'\n 23679: a2 = u64 [s1 + 0x128]\n 23683: a0 = a2 >u 0\n 23685: a5 = u64 [s1 + 0x190]\n 23689: a1 = a5 <u 0x100\n 23693: a3 = a1 ^ 0x1\n 23696: a3 = a0 if a2 != 0\n 23699: a4 = u64 [s1 + 0x120]\n 23703: a0 = a4 >u 0\n 23705: a2 = u64 [s1 + 0x130]\n 23709: a1 = a2 >u 0\n 23711: a1 = a0 if a4 != 0\n 23714: a0 = a4\n 23716: a4 = u64 [s1 + 0x140]\n 23720: t1 = u64 [a4 + 0x8]\n 23723: a2 = a2 | a0\n 23726: t0 = i32 [a4 + 0x10]\n 23729: a3 = a1 if a2 != 0\n 23732: u64 [s1 + 0x108] = a3\n 23736: a1 = u64 [a4]\n 23738: a0 = reverse t1\n 23740: a2 = a0 << 0x20\n 23743: a3 = reverse t0\n 23745: a3 = a3 >> 0x20\n 23748: a3 = a3 | a2\n 23751: u64 [s1 + 0x100] = a3\n 23755: a0 = a0 >> 0x20\n 23758: a4 = reverse a1\n 23760: a2 = a4 << 0x20\n 23763: a1 = a2 | a0\n 23766: u64 [s1 + 0xf8] = a1\n 23770: a4 = a4 >> 0x20\n 23773: u64 [s1 + 0x130] = a4\n 23777: i32 a2 = 0x80 - a5\n 23781: u64 [s1 + 0xd0] = a2\n 23785: a0 = a3\n 23787: ra = 880, jump @1634\n      : @841 [@dyn 440] (gas: 8)\n 23793: u64 [s1 + 0x120] = a0\n 23797: u64 [s1 + 0xc0] = a1\n 23801: a0 = u64 [s1 + 0x138]\n 23805: i32 a2 = a0 << 0x3\n 23808: u64 [s1 + 0x128] = a2\n 23812: a0 = u64 [s1 + 0x130]\n 23816: a1 = 0\n 23818: ra = 882, jump @1639\n      : @842 [@dyn 441] (gas: 10)\n 23824: u64 [s1 + 0xb8] = a1\n 23828: a1 = u64 [s1 + 0x120]\n 23832: a0 = a0 | a1\n 23835: u64 [s1 + 0x138] = a0\n 23839: a0 = u64 [s1 + 0x190]\n 23843: i32 a2 = a0 + 0xffffffffffffff80\n 23846: u64 [s1 + 0xc8] = a2\n 23850: a0 = u64 [s1 + 0x100]\n 23854: a1 = u64 [s1 + 0xf8]\n 23858: ra = 884, jump @1639\n      : @843 [@dyn 442] (gas: 18)\n 23864: a2 = u64 [s1 + 0x190]\n 23868: a4 = a2 <u 0x80\n 23872: u64 [s1 + 0x120] = a4\n 23876: a3 = u64 [s1 + 0x138]\n 23880: a0 = a3 if a4 != 0\n 23883: a3 = u64 [s1 + 0x130]\n 23887: a0 = a3 if a2 == 0\n 23890: u64 [s1 + 0x138] = a0\n 23894: a0 = u64 [s1 + 0xc0]\n 23898: a3 = u64 [s1 + 0xb8]\n 23902: a0 = a0 | a3\n 23905: a0 = a1 if a4 == 0\n 23908: a0 = 0 if a2 == 0\n 23910: u64 [s1 + 0x130] = a0\n 23914: a0 = u64 [s1 + 0x100]\n 23918: a1 = u64 [s1 + 0xf8]\n 23922: a2 = u64 [s1 + 0x128]\n 23926: ra = 886, jump @1639\n      : @844 [@dyn 443] (gas: 20)\n 23932: a2 = a1\n 23934: a1 = u64 [s1 + 0x120]\n 23938: a0 = 0 if a1 == 0\n 23940: a2 = 0 if a1 == 0\n 23942: a3 = u64 [s1 + 0x108]\n 23946: a1 = u64 [s1 + 0x130]\n 23950: a1 = 0 if a3 != 0\n 23952: u64 [s1 + 0x130] = a1\n 23956: a1 = u64 [s1 + 0x138]\n 23960: a1 = 0 if a3 != 0\n 23962: u64 [s1 + 0x138] = a1\n 23966: a2 = 0 if a3 != 0\n 23968: u64 [s1 + 0x100] = a2\n 23972: a0 = 0 if a3 != 0\n 23974: u64 [s1 + 0xf8] = a0\n 23978: a0 = 0xffffffff\n 23988: u64 [s1 + 0xc0] = a0\n 23992: a1 = 0\n 23994: a2 = u64 [s1 + 0x128]\n 23998: ra = 888, jump @1639\n      : @845 [@dyn 444] (gas: 6)\n 24004: u64 [s1 + 0xa8] = a0\n 24008: u64 [s1 + 0xb8] = a1\n 24012: a0 = 0xffffffffffffffff\n 24015: a1 = 0xffffffffffffffff\n 24018: a2 = u64 [s1 + 0xd0]\n 24022: ra = 890, jump @1634\n      : @846 [@dyn 445] (gas: 8)\n 24028: u64 [s1 + 0xb0] = a1\n 24032: a1 = u64 [s1 + 0xa8]\n 24036: a0 = a0 | a1\n 24039: u64 [s1 + 0xd0] = a0\n 24043: a0 = 0xffffffffffffffff\n 24046: a1 = 0xffffffffffffffff\n 24049: a2 = u64 [s1 + 0xc8]\n 24053: ra = 892, jump @1639\n      : @847 [@dyn 446] (gas: 17)\n 24059: a2 = u64 [s1 + 0x120]\n 24063: a3 = u64 [s1 + 0xd0]\n 24067: a0 = a3 if a2 != 0\n 24070: a4 = u64 [s1 + 0x190]\n 24074: a3 = u64 [s1 + 0xc0]\n 24078: a0 = a3 if a4 == 0\n 24081: u64 [s1 + 0xd0] = a0\n 24085: a0 = u64 [s1 + 0xb8]\n 24089: a3 = u64 [s1 + 0xb0]\n 24093: a0 = a0 | a3\n 24096: a0 = a1 if a2 == 0\n 24099: a0 = 0 if a4 == 0\n 24101: u64 [s1 + 0x190] = a0\n 24105: a0 = 0xffffffffffffffff\n 24108: a1 = 0xffffffffffffffff\n 24111: a2 = u64 [s1 + 0x128]\n 24115: ra = 894, jump @1639\n      : @848 [@dyn 447] (gas: 40)\n 24121: a2 = u64 [s1 + 0x120]\n 24125: a0 = 0 if a2 == 0\n 24127: a1 = 0 if a2 == 0\n 24129: a2 = u64 [s1 + 0x190]\n 24133: a2 = a2 ^ 0xffffffffffffffff\n 24136: a3 = u64 [s1 + 0xd0]\n 24140: a3 = a3 ^ 0xffffffffffffffff\n 24143: a1 = a1 ^ 0xffffffffffffffff\n 24146: a0 = a0 ^ 0xffffffffffffffff\n 24149: a4 = u64 [s1 + 0x108]\n 24153: a3 = 0xffffffffffffffff if a4 != 0\n 24156: a2 = 0xffffffffffffffff if a4 != 0\n 24159: a0 = 0xffffffffffffffff if a4 != 0\n 24162: a1 = 0xffffffffffffffff if a4 != 0\n 24165: a4 = u64 [s1 + 0xd8]\n 24169: a1 = a1 & a4\n 24172: a4 = u64 [s1 + 0xe0]\n 24176: a0 = a0 & a4\n 24179: a4 = u64 [s1 + 0xe8]\n 24183: a2 = a2 & a4\n 24186: a4 = u64 [s1 + 0xf0]\n 24190: a3 = a3 & a4\n 24193: a5 = s1 + 0x100\n 24197: a4 = u64 [a5 + 0x38]\n 24200: a3 = a3 | a4\n 24203: a4 = u64 [a5 + 0x30]\n 24206: a2 = a2 | a4\n 24209: a4 = u64 [s1 + 0xf8]\n 24213: a0 = a0 | a4\n 24216: a4 = u64 [a5]\n 24218: a1 = a1 | a4\n 24221: a4 = s1 + 0x3938\n 24225: u64 [a4 + 0x750] = a1\n 24229: a1 = a4 + 0x700\n 24233: u64 [a1 + 0x48] = a0\n 24236: u64 [a1 + 0x60] = a2\n 24239: u64 [a1 + 0x58] = a3\n 24242: a1 = s1 + 0x4080\n 24246: a0 = u64 [a5 + 0x10]\n 24249: ra = 896, jump @9\n      : @849 [@dyn 448] (gas: 21)\n 24255: a0 = s1 + 0x3938\n 24259: u64 [a0 + 1920] = 0\n 24263: u64 [a0 + 1912] = 0\n 24267: u64 [a0 + 1904] = 0\n 24271: u64 [a0 + 1896] = 0\n 24275: a0 = s1 + 0x4000\n 24279: i32 a0 = a0 + 0xa0\n 24283: ecalli 15 // 'value_transferred'\n 24285: a0 = s1 + 0x3938\n 24289: a2 = a0 + 0x700\n 24293: a1 = u64 [a2 + 0x68]\n 24296: u64 [s1 + 0x190] = a1\n 24300: a1 = u64 [a2 + 0x70]\n 24303: u64 [s1 + 0x138] = a1\n 24307: a1 = u64 [a2 + 0x78]\n 24310: u64 [s1 + 0x130] = a1\n 24314: a0 = u64 [a2 + 0x80]\n 24318: u64 [s1 + 0x128] = a0\n 24322: a0 = s1 + 0x18c0\n 24326: a1 = u64 [s1 + 0x188]\n 24330: ra = 898, jump @6\n      : @850 [@dyn 449] (gas: 22)\n 24336: a4 = s1 + 0x1138\n 24340: a3 = u64 [a4 + 0x788]\n 24344: a0 = u64 [a4 + 0x790]\n 24348: a1 = u64 [a4 + 0x798]\n 24352: a2 = u64 [a4 + 0x7a0]\n 24356: a5 = u64 [s1 + 0x128]\n 24360: u64 [a4 + 0x740] = a5\n 24364: a5 = u64 [s1 + 0x130]\n 24368: u64 [a4 + 0x738] = a5\n 24372: a5 = u64 [s1 + 0x138]\n 24376: u64 [a4 + 0x730] = a5\n 24380: a5 = u64 [s1 + 0x190]\n 24384: u64 [a4 + 0x728] = a5\n 24388: a5 = a4 + 0x700\n 24392: u64 [a5 + 0x60] = a2\n 24395: u64 [a5 + 0x58] = a1\n 24398: u64 [a5 + 0x50] = a0\n 24401: a0 = s1 + 0x18a0\n 24405: a1 = s1 + 0x1880\n 24409: a2 = s1 + 0x1860\n 24413: u64 [a5 + 0x48] = a3\n 24416: ra = 900, jump @1380\n      : @851 [@dyn 450] (gas: 15)\n 24422: a3 = s1 + 0x1138\n 24426: a4 = a3 + 0x700\n 24430: a0 = u64 [a4 + 0x80]\n 24434: a1 = u64 [a4 + 0x78]\n 24437: a2 = u64 [a4 + 0x70]\n 24440: a3 = u64 [a4 + 0x68]\n 24443: a4 = s1 + 0x3938\n 24447: a5 = a4 + 0x700\n 24451: u64 [a5 + 0xa0] = a0\n 24455: u64 [a5 + 0x98] = a1\n 24459: u64 [a5 + 0x90] = a2\n 24463: u64 [a5 + 0x88] = a3\n 24467: a1 = s1 + 0x40c0\n 24471: a0 = u64 [s1 + 0x188]\n 24475: ra = 902, jump @9\n      : @852 [@dyn 451] (gas: 24)\n 24481: a0 = sp + 0xffffffffffffffe0\n 24484: t0 = a0 & 0xffffffffffffffe0\n 24487: sp = t0\n 24489: a0 = u64 [s1 + 0x168]\n 24493: a0 = a0 + 0x1\n 24496: a1 = a0 <u 0x1\n 24499: a2 = u64 [s1 + 0x170]\n 24503: a5 = a2 + a1\n 24506: a2 = a0 | a5\n 24509: a2 = a2 <u 0x1\n 24512: a3 = u64 [s1 + 0x180]\n 24516: a2 = a2 + a3\n 24519: a3 = a2 <u a3\n 24522: a4 = u64 [s1 + 0x178]\n 24526: a3 = a3 + a4\n 24529: a1 = t0\n 24531: u64 [s1 + 0x190] = t0\n 24535: a4 = t0\n 24537: u64 [a4 + 0x18] = a3\n 24540: u64 [a4 + 0x10] = a2\n 24543: u64 [a4 + 0x8] = a5\n 24546: u64 [a4] = a0\n 24548: a0 = s1 + 0x1840\n 24552: ra = 904, jump @6\n      : @853 [@dyn 452] (gas: 14)\n 24558: a4 = s1 + 0x1138\n 24562: a5 = a4 + 0x700\n 24566: a2 = u64 [a5 + 0x8]\n 24569: a0 = u64 [a5 + 0x10]\n 24572: a1 = u64 [a5 + 0x18]\n 24575: a3 = u64 [a5 + 0x20]\n 24578: a5 = a4 + 0x600\n 24582: u64 [a5 + 0xe0] = a3\n 24586: u64 [a5 + 0xd8] = a1\n 24590: u64 [a5 + 0xd0] = a0\n 24594: a0 = s1 + 0x1820\n 24598: a1 = s1 + 0x1800\n 24602: u64 [a5 + 0xc8] = a2\n 24606: ra = 906, jump @1372\n      : @854 [@dyn 453] (gas: 15)\n 24612: a3 = s1 + 0x1138\n 24616: a0 = u64 [a3 + 0x700]\n 24620: a4 = a3 + 0x600\n 24624: a1 = u64 [a4 + 0xf8]\n 24628: a2 = u64 [a4 + 0xf0]\n 24632: a3 = u64 [a4 + 0xe8]\n 24636: a4 = s1 + 0x3938\n 24640: a5 = a4 + 0x700\n 24644: u64 [a5 + 0xc0] = a0\n 24648: u64 [a5 + 0xb8] = a1\n 24652: u64 [a5 + 0xb0] = a2\n 24656: u64 [a5 + 0xa8] = a3\n 24660: a1 = s1 + 0x40e0\n 24664: a0 = u64 [s1 + 0x190]\n 24668: ra = 908, jump @9\n      : @855 [@dyn 454] (gas: 5)\n 24674: a0 = s1 + 0x4000\n 24678: i32 a0 = a0 + 0x100\n 24682: ra = 0x38e\n 24686: ecalli 8 // 'now'\n 24688: fallthrough\n      : @856 [@dyn 455] (gas: 5)\n 24689: a1 = u64 [s1 + 0x168]\n 24693: a0 = a1 + 0x2\n 24696: a1 = a0 <u a1\n 24699: a3 = u64 [s1 + 0x170]\n 24703: t0 = 912, jump @1623\n      : @857 [@dyn 456] (gas: 23)\n 24709: a1 = u64 [s1 + 0x180]\n 24713: a3 = a3 + a1\n 24716: a1 = a3 <u a1\n 24719: a4 = u64 [s1 + 0x178]\n 24723: a1 = a1 + a4\n 24726: a4 = s1 + 0x4138\n 24730: u64 [a4] = a1\n 24732: a5 = a4 + 0xffffffffffffff00\n 24736: u64 [a5 + 0xf8] = a3\n 24740: a3 = s1 + 0x3938\n 24744: a1 = u64 [a3 + 0x7d8]\n 24748: u64 [a5 + 0xf0] = a2\n 24752: a2 = u64 [a3 + 0x7e0]\n 24756: u64 [a5 + 0xe8] = a0\n 24760: a0 = u64 [a3 + 0x7d0]\n 24764: a3 = u64 [a3 + 0x7c8]\n 24768: u64 [a4 + 0x20] = a2\n 24771: u64 [a4 + 0x18] = a1\n 24774: u64 [a4 + 0x10] = a0\n 24777: u64 [a4 + 0x8] = a3\n 24780: a0 = s1 + 0x4120\n 24784: a1 = s1 + 0x4140\n 24788: ra = 914, jump @9\n      : @858 [@dyn 457] (gas: 8)\n 24794: a0 = sp + 0xffffffffffffffe0\n 24797: a5 = a0 & 0xffffffffffffffe0\n 24800: sp = a5\n 24802: a1 = u64 [s1 + 0x148]\n 24806: a0 = a1 + 0x4\n 24809: a1 = a0 <u a1\n 24812: a3 = u64 [s1 + 0x150]\n 24816: t0 = 916, jump @1623\n      : @859 [@dyn 458] (gas: 30)\n 24822: a1 = u64 [s1 + 0x158]\n 24826: a3 = a3 + a1\n 24829: a1 = a3 <u a1\n 24832: a4 = u64 [s1 + 0x160]\n 24836: a1 = a1 + a4\n 24839: u64 [s1 + 0x190] = a5\n 24843: u64 [a5 + 0x18] = a1\n 24846: u64 [a5 + 0x10] = a3\n 24849: u64 [a5 + 0x8] = a2\n 24852: u64 [a5] = a0\n 24854: a0 = s1 + 0x4138\n 24858: u64 [a0 + 64] = 0\n 24861: u64 [a0 + 56] = 0\n 24864: u64 [a0 + 48] = 0\n 24867: u64 [a0 + 40] = 0\n 24870: a0 = s1 + 0x4000\n 24874: i32 a0 = a0 + 0x160\n 24878: ecalli 15 // 'value_transferred'\n 24880: a0 = s1 + 0x4138\n 24884: a1 = u64 [a0 + 0x28]\n 24887: u64 [s1 + 0x180] = a1\n 24891: a1 = u64 [a0 + 0x30]\n 24894: u64 [s1 + 0x178] = a1\n 24898: a1 = u64 [a0 + 0x38]\n 24901: u64 [s1 + 0x170] = a1\n 24905: a0 = u64 [a0 + 0x40]\n 24908: u64 [s1 + 0x168] = a0\n 24912: a0 = s1 + 0x17e0\n 24916: a1 = u64 [s1 + 0x190]\n 24920: ra = 918, jump @6\n      : @860 [@dyn 459] (gas: 22)\n 24926: a4 = s1 + 0x1138\n 24930: a3 = u64 [a4 + 0x6a8]\n 24934: a0 = u64 [a4 + 0x6b0]\n 24938: a1 = u64 [a4 + 0x6b8]\n 24942: a2 = u64 [a4 + 0x6c0]\n 24946: a5 = u64 [s1 + 0x168]\n 24950: u64 [a4 + 0x660] = a5\n 24954: a5 = u64 [s1 + 0x170]\n 24958: u64 [a4 + 0x658] = a5\n 24962: a5 = u64 [s1 + 0x178]\n 24966: u64 [a4 + 0x650] = a5\n 24970: a5 = u64 [s1 + 0x180]\n 24974: u64 [a4 + 0x648] = a5\n 24978: a5 = a4 + 0x600\n 24982: u64 [a5 + 0x80] = a2\n 24986: u64 [a5 + 0x78] = a1\n 24989: u64 [a5 + 0x70] = a0\n 24992: a0 = s1 + 0x17c0\n 24996: a1 = s1 + 0x17a0\n 25000: a2 = s1 + 0x1780\n 25004: u64 [a5 + 0x68] = a3\n 25007: ra = 920, jump @1380\n      : @861 [@dyn 460] (gas: 14)\n 25013: a3 = s1 + 0x1138\n 25017: a4 = a3 + 0x600\n 25021: a0 = u64 [a4 + 0xa0]\n 25025: a1 = u64 [a4 + 0x98]\n 25029: a2 = u64 [a4 + 0x90]\n 25033: a3 = u64 [a4 + 0x88]\n 25037: a4 = s1 + 0x4138\n 25041: u64 [a4 + 0x60] = a0\n 25044: u64 [a4 + 0x58] = a1\n 25047: u64 [a4 + 0x50] = a2\n 25050: u64 [a4 + 0x48] = a3\n 25053: a1 = s1 + 0x4180\n 25057: a0 = u64 [s1 + 0x190]\n 25061: ra = 922, jump @9\n      : @862 [@dyn 461] (gas: 3)\n 25067: a0 = s1 + 0x1760\n 25071: a1 = u64 [s1 + 0x188]\n 25075: ra = 924, jump @6\n      : @863 [@dyn 462] (gas: 13)\n 25081: a1 = s1 + 0x1138\n 25085: a2 = a1 + 0x600\n 25089: a0 = u64 [a2 + 0x40]\n 25092: u64 [s1 + 0x170] = a0\n 25096: a0 = u64 [a2 + 0x38]\n 25099: u64 [s1 + 0x168] = a0\n 25103: a0 = u64 [a2 + 0x30]\n 25106: u64 [s1 + 0x160] = a0\n 25110: a0 = u64 [a2 + 0x28]\n 25113: u64 [s1 + 0x158] = a0\n 25117: a0 = s1 + 0x1740\n 25121: a1 = 0x40\n 25124: ra = 926, jump @2\n      : @864 [@dyn 463] (gas: 20)\n 25130: a1 = s1 + 0x1138\n 25134: a2 = a1 + 0x600\n 25138: a0 = u64 [a2 + 0x20]\n 25141: u64 [s1 + 0x180] = a0\n 25145: a0 = u64 [a2 + 0x18]\n 25148: u64 [s1 + 0x178] = a0\n 25152: a0 = u64 [a2 + 0x10]\n 25155: u64 [s1 + 0x188] = a0\n 25159: a0 = u64 [a2 + 0x8]\n 25162: u64 [s1 + 0x190] = a0\n 25166: a0 = s1 + 0x4138\n 25170: u64 [a0 + 128] = 0\n 25174: u64 [a0 + 120] = 0\n 25177: u64 [a0 + 112] = 0\n 25180: u64 [a0 + 104] = 0\n 25183: a0 = s1 + 0x4000\n 25187: i32 a0 = a0 + 0x1a0\n 25191: ra = 0x3a0\n 25195: ecalli 15 // 'value_transferred'\n 25197: fallthrough\n      : @865 [@dyn 464] (gas: 7)\n 25198: a3 = s1 + 0x100\n 25202: a0 = u64 [a3 + 0x80]\n 25206: a1 = u64 [a3 + 0x88]\n 25210: a0 = a0 | a1\n 25213: a2 = u64 [a3 + 0x78]\n 25216: a1 = u64 [a3 + 0x90]\n 25220: t0 = 930, jump @1631\n      : @866 [@dyn 465] (gas: 1)\n 25226: jump @868 if a0 == 0\n      : @867 (gas: 1)\n 25229: jump @993\n      : @868 (gas: 14)\n 25232: a3 = s1 + 0x4138\n 25236: a0 = u64 [a3 + 0x68]\n 25239: a1 = u64 [a3 + 0x70]\n 25242: a2 = u64 [a3 + 0x78]\n 25245: a3 = u64 [a3 + 0x80]\n 25249: a4 = s1 + 0x1138\n 25253: u64 [a4 + 0x600] = a3\n 25257: a3 = a4 + 0x500\n 25261: u64 [a3 + 0xf8] = a2\n 25265: u64 [a3 + 0xf0] = a1\n 25269: a1 = s1 + 0x1720\n 25273: u64 [a3 + 0xe8] = a0\n 25277: a0 = u64 [s1 + 0x190]\n 25281: ra = 932, jump @4\n      : @869 [@dyn 466] (gas: 11)\n 25287: a3 = s1 + 0x100\n 25291: a0 = u64 [a3 + 0x80]\n 25295: a1 = u64 [a3 + 0x78]\n 25298: a0 = a0 | a1\n 25301: a1 = 0xffffffe0\n 25311: a2 = u64 [a3 + 0x90]\n 25315: a1 = a2 <u a1\n 25318: a2 = u64 [a3 + 0x88]\n 25322: a1 = 0 if a2 != 0\n 25324: a1 = 0 if a0 != 0\n 25326: jump @871 if a1 != 0\n      : @870 (gas: 1)\n 25329: jump @993\n      : @871 (gas: 14)\n 25332: a0 = u64 [s1 + 0x190]\n 25336: i32 a0 = a0 + 0x20\n 25339: a3 = s1 + 0x1138\n 25343: a1 = u64 [s1 + 0x158]\n 25347: a4 = a3 + 0x500\n 25351: u64 [a4 + 0xc8] = a1\n 25355: a1 = u64 [s1 + 0x160]\n 25359: u64 [a4 + 0xd0] = a1\n 25363: a1 = u64 [s1 + 0x168]\n 25367: u64 [a4 + 0xd8] = a1\n 25371: a1 = s1 + 0x1700\n 25375: a2 = u64 [s1 + 0x170]\n 25379: u64 [a4 + 0xe0] = a2\n 25383: ra = 934, jump @4\n      : @872 [@dyn 467] (gas: 45)\n 25389: a0 = u64 [s1 + 0x118]\n 25393: ecalli 4 // 'caller'\n 25395: a2 = u64 [s1 + 0x140]\n 25399: a0 = u64 [a2 + 0x8]\n 25402: a1 = i32 [a2 + 0x10]\n 25405: a2 = u64 [a2]\n 25407: a3 = reverse a0\n 25409: a0 = a3 << 0x20\n 25412: a1 = reverse a1\n 25414: a1 = a1 >> 0x20\n 25417: t0 = a1 | a0\n 25420: a3 = a3 >> 0x20\n 25423: a2 = reverse a2\n 25425: a1 = a2 << 0x20\n 25428: t1 = a1 | a3\n 25431: a2 = a2 >> 0x20\n 25434: a1 = s1 + 0x1138\n 25438: u64 [a1 + 1408] = 0\n 25442: a0 = u64 [s1 + 0x1a0]\n 25446: u64 [a1 + 0x5a0] = a0\n 25450: a0 = u64 [s1 + 0x1a8]\n 25454: u64 [a1 + 0x598] = a0\n 25458: a0 = u64 [s1 + 0x1b0]\n 25462: u64 [a1 + 0x590] = a0\n 25466: a0 = u64 [s1 + 0x1b8]\n 25470: u64 [a1 + 0x588] = a0\n 25474: a3 = u64 [0x200a0]\n 25479: a4 = u64 [0x200a8]\n 25484: a5 = u64 [0x200b0]\n 25489: a0 = u64 [0x200b8]\n 25494: u64 [a1 + 0x5c0] = a3\n 25498: a3 = a1 + 0x500\n 25502: u64 [a3 + 0xb8] = a4\n 25506: u64 [a3 + 0xb0] = a5\n 25510: u64 [a3 + 0xa8] = a0\n 25514: u64 [a3 + 0x78] = a2\n 25517: u64 [a1 + 0x570] = t1\n 25521: a0 = a1\n 25523: a1 = 0x40\n 25526: a2 = s1 + 0x16e0\n 25530: a3 = s1 + 0x16c0\n 25534: a4 = s1 + 0x16a0\n 25538: u64 [a0 + 0x568] = t0\n 25542: a0 = u64 [s1 + 0x190]\n 25546: ra = 936, jump @12\n      : @873 [@dyn 468] (gas: 6)\n 25552: a0 = 0\n 25554: a1 = u64 [s1 + 0x198]\n 25558: a2 = 0\n 25560: ecalli 12 // 'seal_return'\n 25562: a1 = 0x201a0\n 25567: jump @1175\n      : @874 (gas: 34)\n 25570: a0 = u64 [s1 + 0xf8]\n 25574: a1 = u64 [s1 + 0x1b8]\n 25578: t1 = a1 <u a0\n 25581: a1 = u64 [s1 + 0xe0]\n 25585: a5 = u64 [s1 + 0x1a8]\n 25589: a3 = a5 ^ a1\n 25592: a2 = a5 <u a1\n 25595: a2 = t1 if a3 == 0\n 25598: t0 = u64 [s1 + 0xe8]\n 25602: a3 = u64 [s1 + 0x1a0]\n 25606: ra = a3 - t0\n 25609: a3 = a3 <u t0\n 25612: t2 = u64 [s1 + 0xf0]\n 25616: a4 = u64 [s1 + 0x1b0]\n 25620: a4 = a4 - t2\n 25623: a4 = a4 - a3\n 25626: a3 = ra <u a2\n 25629: a4 = a4 - a3\n 25632: ra = ra - a2\n 25635: a2 = a5 - a1\n 25638: a2 = a2 - t1\n 25641: a3 = u64 [s1 + 0x1b8]\n 25645: a3 = a3 - a0\n 25648: u64 [s1 + 0x5a0] = a0\n 25652: u64 [s1 + 0x580] = a3\n 25656: u64 [s1 + 0x5a8] = a1\n 25660: u64 [s1 + 0x5b0] = t0\n 25664: u64 [s1 + 0x588] = a2\n 25668: u64 [s1 + 0x5b8] = t2\n 25672: u64 [s1 + 0x590] = ra\n 25676: a0 = s1 + 0x5a0\n 25680: a1 = s1 + 0x580\n 25684: u64 [s1 + 0x598] = a4\n 25688: ra = 938, jump @1343\n      : @875 [@dyn 469] (gas: 3)\n 25694: a0 = s1 + 0x560\n 25698: a1 = 0x40\n 25701: ra = 940, jump @2\n      : @876 [@dyn 470] (gas: 13)\n 25707: t0 = u64 [s1 + 0x578]\n 25711: a1 = s1 + 0x500\n 25715: a5 = u64 [a1 + 0x70]\n 25718: a3 = u64 [a1 + 0x68]\n 25721: a0 = u64 [a1 + 0x60]\n 25724: a2 = a3 | t0\n 25727: a1 = a0 | a5\n 25730: a1 = a1 | a2\n 25733: a1 = a1 >> 0x20\n 25736: a2 = a2 | a5\n 25739: a2 = a2 << 0x20\n 25742: a1 = a1 | a2\n 25745: jump @878 if a1 == 0\n      : @877 (gas: 1)\n 25748: jump @993\n      : @878 (gas: 22)\n 25751: a1 = a0 + 0x20\n 25754: u64 [s1 + 0x1b0] = a1\n 25758: a4 = a1 <u a0\n 25761: a1 = a3 + a4\n 25764: u64 [s1 + 0x1b8] = a1\n 25768: a1 = a1 <u a3\n 25771: a1 = a4 if a4 == 0\n 25774: a1 = a1 + a5\n 25777: u64 [s1 + 0x1a0] = a1\n 25781: a1 = a1 <u a5\n 25784: a1 = a1 + t0\n 25787: u64 [s1 + 0x1a8] = a1\n 25791: u64 [s1 + 1368] = 0\n 25795: u64 [s1 + 1360] = 0\n 25799: u64 [s1 + 1352] = 0\n 25803: a1 = s1 + 0x540\n 25807: u64 [s1 + 1344] = 0x20\n 25812: u64 [s1 + 0x150] = a0\n 25816: u64 [s1 + 0x140] = a3\n 25820: u64 [s1 + 0x138] = t0\n 25824: u64 [s1 + 0x130] = a5\n 25828: ra = 942, jump @4\n      : @879 [@dyn 471] (gas: 3)\n 25834: a0 = s1 + 0x520\n 25838: a1 = u64 [s1 + 0xf8]\n 25842: ra = 944, jump @2\n      : @880 [@dyn 472] (gas: 13)\n 25848: a5 = s1 + 0x100\n 25852: a0 = u64 [a5 + 0xb0]\n 25856: a3 = u64 [a5 + 0xa0]\n 25860: a2 = a0 | a3\n 25863: a1 = u64 [a5 + 0xb8]\n 25867: a4 = u64 [a5 + 0xa8]\n 25871: a1 = a1 | a4\n 25874: a2 = a2 | a1\n 25877: a2 = a2 >> 0x20\n 25880: a1 = a1 | a3\n 25883: a1 = a1 << 0x20\n 25886: a1 = a1 | a2\n 25889: jump @882 if a1 == 0\n      : @881 (gas: 1)\n 25892: jump @993\n      : @882 (gas: 15)\n 25895: a5 = s1 + 0x500\n 25899: a4 = u64 [a5 + 0x38]\n 25902: a1 = u64 [a5 + 0x30]\n 25905: a2 = u64 [a5 + 0x28]\n 25908: a3 = u64 [a5 + 0x20]\n 25911: u64 [s1 + 0x158] = a3\n 25915: u64 [a5] = a3\n 25917: u64 [s1 + 0x160] = a2\n 25921: u64 [a5 + 0x8] = a2\n 25924: u64 [s1 + 0x168] = a1\n 25928: u64 [a5 + 0x10] = a1\n 25931: a1 = s1 + 0x500\n 25935: u64 [s1 + 0x170] = a4\n 25939: u64 [a5 + 0x18] = a4\n 25942: ra = 946, jump @4\n      : @883 [@dyn 473] (gas: 24)\n 25948: t0 = 0\n 25950: a4 = 0\n 25952: ra = 0\n 25954: t2 = 0\n 25956: a3 = s1 + 0x100\n 25960: a1 = u64 [a3 + 0x50]\n 25963: a0 = a1 + 0x40\n 25966: u64 [a3 + 0xb0] = a0\n 25970: a0 = a0 <u a1\n 25973: a2 = u64 [a3 + 0x40]\n 25976: a1 = a2 + a0\n 25979: u64 [a3 + 0xa8] = a1\n 25983: a1 = a1 <u a2\n 25986: a1 = a0 if a0 == 0\n 25989: a0 = u64 [a3 + 0x30]\n 25992: a1 = a1 + a0\n 25995: u64 [a3 + 0xa0] = a1\n 25999: a0 = a1 <u a0\n 26002: a1 = u64 [a3 + 0x38]\n 26005: a0 = a0 + a1\n 26008: u64 [a3 + 0xb8] = a0\n 26012: a1 = u64 [a3 + 0x8]\n 26015: t1 = u64 [s1 + 0x100]\n 26019: fallthrough\n      : @884 (gas: 17)\n 26020: a0 = u64 [s1 + 0x158]\n 26024: a0 = t0 <u a0\n 26027: a2 = u64 [s1 + 0x160]\n 26031: a3 = a4 ^ a2\n 26034: u64 [s1 + 0x198] = a4\n 26038: a2 = a4 <u a2\n 26041: a2 = a0 if a3 == 0\n 26044: a5 = u64 [s1 + 0x168]\n 26048: a0 = ra <u a5\n 26051: a3 = u64 [s1 + 0x170]\n 26055: a4 = t2 ^ a3\n 26058: a3 = t2 <u a3\n 26061: a3 = a0 if a4 == 0\n 26064: a0 = ra ^ a5\n 26067: a0 = a0 | a4\n 26070: a3 = a2 if a0 == 0\n 26073: jump @991 if a3 == 0\n      : @885 (gas: 10)\n 26077: a0 = a1 | t1\n 26080: a2 = u64 [s1 + 0x110]\n 26084: a3 = u64 [s1 + 0x118]\n 26088: a2 = a2 | a3\n 26091: a0 = a0 | a2\n 26094: a0 = a0 >> 0x20\n 26097: a2 = a2 | t1\n 26100: a2 = a2 << 0x20\n 26103: a0 = a0 | a2\n 26106: jump @887 if a0 == 0\n      : @886 (gas: 1)\n 26109: jump @993\n      : @887 (gas: 7)\n 26112: u64 [s1 + 0x180] = ra\n 26116: u64 [s1 + 0x188] = t2\n 26120: u64 [s1 + 0x190] = t0\n 26124: u64 [s1 + 0x100] = t1\n 26128: a0 = s1 + 0x4e0\n 26132: u64 [s1 + 0x108] = a1\n 26136: ra = 948, jump @2\n      : @888 [@dyn 474] (gas: 13)\n 26142: a1 = s1 + 0x100\n 26146: a0 = u64 [a1 + 0xb0]\n 26150: a4 = u64 [a1 + 0xa0]\n 26154: a2 = a0 | a4\n 26157: a3 = u64 [a1 + 0xb8]\n 26161: a5 = u64 [a1 + 0xa8]\n 26165: a1 = a5 | a3\n 26168: a2 = a2 | a1\n 26171: a2 = a2 >> 0x20\n 26174: a1 = a1 | a4\n 26177: a1 = a1 << 0x20\n 26180: a1 = a1 | a2\n 26183: jump @890 if a1 == 0\n      : @889 (gas: 1)\n 26186: jump @993\n      : @890 (gas: 18)\n 26189: u64 [s1 + 0x1a0] = a4\n 26193: a4 = u64 [s1 + 0x4f0]\n 26197: a1 = u64 [s1 + 0x4e8]\n 26201: a2 = u64 [s1 + 0x4e0]\n 26205: u64 [s1 + 0x1b8] = a3\n 26209: a3 = u64 [s1 + 0x148]\n 26213: a4 = a4 & a3\n 26216: a1 = a1 & 0xffffffffffffffff\n 26219: a2 = a2 & 0xffffffffffffffff\n 26222: u64 [s1 + 1240] = 0\n 26226: a3 = s1 + 0x400\n 26230: u64 [a3 + 0xc0] = a2\n 26234: u64 [a3 + 0xc8] = a1\n 26238: a1 = s1 + 0x4c0\n 26242: u64 [a3 + 0xd0] = a4\n 26246: u64 [s1 + 0x1b0] = a0\n 26250: u64 [s1 + 0x1a8] = a5\n 26254: ra = 950, jump @4\n      : @891 [@dyn 475] (gas: 51)\n 26260: a1 = u64 [s1 + 0x1b0]\n 26264: a0 = a1 + 0x20\n 26267: u64 [s1 + 0x178] = a0\n 26271: a2 = a0 <u a1\n 26274: a0 = u64 [s1 + 0x1a8]\n 26278: t1 = a0 + a2\n 26281: a3 = t1 <u a0\n 26284: a3 = a2 if a2 == 0\n 26287: a0 = u64 [s1 + 0x1a0]\n 26291: a2 = a0 + a3\n 26294: a3 = a2 <u a0\n 26297: a0 = u64 [s1 + 0x1b8]\n 26301: a0 = a0 + a3\n 26304: u64 [s1 + 0x1b8] = a0\n 26308: a0 = u64 [s1 + 0x108]\n 26312: a3 = a0 + 0x20\n 26315: a4 = a3 <u a0\n 26318: a0 = u64 [s1 + 0x118]\n 26322: a5 = a0 + a4\n 26325: a0 = a5 <u a0\n 26328: a0 = a4 if a4 == 0\n 26331: a1 = u64 [s1 + 0x100]\n 26335: a0 = a0 + a1\n 26338: a4 = a0 <u a1\n 26341: a1 = u64 [s1 + 0x110]\n 26345: a1 = a1 + a4\n 26348: u64 [s1 + 0x110] = a1\n 26352: t0 = u64 [s1 + 0x190]\n 26356: t0 = t0 + 0x1\n 26359: a4 = t0 <u 0x1\n 26362: t2 = u64 [s1 + 0x198]\n 26366: t2 = t2 + a4\n 26369: a4 = t0 | t2\n 26372: a4 = a4 <u 0x1\n 26375: a1 = u64 [s1 + 0x180]\n 26379: a4 = a4 + a1\n 26382: a1 = a4 <u a1\n 26385: ra = u64 [s1 + 0x188]\n 26389: ra = ra + a1\n 26392: a1 = u64 [s1 + 0x178]\n 26396: u64 [s1 + 0x1b0] = a1\n 26400: u64 [s1 + 0x1a8] = t1\n 26404: u64 [s1 + 0x1a0] = a2\n 26408: a1 = a3\n 26410: u64 [s1 + 0x118] = a5\n 26414: t1 = a0\n 26416: a0 = a4\n 26418: a4 = t2\n 26420: t2 = ra\n 26422: ra = a0\n 26424: jump @884\n      : @892 (gas: 40)\n 26427: a1 = u64 [s1 + 0xf0]\n 26431: a0 = u64 [s1 + 0x180]\n 26435: t2 = a0 <u a1\n 26438: a5 = u64 [s1 + 0xb8]\n 26442: a0 = t0 ^ a5\n 26445: a2 = t0 <u a5\n 26448: a2 = t2 if a0 == 0\n 26451: a0 = u64 [s1 + 0xc0]\n 26455: a3 = a4 - a0\n 26458: t1 = a3 <u a2\n 26461: a4 = a4 <u a0\n 26464: a4 = a4 + t1\n 26467: u64 [s1 + 0x1b8] = a4\n 26471: t1 = u64 [s1 + 0xc8]\n 26475: a4 = u64 [s1 + 0x178]\n 26479: a4 = a4 - t1\n 26482: ra = u64 [s1 + 0x1b8]\n 26486: a4 = a4 - ra\n 26489: u64 [s1 + 0x1b8] = a4\n 26493: a3 = a3 - a2\n 26496: u64 [s1 + 0x1b0] = a3\n 26500: a2 = t0 - a5\n 26503: a2 = a2 - t2\n 26506: a4 = u64 [s1 + 0x180]\n 26510: a4 = a4 - a1\n 26513: a3 = s1 + 0x2138\n 26517: u64 [a3 + 0x3c8] = a1\n 26521: u64 [a3 + 0x3a8] = a4\n 26525: a4 = a3 + 0x300\n 26529: u64 [a4 + 0xd0] = a5\n 26533: u64 [a4 + 0xd8] = a0\n 26537: u64 [a4 + 0xb0] = a2\n 26541: u64 [a3 + 0x3e0] = t1\n 26545: a0 = u64 [s1 + 0x1b0]\n 26549: u64 [a4 + 0xb8] = a0\n 26553: a0 = s1 + 0x2500\n 26557: a1 = s1 + 0x24e0\n 26561: a2 = u64 [s1 + 0x1b8]\n 26565: u64 [a4 + 0xc0] = a2\n 26569: ra = 952, jump @1343\n      : @893 [@dyn 476] (gas: 5)\n 26575: u64 [s1 + 416] = 0\n 26579: u64 [s1 + 408] = 0\n 26583: u64 [s1 + 392] = 0\n 26587: u64 [s1 + 400] = 0\n 26591: fallthrough\n      : @894 (gas: 3)\n 26592: a0 = s1 + 0x24c0\n 26596: a1 = u64 [s1 + 0xf0]\n 26600: ra = 954, jump @2\n      : @895 [@dyn 477] (gas: 22)\n 26606: a5 = s1 + 0x2138\n 26610: a3 = a5 + 0x300\n 26614: a0 = u64 [a3 + 0x90]\n 26618: a1 = u64 [a3 + 0xa0]\n 26622: a2 = u64 [a3 + 0x88]\n 26626: t2 = u64 [a5 + 0x398]\n 26630: ra = u64 [s1 + 0x198]\n 26634: t1 = ra ^ a0\n 26637: a0 = ra <u a0\n 26640: t0 = u64 [s1 + 0x1a0]\n 26644: a2 = t0 <u a2\n 26647: a2 = a0 if t1 != 0\n 26650: a4 = u64 [s1 + 0x188]\n 26654: a0 = a4 <u t2\n 26657: a3 = u64 [s1 + 0x190]\n 26661: t1 = a3 ^ a1\n 26664: a1 = a3 <u a1\n 26667: a1 = a0 if t1 == 0\n 26670: a0 = a4 ^ t2\n 26673: a0 = a0 | t1\n 26676: a1 = a2 if a0 == 0\n 26679: jump @983 if a1 == 0\n      : @896 (gas: 17)\n 26683: u64 [a5 + 0x268] = t0\n 26687: a0 = u64 [s1 + 0xf0]\n 26691: u64 [a5 + 0x288] = a0\n 26695: u64 [a5 + 0x270] = ra\n 26699: a0 = u64 [s1 + 0xb8]\n 26703: u64 [a5 + 0x290] = a0\n 26707: u64 [a5 + 0x278] = a4\n 26711: a0 = u64 [s1 + 0xc0]\n 26715: a4 = a5 + 0x200\n 26719: u64 [a4 + 0x98] = a0\n 26723: u64 [a4 + 0x80] = a3\n 26727: a0 = s1 + 0x23e0\n 26731: a1 = s1 + 0x23c0\n 26735: a2 = s1 + 0x23a0\n 26739: a3 = u64 [s1 + 0xc8]\n 26743: u64 [a4 + 0xa0] = a3\n 26747: ra = 956, jump @1470\n      : @897 [@dyn 478] (gas: 14)\n 26753: a1 = s1 + 0x2138\n 26757: a4 = a1 + 0x200\n 26761: a0 = u64 [a4 + 0xc0]\n 26765: a2 = u64 [a4 + 0xb8]\n 26769: a3 = u64 [a4 + 0xb0]\n 26773: a1 = u64 [a4 + 0xa8]\n 26777: a0 = a0 | a3\n 26780: a3 = a1 | a2\n 26783: a3 = a3 | a0\n 26786: a3 = a3 >> 0x20\n 26789: a0 = a0 | a2\n 26792: a0 = a0 << 0x20\n 26795: a0 = a0 | a3\n 26798: jump @993 if a0 != 0\n      : @898 (gas: 2)\n 26802: a0 = s1 + 0x2380\n 26806: ra = 958, jump @2\n      : @899 [@dyn 479] (gas: 3)\n 26812: t0 = 0x3c0\n 26816: a2 = s1 + 0x2138\n 26820: fallthrough\n      : @900 [@dyn 480] (gas: 18)\n 26821: a3 = a2 + 0x200\n 26825: a0 = u64 [a3 + 0x48]\n 26828: u64 [s1 + 0x1b8] = a0\n 26832: a0 = u64 [a3 + 0x50]\n 26835: u64 [s1 + 0x1b0] = a0\n 26839: a0 = u64 [a3 + 0x58]\n 26842: u64 [s1 + 0x1a8] = a0\n 26846: a0 = u64 [s1 + 0xd0]\n 26850: u64 [a3 + 0x40] = a0\n 26853: a0 = u64 [s1 + 0xd8]\n 26857: u64 [a3 + 0x38] = a0\n 26860: a0 = u64 [s1 + 0xe0]\n 26864: u64 [a3 + 0x30] = a0\n 26867: a1 = s1 + 0x2360\n 26871: a0 = u64 [s1 + 0xe8]\n 26875: u64 [a3 + 0x28] = a0\n 26878: a0 = 0\n 26880: ra = 962, jump @4\n      : @901 [@dyn 481] (gas: 9)\n 26886: a0 = s1 + 0x2138\n 26890: u64 [a0 + 544] = 0\n 26894: u64 [a0 + 536] = 0\n 26898: u64 [a0 + 528] = 0\n 26902: a3 = a0\n 26904: a0 = 0x20\n 26907: a1 = s1 + 0x2340\n 26911: u64 [a3 + 520] = 0x3\n 26916: ra = 964, jump @4\n      : @902 [@dyn 482] (gas: 3)\n 26922: a1 = u64 [s1 + 0x128]\n 26926: a0 = i32 [a1]\n 26928: jump @904 if a0 >u 63\n      : @903 (gas: 2)\n 26932: u32 [a1 + 0] = 0x40\n 26935: fallthrough\n      : @904 (gas: 14)\n 26936: a0 = u64 [s1 + 0x138]\n 26940: a1 = u64 [s1 + 0x1a8]\n 26944: a0 = a0 & a1\n 26947: u64 [s1 + 0x1a8] = a0\n 26951: a1 = u64 [s1 + 0x1b0]\n 26955: a1 = a1 & 0xffffffffffffffff\n 26958: u64 [s1 + 0x1b0] = a1\n 26962: a1 = u64 [s1 + 0x1b8]\n 26966: a0 = a1 & 0xffffffffffffffff\n 26969: u64 [s1 + 0x1b8] = a0\n 26973: a0 = sp + 0xffffffffffffffe0\n 26976: a0 = a0 & 0xffffffffffffffe0\n 26979: u64 [s1 + 0x180] = a0\n 26983: t0 = 966, jump @1602\n      : @905 [@dyn 483] (gas: 21)\n 26989: ecalli 7 // 'hash_keccak_256'\n 26991: a3 = u64 [s1 + 0x180]\n 26995: a0 = u64 [a3 + 0x18]\n 26998: a1 = u64 [a3 + 0x10]\n 27001: a2 = u64 [a3 + 0x8]\n 27004: a3 = u64 [a3]\n 27006: a0 = reverse a0\n 27008: u64 [s1 + 0x178] = a0\n 27012: a0 = reverse a1\n 27014: u64 [s1 + 0x170] = a0\n 27018: a0 = reverse a2\n 27020: u64 [s1 + 0x168] = a0\n 27024: a0 = reverse a3\n 27026: u64 [s1 + 0x160] = a0\n 27030: a0 = sp + 0xffffffffffffffe0\n 27033: a0 = a0 & 0xffffffffffffffe0\n 27036: u64 [s1 + 0x180] = a0\n 27040: sp = a0\n 27042: t0 = 0x3c8\n 27046: a2 = s1 + 0x2138\n 27050: fallthrough\n      : @906 [@dyn 484] (gas: 11)\n 27051: u64 [a2 + 512] = 0\n 27055: a0 = u64 [s1 + 0x1a8]\n 27059: a3 = a2 + 0x100\n 27063: u64 [a3 + 0xf8] = a0\n 27067: a0 = u64 [s1 + 0x1b0]\n 27071: u64 [a3 + 0xf0] = a0\n 27075: a1 = s1 + 0x2320\n 27079: a0 = u64 [s1 + 0x1b8]\n 27083: u64 [a3 + 0xe8] = a0\n 27087: a0 = 0\n 27089: ra = 970, jump @4\n      : @907 [@dyn 485] (gas: 14)\n 27095: a0 = u64 [s1 + 0x160]\n 27099: a1 = s1 + 0x2138\n 27103: a2 = a1 + 0x100\n 27107: u64 [a2 + 0xe0] = a0\n 27111: a0 = u64 [s1 + 0x168]\n 27115: u64 [a2 + 0xd8] = a0\n 27119: a0 = u64 [s1 + 0x170]\n 27123: u64 [a2 + 0xd0] = a0\n 27127: a3 = a1\n 27129: a0 = 0x20\n 27132: a1 = s1 + 0x2300\n 27136: a2 = u64 [s1 + 0x178]\n 27140: u64 [a3 + 0x1c8] = a2\n 27144: ra = 972, jump @4\n      : @908 [@dyn 486] (gas: 3)\n 27150: a1 = u64 [s1 + 0x128]\n 27154: a0 = i32 [a1]\n 27156: jump @910 if a0 >u 63\n      : @909 (gas: 2)\n 27160: u32 [a1 + 0] = 0x40\n 27163: fallthrough\n      : @910 (gas: 4)\n 27164: a0 = sp + 0xffffffffffffffe0\n 27167: a0 = a0 & 0xffffffffffffffe0\n 27170: u64 [s1 + 0x178] = a0\n 27174: t0 = 974, jump @1602\n      : @911 [@dyn 487] (gas: 5)\n 27180: ra = 0x3d0\n 27184: ecalli 7 // 'hash_keccak_256'\n 27186: a3 = u64 [s1 + 0x178]\n 27190: t0 = 0x3d2\n 27194: jump @1594\n      : @912 [@dyn 488] (gas: 2)\n 27197: a3 = u64 [s1 + 0x178]\n 27201: t0 = 978, jump @1594\n      : @913 [@dyn 489] (gas: 3)\n 27207: i32 a0 = a0 + 0x2e0\n 27211: a0 = a0 + s1\n 27214: ra = 980, jump @6\n      : @914 [@dyn 490] (gas: 2)\n 27220: a2 = s1 + 0x2138\n 27224: fallthrough\n      : @915 (gas: 9)\n 27225: t0 = u64 [a2 + 0x1c0]\n 27229: a0 = a2 + 0x100\n 27233: a4 = u64 [a0 + 0xb8]\n 27237: a5 = u64 [a0 + 0xb0]\n 27241: a3 = u64 [a0 + 0xa8]\n 27245: a0 = a5 | t0\n 27248: a1 = a3 | a4\n 27251: a0 = a0 | a1\n 27254: jump @931 if a0 == 0\n      : @916 (gas: 15)\n 27258: u64 [s1 + 0x160] = a3\n 27262: u64 [s1 + 0x168] = a5\n 27266: u64 [s1 + 0x170] = a4\n 27270: u64 [s1 + 0x178] = t0\n 27274: u64 [a2 + 416] = 0\n 27278: a0 = u64 [s1 + 0x1b8]\n 27282: a3 = a2 + 0x100\n 27286: u64 [a3 + 0x88] = a0\n 27290: a0 = u64 [s1 + 0x1b0]\n 27294: u64 [a3 + 0x90] = a0\n 27298: a1 = s1 + 0x22c0\n 27302: a0 = u64 [s1 + 0x1a8]\n 27306: u64 [a3 + 0x98] = a0\n 27310: a0 = 0\n 27312: ra = 982, jump @4\n      : @917 [@dyn 491] (gas: 9)\n 27318: a0 = s1 + 0x2138\n 27322: u64 [a0 + 384] = 0\n 27326: u64 [a0 + 376] = 0\n 27330: u64 [a0 + 368] = 0\n 27334: a3 = a0\n 27336: a0 = 0x20\n 27339: a1 = s1 + 0x22a0\n 27343: u64 [a3 + 360] = 0x5\n 27348: ra = 984, jump @4\n      : @918 [@dyn 492] (gas: 7)\n 27354: a0 = sp + 0xffffffffffffffe0\n 27357: a0 = a0 & 0xffffffffffffffe0\n 27360: u64 [s1 + 0x180] = a0\n 27364: sp = a0\n 27366: a1 = u64 [s1 + 0x128]\n 27370: a0 = i32 [a1]\n 27372: jump @920 if a0 >u 63\n      : @919 (gas: 2)\n 27376: u32 [a1 + 0] = 0x40\n 27379: fallthrough\n      : @920 (gas: 4)\n 27380: a0 = sp + 0xffffffffffffffe0\n 27383: a0 = a0 & 0xffffffffffffffe0\n 27386: u64 [s1 + 0x158] = a0\n 27390: t0 = 986, jump @1602\n      : @921 [@dyn 493] (gas: 5)\n 27396: ra = 0x3dc\n 27400: ecalli 7 // 'hash_keccak_256'\n 27402: a3 = u64 [s1 + 0x158]\n 27406: t0 = 0x3de\n 27410: jump @1594\n      : @922 [@dyn 494] (gas: 2)\n 27413: a3 = u64 [s1 + 0x158]\n 27417: t0 = 990, jump @1594\n      : @923 [@dyn 495] (gas: 3)\n 27423: i32 a0 = a0 + 0x280\n 27427: a0 = a0 + s1\n 27430: ra = 992, jump @6\n      : @924 [@dyn 496] (gas: 22)\n 27436: a5 = s1 + 0x2138\n 27440: a3 = u64 [a5 + 0x148]\n 27444: a0 = u64 [a5 + 0x150]\n 27448: a1 = u64 [a5 + 0x158]\n 27452: a2 = u64 [a5 + 0x160]\n 27456: a4 = u64 [s1 + 0x178]\n 27460: u64 [a5 + 0x100] = a4\n 27464: a4 = u64 [s1 + 0x170]\n 27468: u64 [a5 + 0xf8] = a4\n 27472: a4 = u64 [s1 + 0x168]\n 27476: u64 [a5 + 0xf0] = a4\n 27480: a4 = u64 [s1 + 0x160]\n 27484: u64 [a5 + 0xe8] = a4\n 27488: a4 = a5 + 0x100\n 27492: u64 [a4 + 0x20] = a2\n 27495: u64 [a4 + 0x18] = a1\n 27498: u64 [a4 + 0x10] = a0\n 27501: a0 = s1 + 0x2260\n 27505: a1 = s1 + 0x2240\n 27509: a2 = s1 + 0x2220\n 27513: u64 [a4 + 0x8] = a3\n 27516: ra = 994, jump @1380\n      : @925 [@dyn 497] (gas: 15)\n 27522: a3 = s1 + 0x2138\n 27526: a4 = a3 + 0x100\n 27530: a0 = u64 [a4 + 0x40]\n 27533: a1 = u64 [a4 + 0x38]\n 27536: a2 = u64 [a4 + 0x30]\n 27539: a3 = u64 [a4 + 0x28]\n 27542: a4 = s1 + 0x4138\n 27546: u64 [a4 + 0x200] = a0\n 27550: a0 = a4 + 0x100\n 27554: u64 [a0 + 0xf8] = a1\n 27558: u64 [a0 + 0xf0] = a2\n 27562: u64 [a0 + 0xe8] = a3\n 27566: a1 = s1 + 0x4320\n 27570: a0 = u64 [s1 + 0x180]\n 27574: ra = 996, jump @9\n      : @926 [@dyn 498] (gas: 3)\n 27580: a0 = s1 + 0x2200\n 27584: a1 = 0x40\n 27587: ra = 998, jump @2\n      : @927 [@dyn 499] (gas: 6)\n 27593: a3 = s1 + 0x2138\n 27597: a0 = u64 [a3 + 0xe0]\n 27601: a1 = u64 [a3 + 0xd8]\n 27605: a2 = u64 [a3 + 0xd0]\n 27609: a4 = u64 [a3 + 0xc8]\n 27613: t0 = 1000, jump @1577\n      : @928 [@dyn 500] (gas: 1)\n 27619: jump @993 if a0 != 0\n      : @929 (gas: 12)\n 27623: a0 = u64 [s1 + 0x160]\n 27627: u64 [a3 + 0xa8] = a0\n 27631: a0 = u64 [s1 + 0x168]\n 27635: u64 [a3 + 0xb0] = a0\n 27639: a0 = u64 [s1 + 0x170]\n 27643: u64 [a3 + 0xb8] = a0\n 27647: a1 = s1 + 0x21e0\n 27651: a0 = u64 [s1 + 0x178]\n 27655: u64 [a3 + 0xc0] = a0\n 27659: a0 = a4\n 27661: u64 [s1 + 0x180] = a4\n 27665: ra = 1002, jump @4\n      : @930 [@dyn 501] (gas: 29)\n 27671: a0 = s1 + 0x2138\n 27675: a5 = s1 + 0x100\n 27679: a1 = u64 [a5 + 0xa8]\n 27683: u64 [a0 + 0x78] = a1\n 27686: a0 = s1 + 0x2138\n 27690: a1 = u64 [a5 + 0xb0]\n 27694: u64 [a0 + 0x70] = a1\n 27697: a0 = s1 + 0x2138\n 27701: a1 = u64 [a5 + 0xb8]\n 27705: u64 [a0 + 0x68] = a1\n 27708: a0 = u64 [0x20058]\n 27713: a1 = u64 [0x20060]\n 27718: a2 = u64 [0x20068]\n 27723: a3 = u64 [0x20070]\n 27728: a4 = s1 + 0x2138\n 27732: u64 [a4 + 0xa0] = a0\n 27736: a0 = s1 + 0x2138\n 27740: u64 [a0 + 0x98] = a1\n 27744: a0 = s1 + 0x2138\n 27748: u64 [a0 + 0x90] = a2\n 27752: a0 = s1 + 0x2138\n 27756: u64 [a0 + 0x88] = a3\n 27760: a1 = 0x20\n 27763: a2 = s1 + 0x21c0\n 27767: a3 = s1 + 0x21a0\n 27771: a0 = s1 + 0x2138\n 27775: u64 [a0 + 128] = 0\n 27779: a0 = u64 [a5 + 0x80]\n 27783: ra = 1004, jump @10\n      : @931 [@dyn 502] (gas: 18)\n 27789: a3 = s1 + 0x100\n 27793: a1 = u64 [a3 + 0xa0]\n 27797: a1 = a1 + 0x1\n 27800: a0 = a1 <u 0x1\n 27803: a2 = u64 [a3 + 0x98]\n 27807: a2 = a2 + a0\n 27810: u64 [a3 + 0xa0] = a1\n 27814: u64 [a3 + 0x98] = a2\n 27818: a0 = a1 | a2\n 27821: a0 = a0 <u 0x1\n 27824: a1 = u64 [a3 + 0x88]\n 27828: a0 = a0 + a1\n 27831: a1 = a0 <u a1\n 27834: a2 = u64 [a3 + 0x90]\n 27838: a2 = a2 + a1\n 27841: u64 [a3 + 0x90] = a2\n 27845: u64 [a3 + 0x88] = a0\n 27849: jump @894\n      : @932 (gas: 3)\n 27852: a0 = s1 + 0x3120\n 27856: a1 = 0x40\n 27859: ra = 1006, jump @2\n      : @933 [@dyn 503] (gas: 14)\n 27865: a0 = s1 + 0x3138\n 27869: a4 = u64 [a0]\n 27871: a1 = a0 + 0xffffffffffffff00\n 27875: a5 = u64 [a1 + 0xf8]\n 27879: a3 = u64 [a1 + 0xf0]\n 27883: a2 = u64 [a1 + 0xe8]\n 27887: a0 = a3 | a4\n 27890: a1 = a2 | a5\n 27893: a1 = a1 | a0\n 27896: a1 = a1 >> 0x20\n 27899: a0 = a0 | a5\n 27902: a0 = a0 << 0x20\n 27905: a0 = a0 | a1\n 27908: jump @993 if a0 != 0\n      : @934 (gas: 14)\n 27912: a0 = s1 + 0x2938\n 27916: u64 [s1 + 0x1b0] = a3\n 27920: a3 = a0\n 27922: u64 [a0 + 2008] = 0\n 27926: u64 [a0 + 2000] = 0\n 27930: u64 [a0 + 1992] = 0\n 27934: a0 = 0x8c379a000000000\n 27944: a1 = s1 + 0x3100\n 27948: u64 [a3 + 0x7e0] = a0\n 27952: a0 = a2\n 27954: u64 [s1 + 0x1b8] = a2\n 27958: u64 [s1 + 0x1a0] = a4\n 27962: u64 [s1 + 0x1a8] = a5\n 27966: ra = 1008, jump @4\n      : @935 [@dyn 504] (gas: 1)\n 27972: t0 = 1010, jump @1561\n      : @936 [@dyn 505] (gas: 1)\n 27978: jump @993 if a0 == 0\n      : @937 (gas: 10)\n 27982: i32 a0 = a1 + 0x4\n 27985: a2 = s1 + 0x2938\n 27989: u64 [a2 + 1984] = 0\n 27993: u64 [a2 + 1976] = 0\n 27997: u64 [a2 + 1960] = 0x20\n 28002: a1 = s1 + 0x30e0\n 28006: u64 [a2 + 1968] = 0\n 28010: u64 [s1 + 0x1a8] = a3\n 28014: u64 [s1 + 0x1a0] = a4\n 28018: ra = 1012, jump @4\n      : @938 [@dyn 506] (gas: 1)\n 28024: t0 = 1014, jump @1612\n      : @939 [@dyn 507] (gas: 1)\n 28030: jump @993 if a0 == 0\n      : @940 (gas: 8)\n 28034: i32 a0 = a1 + 0x24\n 28037: a2 = s1 + 0x2938\n 28041: u64 [a2 + 1952] = 0\n 28045: u64 [a2 + 1944] = 0\n 28049: u64 [a2 + 1928] = 0x16\n 28054: a1 = s1 + 0x30c0\n 28058: u64 [a2 + 1936] = 0\n 28062: ra = 1016, jump @4\n      : @941 [@dyn 508] (gas: 1)\n 28068: t0 = 1018, jump @1578\n      : @942 [@dyn 509] (gas: 1)\n 28074: jump @993 if a0 == 0\n      : @943 (gas: 13)\n 28078: i32 a0 = a2 + 0x44\n 28081: a1 = u64 [0x20000]\n 28086: a2 = u64 [0x20008]\n 28091: a3 = u64 [0x20010]\n 28096: a4 = s1 + 0x2938\n 28100: a5 = a4 + 0x700\n 28104: u64 [a5 + 0x80] = a1\n 28108: u64 [a5 + 0x78] = a2\n 28111: u64 [a5 + 0x70] = a3\n 28114: a1 = s1 + 0x30a0\n 28118: u64 [a4 + 1896] = 0\n 28122: ra = 0x426\n 28126: jump @4\n      : @944 (gas: 3)\n 28129: a0 = s1 + 0x1200\n 28133: a1 = 0x40\n 28136: ra = 1020, jump @2\n      : @945 [@dyn 510] (gas: 13)\n 28142: a2 = s1 + 0x1138\n 28146: t0 = u64 [a2 + 0xe0]\n 28150: a5 = u64 [a2 + 0xd8]\n 28154: a4 = u64 [a2 + 0xd0]\n 28158: a0 = u64 [a2 + 0xc8]\n 28162: a3 = a4 | t0\n 28165: a1 = a0 | a5\n 28168: a1 = a1 | a3\n 28171: a1 = a1 >> 0x20\n 28174: a3 = a3 | a5\n 28177: a3 = a3 << 0x20\n 28180: a1 = a1 | a3\n 28183: jump @993 if a1 != 0\n      : @946 (gas: 11)\n 28187: u64 [a2 + 184] = 0\n 28191: u64 [a2 + 176] = 0\n 28195: u64 [a2 + 168] = 0\n 28199: a3 = 0x8c379a000000000\n 28209: a1 = s1 + 0x11e0\n 28213: u64 [a2 + 0xc0] = a3\n 28217: u64 [s1 + 0x1b8] = a0\n 28221: u64 [s1 + 0x1b0] = a4\n 28225: u64 [s1 + 0x1a0] = t0\n 28229: u64 [s1 + 0x1a8] = a5\n 28233: ra = 1022, jump @4\n      : @947 [@dyn 511] (gas: 1)\n 28239: t0 = 1024, jump @1561\n      : @948 [@dyn 512] (gas: 1)\n 28245: jump @993 if a0 == 0\n      : @949 (gas: 11)\n 28249: i32 a0 = a1 + 0x4\n 28252: a2 = s1 + 0x1138\n 28256: a5 = 0\n 28258: u64 [a2 + 160] = 0\n 28262: u64 [a2 + 152] = 0\n 28266: u64 [a2 + 136] = 0x20\n 28271: a1 = s1 + 0x11c0\n 28275: u64 [a2 + 144] = 0\n 28279: u64 [s1 + 0x1a8] = a3\n 28283: u64 [s1 + 0x1a0] = a4\n 28287: ra = 1026, jump @4\n      : @950 [@dyn 513] (gas: 1)\n 28293: t0 = 1028, jump @1612\n      : @951 [@dyn 514] (gas: 1)\n 28299: jump @993 if a0 == 0\n      : @952 (gas: 8)\n 28303: i32 a0 = a1 + 0x24\n 28306: a2 = s1 + 0x1138\n 28310: u64 [a2 + 128] = 0\n 28314: u64 [a2 + 120] = 0\n 28317: u64 [a2 + 104] = 0x1a\n 28321: a1 = s1 + 0x11a0\n 28325: u64 [a2 + 112] = 0\n 28328: ra = 1030, jump @4\n      : @953 [@dyn 515] (gas: 1)\n 28334: t0 = 1032, jump @1567\n      : @954 [@dyn 516] (gas: 1)\n 28340: jump @993 if a0 == 0\n      : @955 (gas: 13)\n 28344: i32 a0 = a3 + 0x44\n 28347: a1 = u64 [0x200e0]\n 28352: a2 = u64 [0x200e8]\n 28357: a3 = u64 [0x200f0]\n 28362: a4 = s1 + 0x1138\n 28366: u64 [a4 + 0x60] = a1\n 28369: u64 [a4 + 0x58] = a2\n 28372: u64 [a4 + 0x50] = a3\n 28375: a2 = 0x6564000000000000\n 28385: a1 = s1 + 0x1180\n 28389: u64 [a4 + 0x48] = a2\n 28392: ra = 0x426\n 28396: jump @4\n      : @956 (gas: 3)\n 28399: a0 = s1 + 0x1d20\n 28403: a1 = 0x40\n 28406: ra = 1034, jump @2\n      : @957 [@dyn 517] (gas: 2)\n 28412: a2 = s1 + 0x1938\n 28416: fallthrough\n      : @958 (gas: 13)\n 28417: t0 = u64 [a2 + 0x400]\n 28421: a1 = a2 + 0x300\n 28425: a5 = u64 [a1 + 0xf8]\n 28429: a4 = u64 [a1 + 0xf0]\n 28433: a0 = u64 [a1 + 0xe8]\n 28437: a3 = a4 | t0\n 28440: a1 = a0 | a5\n 28443: a1 = a1 | a3\n 28446: a1 = a1 >> 0x20\n 28449: a3 = a3 | a5\n 28452: a3 = a3 << 0x20\n 28455: a1 = a1 | a3\n 28458: jump @993 if a1 != 0\n      : @959 (gas: 11)\n 28462: u64 [a2 + 984] = 0\n 28466: u64 [a2 + 976] = 0\n 28470: u64 [a2 + 968] = 0\n 28474: a3 = 0x8c379a000000000\n 28484: a1 = s1 + 0x1d00\n 28488: u64 [a2 + 0x3e0] = a3\n 28492: u64 [s1 + 0x1b8] = a0\n 28496: u64 [s1 + 0x1b0] = a4\n 28500: u64 [s1 + 0x1a0] = t0\n 28504: u64 [s1 + 0x1a8] = a5\n 28508: ra = 1036, jump @4\n      : @960 [@dyn 518] (gas: 1)\n 28514: t0 = 1038, jump @1561\n      : @961 [@dyn 519] (gas: 1)\n 28520: jump @993 if a0 == 0\n      : @962 (gas: 10)\n 28524: i32 a0 = a1 + 0x4\n 28527: a2 = s1 + 0x1938\n 28531: u64 [a2 + 960] = 0\n 28535: u64 [a2 + 952] = 0\n 28539: u64 [a2 + 936] = 0x20\n 28544: a1 = s1 + 0x1ce0\n 28548: u64 [a2 + 944] = 0\n 28552: u64 [s1 + 0x1a8] = a3\n 28556: u64 [s1 + 0x1a0] = a4\n 28560: ra = 1040, jump @4\n      : @963 [@dyn 520] (gas: 1)\n 28566: t0 = 1042, jump @1565\n      : @964 [@dyn 521] (gas: 1)\n 28572: jump @993 if a0 == 0\n      : @965 (gas: 8)\n 28576: i32 a0 = a1 + 0x24\n 28579: a3 = s1 + 0x1938\n 28583: u64 [a3 + 928] = 0\n 28587: u64 [a3 + 920] = 0\n 28591: u64 [a3 + 904] = 0x14\n 28596: a1 = s1 + 0x1cc0\n 28600: u64 [a3 + 912] = 0\n 28604: ra = 1044, jump @4\n      : @966 [@dyn 522] (gas: 1)\n 28610: t0 = 1046, jump @1567\n      : @967 [@dyn 523] (gas: 1)\n 28616: jump @993 if a0 == 0\n      : @968 (gas: 13)\n 28620: i32 a0 = a3 + 0x44\n 28623: a1 = u64 [0x20090]\n 28628: a2 = u64 [0x20098]\n 28633: a4 = s1 + 0x1938\n 28637: a3 = a4 + 0x300\n 28641: u64 [a3 + 0x80] = a1\n 28645: u64 [a3 + 0x78] = a2\n 28648: a1 = 0x7265737300000000\n 28658: u64 [a3 + 0x70] = a1\n 28661: a1 = s1 + 0x1ca0\n 28665: u64 [a4 + 872] = 0\n 28669: ra = 0x426\n 28673: jump @4\n      : @969 (gas: 3)\n 28676: a0 = s1 + 0x1be0\n 28680: a1 = 0x40\n 28683: ra = 1048, jump @2\n      : @970 [@dyn 524] (gas: 14)\n 28689: a4 = s1 + 0x1938\n 28693: t0 = u64 [a4 + 0x2c0]\n 28697: a1 = a4 + 0x200\n 28701: a5 = u64 [a1 + 0xb8]\n 28705: a3 = u64 [a1 + 0xb0]\n 28709: a0 = u64 [a1 + 0xa8]\n 28713: a2 = a3 | t0\n 28716: a1 = a0 | a5\n 28719: a1 = a1 | a2\n 28722: a1 = a1 >> 0x20\n 28725: a2 = a2 | a5\n 28728: a2 = a2 << 0x20\n 28731: a1 = a1 | a2\n 28734: jump @993 if a1 != 0\n      : @971 (gas: 11)\n 28738: u64 [a4 + 664] = 0\n 28742: u64 [a4 + 656] = 0\n 28746: u64 [a4 + 648] = 0\n 28750: u64 [s1 + 0x1b0] = a3\n 28754: a3 = 0x8c379a000000000\n 28764: a1 = s1 + 0x1bc0\n 28768: u64 [a4 + 0x2a0] = a3\n 28772: u64 [s1 + 0x1b8] = a0\n 28776: u64 [s1 + 0x1a8] = t0\n 28780: u64 [s1 + 0x1a0] = a5\n 28784: ra = 1050, jump @4\n      : @972 [@dyn 525] (gas: 6)\n 28790: a5 = s1 + 0x100\n 28794: a1 = u64 [a5 + 0xb8]\n 28798: a0 = u64 [a5 + 0xa8]\n 28802: a3 = u64 [a5 + 0xa0]\n 28806: a3 = a3 | a0\n 28809: t0 = 1052, jump @1562\n      : @973 [@dyn 526] (gas: 1)\n 28815: jump @993 if a0 == 0\n      : @974 (gas: 10)\n 28819: i32 a0 = a1 + 0x4\n 28822: a2 = s1 + 0x1938\n 28826: u64 [a2 + 640] = 0\n 28830: u64 [a2 + 632] = 0\n 28834: u64 [a2 + 616] = 0x20\n 28839: a1 = s1 + 0x1ba0\n 28843: u64 [a2 + 624] = 0\n 28847: u64 [s1 + 0x1a8] = a3\n 28851: u64 [s1 + 0x1a0] = a4\n 28855: ra = 1054, jump @4\n      : @975 [@dyn 527] (gas: 1)\n 28861: t0 = 1056, jump @1565\n      : @976 [@dyn 528] (gas: 1)\n 28867: jump @993 if a0 == 0\n      : @977 (gas: 8)\n 28871: i32 a0 = a1 + 0x24\n 28874: a3 = s1 + 0x1938\n 28878: u64 [a3 + 608] = 0\n 28882: u64 [a3 + 600] = 0\n 28886: u64 [a3 + 584] = 0xe\n 28891: a1 = s1 + 0x1b80\n 28895: u64 [a3 + 592] = 0\n 28899: ra = 1058, jump @4\n      : @978 [@dyn 529] (gas: 1)\n 28905: t0 = 1060, jump @1578\n      : @979 [@dyn 530] (gas: 1)\n 28911: jump @993 if a0 == 0\n      : @980 (gas: 10)\n 28915: i32 a0 = a2 + 0x44\n 28918: a1 = u64 [0x20078]\n 28923: a3 = s1 + 0x1938\n 28927: u64 [a3 + 560] = 0\n 28931: u64 [a3 + 0x240] = a1\n 28935: a1 = 0x20656e6465640000\n 28945: u64 [a3 + 0x238] = a1\n 28949: a1 = s1 + 0x1b60\n 28953: u64 [a3 + 552] = 0\n 28957: ra = 1062, jump @4\n      : @981 [@dyn 531] (gas: 3)\n 28963: a1 = 0x64\n 28966: a0 = u64 [s1 + 0x1b8]\n 28970: ra = 1064, jump @16\n      : @982 [@dyn 532] (gas: 5)\n 28976: i32 a1 = a0 + 0\n 28978: a0 = 0x1\n 28981: a2 = 0x64\n 28984: ecalli 12 // 'seal_return'\n 28986: fallthrough\n      : @983 (gas: 3)\n 28987: a0 = s1 + 0x24a0\n 28991: a1 = 0x40\n 28994: ra = 1066, jump @2\n      : @984 [@dyn 533] (gas: 2)\n 29000: a2 = s1 + 0x2138\n 29004: fallthrough\n      : @985 (gas: 13)\n 29005: t0 = u64 [a2 + 0x380]\n 29009: a1 = a2 + 0x300\n 29013: a5 = u64 [a1 + 0x78]\n 29016: a4 = u64 [a1 + 0x70]\n 29019: a0 = u64 [a1 + 0x68]\n 29022: a3 = a4 | t0\n 29025: a1 = a0 | a5\n 29028: a1 = a1 | a3\n 29031: a1 = a1 >> 0x20\n 29034: a3 = a3 | a5\n 29037: a3 = a3 << 0x20\n 29040: a1 = a1 | a3\n 29043: jump @993 if a1 != 0\n      : @986 (gas: 10)\n 29047: u64 [a2 + 864] = 0\n 29051: u64 [a2 + 856] = 0\n 29055: u64 [a2 + 848] = 0\n 29059: a1 = s1 + 0x2480\n 29063: u64 [a2 + 840] = 0\n 29067: u64 [s1 + 0x1b8] = a0\n 29071: u64 [s1 + 0x1b0] = a4\n 29075: u64 [s1 + 0x1a0] = t0\n 29079: u64 [s1 + 0x1a8] = a5\n 29083: ra = 1068, jump @4\n      : @987 [@dyn 534] (gas: 11)\n 29089: a4 = s1 + 0x100\n 29093: a2 = u64 [a4 + 0xb8]\n 29097: a0 = u64 [a4 + 0xa8]\n 29101: a1 = u64 [a4 + 0xa0]\n 29105: a0 = a0 | a1\n 29108: a1 = 0xffffffe0\n 29118: a1 = a2 <u a1\n 29121: a3 = u64 [a4 + 0xb0]\n 29125: a1 = 0 if a3 != 0\n 29127: a1 = 0 if a0 != 0\n 29129: jump @993 if a1 == 0\n      : @988 (gas: 8)\n 29133: i32 a0 = a2 + 0x20\n 29136: a3 = s1 + 0x2138\n 29140: u64 [a3 + 832] = 0\n 29144: u64 [a3 + 824] = 0\n 29148: u64 [a3 + 816] = 0\n 29152: a1 = s1 + 0x2460\n 29156: u64 [a3 + 808] = 0\n 29160: ra = 1070, jump @4\n      : @989 [@dyn 535] (gas: 30)\n 29166: a4 = s1 + 0x2138\n 29170: u64 [a4 + 736] = 0\n 29174: u64 [a4 + 728] = 0\n 29178: u64 [a4 + 720] = 0\n 29182: a0 = u64 [s1 + 0xd0]\n 29186: a5 = a4 + 0x300\n 29190: u64 [a5] = a0\n 29192: a0 = u64 [s1 + 0xd8]\n 29196: a1 = a4 + 0x200\n 29200: u64 [a1 + 0xf8] = a0\n 29204: a0 = u64 [s1 + 0xe0]\n 29208: u64 [a1 + 0xf0] = a0\n 29212: a0 = u64 [s1 + 0xe8]\n 29216: u64 [a1 + 0xe8] = a0\n 29220: a0 = u64 [0x20038]\n 29225: a1 = u64 [0x20040]\n 29230: a2 = u64 [0x20048]\n 29235: a3 = u64 [0x20050]\n 29240: u64 [a5 + 0x20] = a0\n 29243: u64 [a5 + 0x18] = a1\n 29246: u64 [a5 + 0x10] = a2\n 29249: u64 [a5 + 0x8] = a3\n 29252: a0 = a4\n 29254: a1 = 0x40\n 29257: a2 = s1 + 0x2440\n 29261: a3 = s1 + 0x2420\n 29265: a4 = s1 + 0x2400\n 29269: u64 [a0 + 712] = 0\n 29273: a0 = u64 [s1 + 0x1b8]\n 29277: ra = 1072, jump @12\n      : @990 [@dyn 536] (gas: 6)\n 29283: a0 = 0\n 29285: a1 = u64 [s1 + 0x130]\n 29289: a2 = 0\n 29291: ecalli 12 // 'seal_return'\n 29293: a1 = 0x201a0\n 29298: jump @1175\n      : @991 (gas: 30)\n 29301: a0 = u64 [s1 + 0x150]\n 29305: t2 = u64 [s1 + 0x1b0]\n 29309: t0 = t2 <u a0\n 29312: a5 = u64 [s1 + 0x140]\n 29316: a1 = u64 [s1 + 0x1a8]\n 29320: a3 = a1 ^ a5\n 29323: a2 = a1 <u a5\n 29326: a2 = t0 if a3 == 0\n 29329: a3 = u64 [s1 + 0x130]\n 29333: a4 = u64 [s1 + 0x1a0]\n 29337: ra = a4 - a3\n 29340: t1 = a4 <u a3\n 29343: a4 = u64 [s1 + 0x138]\n 29347: a3 = u64 [s1 + 0x1b8]\n 29351: a4 = a3 - a4\n 29354: a4 = a4 - t1\n 29357: a3 = ra <u a2\n 29360: a3 = a4 - a3\n 29363: a4 = ra - a2\n 29366: a2 = a1 - a5\n 29369: a2 = a2 - t0\n 29372: a1 = t2 - a0\n 29375: a2 = a2 | a3\n 29378: a3 = a1 | a4\n 29381: a3 = a3 | a2\n 29384: a2 = a2 | a4\n 29387: a3 = a3 >> 0x20\n 29390: a2 = a2 << 0x20\n 29393: a2 = a2 | a3\n 29396: jump @993 if a2 != 0\n      : @992 (gas: 1)\n 29399: jump @1238\n      : @993 (gas: 1)\n 29402: trap\n      : @994 (gas: 5)\n 29403: a0 = u64 [s1 + 0x1b8]\n 29407: a2 = a0 + 0xffffffffffffff80\n 29410: a0 = u64 [s1 + 0xe8]\n 29414: a1 = u64 [s1 + 0xe0]\n 29418: ra = 1074, jump @1634\n      : @995 [@dyn 537] (gas: 6)\n 29424: u64 [s1 + 0x178] = a0\n 29428: u64 [s1 + 0x180] = a1\n 29432: a0 = u64 [s1 + 0x108]\n 29436: a1 = u64 [s1 + 0xf0]\n 29440: a2 = u64 [s1 + 0x1b8]\n 29444: ra = 1076, jump @1634\n      : @996 [@dyn 538] (gas: 7)\n 29450: u64 [s1 + 0x170] = a0\n 29454: u64 [s1 + 0x168] = a1\n 29458: a1 = u64 [s1 + 0x1b8]\n 29462: a2 = 0x80 - a1\n 29466: a0 = u64 [s1 + 0xe8]\n 29470: a1 = u64 [s1 + 0xe0]\n 29474: ra = 1078, jump @1639\n      : @997 [@dyn 539] (gas: 20)\n 29480: a2 = u64 [s1 + 0x168]\n 29484: a1 = a1 | a2\n 29487: a2 = u64 [s1 + 0x1b8]\n 29491: a3 = a2 <u 0x80\n 29495: u64 [s1 + 0x160] = a3\n 29499: a4 = u64 [s1 + 0x180]\n 29503: a1 = a4 if a3 == 0\n 29506: a4 = u64 [s1 + 0xf0]\n 29510: a1 = a4 if a2 == 0\n 29513: u64 [s1 + 0x180] = a1\n 29517: a1 = u64 [s1 + 0x170]\n 29521: a0 = a0 | a1\n 29524: a1 = u64 [s1 + 0x178]\n 29528: a0 = a1 if a3 == 0\n 29531: a1 = u64 [s1 + 0x108]\n 29535: a0 = a1 if a2 == 0\n 29538: u64 [s1 + 0x178] = a0\n 29542: a0 = u64 [s1 + 0xe8]\n 29546: a1 = u64 [s1 + 0xe0]\n 29550: ra = 1080, jump @1634\n      : @998 [@dyn 540] (gas: 16)\n 29556: a5 = 0\n 29558: u64 [s1 + 360] = 0\n 29562: a4 = s1 + 0x100\n 29566: a2 = u64 [a4 + 0x60]\n 29569: a1 = 0 if a2 == 0\n 29571: u64 [a4 + 0x70] = a1\n 29574: a0 = 0 if a2 == 0\n 29576: u64 [a4 + 0x60] = a0\n 29579: a2 = u64 [a4 + 0x48]\n 29582: a3 = a2 + 0xffffffffffffffff\n 29585: u64 [a4 + 0x38] = a3\n 29588: a2 = a2 >u 0\n 29590: a2 = a2 + 0xffffffffffffffff\n 29593: u64 [a4 + 0x30] = a2\n 29596: ra = u64 [s1 + 0x158]\n 29600: fallthrough\n      : @999 (gas: 93)\n 29601: u64 [s1 + 0x150] = a5\n 29605: u64 [s1 + 320] = 0\n 29609: a1 = u64 [s1 + 0x178]\n 29613: a2 = a1 >> 0x3f\n 29616: a5 = u64 [s1 + 0x180]\n 29620: a3 = a5 << 0x1\n 29623: t1 = a3 | a2\n 29626: a2 = a1 << 0x1\n 29629: a4 = ra >> 0x3f\n 29632: a4 = a4 | a2\n 29635: u64 [s1 + 0x158] = a4\n 29639: a3 = u64 [s1 + 0x130]\n 29643: a0 = a3 ^ t1\n 29646: t2 = u64 [s1 + 0x1a0]\n 29650: a1 = a3 <u t1\n 29653: a2 = u64 [s1 + 0x138]\n 29657: t0 = a2 <u a4\n 29660: t0 = a1 if a0 != 0\n 29663: a1 = u64 [s1 + 0x170]\n 29667: a1 = a1 << 0x1\n 29670: a0 = u64 [s1 + 0x160]\n 29674: a4 = a0 >> 0x3f\n 29677: a1 = a1 | a4\n 29680: u64 [s1 + 0x170] = a1\n 29684: a4 = a5 >> 0x3f\n 29687: a0 = a0 << 0x1\n 29690: a4 = a4 | a0\n 29693: a0 = ra << 0x1\n 29696: a1 = u64 [s1 + 0x1a8]\n 29700: a5 = a1 >> 0x3f\n 29703: a2 = a0 | a5\n 29706: a5 = a1 << 0x1\n 29709: a1 = t2 >> 0x3f\n 29712: a1 = a1 | a5\n 29715: a5 = t2 << 0x1\n 29718: a0 = u64 [s1 + 0x1b0]\n 29722: ra = a0 >> 0x3f\n 29725: t2 = a5 | ra\n 29728: a0 = a0 << 0x1\n 29731: a5 = u64 [s1 + 0x150]\n 29735: a0 = a0 | a5\n 29738: u64 [s1 + 0x1b0] = a0\n 29742: a5 = u64 [s1 + 0x168]\n 29746: a0 = a5 | t2\n 29749: u64 [s1 + 0x1a0] = a0\n 29753: a0 = a5 | a1\n 29756: u64 [s1 + 0x1a8] = a0\n 29760: ra = a5 | a2\n 29763: a0 = a3 - a4\n 29766: a0 = a0 <u t0\n 29769: a1 = a3 <u a4\n 29772: t2 = u64 [s1 + 0x170]\n 29776: a5 = a3 - t2\n 29779: a5 = a5 - a1\n 29782: a5 = a5 - a0\n 29785: t0 = a5 >>a 0x3f\n 29788: a0 = u64 [s1 + 0x148]\n 29792: a0 = t0 & a0\n 29795: a2 = u64 [s1 + 0x158]\n 29799: a1 = a2 - a0\n 29802: u64 [s1 + 0x178] = a1\n 29806: a1 = a2 <u a0\n 29809: a0 = t1 - a1\n 29812: u64 [s1 + 0x180] = a0\n 29816: a1 = 0 if t1 != 0\n 29818: a0 = a4 - a1\n 29821: u64 [s1 + 0x160] = a0\n 29825: a1 = a4 <u a1\n 29828: a1 = t2 - a1\n 29831: a0 = s1 + 0x100\n 29835: u64 [a0 + 0x70] = a1\n 29838: a3 = u64 [a0 + 0xb8]\n 29842: a1 = u64 [a0 + 0x98]\n 29846: a2 = a3 | a1\n 29849: a2 = a2 <u 0x1\n 29852: a4 = u64 [a0 + 0x88]\n 29856: a5 = a4 <u a2\n 29859: a4 = a4 - a2\n 29862: a2 = a3 <u 0x1\n 29865: a1 = a1 - a2\n 29868: a2 = u64 [a0 + 0x90]\n 29872: a2 = a2 - a5\n 29875: a3 = a3 + 0xffffffffffffffff\n 29878: u64 [a0 + 0x98] = a1\n 29882: u64 [a0 + 0x90] = a2\n 29886: a2 = a2 | a1\n 29889: u64 [a0 + 0xb8] = a3\n 29893: a3 = a3 | a4\n 29896: a2 = a2 | a3\n 29899: a5 = t0 & 0x1\n 29902: u64 [a0 + 0x88] = a4\n 29906: u64 [s1 + 360] = 0\n 29910: jump @999 if a2 != 0\n      : @1000 (gas: 20)\n 29914: a2 = u64 [s1 + 0x1a8]\n 29918: a0 = a2 >> 0x3f\n 29921: a1 = ra << 0x1\n 29924: a0 = a0 | a1\n 29927: a4 = u64 [s1 + 0x1a0]\n 29931: a1 = a4 >> 0x3f\n 29934: a2 = a2 << 0x1\n 29937: a1 = a1 | a2\n 29940: a3 = u64 [s1 + 0x1b0]\n 29944: a2 = a3 >> 0x3f\n 29947: a4 = a4 << 0x1\n 29950: a3 = a3 << 0x1\n 29953: a3 = a3 | a5\n 29956: a5 = u64 [s1 + 0x140]\n 29960: a2 = a2 | a5\n 29963: a2 = a2 | a4\n 29966: t1 = a5 | a1\n 29969: t2 = a5 | a0\n 29972: a4 = u64 [s1 + 0x148]\n 29976: fallthrough\n      : @1001 (gas: 53)\n 29977: a5 = a4 mulhu a3\n 29980: a0 = a4 * a2\n 29983: a1 = a4\n 29985: a4 = a0 + a5\n 29988: a0 = a4 <u a0\n 29991: a2 = a1 mulhu a2\n 29994: a0 = a0 + a2\n 29997: a2 = t2 * a1\n 30000: a5 = t1 mulhu a1\n 30003: a2 = a2 + a5\n 30006: u64 [s1 + 0x1b8] = a2\n 30010: t1 = t1 * a1\n 30013: t2 = a1 * a3\n 30016: a1 = u64 [s1 + 0xf0]\n 30020: a5 = a1 ^ a4\n 30023: a2 = a1 <u a4\n 30026: ra = u64 [s1 + 0x108]\n 30030: t0 = ra <u t2\n 30033: a2 = t0 if a5 == 0\n 30036: a3 = u64 [s1 + 0xe0]\n 30040: a5 = u64 [s1 + 0x1b8]\n 30044: a5 = a3 - a5\n 30047: t1 = t1 + a0\n 30050: a0 = t1 <u a0\n 30053: a5 = a5 - a0\n 30056: a3 = u64 [s1 + 0xe8]\n 30060: a0 = a3 - t1\n 30063: a3 = a3 <u t1\n 30066: a5 = a5 - a3\n 30069: a3 = a0 <u a2\n 30072: a5 = a5 - a3\n 30075: a0 = a0 - a2\n 30078: a1 = a1 - a4\n 30081: a1 = a1 - t0\n 30084: a2 = ra - t2\n 30087: a4 = s1 + 0x2938\n 30091: a3 = u64 [s1 + 0x110]\n 30095: u64 [a4 + 0x608] = a3\n 30099: a3 = u64 [s1 + 0x118]\n 30103: u64 [a4 + 0x610] = a3\n 30107: a3 = a4 + 0x500\n 30111: u64 [a3 + 0xe8] = a2\n 30115: a2 = u64 [s1 + 0x120]\n 30119: u64 [a4 + 0x618] = a2\n 30123: a2 = u64 [s1 + 0x128]\n 30127: u64 [a4 + 0x620] = a2\n 30131: u64 [a3 + 0xf0] = a1\n 30135: u64 [a3 + 0xf8] = a0\n 30139: a0 = s1 + 0x2f60\n 30143: a1 = s1 + 0x2f40\n 30147: a2 = s1 + 0x2f20\n 30151: u64 [a4 + 0x600] = a5\n 30155: ra = 1082, jump @1380\n      : @1002 [@dyn 541] (gas: 37)\n 30161: a0 = s1 + 0x2938\n 30165: t0 = u64 [a0 + 0x640]\n 30169: a5 = u64 [a0 + 0x638]\n 30173: t1 = u64 [a0 + 0x630]\n 30177: t2 = u64 [a0 + 0x628]\n 30181: a1 = u64 [s1 + 0x28]\n 30184: a0 = a1 + 0x7\n 30187: a1 = a0 <u a1\n 30190: a3 = u64 [s1 + 0x30]\n 30193: a2 = a3 + a1\n 30196: a3 = a2 <u a3\n 30199: a3 = a1 if a1 == 0\n 30202: a1 = u64 [s1 + 0x38]\n 30205: a3 = a3 + a1\n 30208: a1 = a3 <u a1\n 30211: a4 = u64 [s1 + 0x40]\n 30214: a1 = a1 + a4\n 30217: a4 = s1 + 0x4138\n 30221: u64 [a4 + 0x300] = a1\n 30225: a1 = a4 + 0x200\n 30229: u64 [a1 + 0xf8] = a3\n 30233: u64 [a1 + 0xf0] = a2\n 30237: u64 [a1 + 0xe8] = a0\n 30241: a1 = u64 [s1 + 0xd8]\n 30245: u64 [s1 + 0x78] = a5\n 30248: u64 [a1 + 0x10] = a5\n 30251: a0 = t0\n 30253: u64 [s1 + 0x80] = a0\n 30257: u64 [a1 + 0x18] = a0\n 30260: a0 = t2\n 30262: u64 [s1 + 0x68] = a0\n 30265: u64 [a1] = a0\n 30267: a0 = t1\n 30269: u64 [s1 + 0x70] = a0\n 30272: u64 [a1 + 0x8] = a0\n 30275: a0 = s1 + 0x4420\n 30279: ra = 1084, jump @9\n      : @1003 [@dyn 542] (gas: 3)\n 30285: a0 = s1 + 0x2f00\n 30289: a1 = u64 [s1 + 0x20]\n 30292: ra = 1086, jump @6\n      : @1004 [@dyn 543] (gas: 3)\n 30298: a3 = s1 + 0x2938\n 30302: a4 = a3 + 0x500\n 30306: t0 = 1088, jump @1605\n      : @1005 [@dyn 544] (gas: 8)\n 30312: a5 = a4 + 0x300\n 30316: u64 [a5 + 0x20] = a3\n 30319: u64 [a5 + 0x10] = a1\n 30322: u64 [a5 + 0x8] = a0\n 30325: u64 [a5 + 0x18] = a2\n 30328: a1 = s1 + 0x4440\n 30332: a0 = u64 [s1 + 0x20]\n 30335: ra = 1090, jump @9\n      : @1006 [@dyn 545] (gas: 3)\n 30341: a0 = s1 + 0x2ee0\n 30345: a1 = 0x40\n 30348: ra = 1092, jump @2\n      : @1007 [@dyn 546] (gas: 7)\n 30354: a3 = s1 + 0x2938\n 30358: a5 = a3 + 0x500\n 30362: a0 = u64 [a5 + 0xc0]\n 30366: a1 = u64 [a5 + 0xb8]\n 30370: a2 = u64 [a5 + 0xb0]\n 30374: a4 = u64 [a5 + 0xa8]\n 30378: t0 = 1094, jump @1577\n      : @1008 [@dyn 547] (gas: 1)\n 30384: jump @993 if a0 != 0\n      : @1009 (gas: 13)\n 30388: a0 = u64 [s1 + 0x68]\n 30391: a2 = a3 + 0x500\n 30395: u64 [a2 + 0x88] = a0\n 30399: a0 = u64 [s1 + 0x70]\n 30402: u64 [a2 + 0x90] = a0\n 30406: a0 = u64 [s1 + 0x78]\n 30409: u64 [a2 + 0x98] = a0\n 30413: a1 = s1 + 0x2ec0\n 30417: a0 = u64 [s1 + 0x80]\n 30421: u64 [a2 + 0xa0] = a0\n 30425: a0 = a4\n 30427: u64 [s1 + 0x1b8] = a4\n 30431: ra = 1096, jump @4\n      : @1010 [@dyn 548] (gas: 24)\n 30437: a0 = u64 [0x20018]\n 30442: a3 = s1 + 0x2938\n 30446: a1 = u64 [s1 + 0x88]\n 30450: a5 = a3 + 0x500\n 30454: u64 [a5 + 0x60] = a1\n 30457: a1 = u64 [s1 + 0x90]\n 30461: u64 [a5 + 0x58] = a1\n 30464: u64 [a5 + 0x80] = a0\n 30468: a0 = u64 [0x20020]\n 30473: a1 = u64 [0x20028]\n 30478: a2 = u64 [0x20030]\n 30483: a4 = u64 [s1 + 0x98]\n 30487: u64 [a5 + 0x50] = a4\n 30490: u64 [a5 + 0x78] = a0\n 30493: u64 [a5 + 0x70] = a1\n 30496: u64 [a5 + 0x68] = a2\n 30499: a4 = a3\n 30501: a1 = 0x20\n 30504: a2 = s1 + 0x2ea0\n 30508: a3 = s1 + 0x2e80\n 30512: a0 = u64 [s1 + 0xa0]\n 30516: u64 [a4 + 0x548] = a0\n 30520: a0 = u64 [s1 + 0x1b8]\n 30524: ra = 1098, jump @10\n      : @1011 [@dyn 549] (gas: 13)\n 30530: a0 = s1 + 0x2938\n 30534: a1 = u64 [s1 + 0x88]\n 30538: a3 = a0 + 0x500\n 30542: u64 [a3 + 0x40] = a1\n 30545: a1 = u64 [s1 + 0x90]\n 30549: u64 [a3 + 0x38] = a1\n 30552: a1 = u64 [s1 + 0x98]\n 30556: u64 [a3 + 0x30] = a1\n 30559: a1 = s1 + 0x2e60\n 30563: a2 = u64 [s1 + 0xa0]\n 30567: u64 [a3 + 0x28] = a2\n 30570: a0 = 0\n 30572: ra = 1100, jump @4\n      : @1012 [@dyn 550] (gas: 3)\n 30578: t0 = 0x44e\n 30582: a1 = s1 + 0x2938\n 30586: fallthrough\n      : @1013 [@dyn 551] (gas: 8)\n 30587: u64 [a1 + 1312] = 0\n 30591: u64 [a1 + 1304] = 0\n 30595: u64 [a1 + 1288] = 0x4\n 30600: a2 = a1\n 30602: a0 = 0x20\n 30605: a1 = s1 + 0x2e40\n 30609: u64 [a2 + 1296] = 0\n 30613: ra = 1104, jump @4\n      : @1014 [@dyn 552] (gas: 1)\n 30619: t0 = 1106, jump @1620\n      : @1015 [@dyn 553] (gas: 3)\n 30625: a2 = u64 [s1 + 0x100]\n 30629: a0 = i32 [a2]\n 30631: jump @1017 if a0 >u 63\n      : @1016 (gas: 2)\n 30635: u32 [a2 + 0] = 0x40\n 30638: fallthrough\n      : @1017 (gas: 11)\n 30639: a0 = sp + 0xffffffffffffffe0\n 30642: a0 = a0 & 0xffffffffffffffe0\n 30645: u64 [s1 + 0x1b0] = a0\n 30649: sp = a0\n 30651: i32 a2 = a0 + 0\n 30653: a1 = 0x40\n 30656: a0 = u64 [s1 + 0xf8]\n 30660: ra = 0x454\n 30664: ecalli 7 // 'hash_keccak_256'\n 30666: t0 = 0x456\n 30670: jump @1575\n      : @1018 [@dyn 554] (gas: 1)\n 30673: t0 = 1110, jump @1575\n      : @1019 [@dyn 555] (gas: 3)\n 30679: a0 = s1 + 0x2e20\n 30683: a1 = 0x40\n 30686: ra = 1112, jump @2\n      : @1020 [@dyn 556] (gas: 13)\n 30692: a0 = s1 + 0x2938\n 30696: a1 = u64 [a0 + 0x500]\n 30700: u64 [s1 + 0x60] = a1\n 30703: a2 = a0 + 0x400\n 30707: a1 = u64 [a2 + 0xf8]\n 30711: u64 [s1 + 0x58] = a1\n 30714: a1 = u64 [a2 + 0xf0]\n 30718: u64 [s1 + 0x50] = a1\n 30721: a0 = u64 [a2 + 0xe8]\n 30725: u64 [s1 + 0xf0] = a0\n 30729: a0 = s1 + 0x2e00\n 30733: a1 = u64 [s1 + 0x1b8]\n 30737: ra = 1114, jump @6\n      : @1021 [@dyn 557] (gas: 6)\n 30743: a0 = u64 [s1 + 0xf0]\n 30747: a1 = u64 [s1 + 0x60]\n 30750: a2 = u64 [s1 + 0x50]\n 30753: a2 = a2 | a1\n 30756: a3 = u64 [s1 + 0x58]\n 30759: t0 = 1116, jump @1601\n      : @1022 [@dyn 558] (gas: 1)\n 30765: jump @993 if a1 != 0\n      : @1023 (gas: 16)\n 30769: a5 = s1 + 0x2938\n 30773: a2 = u64 [a5 + 0x4e0]\n 30777: a1 = u64 [a5 + 0x4d8]\n 30781: a3 = u64 [a5 + 0x4d0]\n 30785: a4 = u64 [a5 + 0x4c8]\n 30789: u64 [s1 + 0x110] = a4\n 30793: u64 [a5 + 0x4a8] = a4\n 30797: u64 [s1 + 0x118] = a3\n 30801: a4 = a5 + 0x400\n 30805: u64 [a4 + 0xb0] = a3\n 30809: u64 [s1 + 0x120] = a1\n 30813: u64 [a4 + 0xb8] = a1\n 30817: a1 = s1 + 0x2de0\n 30821: u64 [s1 + 0x128] = a2\n 30825: u64 [a4 + 0xc0] = a2\n 30829: ra = 1118, jump @4\n      : @1024 [@dyn 559] (gas: 14)\n 30835: a0 = u64 [s1 + 0x198]\n 30839: a1 = s1 + 0x2938\n 30843: a2 = a1 + 0x400\n 30847: u64 [a2 + 0xa0] = a0\n 30851: a0 = u64 [s1 + 0x1a0]\n 30855: u64 [a2 + 0x98] = a0\n 30859: a0 = u64 [s1 + 0x1a8]\n 30863: u64 [a2 + 0x90] = a0\n 30867: a2 = a1\n 30869: a1 = s1 + 0x2dc0\n 30873: a0 = u64 [s1 + 0x1b0]\n 30877: u64 [a2 + 0x488] = a0\n 30881: a0 = 0\n 30883: ra = 1120, jump @4\n      : @1025 [@dyn 560] (gas: 7)\n 30889: a0 = sp + 0xffffffffffffffe0\n 30892: a0 = a0 & 0xffffffffffffffe0\n 30895: u64 [s1 + 0x190] = a0\n 30899: sp = a0\n 30901: a0 = u64 [s1 + 0x100]\n 30905: a0 = i32 [a0]\n 30907: jump @1027 if a0 >u 31\n      : @1026 (gas: 3)\n 30911: a1 = u64 [s1 + 0x100]\n 30915: u32 [a1 + 0] = 0x20\n 30918: fallthrough\n      : @1027 (gas: 3)\n 30919: a0 = 0xffffffff\n 30929: u64 [s1 + 0x130] = a0\n 30933: t0 = 1122, jump @1604\n      : @1028 [@dyn 561] (gas: 33)\n 30939: a0 = u64 [s1 + 0xf8]\n 30943: ecalli 7 // 'hash_keccak_256'\n 30945: t1 = 0\n 30947: a5 = 0\n 30949: t0 = 0\n 30951: a3 = u64 [s1 + 0x1b8]\n 30955: a0 = u64 [a3 + 0x18]\n 30958: a1 = u64 [a3 + 0x10]\n 30961: a4 = u64 [a3 + 0x8]\n 30964: t2 = u64 [a3]\n 30966: ra = reverse a0\n 30968: a3 = reverse a1\n 30970: a0 = reverse a4\n 30972: a1 = 0\n 30974: a2 = reverse t2\n 30976: a4 = u64 [s1 + 0x190]\n 30980: u64 [a4 + 0x18] = a2\n 30983: u64 [s1 + 0x138] = a0\n 30987: u64 [a4 + 0x10] = a0\n 30990: u64 [a4 + 0x8] = a3\n 30993: u64 [a4] = ra\n 30995: a0 = 0xffffffe0\n 31005: a4 = s1 + 0x100\n 31009: u64 [a4 + 0x8] = a0\n 31012: a0 = u64 [s1 + 0xf0]\n 31016: u64 [a4 + 0xb8] = a0\n 31020: a0 = u64 [s1 + 0x50]\n 31023: u64 [a4 + 0xb0] = a0\n 31027: a0 = u64 [s1 + 0x58]\n 31030: u64 [a4 + 0xa8] = a0\n 31034: a0 = u64 [s1 + 0x60]\n 31037: u64 [a4 + 0xa0] = a0\n 31041: fallthrough\n      : @1029 (gas: 40)\n 31042: u64 [s1 + 0x148] = a2\n 31046: u64 [s1 + 0x150] = a3\n 31050: u64 [s1 + 0x158] = ra\n 31054: ra = u64 [s1 + 0x1b8]\n 31058: t2 = ra + 0x20\n 31061: a0 = u64 [s1 + 0x110]\n 31065: u64 [s1 + 0x170] = t1\n 31069: a0 = t1 <u a0\n 31072: a2 = u64 [s1 + 0x118]\n 31076: a3 = a5 ^ a2\n 31079: u64 [s1 + 0x168] = a5\n 31083: a2 = a5 <u a2\n 31086: a2 = a0 if a3 == 0\n 31089: a4 = u64 [s1 + 0x120]\n 31093: a0 = a1 <u a4\n 31096: a3 = u64 [s1 + 0x128]\n 31100: a5 = t0 ^ a3\n 31103: u64 [s1 + 0x160] = t0\n 31107: a3 = t0 <u a3\n 31110: a3 = a0 if a5 == 0\n 31113: u64 [s1 + 0x140] = a1\n 31117: a0 = a1 ^ a4\n 31120: a0 = a0 | a5\n 31123: u64 [s1 + 0x198] = t2\n 31127: a4 = t2 <u ra\n 31130: a3 = a2 if a0 == 0\n 31133: a1 = s1 + 0x100\n 31137: a2 = u64 [a1 + 0xb0]\n 31141: a0 = a2 + a4\n 31144: u64 [a1 + 0x88] = a0\n 31148: a0 = a0 <u a2\n 31151: a0 = a4 if a4 == 0\n 31154: a2 = u64 [a1 + 0xa8]\n 31158: a0 = a0 + a2\n 31161: u64 [a1 + 0x78] = a0\n 31164: a0 = a0 <u a2\n 31167: a2 = u64 [a1 + 0xa0]\n 31171: a0 = a0 + a2\n 31174: u64 [a1 + 0x80] = a0\n 31178: jump @1034 if a3 == 0\n      : @1030 (gas: 3)\n 31182: a0 = s1 + 0x2860\n 31186: a1 = u64 [s1 + 0x190]\n 31190: ra = 1124, jump @6\n      : @1031 [@dyn 562] (gas: 11)\n 31196: a3 = s1 + 0x100\n 31200: a0 = u64 [a3 + 0xa8]\n 31204: a1 = u64 [a3 + 0xa0]\n 31208: a0 = a0 | a1\n 31211: a1 = u64 [a3 + 0x8]\n 31214: a2 = u64 [a3 + 0xb8]\n 31218: a1 = a2 <u a1\n 31221: a2 = u64 [a3 + 0xb0]\n 31225: a1 = 0 if a2 != 0\n 31227: a1 = 0 if a0 != 0\n 31229: jump @993 if a1 == 0\n      : @1032 (gas: 17)\n 31233: a3 = s1 + 0x2138\n 31237: a5 = a3 + 0x700\n 31241: a0 = u64 [a5 + 0x38]\n 31244: a1 = u64 [a5 + 0x30]\n 31247: a2 = u64 [a5 + 0x28]\n 31250: a4 = u64 [s1 + 0x130]\n 31254: a0 = a0 & a4\n 31257: a4 = 0xffffffffffffffff\n 31260: a1 = a1 & a4\n 31263: a2 = a2 & a4\n 31266: u64 [a3 + 1824] = 0\n 31270: u64 [a5 + 0x8] = a2\n 31273: u64 [a5 + 0x10] = a1\n 31276: a1 = s1 + 0x2840\n 31280: u64 [a5 + 0x18] = a0\n 31283: a0 = u64 [s1 + 0x198]\n 31287: ra = 1126, jump @4\n      : @1033 [@dyn 563] (gas: 41)\n 31293: ra = u64 [s1 + 0x158]\n 31297: ra = ra + 0x1\n 31300: a0 = ra <u 0x1\n 31303: a3 = u64 [s1 + 0x150]\n 31307: a3 = a3 + a0\n 31310: a0 = ra | a3\n 31313: a0 = a0 <u 0x1\n 31316: a1 = u64 [s1 + 0x138]\n 31320: a0 = a0 + a1\n 31323: a1 = a0 <u a1\n 31326: a4 = u64 [s1 + 0x148]\n 31330: a4 = a4 + a1\n 31333: t1 = u64 [s1 + 0x170]\n 31337: t1 = t1 + 0x1\n 31340: a1 = t1 <u 0x1\n 31343: a5 = u64 [s1 + 0x168]\n 31347: a5 = a5 + a1\n 31350: a1 = t1 | a5\n 31353: a1 = a1 <u 0x1\n 31356: a2 = u64 [s1 + 0x140]\n 31360: a1 = a1 + a2\n 31363: a2 = a1 <u a2\n 31366: t0 = u64 [s1 + 0x160]\n 31370: t0 = t0 + a2\n 31373: a2 = u64 [s1 + 0x190]\n 31377: u64 [a2 + 0x8] = a3\n 31380: u64 [a2] = ra\n 31382: u64 [a2 + 0x10] = a0\n 31385: u64 [a2 + 0x18] = a4\n 31388: a2 = s1 + 0x100\n 31392: u64 [a2 + 0x38] = a0\n 31395: a0 = u64 [a2 + 0x98]\n 31399: u64 [a2 + 0xb8] = a0\n 31403: a0 = u64 [a2 + 0x88]\n 31407: u64 [a2 + 0xb0] = a0\n 31411: a0 = u64 [a2 + 0x78]\n 31414: u64 [a2 + 0xa8] = a0\n 31418: a0 = u64 [a2 + 0x80]\n 31422: u64 [a2 + 0xa0] = a0\n 31426: a2 = a4\n 31428: jump @1029\n      : @1034 (gas: 42)\n 31431: t0 = u64 [s1 + 0xf0]\n 31435: a0 = u64 [s1 + 0x198]\n 31439: t2 = a0 <u t0\n 31442: a5 = u64 [s1 + 0x50]\n 31445: a0 = u64 [s1 + 0x188]\n 31449: a3 = a0 ^ a5\n 31452: a2 = a0 <u a5\n 31455: a2 = t2 if a3 == 0\n 31458: a1 = u64 [s1 + 0x58]\n 31461: a4 = u64 [s1 + 0x178]\n 31465: a3 = a4 - a1\n 31468: t1 = a3 <u a2\n 31471: a4 = a4 <u a1\n 31474: a4 = a4 + t1\n 31477: u64 [s1 + 0x1b8] = a4\n 31481: t1 = u64 [s1 + 0x60]\n 31484: a4 = u64 [s1 + 0x180]\n 31488: a4 = a4 - t1\n 31491: ra = u64 [s1 + 0x1b8]\n 31495: a4 = a4 - ra\n 31498: u64 [s1 + 0x1b8] = a4\n 31502: a3 = a3 - a2\n 31505: u64 [s1 + 0x1b0] = a3\n 31509: a2 = a0 - a5\n 31512: a2 = a2 - t2\n 31515: a0 = u64 [s1 + 0x198]\n 31519: a4 = a0 - t0\n 31522: a3 = s1 + 0x2938\n 31526: u64 [a3 + 0x468] = t0\n 31530: u64 [a3 + 0x448] = a4\n 31534: a4 = a3 + 0x400\n 31538: u64 [a4 + 0x70] = a5\n 31541: u64 [a4 + 0x78] = a1\n 31544: u64 [a4 + 0x50] = a2\n 31547: u64 [a3 + 0x480] = t1\n 31551: a0 = u64 [s1 + 0x1b0]\n 31555: u64 [a4 + 0x58] = a0\n 31558: a0 = s1 + 0x2da0\n 31562: a1 = s1 + 0x2d80\n 31566: a2 = u64 [s1 + 0x1b8]\n 31570: u64 [a4 + 0x60] = a2\n 31573: ra = 1128, jump @1343\n      : @1035 [@dyn 564] (gas: 17)\n 31579: u64 [s1 + 272] = 0\n 31583: u64 [s1 + 232] = 0\n 31587: u64 [s1 + 264] = 0\n 31591: a2 = 0\n 31593: t0 = 0\n 31595: ra = 0\n 31597: a4 = 0\n 31599: a5 = 0\n 31601: u64 [s1 + 392] = 0\n 31605: u64 [s1 + 384] = 0\n 31609: u64 [s1 + 368] = 0\n 31613: u64 [s1 + 376] = 0\n 31617: a0 = 0x100000000\n 31627: u64 [s1 + 0x118] = a0\n 31631: a0 = 0xffffffe0\n 31641: u64 [s1 + 0x48] = a0\n 31644: fallthrough\n      : @1036 (gas: 8)\n 31645: u64 [s1 + 0xc8] = a5\n 31649: u64 [s1 + 0xd0] = a4\n 31653: u64 [s1 + 0xd8] = ra\n 31657: u64 [s1 + 0x138] = t0\n 31661: u64 [s1 + 0xe0] = a2\n 31665: a0 = s1 + 0x2d60\n 31669: a1 = u64 [s1 + 0xf0]\n 31673: ra = 1130, jump @2\n      : @1037 [@dyn 565] (gas: 22)\n 31679: a5 = s1 + 0x2938\n 31683: a3 = a5 + 0x400\n 31687: a0 = u64 [a3 + 0x30]\n 31690: a1 = u64 [a3 + 0x40]\n 31693: a2 = u64 [a3 + 0x28]\n 31696: t2 = u64 [a5 + 0x438]\n 31700: ra = u64 [s1 + 0x180]\n 31704: t1 = ra ^ a0\n 31707: a0 = ra <u a0\n 31710: t0 = u64 [s1 + 0x188]\n 31714: a2 = t0 <u a2\n 31717: a2 = a0 if t1 != 0\n 31720: a4 = u64 [s1 + 0x170]\n 31724: a0 = a4 <u t2\n 31727: a3 = u64 [s1 + 0x178]\n 31731: t1 = a3 ^ a1\n 31734: a1 = a3 <u a1\n 31737: a1 = a0 if t1 == 0\n 31740: a0 = a4 ^ t2\n 31743: a0 = a0 | t1\n 31746: a1 = a2 if a0 == 0\n 31749: jump @1073 if a1 == 0\n      : @1038 (gas: 17)\n 31753: u64 [a5 + 0x128] = t0\n 31757: a0 = u64 [s1 + 0xf0]\n 31761: u64 [a5 + 0x148] = a0\n 31765: u64 [a5 + 0x130] = ra\n 31769: a0 = u64 [s1 + 0x50]\n 31772: u64 [a5 + 0x150] = a0\n 31776: u64 [a5 + 0x138] = a4\n 31780: a0 = u64 [s1 + 0x58]\n 31783: a4 = a5 + 0x100\n 31787: u64 [a4 + 0x58] = a0\n 31790: u64 [a4 + 0x40] = a3\n 31793: a0 = s1 + 0x2aa0\n 31797: a1 = s1 + 0x2a80\n 31801: a2 = s1 + 0x2a60\n 31805: a3 = u64 [s1 + 0x60]\n 31808: u64 [a4 + 0x60] = a3\n 31811: ra = 1132, jump @1470\n      : @1039 [@dyn 566] (gas: 3)\n 31817: t0 = 0x46e\n 31821: a1 = s1 + 0x2938\n 31825: fallthrough\n      : @1040 [@dyn 567] (gas: 13)\n 31826: a4 = a1 + 0x100\n 31830: a0 = u64 [a4 + 0x80]\n 31834: a2 = u64 [a4 + 0x78]\n 31837: a3 = u64 [a4 + 0x70]\n 31840: a1 = u64 [a4 + 0x68]\n 31843: a0 = a0 | a3\n 31846: a3 = a1 | a2\n 31849: a3 = a3 | a0\n 31852: a3 = a3 >> 0x20\n 31855: a0 = a0 | a2\n 31858: a0 = a0 << 0x20\n 31861: a0 = a0 | a3\n 31864: jump @993 if a0 != 0\n      : @1041 (gas: 2)\n 31868: a0 = s1 + 0x2a40\n 31872: ra = 1136, jump @2\n      : @1042 [@dyn 568] (gas: 19)\n 31878: a2 = s1 + 0x2938\n 31882: a1 = a2 + 0x100\n 31886: a0 = u64 [a1 + 0x8]\n 31889: u64 [s1 + 0x1b8] = a0\n 31893: a0 = u64 [a1 + 0x10]\n 31896: u64 [s1 + 0x1b0] = a0\n 31900: a0 = u64 [a1 + 0x18]\n 31903: u64 [s1 + 0x1a8] = a0\n 31907: a0 = u64 [s1 + 0x88]\n 31911: u64 [a1] = a0\n 31913: a0 = u64 [s1 + 0x90]\n 31917: u64 [a2 + 0xf8] = a0\n 31921: a0 = u64 [s1 + 0x98]\n 31925: u64 [a2 + 0xf0] = a0\n 31929: a1 = s1 + 0x2a20\n 31933: a0 = u64 [s1 + 0xa0]\n 31937: u64 [a2 + 0xe8] = a0\n 31941: a0 = 0\n 31943: ra = 1138, jump @4\n      : @1043 [@dyn 569] (gas: 9)\n 31949: a0 = s1 + 0x2938\n 31953: u64 [a0 + 224] = 0\n 31957: u64 [a0 + 216] = 0\n 31961: u64 [a0 + 208] = 0\n 31965: a3 = a0\n 31967: a0 = 0x20\n 31970: a1 = s1 + 0x2a00\n 31974: u64 [a3 + 200] = 0x3\n 31979: ra = 1140, jump @4\n      : @1044 [@dyn 570] (gas: 3)\n 31985: a1 = u64 [s1 + 0x100]\n 31989: a0 = i32 [a1]\n 31991: jump @1046 if a0 >u 63\n      : @1045 (gas: 2)\n 31995: u32 [a1 + 0] = 0x40\n 31998: fallthrough\n      : @1046 (gas: 11)\n 31999: a0 = u64 [s1 + 0x130]\n 32003: a1 = u64 [s1 + 0x1a8]\n 32007: a0 = a0 & a1\n 32010: u64 [s1 + 0x140] = a0\n 32014: a1 = u64 [s1 + 0x1b0]\n 32018: a1 = a1 & 0xffffffffffffffff\n 32021: u64 [s1 + 0x148] = a1\n 32025: a1 = u64 [s1 + 0x1b8]\n 32029: a0 = a1 & 0xffffffffffffffff\n 32032: u64 [s1 + 0x150] = a0\n 32036: t0 = 1142, jump @1598\n      : @1047 [@dyn 571] (gas: 29)\n 32042: ecalli 7 // 'hash_keccak_256'\n 32044: a3 = u64 [s1 + 0x1b8]\n 32048: a0 = u64 [a3 + 0x18]\n 32051: a1 = u64 [a3 + 0x10]\n 32054: a2 = u64 [a3 + 0x8]\n 32057: a3 = u64 [a3]\n 32059: a0 = reverse a0\n 32061: u64 [s1 + 0x1b8] = a0\n 32065: a0 = reverse a1\n 32067: u64 [s1 + 0x1b0] = a0\n 32071: a0 = reverse a2\n 32073: u64 [s1 + 0x1a8] = a0\n 32077: a0 = reverse a3\n 32079: u64 [s1 + 0x1a0] = a0\n 32083: a0 = sp + 0xffffffffffffffe0\n 32086: a0 = a0 & 0xffffffffffffffe0\n 32089: u64 [s1 + 0x168] = a0\n 32093: sp = a0\n 32095: a2 = s1 + 0x2938\n 32099: u64 [a2 + 192] = 0\n 32103: a0 = u64 [s1 + 0x140]\n 32107: u64 [a2 + 0xb8] = a0\n 32111: a0 = u64 [s1 + 0x148]\n 32115: u64 [a2 + 0xb0] = a0\n 32119: a1 = s1 + 0x29e0\n 32123: a0 = u64 [s1 + 0x150]\n 32127: u64 [a2 + 0xa8] = a0\n 32131: a0 = 0\n 32133: ra = 1144, jump @4\n      : @1048 [@dyn 572] (gas: 13)\n 32139: a0 = u64 [s1 + 0x1a0]\n 32143: a1 = s1 + 0x2938\n 32147: u64 [a1 + 0xa0] = a0\n 32151: a0 = u64 [s1 + 0x1a8]\n 32155: u64 [a1 + 0x98] = a0\n 32159: a0 = u64 [s1 + 0x1b0]\n 32163: u64 [a1 + 0x90] = a0\n 32167: a3 = a1\n 32169: a0 = 0x20\n 32172: a1 = s1 + 0x29c0\n 32176: a2 = u64 [s1 + 0x1b8]\n 32180: u64 [a3 + 0x88] = a2\n 32184: ra = 1146, jump @4\n      : @1049 [@dyn 573] (gas: 3)\n 32190: a1 = u64 [s1 + 0x100]\n 32194: a0 = i32 [a1]\n 32196: jump @1051 if a0 >u 63\n      : @1050 (gas: 3)\n 32200: u32 [a1 + 0] = 0x40\n 32203: t0 = 0x47c\n 32207: jump @1598\n      : @1051 (gas: 1)\n 32210: t0 = 1148, jump @1598\n      : @1052 [@dyn 574] (gas: 5)\n 32216: ra = 0x47e\n 32220: ecalli 7 // 'hash_keccak_256'\n 32222: a3 = u64 [s1 + 0x1b8]\n 32226: t0 = 0x480\n 32230: jump @1592\n      : @1053 [@dyn 575] (gas: 2)\n 32233: a3 = u64 [s1 + 0x1b8]\n 32237: t0 = 1152, jump @1592\n      : @1054 [@dyn 576] (gas: 12)\n 32243: u64 [s1 + 0x1a0] = a1\n 32247: a2 = u64 [s1 + 0x168]\n 32251: u64 [a2 + 0x18] = a1\n 32254: u64 [s1 + 0x1a8] = a0\n 32258: u64 [a2 + 0x10] = a0\n 32261: u64 [s1 + 0x198] = a4\n 32265: u64 [a2 + 0x8] = a4\n 32268: u64 [s1 + 0x190] = a5\n 32272: u64 [a2] = a5\n 32274: a0 = s1 + 0x29a0\n 32278: a1 = 0x40\n 32281: ra = 1154, jump @2\n      : @1055 [@dyn 577] (gas: 17)\n 32287: a1 = s1 + 0x2938\n 32291: a0 = u64 [a1 + 0x80]\n 32295: u64 [s1 + 0x160] = a0\n 32299: a2 = u64 [a1 + 0x78]\n 32302: u64 [s1 + 0x158] = a2\n 32306: a4 = u64 [a1 + 0x70]\n 32309: u64 [s1 + 0x1b0] = a4\n 32313: a3 = u64 [a1 + 0x68]\n 32316: u64 [s1 + 0x1b8] = a3\n 32320: u64 [a1 + 0x60] = a0\n 32323: u64 [a1 + 0x58] = a2\n 32326: u64 [a1 + 0x50] = a4\n 32329: a0 = s1 + 0x2980\n 32333: u64 [a1 + 0x48] = a3\n 32336: ra = 0x484\n 32340: t0 = 0x5a8\n 32344: jump @1600\n      : @1056 [@dyn 578] (gas: 3)\n 32347: a0 = s1 + 0x2960\n 32351: a1 = u64 [s1 + 0x168]\n 32355: ra = 1158, jump @6\n      : @1057 [@dyn 579] (gas: 7)\n 32361: a3 = s1 + 0x100\n 32365: a0 = u64 [a3 + 0x60]\n 32368: a1 = u64 [a3 + 0xb0]\n 32372: a0 = a0 | a1\n 32375: a2 = u64 [a3 + 0x58]\n 32378: a1 = u64 [a3 + 0xb8]\n 32382: t0 = 1160, jump @1631\n      : @1058 [@dyn 580] (gas: 1)\n 32388: jump @993 if a0 != 0\n      : @1059 (gas: 16)\n 32392: a4 = s1 + 0x2938\n 32396: a3 = u64 [a4 + 0x40]\n 32399: a2 = u64 [a4 + 0x38]\n 32402: a1 = u64 [a4 + 0x30]\n 32405: a0 = u64 [a4 + 0x28]\n 32408: u64 [s1 + 0x128] = a0\n 32412: u64 [a4 + 0x8] = a0\n 32415: u64 [s1 + 0x120] = a1\n 32419: u64 [a4 + 0x10] = a1\n 32422: u64 [s1 + 0xc0] = a2\n 32426: u64 [a4 + 0x18] = a2\n 32429: a1 = s1 + 0x2940\n 32433: u64 [s1 + 0xb8] = a3\n 32437: u64 [a4 + 0x20] = a3\n 32440: a0 = u64 [s1 + 0x1b8]\n 32444: ra = 1162, jump @4\n      : @1060 [@dyn 581] (gas: 21)\n 32450: a0 = u64 [s1 + 0x190]\n 32454: a0 = a0 + 0x1\n 32457: a1 = a0 <u 0x1\n 32460: a2 = u64 [s1 + 0x198]\n 32464: a1 = a1 + a2\n 32467: a2 = a0 | a1\n 32470: a2 = a2 <u 0x1\n 32473: a3 = u64 [s1 + 0x1a8]\n 32477: a2 = a2 + a3\n 32480: a3 = a2 <u a3\n 32483: a4 = u64 [s1 + 0x1a0]\n 32487: a3 = a3 + a4\n 32490: a4 = s1 + 0x4138\n 32494: a5 = a4 + 0x300\n 32498: u64 [a5 + 0x30] = a1\n 32501: u64 [a5 + 0x28] = a0\n 32504: u64 [a5 + 0x38] = a2\n 32507: u64 [a5 + 0x40] = a3\n 32510: a0 = s1 + 0x2920\n 32514: a1 = s1 + 0x4460\n 32518: ra = 1164, jump @6\n      : @1061 [@dyn 582] (gas: 12)\n 32524: a3 = s1 + 0x100\n 32528: a0 = u64 [a3 + 0x60]\n 32531: a2 = u64 [a3 + 0x58]\n 32534: a2 = a2 | a0\n 32537: a0 = u64 [s1 + 0x48]\n 32540: a1 = u64 [a3 + 0xb8]\n 32544: a0 = a1 <u a0\n 32547: a1 = u64 [a3 + 0xb0]\n 32551: a0 = 0 if a1 != 0\n 32553: u64 [a3 + 0x68] = a2\n 32556: a0 = 0 if a2 != 0\n 32558: jump @993 if a0 == 0\n      : @1062 (gas: 16)\n 32562: a0 = s1 + 0x2938\n 32566: a2 = u64 [a0]\n 32568: a5 = a0 + 0xffffffffffffff00\n 32572: a1 = u64 [a5 + 0xf8]\n 32576: a3 = u64 [a5 + 0xf0]\n 32580: a4 = u64 [a5 + 0xe8]\n 32584: a0 = u64 [s1 + 0x1b8]\n 32588: i32 a0 = a0 + 0x20\n 32591: a5 = s1 + 0x2138\n 32595: u64 [a5 + 0x7c8] = a4\n 32599: a4 = a5 + 0x700\n 32603: u64 [a4 + 0xd0] = a3\n 32607: u64 [a4 + 0xd8] = a1\n 32611: a1 = s1 + 0x2900\n 32615: u64 [a4 + 0xe0] = a2\n 32619: ra = 1166, jump @4\n      : @1063 [@dyn 583] (gas: 3)\n 32625: a1 = u64 [s1 + 0x190]\n 32629: a0 = a1 + 0x2\n 32632: t0 = 1168, jump @1584\n      : @1064 [@dyn 584] (gas: 7)\n 32638: u64 [a5 + 0x50] = a2\n 32641: u64 [a5 + 0x48] = a0\n 32644: u64 [a5 + 0x58] = a3\n 32647: u64 [a5 + 0x60] = a1\n 32650: a0 = s1 + 0x28e0\n 32654: a1 = s1 + 0x4480\n 32658: ra = 1170, jump @6\n      : @1065 [@dyn 585] (gas: 10)\n 32664: a2 = s1 + 0x100\n 32668: a0 = u64 [a2 + 0x18]\n 32671: a0 = a0 + 0xffffffffffffffc0\n 32674: a1 = u64 [a2 + 0xb8]\n 32678: a0 = a1 <u a0\n 32681: a1 = u64 [a2 + 0xb0]\n 32685: a0 = 0 if a1 != 0\n 32687: a1 = u64 [a2 + 0x68]\n 32690: a0 = 0 if a1 != 0\n 32692: jump @993 if a0 == 0\n      : @1066 (gas: 18)\n 32696: a2 = s1 + 0x2138\n 32700: t0 = u64 [a2 + 0x7c0]\n 32704: a3 = a2 + 0x700\n 32708: a1 = u64 [a3 + 0xb8]\n 32712: a4 = u64 [a3 + 0xb0]\n 32716: a5 = u64 [a3 + 0xa8]\n 32720: a0 = u64 [s1 + 0x1b8]\n 32724: i32 a0 = a0 + 0x40\n 32727: u64 [s1 + 0xa8] = a5\n 32731: u64 [a3 + 0x88] = a5\n 32735: u64 [s1 + 0xb0] = a4\n 32739: u64 [a3 + 0x90] = a4\n 32743: u64 [s1 + 0x160] = a1\n 32747: u64 [a3 + 0x98] = a1\n 32751: a1 = s1 + 0x28c0\n 32755: u64 [s1 + 0x158] = t0\n 32759: u64 [a2 + 0x7a0] = t0\n 32763: ra = 1172, jump @4\n      : @1067 [@dyn 586] (gas: 3)\n 32769: a1 = u64 [s1 + 0x190]\n 32773: a0 = a1 + 0x3\n 32776: t0 = 1174, jump @1584\n      : @1068 [@dyn 587] (gas: 7)\n 32782: u64 [a5 + 0x70] = a2\n 32785: u64 [a5 + 0x68] = a0\n 32788: u64 [a5 + 0x78] = a3\n 32791: u64 [a5 + 0x80] = a1\n 32795: a0 = s1 + 0x28a0\n 32799: a1 = s1 + 0x44a0\n 32803: ra = 1176, jump @6\n      : @1069 [@dyn 588] (gas: 10)\n 32809: a2 = s1 + 0x100\n 32813: a0 = u64 [a2 + 0x18]\n 32816: a0 = a0 + 0xffffffffffffffa0\n 32819: a1 = u64 [a2 + 0xb8]\n 32823: a0 = a1 <u a0\n 32826: a1 = u64 [a2 + 0xb0]\n 32830: a0 = 0 if a1 != 0\n 32832: a1 = u64 [a2 + 0x68]\n 32835: a0 = 0 if a1 != 0\n 32837: jump @993 if a0 == 0\n      : @1070 (gas: 3)\n 32841: t0 = 0x49a\n 32845: a2 = s1 + 0x2138\n 32849: fallthrough\n      : @1071 [@dyn 589] (gas: 11)\n 32850: a0 = u64 [a2 + 0x768]\n 32854: a0 = a0 & 0xff\n 32858: a1 = a0 >u 0\n 32860: a0 = u64 [s1 + 0x1b8]\n 32864: i32 a0 = a0 + 0x60\n 32867: u64 [a2 + 1888] = 0\n 32871: u64 [a2 + 1880] = 0\n 32875: u64 [a2 + 0x748] = a1\n 32879: a1 = s1 + 0x2880\n 32883: u64 [a2 + 1872] = 0\n 32887: ra = 1180, jump @4\n      : @1072 [@dyn 590] (gas: 78)\n 32893: a0 = u64 [s1 + 0x68]\n 32896: a1 = u64 [s1 + 0xa8]\n 32900: a0 = a0 <u a1\n 32903: a2 = u64 [s1 + 0x70]\n 32906: a3 = u64 [s1 + 0xb0]\n 32910: a1 = a3 ^ a2\n 32913: a2 = a2 <u a3\n 32916: a2 = a0 if a1 == 0\n 32919: a0 = u64 [s1 + 0x80]\n 32923: a3 = u64 [s1 + 0x158]\n 32927: a1 = a3 ^ a0\n 32930: a0 = a0 <u a3\n 32933: a4 = u64 [s1 + 0x78]\n 32936: a5 = u64 [s1 + 0x160]\n 32940: a3 = a4 <u a5\n 32943: a0 = a3 if a1 == 0\n 32946: a3 = a5 ^ a4\n 32949: a1 = a1 | a3\n 32952: a0 = a2 if a1 == 0\n 32955: a1 = u64 [s1 + 0x128]\n 32959: a2 = u64 [s1 + 0x138]\n 32963: a1 = a2 <u a1\n 32966: a3 = u64 [s1 + 0x120]\n 32970: ra = u64 [s1 + 0xd8]\n 32974: a2 = a3 ^ ra\n 32977: a3 = ra <u a3\n 32980: a3 = a1 if a2 == 0\n 32983: t2 = u64 [s1 + 0xc0]\n 32987: a2 = u64 [s1 + 0xd0]\n 32991: a1 = a2 <u t2\n 32994: t1 = u64 [s1 + 0xb8]\n 32998: a5 = u64 [s1 + 0xc8]\n 33002: t0 = t1 ^ a5\n 33005: a4 = a5 <u t1\n 33008: a4 = a1 if t0 == 0\n 33011: a1 = t2 ^ a2\n 33014: a1 = a1 | t0\n 33017: t0 = u64 [s1 + 0x138]\n 33021: a4 = a3 if a1 == 0\n 33024: a0 = a4 & ~a0\n 33027: a4 = a2\n 33029: a1 = u64 [s1 + 0x108]\n 33033: a2 = u64 [s1 + 0x140]\n 33037: a1 = a2 if a0 != 0\n 33040: u64 [s1 + 0x108] = a1\n 33044: a1 = u64 [s1 + 0xe8]\n 33048: a2 = u64 [s1 + 0x148]\n 33052: a1 = a2 if a0 != 0\n 33055: u64 [s1 + 0xe8] = a1\n 33059: a1 = u64 [s1 + 0x110]\n 33063: a2 = u64 [s1 + 0x150]\n 33067: a1 = a2 if a0 != 0\n 33070: u64 [s1 + 0x110] = a1\n 33074: a5 = t1 if a0 != 0\n 33077: a4 = t2 if a0 != 0\n 33080: a1 = u64 [s1 + 0x120]\n 33084: ra = a1 if a0 != 0\n 33087: a1 = u64 [s1 + 0x128]\n 33091: t0 = a1 if a0 != 0\n 33094: a2 = u64 [s1 + 0xe0]\n 33098: a2 = 0 if a0 != 0\n 33100: a1 = u64 [s1 + 0x188]\n 33104: a1 = a1 + 0x1\n 33107: a0 = a1 <u 0x1\n 33110: a3 = u64 [s1 + 0x180]\n 33114: a3 = a3 + a0\n 33117: u64 [s1 + 0x188] = a1\n 33121: u64 [s1 + 0x180] = a3\n 33125: a0 = a1 | a3\n 33128: a0 = a0 <u 0x1\n 33131: a1 = u64 [s1 + 0x170]\n 33135: a0 = a0 + a1\n 33138: a1 = a0 <u a1\n 33141: a3 = u64 [s1 + 0x178]\n 33145: a3 = a3 + a1\n 33148: u64 [s1 + 0x178] = a3\n 33152: u64 [s1 + 0x170] = a0\n 33156: jump @1036\n      : @1073 (gas: 14)\n 33159: a1 = u64 [s1 + 0xe8]\n 33163: a1 = a1 & 0xffffffffffffffff\n 33166: a4 = s1 + 0x100\n 33170: a2 = u64 [a4 + 0x10]\n 33173: a0 = a2 & 0xffffffffffffffff\n 33176: a2 = u64 [a4 + 0x30]\n 33179: a3 = u64 [a4 + 0x8]\n 33182: a2 = a2 & a3\n 33185: u64 [a4 + 0x38] = a0\n 33188: u64 [a4 + 0x28] = a2\n 33191: a0 = a0 | a2\n 33194: u64 [a4 + 0x30] = a1\n 33197: a0 = a0 | a1\n 33200: jump @1124 if a0 == 0\n      : @1074 (gas: 3)\n 33204: a0 = s1 + 0x2d40\n 33208: a1 = u64 [s1 + 0x20]\n 33211: ra = 1182, jump @6\n      : @1075 [@dyn 591] (gas: 17)\n 33217: a1 = s1 + 0x2938\n 33221: a0 = u32 [a1 + 0x41c]\n 33225: a0 = a0 << 0x20\n 33228: a1 = u64 [a1 + 0x420]\n 33232: a2 = u64 [s1 + 0x128]\n 33236: a0 = a0 | a2\n 33239: a3 = s1 + 0x4138\n 33243: a2 = u64 [s1 + 0x130]\n 33247: a4 = a3 + 0x300\n 33251: u64 [a4 + 0x90] = a2\n 33255: a2 = u64 [s1 + 0x138]\n 33259: u64 [a4 + 0x88] = a2\n 33263: u64 [a4 + 0xa0] = a1\n 33267: u64 [a4 + 0x98] = a0\n 33271: a1 = s1 + 0x44c0\n 33275: a0 = u64 [s1 + 0x20]\n 33278: ra = 1184, jump @9\n      : @1076 [@dyn 592] (gas: 3)\n 33284: a1 = u64 [s1 + 0x28]\n 33287: a0 = a1 + 0x4\n 33290: t0 = 1186, jump @1595\n      : @1077 [@dyn 593] (gas: 8)\n 33296: a5 = a4 + 0x300\n 33300: u64 [a5 + 0xb8] = a3\n 33304: u64 [a5 + 0xb0] = a2\n 33308: u64 [a5 + 0xa8] = a0\n 33312: u64 [a5 + 0xc0] = a1\n 33316: a0 = s1 + 0x2d20\n 33320: a1 = s1 + 0x44e0\n 33324: ra = 1188, jump @6\n      : @1078 [@dyn 594] (gas: 31)\n 33330: a0 = s1 + 0x2938\n 33334: a5 = u64 [a0 + 0x400]\n 33338: a1 = a0 + 0x300\n 33342: a3 = u64 [a1 + 0xe8]\n 33346: a4 = u64 [a1 + 0xf0]\n 33350: a0 = u64 [a1 + 0xf8]\n 33354: t0 = 0x5a\n 33357: a1 = a3 mulhu t0\n 33360: a2 = a4 * t0\n 33363: a1 = a1 + a2\n 33366: u64 [s1 + 0x1b8] = a1\n 33370: a1 = a1 <u a2\n 33373: a2 = a4 mulhu t0\n 33376: a1 = a1 + a2\n 33379: a2 = a0 * t0\n 33382: a2 = a2 + a1\n 33385: u64 [s1 + 0x168] = a2\n 33389: a1 = a2 <u a1\n 33392: u64 [s1 + 0x118] = a4\n 33396: a2 = a4 | a5\n 33399: u64 [s1 + 0x140] = a3\n 33403: a3 = a3 | a0\n 33406: a4 = a3 | a2\n 33409: u64 [s1 + 0x120] = a5\n 33413: a3 = a5 * t0\n 33416: u64 [s1 + 0x110] = a0\n 33420: a2 = a0 mulhu t0\n 33423: a3 = a3 + a2\n 33426: a0 = a3 + a1\n 33429: u64 [s1 + 0x170] = a0\n 33433: jump @1081 if a4 == 0\n      : @1079 (gas: 9)\n 33436: a0 = u64 [s1 + 0x170]\n 33440: a1 = 0 if a0 != 0\n 33442: a2 = a3 <u a2\n 33445: a3 = u64 [s1 + 0x120]\n 33449: a3 = a3 mulhu t0\n 33452: a3 = a3 >u 0\n 33454: a2 = a2 | a3\n 33457: a1 = a1 | a2\n 33460: jump @1081 if a1 == 0\n      : @1080 (gas: 1)\n 33463: jump @1240\n      : @1081 (gas: 55)\n 33466: a1 = u64 [s1 + 0x140]\n 33470: t0 = a1 * 0x5a\n 33473: t1 = u64 [s1 + 0x168]\n 33477: a0 = t0 | t1\n 33480: ra = u64 [s1 + 0x1b8]\n 33484: t2 = u64 [s1 + 0x170]\n 33488: a1 = ra | t2\n 33491: a0 = a0 | a1\n 33494: a0 = a0 <u 0x1\n 33497: u64 [s1 + 0x1b0] = a0\n 33501: a0 = clz t1\n 33503: a0 = a0 + 0x40\n 33506: a2 = clz t2\n 33508: a2 = a0 if t2 == 0\n 33511: a0 = clz t0\n 33513: a0 = a0 + 0x40\n 33516: a1 = clz ra\n 33518: a1 = a0 if ra == 0\n 33521: a0 = a1 + 0x80\n 33525: a3 = t1 | t2\n 33528: a2 = a0 if a3 == 0\n 33531: a4 = a0 <u a1\n 33534: a4 = 0 if a3 != 0\n 33536: a5 = a4 >u 0\n 33538: a0 = a2 <u 0xfa\n 33542: a3 = a0 ^ 0x1\n 33545: a5 = a3 if a4 == 0\n 33548: a0 = a5 <u 0x1\n 33551: a0 = a0 + 0xffffffffffffffff\n 33554: a1 = -a5\n 33556: a4 = -a4\n 33558: a3 = a4 - a3\n 33561: a2 = 0xf9 - a2\n 33565: u64 [s1 + 0x190] = a1\n 33569: a4 = a1 >u 0\n 33571: a1 = a0 >u 0\n 33573: a1 = a4 if a0 == 0\n 33576: a4 = a3 >u 0\n 33578: u64 [s1 + 0x188] = a2\n 33582: a2 = a2 <u 0x100\n 33586: a2 = a2 ^ 0x1\n 33589: a2 = a4 if a3 != 0\n 33592: a2 = a1 if a5 != 0\n 33595: a1 = u64 [s1 + 0x1b0]\n 33599: a1 = a1 | a2\n 33602: t2 = 0 if a1 != 0\n 33604: u64 [s1 + 0x1a8] = t2\n 33608: t1 = 0 if a1 != 0\n 33610: u64 [s1 + 0x1a0] = t1\n 33614: ra = 0 if a1 != 0\n 33616: u64 [s1 + 0x198] = ra\n 33620: u64 [s1 + 0x158] = t0\n 33624: t0 = 0 if a1 != 0\n 33626: u64 [s1 + 0x1b0] = t0\n 33630: jump @1096 if a1 != 0\n      : @1082 (gas: 7)\n 33634: a1 = u64 [s1 + 0x188]\n 33638: a1 = a1 ^ 0xff\n 33642: a2 = u64 [s1 + 0x190]\n 33646: a1 = a1 | a2\n 33649: a2 = a3 | a0\n 33652: a1 = a1 | a2\n 33655: jump @1096 if a1 == 0\n      : @1083 (gas: 20)\n 33659: a4 = u64 [s1 + 0x188]\n 33663: a2 = a4 + 0x1\n 33666: u64 [s1 + 0x1b0] = a2\n 33670: a1 = a2 <u 0x1\n 33673: a1 = a1 + a3\n 33676: u64 [s1 + 0x1a8] = a1\n 33680: a1 = a1 | a2\n 33683: a1 = a1 <u 0x1\n 33686: a2 = u64 [s1 + 0x190]\n 33690: a1 = a1 + a2\n 33693: u64 [s1 + 0x198] = a1\n 33697: a1 = a1 <u a2\n 33700: a0 = a0 + a1\n 33703: u64 [s1 + 0x1a0] = a0\n 33707: a1 = 0xff - a4\n 33711: u64 [s1 + 0x190] = a1\n 33715: a2 = 0x80 - a1\n 33719: a0 = u64 [s1 + 0x158]\n 33723: a1 = u64 [s1 + 0x1b8]\n 33727: ra = 1190, jump @1634\n      : @1084 [@dyn 595] (gas: 6)\n 33733: u64 [s1 + 0x188] = a0\n 33737: u64 [s1 + 0x180] = a1\n 33741: a0 = u64 [s1 + 0x168]\n 33745: a1 = u64 [s1 + 0x170]\n 33749: a2 = u64 [s1 + 0x190]\n 33753: ra = 1192, jump @1639\n      : @1085 [@dyn 596] (gas: 9)\n 33759: u64 [s1 + 0x178] = a0\n 33763: a0 = u64 [s1 + 0x180]\n 33767: a0 = a0 | a1\n 33770: u64 [s1 + 0x180] = a0\n 33774: a0 = u64 [s1 + 0x190]\n 33778: a2 = a0 + 0xffffffffffffff80\n 33781: a0 = u64 [s1 + 0x158]\n 33785: a1 = u64 [s1 + 0x1b8]\n 33789: ra = 1194, jump @1639\n      : @1086 [@dyn 597] (gas: 18)\n 33795: a2 = u64 [s1 + 0x190]\n 33799: a3 = a2 <u 0x80\n 33803: u64 [s1 + 0x160] = a3\n 33807: a4 = u64 [s1 + 0x180]\n 33811: a1 = a4 if a3 != 0\n 33814: a4 = u64 [s1 + 0x170]\n 33818: a1 = a4 if a2 == 0\n 33821: u64 [s1 + 0x180] = a1\n 33825: a1 = u64 [s1 + 0x188]\n 33829: a4 = u64 [s1 + 0x178]\n 33833: a1 = a1 | a4\n 33836: a1 = a0 if a3 == 0\n 33839: a0 = u64 [s1 + 0x168]\n 33843: a1 = a0 if a2 == 0\n 33846: u64 [s1 + 0x188] = a1\n 33850: a0 = u64 [s1 + 0x158]\n 33854: a1 = u64 [s1 + 0x1b8]\n 33858: ra = 1196, jump @1639\n      : @1087 [@dyn 598] (gas: 14)\n 33864: a5 = s1 + 0x100\n 33868: a2 = u64 [a5 + 0xa8]\n 33872: a3 = u64 [a5 + 0xa0]\n 33876: a2 = a2 | a3\n 33879: a3 = u64 [a5 + 0xb0]\n 33883: a4 = u64 [a5 + 0x98]\n 33887: a3 = a3 | a4\n 33890: a2 = a2 | a3\n 33893: a3 = u64 [a5 + 0x60]\n 33896: a1 = 0 if a3 == 0\n 33898: u64 [a5 + 0x78] = a1\n 33901: a0 = 0 if a3 == 0\n 33903: u64 [a5 + 0x90] = a0\n 33907: jump @1089 if a2 != 0\n      : @1088 (gas: 3)\n 33910: u64 [s1 + 368] = 0\n 33914: u64 [s1 + 344] = 0\n 33918: jump @1095\n      : @1089 (gas: 5)\n 33921: a0 = u64 [s1 + 0x1b0]\n 33925: a2 = a0 + 0xffffffffffffff80\n 33928: a0 = u64 [s1 + 0x168]\n 33932: a1 = u64 [s1 + 0x170]\n 33936: ra = 1198, jump @1634\n      : @1090 [@dyn 599] (gas: 6)\n 33942: u64 [s1 + 0x160] = a0\n 33946: u64 [s1 + 0x148] = a1\n 33950: a0 = u64 [s1 + 0x158]\n 33954: a1 = u64 [s1 + 0x1b8]\n 33958: a2 = u64 [s1 + 0x1b0]\n 33962: ra = 1200, jump @1634\n      : @1091 [@dyn 600] (gas: 7)\n 33968: u64 [s1 + 0x108] = a0\n 33972: u64 [s1 + 0x150] = a1\n 33976: a1 = u64 [s1 + 0x1b0]\n 33980: a2 = 0x80 - a1\n 33984: a0 = u64 [s1 + 0x168]\n 33988: a1 = u64 [s1 + 0x170]\n 33992: ra = 1202, jump @1639\n      : @1092 [@dyn 601] (gas: 20)\n 33998: a2 = u64 [s1 + 0x150]\n 34002: a1 = a1 | a2\n 34005: a2 = u64 [s1 + 0x1b0]\n 34009: a4 = a2 <u 0x80\n 34013: u64 [s1 + 0x150] = a4\n 34017: a3 = u64 [s1 + 0x148]\n 34021: a1 = a3 if a4 == 0\n 34024: a3 = u64 [s1 + 0x1b8]\n 34028: a3 = a1 if a2 != 0\n 34031: u64 [s1 + 0x1b8] = a3\n 34035: a1 = u64 [s1 + 0x108]\n 34039: a0 = a0 | a1\n 34042: a1 = u64 [s1 + 0x160]\n 34046: a0 = a1 if a4 == 0\n 34049: a1 = u64 [s1 + 0x158]\n 34053: a1 = a0 if a2 != 0\n 34056: u64 [s1 + 0x158] = a1\n 34060: a0 = u64 [s1 + 0x168]\n 34064: a1 = u64 [s1 + 0x170]\n 34068: ra = 1204, jump @1634\n      : @1093 [@dyn 602] (gas: 11)\n 34074: t0 = u64 [s1 + 0x158]\n 34078: u64 [s1 + 368] = 0\n 34082: u64 [s1 + 352] = 0\n 34086: a3 = s1 + 0x100\n 34090: a2 = u64 [a3 + 0x50]\n 34093: a1 = 0 if a2 == 0\n 34095: u64 [a3 + 0x68] = a1\n 34098: a0 = 0 if a2 == 0\n 34100: u64 [a3 + 80] = 0x63\n 34104: u64 [a3 + 72] = 0\n 34107: fallthrough\n      : @1094 (gas: 90)\n 34108: u64 [s1 + 344] = 0\n 34112: a2 = t0 >> 0x3f\n 34115: ra = u64 [s1 + 0x1b8]\n 34119: a3 = ra << 0x1\n 34122: a3 = a3 | a2\n 34125: a2 = t0 << 0x1\n 34128: a1 = u64 [s1 + 0x180]\n 34132: a4 = a1 >> 0x3f\n 34135: t2 = a2 | a4\n 34138: a2 = u64 [s1 + 0x148]\n 34142: a4 = a2 ^ a3\n 34145: t1 = a2 <u a3\n 34148: a5 = u64 [s1 + 0x150]\n 34152: t0 = a5 <u t2\n 34155: t0 = t1 if a4 != 0\n 34158: a5 = u64 [s1 + 0x168]\n 34162: a5 = a5 << 0x1\n 34165: a4 = a0 >> 0x3f\n 34168: a4 = a4 | a5\n 34171: u64 [s1 + 0x168] = a4\n 34175: a4 = ra >> 0x3f\n 34178: a0 = a0 << 0x1\n 34181: a4 = a4 | a0\n 34184: a0 = a1 << 0x1\n 34187: a1 = u64 [s1 + 0x188]\n 34191: a5 = a1 >> 0x3f\n 34194: a0 = a0 | a5\n 34197: u64 [s1 + 0x1b8] = a0\n 34201: a5 = a1 << 0x1\n 34204: a0 = u64 [s1 + 0x178]\n 34208: a1 = a0 >> 0x3f\n 34211: t1 = a5 | a1\n 34214: a5 = a0 << 0x1\n 34217: a0 = u64 [s1 + 0x190]\n 34221: ra = a0 >> 0x3f\n 34224: a5 = a5 | ra\n 34227: a0 = a0 << 0x1\n 34230: a1 = u64 [s1 + 0x170]\n 34234: a0 = a0 | a1\n 34237: u64 [s1 + 0x190] = a0\n 34241: a1 = u64 [s1 + 0x160]\n 34245: a0 = a1 | a5\n 34248: u64 [s1 + 0x178] = a0\n 34252: a0 = a1 | t1\n 34255: u64 [s1 + 0x188] = a0\n 34259: a0 = u64 [s1 + 0x1b8]\n 34263: a0 = a0 | a1\n 34266: u64 [s1 + 0x180] = a0\n 34270: a0 = a2 - a4\n 34273: a0 = a0 <u t0\n 34276: a1 = a2 <u a4\n 34279: t1 = u64 [s1 + 0x168]\n 34283: a5 = a2 - t1\n 34286: a5 = a5 - a1\n 34289: a5 = a5 - a0\n 34292: ra = a5 >>a 0x3f\n 34295: a0 = ra & 0x64\n 34298: t0 = t2 - a0\n 34301: a1 = t2 <u a0\n 34304: a0 = a3 - a1\n 34307: u64 [s1 + 0x1b8] = a0\n 34311: a1 = 0 if a3 != 0\n 34313: a0 = a4 - a1\n 34316: a1 = a4 <u a1\n 34319: a1 = t1 - a1\n 34322: u64 [s1 + 0x168] = a1\n 34326: a1 = s1 + 0x100\n 34330: a3 = u64 [a1 + 0xb0]\n 34334: a5 = u64 [a1 + 0xa8]\n 34338: a2 = a3 | a5\n 34341: a2 = a2 <u 0x1\n 34344: a4 = u64 [a1 + 0x98]\n 34348: t2 = a4 <u a2\n 34351: a4 = a4 - a2\n 34354: a2 = a3 <u 0x1\n 34357: a5 = a5 - a2\n 34360: a2 = u64 [a1 + 0xa0]\n 34364: a2 = a2 - t2\n 34367: a3 = a3 + 0xffffffffffffffff\n 34370: u64 [a1 + 0xa8] = a5\n 34374: u64 [a1 + 0xa0] = a2\n 34378: a2 = a2 | a5\n 34381: u64 [a1 + 0xb0] = a3\n 34385: a3 = a3 | a4\n 34388: a2 = a2 | a3\n 34391: a3 = ra & 0x1\n 34394: u64 [a1 + 0x70] = a3\n 34397: u64 [a1 + 0x98] = a4\n 34401: u64 [s1 + 352] = 0\n 34405: jump @1094 if a2 != 0\n      : @1095 (gas: 26)\n 34409: a2 = u64 [s1 + 0x188]\n 34413: a0 = a2 >> 0x3f\n 34416: a1 = u64 [s1 + 0x180]\n 34420: a1 = a1 << 0x1\n 34423: a0 = a0 | a1\n 34426: a3 = u64 [s1 + 0x178]\n 34430: a1 = a3 >> 0x3f\n 34433: a2 = a2 << 0x1\n 34436: a1 = a1 | a2\n 34439: a4 = u64 [s1 + 0x190]\n 34443: a2 = a4 >> 0x3f\n 34446: a3 = a3 << 0x1\n 34449: a4 = a4 << 0x1\n 34452: a5 = u64 [s1 + 0x170]\n 34456: a4 = a4 | a5\n 34459: a5 = s1 + 0x100\n 34463: u64 [a5 + 0xb0] = a4\n 34467: a4 = u64 [a5 + 0x58]\n 34470: a2 = a2 | a4\n 34473: a2 = a2 | a3\n 34476: u64 [a5 + 0x98] = a2\n 34480: a1 = a1 | a4\n 34483: u64 [a5 + 0xa0] = a1\n 34487: a0 = a0 | a4\n 34490: u64 [a5 + 0xa8] = a0\n 34494: fallthrough\n      : @1096 (gas: 55)\n 34495: a1 = sp + 0xffffffffffffffe0\n 34498: a1 = a1 & 0xffffffffffffffe0\n 34501: sp = a1\n 34503: a0 = u64 [s1 + 0x140]\n 34507: a2 = u64 [s1 + 0x1b0]\n 34511: t1 = a0 <u a2\n 34514: ra = u64 [s1 + 0x118]\n 34518: a0 = u64 [s1 + 0x198]\n 34522: a2 = ra ^ a0\n 34525: a3 = ra <u a0\n 34528: a3 = t1 if a2 == 0\n 34531: a2 = u64 [s1 + 0x120]\n 34535: a4 = u64 [s1 + 0x1a8]\n 34539: t2 = a2 - a4\n 34542: a5 = u64 [s1 + 0x110]\n 34546: a2 = u64 [s1 + 0x1a0]\n 34550: a4 = a5 <u a2\n 34553: t2 = t2 - a4\n 34556: a4 = a5 - a2\n 34559: a5 = a4 <u a3\n 34562: t2 = t2 - a5\n 34565: t0 = a4 - a3\n 34568: a2 = ra - a0\n 34571: t1 = a2 - t1\n 34574: a2 = u64 [s1 + 0x28]\n 34577: a0 = a2 + 0x5\n 34580: a2 = a0 <u a2\n 34583: a4 = u64 [s1 + 0x30]\n 34586: a3 = a4 + a2\n 34589: a4 = a3 <u a4\n 34592: a4 = a2 if a2 == 0\n 34595: a2 = u64 [s1 + 0x38]\n 34598: a4 = a4 + a2\n 34601: a2 = a4 <u a2\n 34604: a5 = u64 [s1 + 0x40]\n 34607: a2 = a2 + a5\n 34610: a5 = s1 + 0x4138\n 34614: u64 [a5 + 0x3d0] = a3\n 34618: a3 = a5 + 0x300\n 34622: u64 [a3 + 0xc8] = a0\n 34626: u64 [a3 + 0xd8] = a4\n 34630: u64 [a3 + 0xe0] = a2\n 34634: a0 = u64 [s1 + 0x140]\n 34638: a2 = u64 [s1 + 0x1b0]\n 34642: a0 = a0 - a2\n 34645: u64 [s1 + 0x170] = t0\n 34649: u64 [a1 + 0x10] = t0\n 34652: u64 [s1 + 0x168] = t1\n 34656: u64 [a1 + 0x8] = t1\n 34659: u64 [s1 + 0x160] = a0\n 34663: u64 [a1] = a0\n 34665: u64 [s1 + 0x178] = t2\n 34669: u64 [a1 + 0x18] = t2\n 34672: a0 = s1 + 0x4500\n 34676: ra = 1206, jump @9\n      : @1097 [@dyn 603] (gas: 12)\n 34683: a2 = s1 + 0x2938\n 34687: u64 [a2 + 928] = 0\n 34691: a0 = u64 [s1 + 0x128]\n 34695: a3 = a2 + 0x300\n 34699: u64 [a3 + 0x98] = a0\n 34703: a0 = u64 [s1 + 0x130]\n 34707: u64 [a3 + 0x90] = a0\n 34711: a1 = s1 + 0x2cc0\n 34715: a0 = u64 [s1 + 0x138]\n 34719: u64 [a3 + 0x88] = a0\n 34723: a0 = 0\n 34725: ra = 1208, jump @4\n      : @1098 [@dyn 604] (gas: 2)\n 34732: a0 = 0x2938\n 34736: t0 = 1210, jump @1615\n      : @1099 [@dyn 605] (gas: 4)\n 34742: i32 a1 = a1 + 0xfffffffffffffca0\n 34746: a1 = a1 + s1\n 34749: u64 [a2 + 880] = 0\n 34753: ra = 1212, jump @4\n      : @1100 [@dyn 606] (gas: 1)\n 34760: t0 = 1214, jump @1620\n      : @1101 [@dyn 607] (gas: 3)\n 34766: a0 = u64 [s1 + 0x100]\n 34770: a0 = i32 [a0]\n 34772: jump @1103 if a0 >u 63\n      : @1102 (gas: 4)\n 34776: a1 = u64 [s1 + 0x100]\n 34780: u32 [a1 + 0] = 0x40\n 34783: t0 = 0x4c0\n 34787: jump @1628\n      : @1103 (gas: 1)\n 34790: t0 = 1216, jump @1628\n      : @1104 [@dyn 608] (gas: 6)\n 34796: a0 = u64 [s1 + 0xf8]\n 34800: ra = 0x4c2\n 34804: ecalli 7 // 'hash_keccak_256'\n 34806: a3 = u64 [s1 + 0x190]\n 34810: t0 = 0x4c4\n 34814: jump @1617\n      : @1105 [@dyn 609] (gas: 2)\n 34817: a3 = u64 [s1 + 0x190]\n 34821: t0 = 1220, jump @1617\n      : @1106 [@dyn 610] (gas: 7)\n 34827: a1 = u64 [s1 + 0x1b8]\n 34831: u64 [a1 + 0x18] = a3\n 34834: u64 [a1 + 0x10] = a2\n 34837: u64 [a1 + 0x8] = a4\n 34840: u64 [a1] = a0\n 34842: a0 = s1 + 0x2c80\n 34846: ra = 1222, jump @6\n      : @1107 [@dyn 611] (gas: 22)\n 34853: a5 = s1 + 0x2938\n 34857: a3 = u64 [a5 + 0x348]\n 34861: a0 = u64 [a5 + 0x350]\n 34865: a1 = u64 [a5 + 0x358]\n 34869: a2 = u64 [a5 + 0x360]\n 34873: a4 = u64 [s1 + 0x1a8]\n 34877: u64 [a5 + 0x300] = a4\n 34881: a4 = u64 [s1 + 0x1a0]\n 34885: u64 [a5 + 0x2f8] = a4\n 34889: a4 = u64 [s1 + 0x198]\n 34893: u64 [a5 + 0x2f0] = a4\n 34897: a4 = u64 [s1 + 0x1b0]\n 34901: u64 [a5 + 0x2e8] = a4\n 34905: a4 = a5 + 0x300\n 34909: u64 [a4 + 0x20] = a2\n 34912: u64 [a4 + 0x18] = a1\n 34915: u64 [a4 + 0x10] = a0\n 34918: a0 = s1 + 0x2c60\n 34922: a1 = s1 + 0x2c40\n 34926: a2 = s1 + 0x2c20\n 34930: u64 [a4 + 0x8] = a3\n 34933: ra = 1224, jump @1380\n      : @1108 [@dyn 612] (gas: 15)\n 34939: a3 = s1 + 0x2938\n 34943: a4 = a3 + 0x300\n 34947: a0 = u64 [a4 + 0x40]\n 34950: a1 = u64 [a4 + 0x38]\n 34953: a2 = u64 [a4 + 0x30]\n 34956: a3 = u64 [a4 + 0x28]\n 34959: a4 = s1 + 0x4138\n 34963: u64 [a4 + 0x400] = a0\n 34967: a0 = a4 + 0x300\n 34971: u64 [a0 + 0xf8] = a1\n 34975: u64 [a0 + 0xf0] = a2\n 34979: u64 [a0 + 0xe8] = a3\n 34983: a1 = s1 + 0x4520\n 34987: a0 = u64 [s1 + 0x1b8]\n 34991: ra = 1226, jump @9\n      : @1109 [@dyn 613] (gas: 3)\n 34998: a0 = s1 + 0x2c00\n 35002: a1 = 0x40\n 35005: ra = 1228, jump @2\n      : @1110 [@dyn 614] (gas: 3)\n 35012: t0 = 0x4ce\n 35016: a1 = s1 + 0x2938\n 35020: fallthrough\n      : @1111 [@dyn 615] (gas: 18)\n 35021: a4 = a1 + 0x200\n 35025: a2 = u64 [a4 + 0xe0]\n 35029: a3 = u64 [a4 + 0xd8]\n 35033: a0 = u64 [a4 + 0xd0]\n 35037: a1 = u64 [a4 + 0xc8]\n 35041: a4 = s1 + 0x100\n 35045: u64 [a4 + 0x90] = a0\n 35049: u64 [a4 + 0x88] = a2\n 35053: a0 = a0 | a2\n 35056: u64 [a4 + 0xb8] = a1\n 35060: a1 = a1 | a3\n 35063: a1 = a1 | a0\n 35066: a1 = a1 >> 0x20\n 35069: u64 [a4 + 0x80] = a3\n 35073: a0 = a0 | a3\n 35076: a0 = a0 << 0x20\n 35079: a0 = a0 | a1\n 35082: jump @1113 if a0 == 0\n      : @1112 (gas: 1)\n 35085: jump @993\n      : @1113 (gas: 13)\n 35088: a0 = s1 + 0x2938\n 35092: a1 = u64 [s1 + 0x1b0]\n 35096: a3 = a0 + 0x200\n 35100: u64 [a3 + 0xa8] = a1\n 35104: a1 = u64 [s1 + 0x198]\n 35108: u64 [a3 + 0xb0] = a1\n 35112: a1 = u64 [s1 + 0x1a0]\n 35116: u64 [a3 + 0xb8] = a1\n 35120: a1 = s1 + 0x2be0\n 35124: a2 = u64 [s1 + 0x1a8]\n 35128: u64 [a3 + 0xc0] = a2\n 35132: a0 = u64 [s1 + 0x1b8]\n 35136: ra = 1232, jump @4\n      : @1114 [@dyn 616] (gas: 11)\n 35143: a3 = s1 + 0x100\n 35147: a0 = u64 [a3 + 0x88]\n 35151: a1 = u64 [a3 + 0x80]\n 35155: a0 = a0 | a1\n 35158: a1 = 0xffffffe0\n 35168: a2 = u64 [a3 + 0xb8]\n 35172: a1 = a2 <u a1\n 35175: a2 = u64 [a3 + 0x90]\n 35179: a1 = 0 if a2 != 0\n 35181: a1 = 0 if a0 != 0\n 35183: jump @1116 if a1 != 0\n      : @1115 (gas: 1)\n 35186: jump @993\n      : @1116 (gas: 14)\n 35189: a0 = u64 [s1 + 0x1b8]\n 35193: i32 a0 = a0 + 0x20\n 35196: a3 = s1 + 0x2938\n 35200: a1 = u64 [s1 + 0x160]\n 35204: a4 = a3 + 0x200\n 35208: u64 [a4 + 0x88] = a1\n 35212: a1 = u64 [s1 + 0x168]\n 35216: u64 [a4 + 0x90] = a1\n 35220: a1 = u64 [s1 + 0x170]\n 35224: u64 [a4 + 0x98] = a1\n 35228: a1 = s1 + 0x2bc0\n 35232: a2 = u64 [s1 + 0x178]\n 35236: u64 [a4 + 0xa0] = a2\n 35240: ra = 1234, jump @4\n      : @1117 [@dyn 617] (gas: 32)\n 35247: a4 = s1 + 0x2938\n 35251: u64 [a4 + 576] = 0\n 35255: a0 = u64 [s1 + 0x128]\n 35259: a5 = a4 + 0x200\n 35263: u64 [a5 + 0x38] = a0\n 35266: a0 = u64 [s1 + 0x130]\n 35270: u64 [a5 + 0x30] = a0\n 35273: a0 = u64 [s1 + 0x88]\n 35277: u64 [a5 + 0x60] = a0\n 35280: a0 = u64 [s1 + 0x90]\n 35284: u64 [a5 + 0x58] = a0\n 35287: a0 = u64 [s1 + 0x98]\n 35291: u64 [a5 + 0x50] = a0\n 35294: a0 = u64 [s1 + 0xa0]\n 35298: u64 [a5 + 0x48] = a0\n 35301: a0 = u64 [0x20038]\n 35306: a1 = u64 [0x20040]\n 35311: a2 = u64 [0x20048]\n 35316: a3 = u64 [0x20050]\n 35321: u64 [a5 + 0x80] = a0\n 35325: u64 [a5 + 0x78] = a1\n 35328: u64 [a5 + 0x70] = a2\n 35331: u64 [a5 + 0x68] = a3\n 35334: a5 = a4\n 35336: a1 = 0x40\n 35339: a2 = s1 + 0x2ba0\n 35343: a3 = s1 + 0x2b80\n 35347: a4 = s1 + 0x2b60\n 35351: a0 = u64 [s1 + 0x138]\n 35355: u64 [a5 + 0x228] = a0\n 35359: a0 = u64 [s1 + 0x1b8]\n 35363: ra = 1236, jump @12\n      : @1118 [@dyn 618] (gas: 3)\n 35370: a0 = s1 + 0x2b40\n 35374: a1 = 0x40\n 35377: ra = 1238, jump @2\n      : @1119 [@dyn 619] (gas: 7)\n 35384: a3 = s1 + 0x2938\n 35388: a5 = a3 + 0x200\n 35392: a0 = u64 [a5 + 0x20]\n 35395: a1 = u64 [a5 + 0x18]\n 35398: a2 = u64 [a5 + 0x10]\n 35401: a4 = u64 [a5 + 0x8]\n 35404: t0 = 1240, jump @1577\n      : @1120 [@dyn 620] (gas: 1)\n 35410: jump @1122 if a0 == 0\n      : @1121 (gas: 1)\n 35413: jump @993\n      : @1122 (gas: 15)\n 35416: a3 = a4\n 35418: a2 = s1 + 0x2938\n 35422: a0 = u64 [s1 + 0x1b0]\n 35426: a1 = a2 + 0x100\n 35430: u64 [a1 + 0xe8] = a0\n 35434: a0 = u64 [s1 + 0x198]\n 35438: u64 [a1 + 0xf0] = a0\n 35442: a0 = u64 [s1 + 0x1a0]\n 35446: u64 [a1 + 0xf8] = a0\n 35450: a1 = s1 + 0x2b20\n 35454: a0 = u64 [s1 + 0x1a8]\n 35458: u64 [a2 + 0x200] = a0\n 35462: a0 = a4\n 35464: u64 [s1 + 0x1b8] = a3\n 35468: ra = 1242, jump @4\n      : @1123 [@dyn 621] (gas: 23)\n 35475: a5 = s1 + 0x100\n 35479: a0 = u64 [a5 + 0x28]\n 35482: a4 = s1 + 0x2938\n 35486: u64 [a4 + 0x1b8] = a0\n 35490: a0 = u64 [a5 + 0x30]\n 35493: u64 [a4 + 0x1b0] = a0\n 35497: a0 = u64 [a5 + 0x38]\n 35500: u64 [a4 + 0x1a8] = a0\n 35504: a0 = u64 [0x20058]\n 35509: a1 = u64 [0x20060]\n 35514: a2 = u64 [0x20068]\n 35519: a3 = u64 [0x20070]\n 35524: u64 [a4 + 0x1e0] = a0\n 35528: a0 = a4 + 0x100\n 35532: u64 [a0 + 0xd8] = a1\n 35536: u64 [a0 + 0xd0] = a2\n 35540: u64 [a0 + 0xc8] = a3\n 35544: a1 = 0x20\n 35547: a2 = s1 + 0x2b00\n 35551: a3 = s1 + 0x2ae0\n 35555: u64 [a4 + 448] = 0\n 35559: a0 = u64 [a5 + 0xb8]\n 35563: ra = 1244, jump @10\n      : @1124 [@dyn 622] (gas: 3)\n 35570: a0 = s1 + 0x2ac0\n 35574: a1 = u64 [s1 + 0x18]\n 35577: ra = 1246, jump @6\n      : @1125 [@dyn 623] (gas: 2)\n 35584: a0 = 0x3000\n 35588: t0 = 1248, jump @1629\n      : @1126 [@dyn 624] (gas: 15)\n 35594: a0 = u64 [a4 + 0x88]\n 35598: a1 = u64 [a4 + 0x90]\n 35602: a2 = u64 [a4 + 0xa0]\n 35606: a3 = u64 [a4 + 0x98]\n 35610: a0 = a0 & 0xffffffffffffff00\n 35614: a0 = a0 | 0x1\n 35617: a4 = s1 + 0x4138\n 35621: a5 = a4 + 0x400\n 35625: u64 [a5 + 0x20] = a2\n 35628: u64 [a5 + 0x18] = a3\n 35631: u64 [a5 + 0x10] = a1\n 35634: u64 [a5 + 0x8] = a0\n 35637: a1 = s1 + 0x4540\n 35641: a0 = u64 [s1 + 0x18]\n 35644: ra = 1250, jump @9\n      : @1127 [@dyn 625] (gas: 6)\n 35651: a0 = 0\n 35653: a1 = u64 [s1 + 0xf8]\n 35657: a2 = 0\n 35659: ecalli 12 // 'seal_return'\n 35661: a1 = 0x201a0\n 35666: jump @1175\n      : @1128 (gas: 4)\n 35669: a1 = 0x201a0\n 35674: i32 a1 = a1 + 0\n 35676: a0 = 0x1\n 35679: jump @1176\n      : @1129 (gas: 4)\n 35682: a1 = 0x201a0\n 35687: i32 a1 = a1 + 0\n 35689: a0 = 0x1\n 35692: jump @1176\n      : @1130 (gas: 4)\n 35695: a1 = 0x201a0\n 35700: i32 a1 = a1 + 0\n 35702: a0 = 0x1\n 35705: jump @1176\n      : @1131 (gas: 4)\n 35708: a1 = 0x201a0\n 35713: i32 a1 = a1 + 0\n 35715: a0 = 0x1\n 35718: jump @1176\n      : @1132 (gas: 4)\n 35721: a1 = 0x201a0\n 35726: i32 a1 = a1 + 0\n 35728: a0 = 0x1\n 35731: jump @1176\n      : @1133 (gas: 4)\n 35734: a1 = 0x201a0\n 35739: i32 a1 = a1 + 0\n 35741: a0 = 0x1\n 35744: jump @1176\n      : @1134 (gas: 4)\n 35747: a1 = 0x201a0\n 35752: i32 a1 = a1 + 0\n 35754: a0 = 0x1\n 35757: jump @1176\n      : @1135 (gas: 4)\n 35760: a1 = 0x201a0\n 35765: i32 a1 = a1 + 0\n 35767: a0 = 0x1\n 35770: jump @1176\n      : @1136 (gas: 4)\n 35773: a1 = 0x201a0\n 35778: i32 a1 = a1 + 0\n 35780: a0 = 0x1\n 35783: jump @1176\n      : @1137 (gas: 4)\n 35786: a1 = 0x201a0\n 35791: i32 a1 = a1 + 0\n 35793: a0 = 0x1\n 35796: jump @1176\n      : @1138 (gas: 9)\n 35799: u64 [s1 + 0x178] = a5\n 35803: u64 [s1 + 0x180] = a4\n 35807: u64 [s1 + 0x188] = a3\n 35811: u64 [s1 + 0x1b0] = a2\n 35815: a0 = u64 [s1 + 0x1a0]\n 35819: ra = 0x4e4\n 35823: ecalli 4 // 'caller'\n 35825: t0 = 0x4e6\n 35829: jump @1582\n      : @1139 [@dyn 626] (gas: 1)\n 35832: t0 = 1254, jump @1582\n      : @1140 [@dyn 627] (gas: 9)\n 35838: u64 [a2 + 424] = 0\n 35842: a4 = a2 + 0x100\n 35846: u64 [a4 + 0xa0] = a1\n 35850: u64 [a4 + 0x98] = a0\n 35854: a1 = s1 + 0x7ff\n 35858: a1 = a1 + 0x2c1\n 35862: u64 [a4 + 0x90] = a3\n 35866: a0 = 0\n 35868: ra = 1256, jump @4\n      : @1141 [@dyn 628] (gas: 11)\n 35875: a1 = s1 + 0x7ff\n 35879: a1 = a1 + 0x131\n 35883: u64 [a1 + 392] = 0\n 35887: u64 [a1 + 384] = 0\n 35891: u64 [a1 + 368] = 0x5\n 35896: a2 = a1\n 35898: a0 = 0x20\n 35901: a1 = s1 + 0x7ff\n 35905: a1 = a1 + 0x2a1\n 35909: u64 [a2 + 376] = 0\n 35913: ra = 1258, jump @4\n      : @1142 [@dyn 629] (gas: 3)\n 35920: a0 = u64 [s1 + 0x190]\n 35924: a0 = i32 [a0]\n 35926: jump @1144 if a0 >u 63\n      : @1143 (gas: 4)\n 35930: a1 = u64 [s1 + 0x190]\n 35934: u32 [a1 + 0] = 0x40\n 35937: t0 = 0x4ec\n 35941: jump @1628\n      : @1144 (gas: 1)\n 35944: t0 = 1260, jump @1628\n      : @1145 [@dyn 630] (gas: 6)\n 35950: a0 = u64 [s1 + 0x1a8]\n 35954: ra = 0x4ee\n 35958: ecalli 7 // 'hash_keccak_256'\n 35960: a3 = u64 [s1 + 0x190]\n 35964: t0 = 0x4f0\n 35968: jump @1574\n      : @1146 [@dyn 631] (gas: 2)\n 35971: a3 = u64 [s1 + 0x190]\n 35975: t0 = 1264, jump @1574\n      : @1147 [@dyn 632] (gas: 11)\n 35981: u64 [a4 + 0x80] = a3\n 35985: u64 [a4 + 0x78] = a2\n 35988: u64 [a4 + 0x70] = a1\n 35991: u64 [a4 + 0x68] = a0\n 35994: u64 [a4 + 160] = 0\n 35998: u64 [a4 + 152] = 0\n 36002: u64 [a4 + 144] = 0\n 36006: u64 [a4 + 136] = 0\n 36010: a0 = s1 + 0x39a0\n 36014: a1 = s1 + 0x39c0\n 36018: ra = 1266, jump @9\n      : @1148 [@dyn 633] (gas: 58)\n 36025: a0 = u64 [s1 + 0x1a0]\n 36029: ecalli 4 // 'caller'\n 36031: a1 = u64 [s1 + 0x1b8]\n 36035: a0 = i32 [a1 + 0x10]\n 36038: u64 [s1 + 0x1a0] = a0\n 36042: a0 = u64 [a1]\n 36044: u64 [s1 + 0x190] = a0\n 36048: a0 = u64 [a1 + 0x8]\n 36051: u64 [s1 + 0x170] = a0\n 36055: ecalli 9 // 'ref_time_left'\n 36057: a1 = u64 [s1 + 0x1b8]\n 36061: a2 = u64 [s1 + 0x170]\n 36065: u64 [a1 + 0x8] = a2\n 36068: a2 = u64 [s1 + 0x190]\n 36072: u64 [a1] = a2\n 36074: a2 = u64 [s1 + 0x1a0]\n 36078: u32 [a1 + 0x10] = a2\n 36081: a3 = a1\n 36083: a1 = u64 [s1 + 0x178]\n 36087: a2 = s1 + 0x3938\n 36091: u64 [a2 + 0xc0] = a1\n 36095: a1 = u64 [s1 + 0x180]\n 36099: u64 [a2 + 0xb8] = a1\n 36103: a1 = u64 [s1 + 0x188]\n 36107: u64 [a2 + 0xb0] = a1\n 36111: a1 = u64 [s1 + 0x1b0]\n 36115: u64 [a2 + 0xa8] = a1\n 36119: a0 = a0 >u 0x8fc\n 36123: a1 = -a0\n 36125: u64 [a2 + 0x100] = a1\n 36129: u64 [a2 + 0xf8] = a1\n 36133: u64 [a2 + 0xf0] = a1\n 36137: u64 [a2 + 0xe8] = a1\n 36141: u32 [a2 + 200] = 0\n 36145: a1 = a3 << 0x20\n 36148: a1 = a1 >> 0x20\n 36151: a0 = a0 << 0x23\n 36154: a0 = a0 | a1\n 36157: a1 = s1 + 0x39e0\n 36161: a1 = a1 << 0x20\n 36164: a1 = a1 >> 0x20\n 36167: a2 = s1 + 0x3a20\n 36171: a2 = a2 << 0x20\n 36174: a3 = a2 | a1\n 36177: a4 = u64 [s1 + 0x198]\n 36181: a4 = a4 << 0x20\n 36184: a4 = a4 >> 0x20\n 36187: a1 = s1 + 0x3a00\n 36191: a1 = a1 << 0x20\n 36194: a5 = a1 | a4\n 36197: a1 = 0xffffffffffffffff\n 36200: a2 = 0xffffffffffffffff\n 36203: ecalli 0 // 'call'\n 36204: a0 = a0 <u 0x1\n 36207: u64 [s1 + 0x1b8] = a0\n 36211: a0 = s1 + 0x7ff\n 36215: a0 = a0 + 0x281\n 36219: ra = 1268, jump @1388\n      : @1149 [@dyn 634] (gas: 12)\n 36225: a1 = s1 + 0x7ff\n 36229: a1 = a1 + 0x131\n 36233: u64 [a1 + 328] = 0\n 36237: u64 [a1 + 320] = 0\n 36241: a0 = u64 [s1 + 0x1b8]\n 36245: u64 [a1 + 0x130] = a0\n 36249: a0 = s1 + 0x7ff\n 36253: a0 = a0 + 0x261\n 36257: u64 [a1 + 312] = 0\n 36261: ra = 0x4f6\n 36265: t0 = 0x5f2\n 36269: jump @1586\n      : @1150 [@dyn 635] (gas: 6)\n 36272: a0 = 0\n 36274: a1 = u64 [s1 + 0x1a8]\n 36278: a2 = 0\n 36280: ecalli 12 // 'seal_return'\n 36282: a1 = 0x201a0\n 36287: jump @1175\n      : @1151 (gas: 4)\n 36290: a1 = 0x201a0\n 36295: i32 a1 = a1 + 0\n 36297: a0 = 0x1\n 36300: jump @1176\n      : @1152 (gas: 4)\n 36303: a1 = 0x201a0\n 36308: i32 a1 = a1 + 0\n 36310: a0 = 0x1\n 36313: jump @1176\n      : @1153 (gas: 6)\n 36316: a0 = 0x1\n 36319: a1 = u64 [s1 + 0x170]\n 36323: a2 = 0\n 36325: ecalli 12 // 'seal_return'\n 36327: a1 = 0x201a0\n 36332: jump @1175\n      : @1154 (gas: 4)\n 36335: a1 = 0x201a0\n 36340: i32 a1 = a1 + 0\n 36342: a0 = 0x1\n 36345: jump @1176\n      : @1155 (gas: 4)\n 36348: a1 = 0x201a0\n 36353: i32 a1 = a1 + 0\n 36355: a0 = 0x1\n 36358: jump @1176\n      : @1156 (gas: 4)\n 36361: a1 = 0x201a0\n 36366: i32 a1 = a1 + 0\n 36368: a0 = 0x1\n 36371: jump @1176\n      : @1157 (gas: 4)\n 36374: a1 = 0x201a0\n 36379: i32 a1 = a1 + 0\n 36381: a0 = 0x1\n 36384: jump @1176\n      : @1158 (gas: 4)\n 36387: a1 = 0x201a0\n 36392: i32 a1 = a1 + 0\n 36394: a0 = 0x1\n 36397: jump @1176\n      : @1159 (gas: 4)\n 36400: a1 = 0x201a0\n 36405: i32 a1 = a1 + 0\n 36407: a0 = 0x1\n 36410: jump @1176\n      : @1160 (gas: 8)\n 36413: u64 [a2 + 24] = 0\n 36416: u64 [a2 + 16] = 0\n 36419: u64 [a2 + 8] = 0\n 36422: a0 = 0x4e487b7100000000\n 36432: a1 = s1 + 0x2140\n 36436: u64 [a2 + 0x20] = a0\n 36439: a0 = 0\n 36441: ra = 1272, jump @4\n      : @1161 [@dyn 636] (gas: 9)\n 36448: a1 = s1 + 0x2138\n 36452: u64 [a1 + 0] = 0\n 36454: u64 [a1 + 4294967288] = 0\n 36457: u64 [a1 + 4294967272] = 0x21\n 36461: a2 = a1\n 36463: a0 = 0x4\n 36466: a1 = s1 + 0x2120\n 36470: u64 [a2 + 4294967280] = 0\n 36473: ra = 1274, jump @4\n      : @1162 [@dyn 637] (gas: 3)\n 36480: a0 = u64 [s1 + 0x128]\n 36484: a0 = i32 [a0]\n 36486: jump @1164 if a0 >u 63\n      : @1163 (gas: 3)\n 36490: a1 = u64 [s1 + 0x128]\n 36494: u32 [a1 + 0] = 0x40\n 36497: fallthrough\n      : @1164 (gas: 5)\n 36498: a0 = 0x1\n 36501: a2 = 0x24\n 36504: a1 = u64 [s1 + 0x130]\n 36508: ecalli 12 // 'seal_return'\n 36510: fallthrough\n      : @1165 (gas: 4)\n 36511: a1 = 0x201a0\n 36516: i32 a1 = a1 + 0\n 36518: a0 = 0x1\n 36521: jump @1176\n      : @1166 (gas: 4)\n 36524: a1 = 0x201a0\n 36529: i32 a1 = a1 + 0\n 36531: a0 = 0x1\n 36534: jump @1176\n      : @1167 (gas: 4)\n 36536: a1 = 0x201a0\n 36541: i32 a1 = a1 + 0\n 36543: a0 = 0x1\n 36546: jump @1176\n      : @1168 (gas: 4)\n 36548: a1 = 0x201a0\n 36553: i32 a1 = a1 + 0\n 36555: a0 = 0x1\n 36558: jump @1176\n      : @1169 (gas: 1)\n 36560: jump @1174 if a0 != 293231504\n      : @1170 (gas: 9)\n 36567: u64 [a3 + 1344] = 0\n 36571: u64 [a3 + 1336] = 0\n 36575: u64 [a3 + 1328] = 0\n 36579: u64 [a3 + 1320] = 0\n 36583: a0 = s1 + 0x3000\n 36587: i32 a0 = a0 + 0x660\n 36591: ra = 0x4fc\n 36595: ecalli 15 // 'value_transferred'\n 36597: fallthrough\n      : @1171 [@dyn 638] (gas: 3)\n 36598: a3 = s1 + 0x3138\n 36602: a4 = a3 + 0x500\n 36606: t0 = 1278, jump @1608\n      : @1172 [@dyn 639] (gas: 1)\n 36612: jump @1246 if a0 == 0\n      : @1173 (gas: 4)\n 36616: a1 = 0x201a0\n 36621: i32 a1 = a1 + 0\n 36623: a0 = 0x1\n 36626: jump @1176\n      : @1174 (gas: 4)\n 36628: a1 = 0x201a0\n 36633: i32 a1 = a1 + 0\n 36635: a0 = 0x1\n 36638: jump @1176\n      : @1175 (gas: 6)\n 36640: i32 a1 = a1 + 0\n 36642: a0 = 0x1\n 36645: a2 = 0\n 36647: ecalli 12 // 'seal_return'\n 36649: a1 = 0x201a0\n 36654: jump @1175\n      : @1176 (gas: 4)\n 36656: a2 = 0\n 36658: ecalli 12 // 'seal_return'\n 36660: a1 = 0x201a0\n 36665: jump @1175\n      : @1177 (gas: 2)\n 36667: a1 = 0x201a0\n 36672: jump @1175\n      : @1178 (gas: 2)\n 36674: a1 = 0x201a0\n 36679: jump @1175\n      : @1179 (gas: 2)\n 36681: a1 = 0x201a0\n 36686: jump @1175\n      : @1180 (gas: 10)\n 36688: a0 = s1 + 0x1138\n 36692: u64 [a0 + 1112] = 0\n 36696: u64 [a0 + 1104] = 0\n 36700: u64 [a0 + 1096] = 0\n 36704: a2 = a0\n 36706: a0 = 0x4e487b7100000000\n 36716: a1 = s1 + 0x1580\n 36720: u64 [a2 + 0x460] = a0\n 36724: a0 = 0\n 36726: ra = 1280, jump @4\n      : @1181 [@dyn 640] (gas: 3)\n 36733: t0 = 0x502\n 36737: a1 = s1 + 0x1138\n 36741: fallthrough\n      : @1182 [@dyn 641] (gas: 9)\n 36742: u64 [a1 + 1088] = 0\n 36746: u64 [a1 + 1080] = 0\n 36750: u64 [a1 + 1064] = 0x21\n 36755: a2 = a1\n 36757: a0 = 0x4\n 36760: a1 = s1 + 0x1560\n 36764: u64 [a2 + 1072] = 0\n 36768: ra = 0x52e\n 36772: jump @4\n      : @1183 (gas: 2)\n 36776: a1 = 0x201a0\n 36781: jump @1175\n      : @1184 (gas: 2)\n 36784: a1 = 0x201a0\n 36789: jump @1175\n      : @1185 (gas: 2)\n 36792: a1 = 0x201a0\n 36797: jump @1175\n      : @1186 (gas: 2)\n 36800: a1 = 0x201a0\n 36805: jump @1175\n      : @1187 (gas: 2)\n 36808: a1 = 0x201a0\n 36813: jump @1175\n      : @1188 (gas: 2)\n 36816: a1 = 0x201a0\n 36821: jump @1175\n      : @1189 (gas: 2)\n 36824: a1 = 0x201a0\n 36829: jump @1175\n      : @1190 (gas: 2)\n 36832: a1 = 0x201a0\n 36837: jump @1175\n      : @1191 (gas: 2)\n 36840: a1 = 0x201a0\n 36845: jump @1175\n      : @1192 (gas: 2)\n 36848: a1 = 0x201a0\n 36853: jump @1175\n      : @1193 (gas: 2)\n 36856: a1 = 0x201a0\n 36861: jump @1175\n      : @1194 (gas: 2)\n 36864: a1 = 0x201a0\n 36869: jump @1175\n      : @1195 (gas: 2)\n 36872: a1 = 0x201a0\n 36877: jump @1175\n      : @1196 (gas: 12)\n 36880: a0 = s1 + 0x3138\n 36884: u64 [a0 + 1952] = 0\n 36888: u64 [a0 + 1944] = 0\n 36892: u64 [a0 + 1936] = 0\n 36896: u64 [a0 + 1928] = 0\n 36900: a0 = s1 + 0x760\n 36904: a1 = s1 + 0x38c0\n 36908: u64 [s1 + 0x180] = a2\n 36912: u64 [s1 + 0x178] = a3\n 36916: u64 [s1 + 0x170] = a4\n 36920: u64 [s1 + 0x168] = a5\n 36924: ra = 1284, jump @6\n      : @1197 [@dyn 642] (gas: 67)\n 36931: a0 = u64 [s1 + 0x760]\n 36935: u64 [s1 + 0x1b8] = a0\n 36939: a0 = u64 [s1 + 0x770]\n 36943: u64 [s1 + 0x1b0] = a0\n 36947: a0 = u64 [s1 + 0x768]\n 36951: u64 [s1 + 0x1a8] = a0\n 36955: ecalli 9 // 'ref_time_left'\n 36957: a1 = u64 [s1 + 0x1a8]\n 36961: a1 = reverse a1\n 36963: a2 = u64 [s1 + 0x1b0]\n 36967: a2 = reverse a2\n 36969: a2 = a2 >> 0x20\n 36972: a3 = a1 << 0x20\n 36975: a2 = a2 | a3\n 36978: a1 = a1 >> 0x20\n 36981: a3 = u64 [s1 + 0x1b8]\n 36985: a3 = reverse a3\n 36987: a4 = a3 << 0x20\n 36990: a1 = a1 | a4\n 36993: a3 = a3 >> 0x20\n 36996: a4 = u64 [s1 + 0x160]\n 37000: u32 [a4 + 0x10] = a3\n 37003: u64 [a4 + 0x8] = a1\n 37006: u64 [a4] = a2\n 37008: a1 = s1 + 0x3138\n 37012: a2 = u64 [s1 + 0x168]\n 37016: a3 = a1 + 0x700\n 37020: u64 [a3 + 0xc0] = a2\n 37024: a2 = u64 [s1 + 0x170]\n 37028: u64 [a3 + 0xb8] = a2\n 37032: a2 = u64 [s1 + 0x178]\n 37036: u64 [a3 + 0xb0] = a2\n 37040: a2 = u64 [s1 + 0x180]\n 37044: u64 [a3 + 0xa8] = a2\n 37048: u32 [a1 + 1992] = 0\n 37052: a0 = a0 >u 0x8fc\n 37056: a1 = -a0\n 37058: a2 = s1 + 0x3938\n 37062: u64 [a2] = a1\n 37064: a3 = a2 + 0xffffffffffffff00\n 37068: u64 [a3 + 0xf8] = a1\n 37072: u64 [a3 + 0xf0] = a1\n 37076: u64 [a3 + 0xe8] = a1\n 37080: a1 = a4 << 0x20\n 37083: a1 = a1 >> 0x20\n 37086: a0 = a0 << 0x23\n 37089: a0 = a0 | a1\n 37092: a1 = s1 + 0x38e0\n 37096: a1 = a1 << 0x20\n 37099: a1 = a1 >> 0x20\n 37102: a4 = 0x201a0\n 37107: u64 [s1 + 0x1b8] = a4\n 37111: a2 = s1 + 0x3920\n 37115: a2 = a2 << 0x20\n 37118: a3 = a2 | a1\n 37121: a4 = a4 << 0x20\n 37124: a4 = a4 >> 0x20\n 37127: a1 = s1 + 0x3900\n 37131: a1 = a1 << 0x20\n 37134: a5 = a1 | a4\n 37137: a1 = 0xffffffffffffffff\n 37140: a2 = 0xffffffffffffffff\n 37143: ecalli 0 // 'call'\n 37144: a0 = a0 <u 0x1\n 37147: u64 [s1 + 0x1b0] = a0\n 37151: a0 = s1 + 0x740\n 37155: ra = 1286, jump @1388\n      : @1198 [@dyn 643] (gas: 9)\n 37161: u64 [s1 + 1848] = 0\n 37165: u64 [s1 + 1840] = 0\n 37169: a0 = u64 [s1 + 0x1b0]\n 37173: u64 [s1 + 0x720] = a0\n 37177: a0 = s1 + 0x720\n 37181: u64 [s1 + 1832] = 0\n 37185: ra = 0x508\n 37189: t0 = 0x5f2\n 37193: jump @1586\n      : @1199 [@dyn 644] (gas: 3)\n 37196: a1 = i32 [s1 + 0x1b8]\n 37200: a0 = 0\n 37202: jump @1176\n      : @1200 (gas: 6)\n 37205: a0 = s1 + 0x7ff\n 37209: a0 = a0 + 0x131\n 37213: u64 [a0 + 640] = 0\n 37217: u64 [a0 + 632] = 0\n 37221: u64 [a0 + 624] = 0\n 37225: t0 = 1290, jump @1622\n      : @1201 [@dyn 645] (gas: 4)\n 37231: a1 = a1 + 0x3a1\n 37235: u64 [a2 + 0x288] = a0\n 37239: a0 = 0\n 37241: ra = 1292, jump @4\n      : @1202 [@dyn 646] (gas: 11)\n 37248: a1 = s1 + 0x7ff\n 37252: a1 = a1 + 0x131\n 37256: u64 [a1 + 616] = 0\n 37260: u64 [a1 + 608] = 0\n 37264: u64 [a1 + 592] = 0x11\n 37269: a2 = a1\n 37271: a0 = 0x4\n 37274: a1 = s1 + 0x7ff\n 37278: a1 = a1 + 0x381\n 37282: u64 [a2 + 600] = 0\n 37286: ra = 1294, jump @4\n      : @1203 [@dyn 647] (gas: 2)\n 37293: a1 = i32 [0x20194]\n 37298: jump @1205 if a1 >u 63\n      : @1204 (gas: 3)\n 37302: u32 [0x20194] = 0x40\n 37308: a1 = 0x201a0\n 37313: jump @1212\n      : @1205 (gas: 2)\n 37315: a1 = 0x201a0\n 37320: jump @1212\n      : @1206 (gas: 6)\n 37322: a0 = s1 + 0x7ff\n 37326: a0 = a0 + 0x131\n 37330: u64 [a0 + 704] = 0\n 37334: u64 [a0 + 696] = 0\n 37338: u64 [a0 + 688] = 0\n 37342: t0 = 1296, jump @1622\n      : @1207 [@dyn 648] (gas: 4)\n 37348: a1 = a1 + 0x3e1\n 37352: u64 [a2 + 0x2c8] = a0\n 37356: a0 = 0\n 37358: ra = 1298, jump @4\n      : @1208 [@dyn 649] (gas: 11)\n 37365: a1 = s1 + 0x7ff\n 37369: a1 = a1 + 0x131\n 37373: u64 [a1 + 680] = 0\n 37377: u64 [a1 + 672] = 0\n 37381: u64 [a1 + 656] = 0x11\n 37386: a2 = a1\n 37388: a0 = 0x4\n 37391: a1 = s1 + 0x7ff\n 37395: a1 = a1 + 0x3c1\n 37399: u64 [a2 + 664] = 0\n 37403: ra = 1300, jump @4\n      : @1209 [@dyn 650] (gas: 2)\n 37410: a1 = i32 [0x20194]\n 37415: jump @1211 if a1 >u 63\n      : @1210 (gas: 3)\n 37419: u32 [0x20194] = 0x40\n 37425: a1 = 0x201a0\n 37430: jump @1212\n      : @1211 (gas: 2)\n 37432: a1 = 0x201a0\n 37437: fallthrough\n      : @1212 (gas: 5)\n 37438: i32 a1 = a1 + 0\n 37440: a0 = 0x1\n 37443: a2 = 0x24\n 37446: ecalli 12 // 'seal_return'\n 37448: fallthrough\n      : @1213 (gas: 8)\n 37449: u64 [a2 + 56] = 0\n 37452: u64 [a2 + 48] = 0\n 37455: u64 [a2 + 40] = 0\n 37458: a0 = 0x4e487b7100000000\n 37468: a1 = s1 + 0x1160\n 37472: u64 [a2 + 0x40] = a0\n 37475: a0 = 0\n 37477: ra = 1302, jump @4\n      : @1214 [@dyn 651] (gas: 3)\n 37484: t0 = 0x518\n 37488: a1 = s1 + 0x1138\n 37492: fallthrough\n      : @1215 [@dyn 652] (gas: 8)\n 37493: u64 [a1 + 32] = 0\n 37496: u64 [a1 + 24] = 0\n 37499: u64 [a1 + 8] = 0x21\n 37503: a2 = a1\n 37505: a0 = 0x4\n 37508: a1 = s1 + 0x1140\n 37512: u64 [a2 + 16] = 0\n 37515: ra = 1306, jump @4\n      : @1216 [@dyn 653] (gas: 3)\n 37522: a0 = u64 [s1 + 0x190]\n 37526: a0 = i32 [a0]\n 37528: jump @1218 if a0 >u 63\n      : @1217 (gas: 3)\n 37532: a1 = u64 [s1 + 0x190]\n 37536: u32 [a1 + 0] = 0x40\n 37539: fallthrough\n      : @1218 (gas: 5)\n 37540: a0 = 0x1\n 37543: a2 = 0x24\n 37546: a1 = u64 [s1 + 0x188]\n 37550: ecalli 12 // 'seal_return'\n 37552: fallthrough\n      : @1219 (gas: 8)\n 37553: u64 [a2 + 856] = 0\n 37557: u64 [a2 + 848] = 0\n 37561: u64 [a2 + 840] = 0\n 37565: a0 = 0x4e487b7100000000\n 37575: a1 = s1 + 0x1c80\n 37579: u64 [a2 + 0x360] = a0\n 37583: a0 = 0\n 37585: ra = 1308, jump @4\n      : @1220 [@dyn 654] (gas: 3)\n 37592: t0 = 0x51e\n 37596: a1 = s1 + 0x1938\n 37600: fallthrough\n      : @1221 [@dyn 655] (gas: 9)\n 37601: u64 [a1 + 832] = 0\n 37605: u64 [a1 + 824] = 0\n 37609: u64 [a1 + 808] = 0x21\n 37614: a2 = a1\n 37616: a0 = 0x4\n 37619: a1 = s1 + 0x1c60\n 37623: u64 [a2 + 816] = 0\n 37627: ra = 0x52e\n 37631: jump @4\n      : @1222 (gas: 10)\n 37635: a0 = s1 + 0x2138\n 37639: u64 [a0 + 1784] = 0\n 37643: u64 [a0 + 1776] = 0\n 37647: u64 [a0 + 1768] = 0\n 37651: a2 = a0\n 37653: a0 = 0x4e487b7100000000\n 37663: a1 = s1 + 0x2820\n 37667: u64 [a2 + 0x700] = a0\n 37671: a0 = 0\n 37673: ra = 1312, jump @4\n      : @1223 [@dyn 656] (gas: 10)\n 37680: a1 = s1 + 0x2138\n 37684: u64 [a1 + 1760] = 0\n 37688: u64 [a1 + 1752] = 0\n 37692: u64 [a1 + 1736] = 0x21\n 37697: a2 = a1\n 37699: a0 = 0x4\n 37702: a1 = s1 + 0x2800\n 37706: u64 [a2 + 1744] = 0\n 37710: ra = 0x536\n 37714: jump @4\n      : @1224 (gas: 6)\n 37718: a0 = s1 + 0x7ff\n 37722: a0 = a0 + 0x131\n 37726: u64 [a0 + 768] = 0\n 37730: u64 [a0 + 760] = 0\n 37734: u64 [a0 + 752] = 0\n 37738: t0 = 1314, jump @1622\n      : @1225 [@dyn 657] (gas: 4)\n 37744: a1 = a1 + 0x421\n 37748: u64 [a2 + 0x308] = a0\n 37752: a0 = 0\n 37754: ra = 1316, jump @4\n      : @1226 [@dyn 658] (gas: 11)\n 37761: a1 = s1 + 0x7ff\n 37765: a1 = a1 + 0x131\n 37769: u64 [a1 + 744] = 0\n 37773: u64 [a1 + 736] = 0\n 37777: u64 [a1 + 720] = 0x21\n 37782: a2 = a1\n 37784: a0 = 0x4\n 37787: a1 = s1 + 0x7ff\n 37791: a1 = a1 + 0x401\n 37795: u64 [a2 + 728] = 0\n 37799: ra = 1318, jump @4\n      : @1227 [@dyn 659] (gas: 3)\n 37806: a0 = u64 [s1 + 0xf8]\n 37810: a0 = i32 [a0]\n 37812: jump @1229 if a0 >u 63\n      : @1228 (gas: 3)\n 37816: a1 = u64 [s1 + 0xf8]\n 37820: u32 [a1 + 0] = 0x40\n 37823: fallthrough\n      : @1229 (gas: 5)\n 37824: a0 = 0x1\n 37827: a2 = 0x24\n 37830: a1 = u64 [s1 + 0xf0]\n 37834: ecalli 12 // 'seal_return'\n 37836: fallthrough\n      : @1230 (gas: 10)\n 37837: a0 = s1 + 0x1938\n 37841: u64 [a0 + 248] = 0\n 37845: u64 [a0 + 240] = 0\n 37849: u64 [a0 + 232] = 0\n 37853: a2 = a0\n 37855: a0 = 0x4e487b7100000000\n 37865: a1 = s1 + 0x1a20\n 37869: u64 [a2 + 0x100] = a0\n 37873: a0 = 0\n 37875: ra = 1320, jump @4\n      : @1231 [@dyn 660] (gas: 10)\n 37882: a1 = s1 + 0x1938\n 37886: u64 [a1 + 224] = 0\n 37890: u64 [a1 + 216] = 0\n 37894: u64 [a1 + 200] = 0x21\n 37899: a2 = a1\n 37901: a0 = 0x4\n 37904: a1 = s1 + 0x1a00\n 37908: u64 [a2 + 208] = 0\n 37912: ra = 0x52e\n 37916: jump @4\n      : @1232 (gas: 10)\n 37920: a0 = s1 + 0x1138\n 37924: u64 [a0 + 1368] = 0\n 37928: u64 [a0 + 1360] = 0\n 37932: u64 [a0 + 1352] = 0\n 37936: a2 = a0\n 37938: a0 = 0x4e487b7100000000\n 37948: a1 = s1 + 0x1680\n 37952: u64 [a2 + 0x560] = a0\n 37956: a0 = 0\n 37958: ra = 1322, jump @4\n      : @1233 [@dyn 661] (gas: 3)\n 37965: t0 = 0x52c\n 37969: a1 = s1 + 0x1138\n 37973: fallthrough\n      : @1234 [@dyn 662] (gas: 8)\n 37974: u64 [a1 + 1344] = 0\n 37978: u64 [a1 + 1336] = 0\n 37982: u64 [a1 + 1320] = 0x41\n 37987: a2 = a1\n 37989: a0 = 0x4\n 37992: a1 = s1 + 0x1660\n 37996: u64 [a2 + 1328] = 0\n 38000: ra = 1326, jump @4\n      : @1235 [@dyn 663] (gas: 3)\n 38007: a0 = u64 [s1 + 0x190]\n 38011: a0 = i32 [a0]\n 38013: jump @1237 if a0 >u 63\n      : @1236 (gas: 3)\n 38017: a1 = u64 [s1 + 0x190]\n 38021: u32 [a1 + 0] = 0x40\n 38024: fallthrough\n      : @1237 (gas: 7)\n 38025: a0 = 0x1\n 38028: a2 = 0x24\n 38031: a1 = u64 [s1 + 0x198]\n 38035: ecalli 12 // 'seal_return'\n 38037: u64 [s1 + 0x1b8] = a1\n 38041: ra = 0x530\n 38045: jump @16\n      : @1238 (gas: 2)\n 38049: u64 [s1 + 0x1b8] = a1\n 38053: ra = 1328, jump @16\n      : @1239 [@dyn 664] (gas: 5)\n 38060: i32 a1 = a0 + 0\n 38062: a2 = i32 [s1 + 0x1b8]\n 38066: a0 = 0\n 38068: ecalli 12 // 'seal_return'\n 38070: jump @699\n      : @1240 (gas: 10)\n 38073: a0 = s1 + 0x2938\n 38077: u64 [a0 + 984] = 0\n 38081: u64 [a0 + 976] = 0\n 38085: u64 [a0 + 968] = 0\n 38089: a2 = a0\n 38091: a0 = 0x4e487b7100000000\n 38101: a1 = s1 + 0x2d00\n 38105: u64 [a2 + 0x3e0] = a0\n 38109: a0 = 0\n 38111: ra = 1330, jump @4\n      : @1241 [@dyn 665] (gas: 3)\n 38118: t0 = 0x534\n 38122: a1 = s1 + 0x2938\n 38126: fallthrough\n      : @1242 [@dyn 666] (gas: 8)\n 38127: u64 [a1 + 960] = 0\n 38131: u64 [a1 + 952] = 0\n 38135: u64 [a1 + 936] = 0x11\n 38140: a2 = a1\n 38142: a0 = 0x4\n 38145: a1 = s1 + 0x2ce0\n 38149: u64 [a2 + 944] = 0\n 38153: ra = 1334, jump @4\n      : @1243 [@dyn 667] (gas: 3)\n 38160: a0 = u64 [s1 + 0x100]\n 38164: a0 = i32 [a0]\n 38166: jump @1245 if a0 >u 63\n      : @1244 (gas: 3)\n 38170: a1 = u64 [s1 + 0x100]\n 38174: u32 [a1 + 0] = 0x40\n 38177: fallthrough\n      : @1245 (gas: 7)\n 38178: a0 = 0x1\n 38181: a2 = 0x24\n 38184: a1 = u64 [s1 + 0xf8]\n 38188: ra = 0x538\n 38192: ecalli 12 // 'seal_return'\n 38194: t0 = 0x53a\n 38198: jump @1625\n      : @1246 [@dyn 668] (gas: 1)\n 38201: t0 = 1338, jump @1625\n      : @1247 [@dyn 669] (gas: 1)\n 38207: jump @1249 if a1 <u a0\n      : @1248 (gas: 2)\n 38210: a1 = 0x201a0\n 38215: jump @1175\n      : @1249 (gas: 17)\n 38218: a0 = s1 + 0x3000\n 38222: i32 a0 = a0 + 0x680\n 38226: a1 = 0x4\n 38229: ecalli 2 // 'call_data_load'\n 38231: a3 = s1 + 0x3138\n 38235: a4 = a3 + 0x500\n 38239: a0 = u64 [a4 + 0x48]\n 38242: a1 = u64 [a4 + 0x50]\n 38245: a2 = u64 [a4 + 0x58]\n 38248: a3 = u64 [a4 + 0x60]\n 38251: u64 [s1 + 0x478] = a3\n 38255: u64 [s1 + 0x470] = a2\n 38259: u64 [s1 + 0x468] = a1\n 38263: a1 = s1 + 0x460\n 38267: u64 [s1 + 0x460] = a0\n 38271: a0 = 0\n 38273: ra = 1340, jump @4\n      : @1250 [@dyn 670] (gas: 7)\n 38280: u64 [s1 + 1112] = 0\n 38284: u64 [s1 + 1104] = 0\n 38288: u64 [s1 + 1088] = 0x2\n 38293: a0 = 0x20\n 38296: a1 = s1 + 0x440\n 38300: u64 [s1 + 1096] = 0\n 38304: ra = 1342, jump @4\n      : @1251 [@dyn 671] (gas: 9)\n 38311: a0 = sp + 0xffffffffffffffe0\n 38314: a0 = a0 & 0xffffffffffffffe0\n 38317: u64 [s1 + 0x190] = a0\n 38321: sp = a0\n 38323: a0 = 0x20194\n 38328: u64 [s1 + 0x198] = a0\n 38332: a0 = i32 [0x20194]\n 38337: a1 = 0x3f\n 38340: jump @1253 if a1 <u a0\n      : @1252 (gas: 4)\n 38343: a1 = u64 [s1 + 0x198]\n 38347: u32 [a1 + 0] = 0x40\n 38350: t0 = 0x540\n 38354: jump @1603\n      : @1253 (gas: 1)\n 38357: t0 = 1344, jump @1603\n      : @1254 [@dyn 672] (gas: 9)\n 38363: a0 = 0x201a0\n 38368: u64 [s1 + 0x188] = a0\n 38372: i32 a0 = a0 + 0\n 38374: i32 a2 = a2 + 0\n 38376: a1 = 0x40\n 38379: ra = 0x542\n 38383: ecalli 7 // 'hash_keccak_256'\n 38385: t0 = 0x544\n 38389: jump @1573\n      : @1255 [@dyn 673] (gas: 1)\n 38392: t0 = 1348, jump @1573\n      : @1256 [@dyn 674] (gas: 2)\n 38398: a0 = s1 + 0x420\n 38402: ra = 1350, jump @6\n      : @1257 [@dyn 675] (gas: 29)\n 38409: a0 = u64 [s1 + 0x420]\n 38413: u64 [s1 + 0x180] = a0\n 38417: a0 = u64 [s1 + 0x428]\n 38421: u64 [s1 + 0x178] = a0\n 38425: a0 = u64 [s1 + 0x430]\n 38429: u64 [s1 + 0x170] = a0\n 38433: a0 = u64 [s1 + 0x438]\n 38437: u64 [s1 + 0x168] = a0\n 38441: a0 = u64 [s1 + 0x1a8]\n 38445: a0 = a0 + 0x1\n 38448: a1 = a0 <u 0x1\n 38451: a2 = u64 [s1 + 0x1b0]\n 38455: a1 = a1 + a2\n 38458: a2 = s1 + 0x3138\n 38462: a3 = a2 + 0x500\n 38466: u64 [a3 + 0x70] = a1\n 38469: a1 = a1 | a0\n 38472: u64 [a3 + 0x68] = a0\n 38475: a0 = a1 <u 0x1\n 38478: a1 = u64 [s1 + 0x1a0]\n 38482: a0 = a0 + a1\n 38485: u64 [a3 + 0x78] = a0\n 38488: a0 = a0 <u a1\n 38491: a1 = u64 [s1 + 0x1b8]\n 38495: a0 = a0 + a1\n 38498: u64 [a3 + 0x80] = a0\n 38502: a0 = s1 + 0x400\n 38506: a1 = s1 + 0x36a0\n 38510: ra = 1352, jump @6\n      : @1258 [@dyn 676] (gas: 12)\n 38517: a1 = s1 + 0x400\n 38521: a0 = u64 [a1]\n 38523: u64 [s1 + 0x160] = a0\n 38527: a0 = u64 [a1 + 0x8]\n 38530: u64 [s1 + 0x158] = a0\n 38534: a0 = u64 [a1 + 0x10]\n 38537: u64 [s1 + 0x150] = a0\n 38541: a0 = u64 [a1 + 0x18]\n 38544: u64 [s1 + 0x148] = a0\n 38548: a1 = u64 [s1 + 0x1a8]\n 38552: a0 = a1 + 0x2\n 38555: t0 = 1354, jump @1564\n      : @1259 [@dyn 677] (gas: 7)\n 38561: u64 [a5 + 0xa0] = a1\n 38565: u64 [a5 + 0x98] = a3\n 38569: u64 [a5 + 0x90] = a2\n 38573: u64 [a5 + 0x88] = a0\n 38577: a0 = s1 + 0x3e0\n 38581: a1 = s1 + 0x36c0\n 38585: ra = 1356, jump @6\n      : @1260 [@dyn 678] (gas: 11)\n 38592: a0 = u64 [s1 + 0x3e0]\n 38596: u64 [s1 + 0x140] = a0\n 38600: a0 = u64 [s1 + 0x3e8]\n 38604: u64 [s1 + 0x138] = a0\n 38608: a0 = u64 [s1 + 0x3f0]\n 38612: u64 [s1 + 0x130] = a0\n 38616: a0 = u64 [s1 + 0x3f8]\n 38620: u64 [s1 + 0x128] = a0\n 38624: a1 = u64 [s1 + 0x1a8]\n 38628: a0 = a1 + 0x3\n 38631: t0 = 1358, jump @1564\n      : @1261 [@dyn 679] (gas: 7)\n 38637: u64 [a5 + 0xc0] = a1\n 38641: u64 [a5 + 0xb8] = a3\n 38645: u64 [a5 + 0xb0] = a2\n 38649: u64 [a5 + 0xa8] = a0\n 38653: a0 = s1 + 0x3c0\n 38657: a1 = s1 + 0x36e0\n 38661: ra = 1360, jump @6\n      : @1262 [@dyn 680] (gas: 11)\n 38668: a0 = u64 [s1 + 0x3c0]\n 38672: u64 [s1 + 0x120] = a0\n 38676: a0 = u64 [s1 + 0x3c8]\n 38680: u64 [s1 + 0x118] = a0\n 38684: a0 = u64 [s1 + 0x3d0]\n 38688: u64 [s1 + 0x110] = a0\n 38692: a0 = u64 [s1 + 0x3d8]\n 38696: u64 [s1 + 0x108] = a0\n 38700: a1 = u64 [s1 + 0x1a8]\n 38704: a0 = a1 + 0x4\n 38707: t0 = 1362, jump @1564\n      : @1263 [@dyn 681] (gas: 7)\n 38713: u64 [a5 + 0xe0] = a1\n 38717: u64 [a5 + 0xd8] = a3\n 38721: u64 [a5 + 0xd0] = a2\n 38725: u64 [a5 + 0xc8] = a0\n 38729: a0 = s1 + 0x3a0\n 38733: a1 = s1 + 0x3700\n 38737: ra = 1364, jump @6\n      : @1264 [@dyn 682] (gas: 29)\n 38744: a0 = u64 [s1 + 0x3a0]\n 38748: u64 [s1 + 0x100] = a0\n 38752: a0 = u64 [s1 + 0x3a8]\n 38756: u64 [s1 + 0xf8] = a0\n 38760: a0 = u64 [s1 + 0x3b0]\n 38764: u64 [s1 + 0xf0] = a0\n 38768: a0 = u64 [s1 + 0x3b8]\n 38772: u64 [s1 + 0xe8] = a0\n 38776: a1 = u64 [s1 + 0x1a8]\n 38780: a0 = a1 + 0x5\n 38783: a1 = a0 <u a1\n 38786: a3 = u64 [s1 + 0x1b0]\n 38790: a2 = a3 + a1\n 38793: a3 = a2 <u a3\n 38796: a3 = a1 if a1 == 0\n 38799: a1 = u64 [s1 + 0x1a0]\n 38803: a3 = a3 + a1\n 38806: a1 = a3 <u a1\n 38809: a4 = u64 [s1 + 0x1b8]\n 38813: a1 = a1 + a4\n 38816: a4 = s1 + 0x3138\n 38820: u64 [a4 + 0x600] = a1\n 38824: a1 = a4 + 0x500\n 38828: u64 [a1 + 0xf8] = a3\n 38832: u64 [a1 + 0xf0] = a2\n 38836: u64 [a1 + 0xe8] = a0\n 38840: a0 = s1 + 0x380\n 38844: a1 = s1 + 0x3720\n 38848: ra = 1366, jump @6\n      : @1265 [@dyn 683] (gas: 11)\n 38855: a0 = u64 [s1 + 0x380]\n 38859: u64 [s1 + 0xe0] = a0\n 38863: a0 = u64 [s1 + 0x388]\n 38867: u64 [s1 + 0xd0] = a0\n 38871: a0 = u64 [s1 + 0x390]\n 38875: u64 [s1 + 0xc0] = a0\n 38879: a0 = u64 [s1 + 0x398]\n 38883: u64 [s1 + 0xb0] = a0\n 38887: a1 = u64 [s1 + 0x1a8]\n 38891: a0 = a1 + 0x6\n 38894: t0 = 1368, jump @1585\n      : @1266 [@dyn 684] (gas: 7)\n 38900: u64 [a5 + 0x20] = a1\n 38903: u64 [a5 + 0x18] = a3\n 38906: u64 [a5 + 0x10] = a2\n 38909: u64 [a5 + 0x8] = a0\n 38912: a0 = s1 + 0x360\n 38916: a1 = s1 + 0x3740\n 38920: ra = 1370, jump @6\n      : @1267 [@dyn 685] (gas: 9)\n 38927: a0 = u64 [s1 + 0x360]\n 38931: u64 [s1 + 0xb8] = a0\n 38935: a0 = u64 [s1 + 0x368]\n 38939: u64 [s1 + 0xa8] = a0\n 38943: a0 = u64 [s1 + 0x370]\n 38947: u64 [s1 + 0x190] = a0\n 38951: a1 = u64 [s1 + 0x1a8]\n 38955: a0 = a1 + 0x7\n 38958: t0 = 1372, jump @1585\n      : @1268 [@dyn 686] (gas: 7)\n 38964: u64 [a5 + 0x40] = a1\n 38967: u64 [a5 + 0x38] = a3\n 38970: u64 [a5 + 0x30] = a2\n 38973: u64 [a5 + 0x28] = a0\n 38976: a0 = s1 + 0x340\n 38980: a1 = s1 + 0x3760\n 38984: ra = 1374, jump @6\n      : @1269 [@dyn 687] (gas: 9)\n 38991: a0 = u64 [s1 + 0x340]\n 38995: u64 [s1 + 0xd8] = a0\n 38999: a0 = u64 [s1 + 0x348]\n 39003: u64 [s1 + 0xc8] = a0\n 39007: a1 = u64 [s1 + 0x1a8]\n 39011: a0 = a1 + 0x8\n 39014: a1 = a0 <u a1\n 39017: a3 = u64 [s1 + 0x1b0]\n 39021: t0 = 1376, jump @1623\n      : @1270 [@dyn 688] (gas: 3)\n 39027: a1 = u64 [s1 + 0x350]\n 39031: u64 [s1 + 0x1b0] = a1\n 39035: t0 = 1378, jump @1621\n      : @1271 [@dyn 689] (gas: 11)\n 39041: a4 = u64 [s1 + 0x358]\n 39045: u64 [s1 + 0x1b8] = a4\n 39049: a4 = s1 + 0x3138\n 39053: a5 = a4 + 0x600\n 39057: u64 [a5 + 0x60] = a1\n 39060: u64 [a5 + 0x58] = a3\n 39063: u64 [a5 + 0x50] = a2\n 39066: u64 [a5 + 0x48] = a0\n 39069: a0 = s1 + 0x320\n 39073: a1 = s1 + 0x3780\n 39077: ra = 1380, jump @6\n      : @1272 [@dyn 690] (gas: 14)\n 39084: a0 = u8 [s1 + 0x320]\n 39088: u64 [s1 + 0x1a8] = a0\n 39092: a0 = u64 [s1 + 0x168]\n 39096: a3 = s1 + 0x300\n 39100: u64 [a3 + 0x18] = a0\n 39103: a0 = u64 [s1 + 0x170]\n 39107: u64 [a3 + 0x10] = a0\n 39110: a0 = u64 [s1 + 0x178]\n 39114: u64 [a3 + 0x8] = a0\n 39117: a0 = 0x80\n 39121: a1 = s1 + 0x300\n 39125: a2 = u64 [s1 + 0x180]\n 39129: u64 [a3] = a2\n 39131: ra = 1382, jump @4\n      : @1273 [@dyn 691] (gas: 11)\n 39138: a0 = u64 [s1 + 0x148]\n 39142: u64 [s1 + 0x2f8] = a0\n 39146: a0 = u64 [s1 + 0x150]\n 39150: u64 [s1 + 0x2f0] = a0\n 39154: a0 = u64 [s1 + 0x158]\n 39158: u64 [s1 + 0x2e8] = a0\n 39162: a0 = 0xa0\n 39166: a1 = s1 + 0x2e0\n 39170: a2 = u64 [s1 + 0x160]\n 39174: u64 [s1 + 0x2e0] = a2\n 39178: ra = 1384, jump @4\n      : @1274 [@dyn 692] (gas: 11)\n 39185: a0 = u64 [s1 + 0x128]\n 39189: u64 [s1 + 0x2d8] = a0\n 39193: a0 = u64 [s1 + 0x130]\n 39197: u64 [s1 + 0x2d0] = a0\n 39201: a0 = u64 [s1 + 0x138]\n 39205: u64 [s1 + 0x2c8] = a0\n 39209: a0 = 0xc0\n 39213: a1 = s1 + 0x2c0\n 39217: a2 = u64 [s1 + 0x140]\n 39221: u64 [s1 + 0x2c0] = a2\n 39225: ra = 1386, jump @4\n      : @1275 [@dyn 693] (gas: 11)\n 39232: a0 = u64 [s1 + 0x108]\n 39236: u64 [s1 + 0x2b8] = a0\n 39240: a0 = u64 [s1 + 0x110]\n 39244: u64 [s1 + 0x2b0] = a0\n 39248: a0 = u64 [s1 + 0x118]\n 39252: u64 [s1 + 0x2a8] = a0\n 39256: a0 = 0xe0\n 39260: a1 = s1 + 0x2a0\n 39264: a2 = u64 [s1 + 0x120]\n 39268: u64 [s1 + 0x2a0] = a2\n 39272: ra = 1388, jump @4\n      : @1276 [@dyn 694] (gas: 11)\n 39279: a0 = u64 [s1 + 0xe8]\n 39283: u64 [s1 + 0x298] = a0\n 39287: a0 = u64 [s1 + 0xf0]\n 39291: u64 [s1 + 0x290] = a0\n 39295: a0 = u64 [s1 + 0xf8]\n 39299: u64 [s1 + 0x288] = a0\n 39303: a0 = 0x100\n 39307: a1 = s1 + 0x280\n 39311: a2 = u64 [s1 + 0x100]\n 39315: u64 [s1 + 0x280] = a2\n 39319: ra = 1390, jump @4\n      : @1277 [@dyn 695] (gas: 11)\n 39326: a0 = u64 [s1 + 0xb0]\n 39330: u64 [s1 + 0x278] = a0\n 39334: a0 = u64 [s1 + 0xc0]\n 39338: u64 [s1 + 0x270] = a0\n 39342: a0 = u64 [s1 + 0xd0]\n 39346: u64 [s1 + 0x268] = a0\n 39350: a0 = 0x120\n 39354: a1 = s1 + 0x260\n 39358: a2 = u64 [s1 + 0xe0]\n 39362: u64 [s1 + 0x260] = a2\n 39366: ra = 1392, jump @4\n      : @1278 [@dyn 696] (gas: 12)\n 39373: a0 = u64 [s1 + 0x190]\n 39377: a0 = a0 << 0x20\n 39380: a0 = a0 >> 0x20\n 39383: u64 [s1 + 600] = 0\n 39387: u64 [s1 + 0x250] = a0\n 39391: a0 = u64 [s1 + 0xa8]\n 39395: u64 [s1 + 0x248] = a0\n 39399: a0 = 0x140\n 39403: a1 = s1 + 0x240\n 39407: a2 = u64 [s1 + 0xb8]\n 39411: u64 [s1 + 0x240] = a2\n 39415: ra = 1394, jump @4\n      : @1279 [@dyn 697] (gas: 14)\n 39422: a0 = u64 [s1 + 0x190]\n 39426: a0 = a0 << 0x18\n 39429: a0 = a0 >> 0x38\n 39432: u64 [s1 + 536] = 0\n 39436: u64 [s1 + 528] = 0\n 39440: u64 [s1 + 520] = 0\n 39444: u64 [s1 + 512] = 0x160\n 39450: u64 [s1 + 568] = 0\n 39454: u64 [s1 + 560] = 0\n 39458: u64 [s1 + 0x220] = a0\n 39462: a0 = s1 + 0x220\n 39466: a1 = s1 + 0x200\n 39470: u64 [s1 + 552] = 0\n 39474: ra = 1396, jump @1285\n      : @1280 [@dyn 698] (gas: 11)\n 39480: a0 = u64 [s1 + 0x1b8]\n 39484: u64 [s1 + 0x1f8] = a0\n 39488: a0 = u64 [s1 + 0x1b0]\n 39492: u64 [s1 + 0x1f0] = a0\n 39496: a0 = u64 [s1 + 0xc8]\n 39500: u64 [s1 + 0x1e8] = a0\n 39504: a0 = 0x180\n 39508: a1 = s1 + 0x1e0\n 39512: a2 = u64 [s1 + 0xd8]\n 39516: u64 [s1 + 0x1e0] = a2\n 39520: ra = 1398, jump @4\n      : @1281 [@dyn 699] (gas: 9)\n 39527: a0 = u64 [s1 + 0x1a8]\n 39531: a0 = a0 >u 0\n 39533: u64 [s1 + 472] = 0\n 39537: u64 [s1 + 464] = 0\n 39541: u64 [s1 + 0x1c0] = a0\n 39545: a0 = 0x1a0\n 39549: a1 = s1 + 0x1c0\n 39553: u64 [s1 + 456] = 0\n 39557: ra = 1400, jump @4\n      : @1282 [@dyn 700] (gas: 3)\n 39564: a0 = u64 [s1 + 0x198]\n 39568: a0 = i32 [a0]\n 39570: jump @1284 if a0 >u 447\n      : @1283 (gas: 3)\n 39575: a1 = u64 [s1 + 0x198]\n 39579: u32 [a1 + 0] = 0x1c0\n 39583: fallthrough\n      : @1284 (gas: 6)\n 39584: a0 = u64 [s1 + 0x188]\n 39588: i32 a1 = a0 + 0x80\n 39592: a2 = 0x140\n 39596: a0 = 0\n 39598: ecalli 12 // 'seal_return'\n 39600: jump @699\n      : @1285 (gas: 19)\n 39603: sp = sp + 0xffffffffffffff90\n 39606: u64 [sp + 0x68] = ra\n 39609: u64 [sp + 0x60] = s0\n 39612: s0 = sp + 0x70\n 39615: sp = sp & 0xfffffffffffffff0\n 39618: a2 = u64 [a0 + 0x18]\n 39621: t1 = u64 [a0 + 0x10]\n 39624: t0 = u64 [a0]\n 39626: a5 = u64 [a0 + 0x8]\n 39629: a0 = a2 >u 0\n 39631: a4 = t1 >u 0\n 39633: a4 = a0 if a2 != 0\n 39636: a0 = a5 >u 0\n 39638: a3 = t0 <u 0x4\n 39641: a3 = a3 ^ 0x1\n 39644: a3 = a0 if a5 != 0\n 39647: a0 = t1 | a2\n 39650: a3 = a4 if a0 != 0\n 39653: jump @1290 if a3 != 0\n      : @1286 (gas: 12)\n 39656: t2 = u64 [a1 + 0x18]\n 39659: a4 = u64 [a1 + 0x10]\n 39662: a0 = u64 [a1]\n 39664: a1 = u64 [a1 + 0x8]\n 39667: a3 = a0 | a4\n 39670: a1 = a1 | t2\n 39673: a3 = a3 | a1\n 39676: a3 = a3 >> 0x20\n 39679: a1 = a1 | a4\n 39682: a1 = a1 << 0x20\n 39685: a1 = a1 | a3\n 39688: jump @1289 if a1 != 0\n      : @1287 (gas: 6)\n 39691: u64 [sp + 0x40] = t0\n 39694: u64 [sp + 0x48] = a5\n 39697: u64 [sp + 0x50] = t1\n 39700: a1 = sp + 0x40\n 39703: u64 [sp + 0x58] = a2\n 39706: ra = 1402, jump @4\n      : @1288 [@dyn 701] (gas: 5)\n 39713: sp = s0 + 0xffffffffffffff90\n 39716: ra = u64 [sp + 0x68]\n 39719: s0 = u64 [sp + 0x60]\n 39722: sp = sp + 0x70\n 39725: ret\n      : @1289 (gas: 1)\n 39727: trap\n      : @1290 (gas: 1)\n 39728: t0 = 1404, jump @1580\n      : @1291 [@dyn 702] (gas: 1)\n 39734: ra = 1406, jump @4\n      : @1292 [@dyn 703] (gas: 7)\n 39741: u64 [sp + 24] = 0\n 39744: u64 [sp + 16] = 0\n 39747: u64 [sp + 0] = 0x21\n 39750: a0 = 0x4\n 39753: a1 = sp\n 39755: u64 [sp + 8] = 0\n 39758: ra = 1408, jump @4\n      : @1293 [@dyn 704] (gas: 2)\n 39765: a1 = i32 [0x20194]\n 39770: jump @1295 if a1 >u 63\n      : @1294 (gas: 2)\n 39774: u32 [0x20194] = 0x40\n 39780: fallthrough\n      : @1295 (gas: 7)\n 39781: a1 = 0x201a0\n 39786: i32 a1 = a1 + 0\n 39788: a0 = 0x1\n 39791: a2 = 0x24\n 39794: ra = 0x582\n 39798: ecalli 12 // 'seal_return'\n 39800: fallthrough\n      : @1296 [@dyn 705] (gas: 11)\n 39801: sp = sp + 0xffffffffffffffc0\n 39804: u64 [sp + 0x38] = ra\n 39807: u64 [sp + 0x30] = s0\n 39810: u64 [sp + 0x28] = s1\n 39813: s0 = sp + 0x40\n 39816: sp = sp & 0xffffffffffffffe0\n 39819: s1 = a0\n 39821: i32 a0 = sp + 0\n 39823: a1 = 0x24\n 39826: ecalli 2 // 'call_data_load'\n 39828: fallthrough\n      : @1297 (gas: 10)\n 39829: a0 = u64 [sp + 0x10]\n 39832: a1 = u64 [sp + 0x18]\n 39835: a2 = 0x100000000\n 39845: a2 = a2 ^ a0\n 39848: a2 = a2 | a1\n 39851: a3 = a0 >> 0x20\n 39854: a3 = a3 <u 0x1\n 39857: a3 = 0 if a1 != 0\n 39859: a3 = 0 if a2 == 0\n 39861: jump @1299 if a3 == 0\n      : @1298 (gas: 12)\n 39864: a2 = u64 [sp]\n 39866: a3 = u64 [sp + 0x8]\n 39869: u64 [s1] = a2\n 39871: u64 [s1 + 0x8] = a3\n 39874: u64 [s1 + 0x10] = a0\n 39877: u64 [s1 + 0x18] = a1\n 39880: sp = s0 + 0xffffffffffffffc0\n 39883: ra = u64 [sp + 0x38]\n 39886: s0 = u64 [sp + 0x30]\n 39889: s1 = u64 [sp + 0x28]\n 39892: sp = sp + 0x40\n 39895: ret\n      : @1299 (gas: 7)\n 39897: a1 = 0x201a0\n 39902: i32 a1 = a1 + 0\n 39904: a0 = 0x1\n 39907: a2 = 0\n 39909: ra = 0x584\n 39913: ecalli 12 // 'seal_return'\n 39915: fallthrough\n      : @1300 [@dyn 706] (gas: 23)\n 39916: sp = sp + 0xffffffffffffff10\n 39920: u64 [sp + 0xe8] = ra\n 39924: u64 [sp + 0xe0] = s0\n 39928: u64 [sp + 0xd8] = s1\n 39932: s0 = sp + 0xf0\n 39936: sp = sp & 0xfffffffffffffff0\n 39939: s1 = u64 [a1 + 0x10]\n 39942: t0 = u64 [a1 + 0x18]\n 39945: a5 = u64 [a1 + 0x8]\n 39948: a1 = u64 [a1]\n 39950: u64 [sp + 0x68] = a5\n 39953: u64 [sp + 0x58] = t0\n 39956: t1 = a5 | t0\n 39959: t0 = a1\n 39961: a5 = a1 | s1\n 39964: a5 = a5 | t1\n 39967: a5 = a5 >> 0x20\n 39970: u64 [sp + 0x60] = s1\n 39973: a1 = t1 | s1\n 39976: a1 = a1 << 0x20\n 39979: a1 = a1 | a5\n 39982: u64 [sp + 0x50] = a0\n 39985: jump @1307 if a1 != 0\n      : @1301 (gas: 28)\n 39989: a0 = u64 [a4 + 0x18]\n 39992: u64 [sp + 0x18] = a0\n 39995: a0 = u64 [a4 + 0x10]\n 39998: u64 [sp + 0x10] = a0\n 40001: a0 = u64 [a4 + 0x8]\n 40004: u64 [sp + 0x8] = a0\n 40007: a0 = u64 [a4]\n 40009: u64 [sp] = a0\n 40011: a0 = u64 [a3 + 0x18]\n 40014: u64 [sp + 0x48] = a0\n 40017: a0 = u64 [a3 + 0x10]\n 40020: u64 [sp + 0x40] = a0\n 40023: a0 = u64 [a3 + 0x8]\n 40026: u64 [sp + 0x38] = a0\n 40029: a0 = u64 [a3]\n 40031: u64 [sp + 0x30] = a0\n 40034: a0 = u64 [a2 + 0x18]\n 40037: a1 = u64 [a2 + 0x10]\n 40040: a3 = u64 [a2 + 0x8]\n 40043: a2 = u64 [a2]\n 40045: u64 [sp + 0xb0] = a2\n 40049: u64 [sp + 0xb8] = a3\n 40053: u64 [sp + 0xc0] = a1\n 40057: a1 = sp + 0xb0\n 40061: u64 [sp + 0xc8] = a0\n 40065: s1 = t0\n 40067: a0 = t0\n 40069: ra = 1414, jump @4\n      : @1302 [@dyn 707] (gas: 12)\n 40076: a0 = u64 [sp + 0x60]\n 40079: a1 = u64 [sp + 0x58]\n 40082: a2 = a0 | a1\n 40085: a0 = 0x100000000\n 40095: u64 [sp + 0x20] = a0\n 40098: a0 = 0xffffffe0\n 40108: a0 = s1 <u a0\n 40111: a1 = u64 [sp + 0x68]\n 40114: a0 = 0 if a1 != 0\n 40116: u64 [sp + 0x28] = a2\n 40119: a0 = 0 if a2 != 0\n 40121: jump @1307 if a0 == 0\n      : @1303 (gas: 11)\n 40125: i32 a0 = s1 + 0x20\n 40128: a1 = u64 [sp + 0x30]\n 40131: u64 [sp + 0x90] = a1\n 40135: a1 = u64 [sp + 0x38]\n 40138: u64 [sp + 0x98] = a1\n 40142: a1 = u64 [sp + 0x40]\n 40145: u64 [sp + 0xa0] = a1\n 40149: a1 = sp + 0x90\n 40153: a2 = u64 [sp + 0x48]\n 40156: u64 [sp + 0xa8] = a2\n 40160: ra = 1416, jump @4\n      : @1304 [@dyn 708] (gas: 8)\n 40167: a0 = u64 [sp + 0x20]\n 40170: a0 = a0 + 0xffffffffffffffc0\n 40173: a0 = s1 <u a0\n 40176: a1 = u64 [sp + 0x68]\n 40179: a0 = 0 if a1 != 0\n 40181: a1 = u64 [sp + 0x28]\n 40184: a0 = 0 if a1 != 0\n 40186: jump @1307 if a0 == 0\n      : @1305 (gas: 26)\n 40190: a0 = s1 + 0x60\n 40193: u64 [sp + 0x48] = a0\n 40196: a0 = a0 <u s1\n 40199: a1 = u64 [sp + 0x68]\n 40202: a2 = a1 + a0\n 40205: u64 [sp + 0x40] = a2\n 40208: a1 = a2 <u a1\n 40211: a1 = a0 if a0 == 0\n 40214: a0 = u64 [sp + 0x60]\n 40217: a1 = a1 + a0\n 40220: u64 [sp + 0x38] = a1\n 40223: a0 = a1 <u a0\n 40226: a1 = u64 [sp + 0x58]\n 40229: a0 = a0 + a1\n 40232: u64 [sp + 0x68] = a0\n 40235: i32 a0 = s1 + 0x40\n 40238: a1 = u64 [sp]\n 40240: u64 [sp + 0x70] = a1\n 40243: a1 = u64 [sp + 0x8]\n 40246: u64 [sp + 0x78] = a1\n 40249: a1 = u64 [sp + 0x10]\n 40252: u64 [sp + 0x80] = a1\n 40256: a1 = sp + 0x70\n 40259: a2 = u64 [sp + 0x18]\n 40262: u64 [sp + 0x88] = a2\n 40266: ra = 1418, jump @4\n      : @1306 [@dyn 709] (gas: 15)\n 40273: a0 = u64 [sp + 0x50]\n 40276: a1 = u64 [sp + 0x38]\n 40279: u64 [a0 + 0x10] = a1\n 40282: a1 = u64 [sp + 0x40]\n 40285: u64 [a0 + 0x8] = a1\n 40288: a1 = u64 [sp + 0x48]\n 40291: u64 [a0] = a1\n 40293: a1 = u64 [sp + 0x68]\n 40296: u64 [a0 + 0x18] = a1\n 40299: sp = s0 + 0xffffffffffffff10\n 40303: ra = u64 [sp + 0xe8]\n 40307: s0 = u64 [sp + 0xe0]\n 40311: s1 = u64 [sp + 0xd8]\n 40315: sp = sp + 0xf0\n 40319: ret\n      : @1307 (gas: 1)\n 40321: trap\n      : @1308 (gas: 31)\n 40322: sp = sp + 0xfffffffffffffee0\n 40326: u64 [sp + 0x118] = ra\n 40330: u64 [sp + 0x110] = s0\n 40334: u64 [sp + 0x108] = s1\n 40338: s0 = sp + 0x120\n 40342: sp = sp & 0xffffffffffffffe0\n 40345: s1 = sp\n 40347: u64 [s1 + 0x38] = a0\n 40350: a0 = u64 [a2]\n 40352: u64 [s1 + 0x48] = a0\n 40355: a0 = u64 [a2 + 0x8]\n 40358: u64 [s1 + 0x40] = a0\n 40361: a0 = u64 [a2 + 0x10]\n 40364: u64 [s1 + 0x50] = a0\n 40367: a0 = u64 [a2 + 0x18]\n 40370: u64 [s1 + 0x58] = a0\n 40373: a0 = u64 [a1 + 0x18]\n 40376: a2 = u64 [a1 + 0x10]\n 40379: a3 = u64 [a1 + 0x8]\n 40382: a1 = u64 [a1]\n 40384: u64 [s1 + 0x30] = a0\n 40387: u64 [s1 + 0xf8] = a0\n 40391: u64 [s1 + 0x28] = a2\n 40394: u64 [s1 + 0xf0] = a2\n 40398: u64 [s1 + 0x20] = a3\n 40401: u64 [s1 + 0xe8] = a3\n 40405: u64 [s1 + 0x18] = a1\n 40408: u64 [s1 + 0xe0] = a1\n 40412: a0 = s1 + 0xc0\n 40416: a1 = s1 + 0xe0\n 40420: ra = 1420, jump @6\n      : @1309 [@dyn 710] (gas: 16)\n 40427: a0 = u64 [s1 + 0xd8]\n 40431: t0 = u64 [s1 + 0xc0]\n 40435: a2 = u64 [s1 + 0xd0]\n 40439: a3 = u64 [s1 + 0xc8]\n 40443: a1 = u64 [s1 + 0x58]\n 40446: a4 = a0 ^ a1\n 40449: a1 = a1 <u a0\n 40452: a0 = u64 [s1 + 0x50]\n 40455: a5 = a0 <u a2\n 40458: a5 = a1 if a4 != 0\n 40461: a1 = u64 [s1 + 0x40]\n 40464: t1 = a3 ^ a1\n 40467: a3 = a1 <u a3\n 40470: a1 = u64 [s1 + 0x48]\n 40473: a1 = a1 <u t0\n 40476: t0 = 1422, jump @1613\n      : @1310 [@dyn 711] (gas: 1)\n 40482: jump @1315 if a1 == 0\n      : @1311 (gas: 11)\n 40486: a0 = u64 [s1 + 0x18]\n 40489: u64 [s1 + 0x60] = a0\n 40492: a0 = u64 [s1 + 0x20]\n 40495: u64 [s1 + 0x68] = a0\n 40498: a0 = u64 [s1 + 0x28]\n 40501: u64 [s1 + 0x70] = a0\n 40504: a1 = s1 + 0x60\n 40507: a0 = u64 [s1 + 0x30]\n 40510: u64 [s1 + 0x78] = a0\n 40513: a0 = 0\n 40515: ra = 1424, jump @4\n      : @1312 [@dyn 712] (gas: 2)\n 40522: a1 = i32 [0x20194]\n 40527: jump @1314 if a1 >u 31\n      : @1313 (gas: 2)\n 40531: u32 [0x20194] = 0x20\n 40537: fallthrough\n      : @1314 (gas: 52)\n 40538: a0 = sp + 0xffffffffffffffe0\n 40541: a2 = a0 & 0xffffffffffffffe0\n 40544: u64 [s1 + 0x30] = a2\n 40547: sp = a2\n 40549: a0 = 0x201a0\n 40554: i32 a0 = a0 + 0\n 40556: i32 a2 = a2 + 0\n 40558: a1 = 0x20\n 40561: ecalli 7 // 'hash_keccak_256'\n 40563: a3 = u64 [s1 + 0x30]\n 40566: a0 = u64 [a3]\n 40568: a1 = u64 [a3 + 0x8]\n 40571: a2 = u64 [a3 + 0x18]\n 40574: a3 = u64 [a3 + 0x10]\n 40577: t0 = reverse a0\n 40579: a1 = reverse a1\n 40581: a2 = reverse a2\n 40583: a3 = reverse a3\n 40585: a4 = u64 [s1 + 0x40]\n 40588: a4 = a4 + a3\n 40591: t1 = u64 [s1 + 0x48]\n 40594: t1 = t1 + a2\n 40597: a2 = t1 <u a2\n 40600: a4 = a4 + a2\n 40603: a0 = a4 ^ a3\n 40606: a3 = a4 <u a3\n 40609: a3 = a2 if a0 == 0\n 40612: a0 = u64 [s1 + 0x50]\n 40615: a0 = a0 + a1\n 40618: a3 = a3 + a0\n 40621: a2 = a3 <u a0\n 40624: a5 = u64 [s1 + 0x58]\n 40627: t0 = t0 + a5\n 40630: a0 = a0 <u a1\n 40633: a0 = a0 + t0\n 40636: a0 = a0 + a2\n 40639: a1 = u64 [s1 + 0x38]\n 40642: a2 = 0\n 40644: u64 [a1 + 56] = 0\n 40647: u64 [a1 + 48] = 0\n 40650: u64 [a1 + 40] = 0\n 40653: u64 [a1 + 32] = 0\n 40656: u64 [a1] = t1\n 40658: u64 [a1 + 0x8] = a4\n 40661: u64 [a1 + 0x10] = a3\n 40664: u64 [a1 + 0x18] = a0\n 40667: sp = s0 + 0xfffffffffffffee0\n 40671: ra = u64 [sp + 0x118]\n 40675: s0 = u64 [sp + 0x110]\n 40679: s1 = u64 [sp + 0x108]\n 40683: sp = sp + 0x120\n 40687: ret\n      : @1315 (gas: 1)\n 40689: t0 = 1426, jump @1610\n      : @1316 [@dyn 713] (gas: 1)\n 40695: ra = 1428, jump @4\n      : @1317 [@dyn 714] (gas: 7)\n 40702: u64 [s1 + 152] = 0\n 40706: u64 [s1 + 144] = 0\n 40710: u64 [s1 + 128] = 0x32\n 40715: a0 = 0x4\n 40718: a1 = s1 + 0x80\n 40722: u64 [s1 + 136] = 0\n 40726: ra = 1430, jump @4\n      : @1318 [@dyn 715] (gas: 2)\n 40733: a1 = i32 [0x20194]\n 40738: jump @1320 if a1 >u 63\n      : @1319 (gas: 2)\n 40742: u32 [0x20194] = 0x40\n 40748: fallthrough\n      : @1320 (gas: 8)\n 40749: a1 = 0x201a0\n 40754: i32 a1 = a1 + 0\n 40756: a0 = 0x1\n 40759: a2 = 0x24\n 40762: ra = 0x598\n 40766: ecalli 12 // 'seal_return'\n 40768: t0 = 0x59a\n 40772: jump @1600\n      : @1321 [@dyn 716] (gas: 1)\n 40775: t0 = 1434, jump @1600\n      : @1322 [@dyn 717] (gas: 7)\n 40781: t0 = a0 >u 0\n 40783: a4 = t1 <u 0xfffffffffffffec0\n 40787: a4 = a4 ^ 0x1\n 40790: a4 = t0 if a0 != 0\n 40793: a1 = a2 | a3\n 40796: a4 = a5 if a1 != 0\n 40799: jump @1326 if a4 != 0\n      : @1323 (gas: 2)\n 40802: a1 = t1 + 0x140\n 40806: t0 = 1436, jump @1596\n      : @1324 [@dyn 718] (gas: 1)\n 40812: ra = 1438, jump @4\n      : @1325 [@dyn 719] (gas: 5)\n 40819: sp = s0 + 0xffffffffffffff90\n 40822: ra = u64 [sp + 0x68]\n 40825: s0 = u64 [sp + 0x60]\n 40828: sp = sp + 0x70\n 40831: ret\n      : @1326 (gas: 1)\n 40833: t0 = 1440, jump @1580\n      : @1327 [@dyn 720] (gas: 1)\n 40839: ra = 1442, jump @4\n      : @1328 [@dyn 721] (gas: 7)\n 40846: u64 [sp + 24] = 0\n 40849: u64 [sp + 16] = 0\n 40852: u64 [sp + 0] = 0x41\n 40855: a0 = 0x4\n 40858: a1 = sp\n 40860: u64 [sp + 8] = 0\n 40863: ra = 1444, jump @4\n      : @1329 [@dyn 722] (gas: 2)\n 40870: a1 = i32 [0x20194]\n 40875: jump @1331 if a1 >u 63\n      : @1330 (gas: 2)\n 40879: u32 [0x20194] = 0x40\n 40885: fallthrough\n      : @1331 (gas: 8)\n 40886: a1 = 0x201a0\n 40891: i32 a1 = a1 + 0\n 40893: a0 = 0x1\n 40896: a2 = 0x24\n 40899: ra = 0x5a6\n 40903: ecalli 12 // 'seal_return'\n 40905: t0 = 0x5a8\n 40909: jump @1600\n      : @1332 [@dyn 723] (gas: 1)\n 40912: t0 = 1448, jump @1600\n      : @1333 [@dyn 724] (gas: 7)\n 40918: t0 = a0 >u 0\n 40920: a4 = t1 <u 0xffffffffffffff80\n 40923: a4 = a4 ^ 0x1\n 40926: a4 = t0 if a0 != 0\n 40929: a1 = a2 | a3\n 40932: a4 = a5 if a1 != 0\n 40935: jump @1337 if a4 != 0\n      : @1334 (gas: 2)\n 40938: a1 = t1 + 0x80\n 40942: t0 = 1450, jump @1596\n      : @1335 [@dyn 725] (gas: 1)\n 40948: ra = 1452, jump @4\n      : @1336 [@dyn 726] (gas: 5)\n 40955: sp = s0 + 0xffffffffffffff90\n 40958: ra = u64 [sp + 0x68]\n 40961: s0 = u64 [sp + 0x60]\n 40964: sp = sp + 0x70\n 40967: ret\n      : @1337 (gas: 1)\n 40969: t0 = 1454, jump @1580\n      : @1338 [@dyn 727] (gas: 1)\n 40975: ra = 1456, jump @4\n      : @1339 [@dyn 728] (gas: 7)\n 40982: u64 [sp + 24] = 0\n 40985: u64 [sp + 16] = 0\n 40988: u64 [sp + 0] = 0x41\n 40991: a0 = 0x4\n 40994: a1 = sp\n 40996: u64 [sp + 8] = 0\n 40999: ra = 1458, jump @4\n      : @1340 [@dyn 729] (gas: 2)\n 41006: a1 = i32 [0x20194]\n 41011: jump @1342 if a1 >u 63\n      : @1341 (gas: 2)\n 41015: u32 [0x20194] = 0x40\n 41021: fallthrough\n      : @1342 (gas: 7)\n 41022: a1 = 0x201a0\n 41027: i32 a1 = a1 + 0\n 41029: a0 = 0x1\n 41032: a2 = 0x24\n 41035: ra = 0x5b4\n 41039: ecalli 12 // 'seal_return'\n 41041: fallthrough\n      : @1343 [@dyn 730] (gas: 46)\n 41042: sp = sp + 0xffffffffffffff70\n 41046: u64 [sp + 0x88] = ra\n 41050: u64 [sp + 0x80] = s0\n 41054: u64 [sp + 0x78] = s1\n 41057: s0 = sp + 0x90\n 41061: sp = sp & 0xfffffffffffffff0\n 41064: t0 = a0\n 41066: a2 = u64 [a1]\n 41068: t2 = u64 [a0 + 0x8]\n 41071: a5 = u64 [a1 + 0x8]\n 41074: t1 = u64 [a0]\n 41076: a3 = a2 + 0x1f\n 41079: ra = a3 <u a2\n 41082: a2 = a5 + ra\n 41085: a3 = a3 & 0xffffffffffffffe0\n 41088: u64 [sp + 0x8] = t1\n 41091: t1 = t1 + a3\n 41094: a4 = t1 <u a3\n 41097: a3 = a2 + t2\n 41100: a3 = a3 + a4\n 41103: s1 = a3 ^ a2\n 41106: a0 = a3 <u a2\n 41109: a0 = a4 if s1 == 0\n 41112: a4 = u64 [t0 + 0x18]\n 41115: a5 = a2 <u a5\n 41118: s1 = u64 [a1 + 0x10]\n 41121: t0 = u64 [t0 + 0x10]\n 41124: a1 = u64 [a1 + 0x18]\n 41127: a5 = ra if ra == 0\n 41130: a5 = a5 + s1\n 41133: s1 = a5 <u s1\n 41136: a2 = a5 + t0\n 41139: a0 = a0 + a2\n 41142: a5 = a2 <u a5\n 41145: a2 = a0 <u a2\n 41148: a1 = a1 + a4\n 41151: a1 = a1 + s1\n 41154: a1 = a1 + a5\n 41157: a5 = a1 + a2\n 41160: a1 = a5 >u 0\n 41162: a2 = a0 >u 0\n 41164: a2 = a1 if a5 != 0\n 41167: a1 = a0 | a5\n 41170: s1 = a3 >u 0\n 41172: s1 = a2 if a1 != 0\n 41175: jump @1347 if s1 != 0\n      : @1344 (gas: 13)\n 41178: a1 = u64 [sp + 0x8]\n 41181: a1 = t1 <u a1\n 41184: a2 = a3 ^ t2\n 41187: s1 = a3 <u t2\n 41190: s1 = a1 if a2 == 0\n 41193: a1 = a0 <u t0\n 41196: a2 = a5 ^ a4\n 41199: a4 = a5 <u a4\n 41202: a4 = a1 if a2 == 0\n 41205: a1 = a0 ^ t0\n 41208: a1 = a1 | a2\n 41211: a4 = s1 if a1 == 0\n 41214: jump @1347 if a4 != 0\n      : @1345 (gas: 7)\n 41217: u64 [sp + 0x50] = t1\n 41220: u64 [sp + 0x58] = a3\n 41223: u64 [sp + 0x60] = a0\n 41226: a0 = 0x40\n 41229: a1 = sp + 0x50\n 41232: u64 [sp + 0x68] = a5\n 41235: ra = 1462, jump @4\n      : @1346 [@dyn 731] (gas: 6)\n 41242: sp = s0 + 0xffffffffffffff70\n 41246: ra = u64 [sp + 0x88]\n 41250: s0 = u64 [sp + 0x80]\n 41254: s1 = u64 [sp + 0x78]\n 41257: sp = sp + 0x90\n 41261: ret\n      : @1347 (gas: 1)\n 41263: t0 = 1464, jump @1626\n      : @1348 [@dyn 732] (gas: 1)\n 41269: ra = 1466, jump @4\n      : @1349 [@dyn 733] (gas: 7)\n 41276: u64 [sp + 40] = 0\n 41279: u64 [sp + 32] = 0\n 41282: u64 [sp + 16] = 0x41\n 41286: a0 = 0x4\n 41289: a1 = sp + 0x10\n 41292: u64 [sp + 24] = 0\n 41295: ra = 1468, jump @4\n      : @1350 [@dyn 734] (gas: 2)\n 41302: a1 = i32 [0x20194]\n 41307: jump @1352 if a1 >u 63\n      : @1351 (gas: 2)\n 41311: u32 [0x20194] = 0x40\n 41317: fallthrough\n      : @1352 (gas: 7)\n 41318: a1 = 0x201a0\n 41323: i32 a1 = a1 + 0\n 41325: a0 = 0x1\n 41328: a2 = 0x24\n 41331: ra = 0x5be\n 41335: ecalli 12 // 'seal_return'\n 41337: fallthrough\n      : @1353 [@dyn 735] (gas: 14)\n 41338: sp = sp + 0xffffffffffffff00\n 41342: u64 [sp + 0xf8] = ra\n 41346: u64 [sp + 0xf0] = s0\n 41350: u64 [sp + 0xe8] = s1\n 41354: s0 = sp + 0x100\n 41358: sp = sp & 0xfffffffffffffff0\n 41361: a1 = u64 [a0 + 0x10]\n 41364: a2 = u64 [a0 + 0x18]\n 41367: a3 = u64 [a0 + 0x8]\n 41370: a0 = u64 [a0]\n 41372: a2 = a2 | a3\n 41375: a0 = a0 | a1\n 41378: a0 = a0 | a2\n 41381: jump @1355 if a0 == 0\n      : @1354 (gas: 6)\n 41384: sp = s0 + 0xffffffffffffff00\n 41388: ra = u64 [sp + 0xf8]\n 41392: s0 = u64 [sp + 0xf0]\n 41396: s1 = u64 [sp + 0xe8]\n 41400: sp = sp + 0x100\n 41404: ret\n      : @1355 (gas: 3)\n 41406: a0 = sp + 0xc0\n 41410: a1 = 0x40\n 41413: ra = 1472, jump @2\n      : @1356 [@dyn 736] (gas: 15)\n 41420: a2 = u64 [sp + 0xd8]\n 41424: s1 = u64 [sp + 0xd0]\n 41428: a0 = u64 [sp + 0xc8]\n 41432: a1 = u64 [sp + 0xc0]\n 41436: u64 [sp + 0x10] = a0\n 41439: u64 [sp + 0x8] = a2\n 41442: a0 = a0 | a2\n 41445: u64 [sp + 0x18] = a1\n 41448: a1 = a1 | s1\n 41451: a1 = a1 | a0\n 41454: a1 = a1 >> 0x20\n 41457: a0 = a0 | s1\n 41460: a0 = a0 << 0x20\n 41463: a0 = a0 | a1\n 41466: jump @1368 if a0 != 0\n      : @1357 (gas: 8)\n 41470: u64 [sp + 176] = 0\n 41474: u64 [sp + 168] = 0\n 41478: u64 [sp + 160] = 0\n 41482: a0 = 0x8c379a000000000\n 41492: a1 = sp + 0xa0\n 41496: u64 [sp + 0xb8] = a0\n 41500: a0 = u64 [sp + 0x18]\n 41503: ra = 1474, jump @4\n      : @1358 [@dyn 737] (gas: 1)\n 41510: t0 = 1476, jump @1568\n      : @1359 [@dyn 738] (gas: 1)\n 41516: jump @1368 if a0 == 0\n      : @1360 (gas: 8)\n 41520: a0 = u64 [sp + 0x18]\n 41523: i32 a0 = a0 + 0x4\n 41526: u64 [sp + 152] = 0\n 41530: u64 [sp + 144] = 0\n 41534: u64 [sp + 128] = 0x20\n 41539: a1 = sp + 0x80\n 41543: u64 [sp + 136] = 0\n 41547: ra = 1478, jump @4\n      : @1361 [@dyn 739] (gas: 1)\n 41554: t0 = 1480, jump @1581\n      : @1362 [@dyn 740] (gas: 1)\n 41560: jump @1368 if a0 == 0\n      : @1363 (gas: 8)\n 41563: s1 = u64 [sp + 0x18]\n 41566: i32 a0 = s1 + 0x24\n 41569: u64 [sp + 120] = 0\n 41572: u64 [sp + 112] = 0\n 41575: u64 [sp + 96] = 0x21\n 41579: a1 = sp + 0x60\n 41582: u64 [sp + 104] = 0\n 41585: ra = 1482, jump @4\n      : @1364 [@dyn 741] (gas: 3)\n 41592: a0 = 0x100000000\n 41602: u64 [sp] = a0\n 41604: t0 = 1484, jump @1589\n      : @1365 [@dyn 742] (gas: 1)\n 41610: jump @1368 if a0 == 0\n      : @1366 (gas: 12)\n 41613: s1 = u64 [sp + 0x18]\n 41616: i32 a0 = s1 + 0x44\n 41619: a1 = u64 [0x20140]\n 41624: u64 [sp + 0x58] = a1\n 41627: a1 = u64 [0x20148]\n 41632: a2 = u64 [0x20150]\n 41637: a3 = u64 [0x20158]\n 41642: u64 [sp + 0x50] = a1\n 41645: u64 [sp + 0x48] = a2\n 41648: a1 = sp + 0x40\n 41651: u64 [sp + 0x40] = a3\n 41654: ra = 1486, jump @4\n      : @1367 [@dyn 743] (gas: 8)\n 41661: a0 = u64 [sp]\n 41663: a0 = a0 + 0xffffffffffffff9c\n 41666: a0 = s1 <u a0\n 41669: a1 = u64 [sp + 0x10]\n 41672: a0 = 0 if a1 != 0\n 41674: a1 = u64 [sp + 0x8]\n 41677: a0 = 0 if a1 != 0\n 41679: jump @1369 if a0 != 0\n      : @1368 (gas: 1)\n 41682: trap\n      : @1369 (gas: 9)\n 41683: s1 = u64 [sp + 0x18]\n 41686: i32 a0 = s1 + 0x64\n 41689: u64 [sp + 48] = 0\n 41692: u64 [sp + 40] = 0\n 41695: a1 = 0x6e00000000000000\n 41705: u64 [sp + 0x38] = a1\n 41708: a1 = sp + 0x20\n 41711: u64 [sp + 32] = 0\n 41714: ra = 1488, jump @4\n      : @1370 [@dyn 744] (gas: 3)\n 41721: a1 = 0x84\n 41725: a0 = s1\n 41727: ra = 1490, jump @16\n      : @1371 [@dyn 745] (gas: 6)\n 41734: i32 a1 = a0 + 0\n 41736: a0 = 0x1\n 41739: a2 = 0x84\n 41743: ra = 0x5d4\n 41747: ecalli 12 // 'seal_return'\n 41749: fallthrough\n      : @1372 [@dyn 746] (gas: 16)\n 41750: a2 = u64 [a1]\n 41752: t0 = u64 [a1 + 0x18]\n 41755: a3 = u64 [a1 + 0x8]\n 41758: a5 = u64 [a1 + 0x10]\n 41761: a4 = a2 + 0x1\n 41764: a2 = a4 <u 0x1\n 41767: a2 = a2 + a3\n 41770: a3 = a4 | a2\n 41773: a3 = a3 <u 0x1\n 41776: a3 = a3 + a5\n 41779: a5 = a3 <u a5\n 41782: a5 = a5 + t0\n 41785: t0 = a2 | a5\n 41788: a1 = a4 | a3\n 41791: a1 = a1 | t0\n 41794: jump @1374 if a1 == 0\n      : @1373 (gas: 5)\n 41797: u64 [a0] = a4\n 41799: u64 [a0 + 0x8] = a2\n 41802: u64 [a0 + 0x10] = a3\n 41805: u64 [a0 + 0x18] = a5\n 41808: ret\n      : @1374 (gas: 6)\n 41810: sp = sp + 0xffffffffffffffb0\n 41813: u64 [sp + 0x48] = ra\n 41816: u64 [sp + 0x40] = s0\n 41819: s0 = sp + 0x50\n 41822: sp = sp & 0xfffffffffffffff0\n 41825: t0 = 1494, jump @1580\n      : @1375 [@dyn 747] (gas: 1)\n 41831: ra = 1496, jump @4\n      : @1376 [@dyn 748] (gas: 7)\n 41838: u64 [sp + 24] = 0\n 41841: u64 [sp + 16] = 0\n 41844: u64 [sp + 0] = 0x11\n 41847: a0 = 0x4\n 41850: a1 = sp\n 41852: u64 [sp + 8] = 0\n 41855: ra = 1498, jump @4\n      : @1377 [@dyn 749] (gas: 2)\n 41862: a1 = i32 [0x20194]\n 41867: jump @1379 if a1 >u 63\n      : @1378 (gas: 2)\n 41871: u32 [0x20194] = 0x40\n 41877: fallthrough\n      : @1379 (gas: 7)\n 41878: a1 = 0x201a0\n 41883: i32 a1 = a1 + 0\n 41885: a0 = 0x1\n 41888: a2 = 0x24\n 41891: ra = 0x5dc\n 41895: ecalli 12 // 'seal_return'\n 41897: fallthrough\n      : @1380 [@dyn 750] (gas: 45)\n 41898: sp = sp + 0xffffffffffffff90\n 41901: u64 [sp + 0x68] = ra\n 41904: u64 [sp + 0x60] = s0\n 41907: u64 [sp + 0x58] = s1\n 41910: s0 = sp + 0x70\n 41913: sp = sp & 0xfffffffffffffff0\n 41916: a3 = u64 [a1 + 0x18]\n 41919: u64 [sp + 0x8] = a3\n 41922: a4 = u64 [a2 + 0x18]\n 41925: t2 = u64 [a1]\n 41927: u64 [sp] = t2\n 41929: a3 = u64 [a1 + 0x8]\n 41932: s1 = u64 [a2 + 0x8]\n 41935: a5 = u64 [a2]\n 41937: t1 = u64 [a1 + 0x10]\n 41940: t0 = u64 [a2 + 0x10]\n 41943: a2 = s1 + a3\n 41946: t2 = t2 + a5\n 41949: a5 = t2 <u a5\n 41952: a2 = a2 + a5\n 41955: ra = a2 ^ s1\n 41958: s1 = a2 <u s1\n 41961: s1 = a5 if ra == 0\n 41964: a1 = t0 + t1\n 41967: a5 = u64 [sp + 0x8]\n 41970: a5 = a5 + a4\n 41973: a4 = a1 <u t0\n 41976: a4 = a4 + a5\n 41979: a5 = a1 + s1\n 41982: a1 = a5 <u a1\n 41985: ra = a4 + a1\n 41988: a4 = a2 ^ a3\n 41991: a3 = a2 <u a3\n 41994: a1 = u64 [sp]\n 41996: s1 = t2 <u a1\n 41999: s1 = a3 if a4 != 0\n 42002: t0 = a5 <u t1\n 42005: a1 = u64 [sp + 0x8]\n 42008: a4 = ra ^ a1\n 42011: a3 = ra <u a1\n 42014: a3 = t0 if a4 == 0\n 42017: a1 = a5 ^ t1\n 42020: a1 = a1 | a4\n 42023: s1 = a3 if a1 != 0\n 42026: jump @1382 if s1 != 0\n      : @1381 (gas: 10)\n 42029: u64 [a0] = t2\n 42031: u64 [a0 + 0x8] = a2\n 42034: u64 [a0 + 0x10] = a5\n 42037: u64 [a0 + 0x18] = ra\n 42040: sp = s0 + 0xffffffffffffff90\n 42043: ra = u64 [sp + 0x68]\n 42046: s0 = u64 [sp + 0x60]\n 42049: s1 = u64 [sp + 0x58]\n 42052: sp = sp + 0x70\n 42055: ret\n      : @1382 (gas: 1)\n 42057: t0 = 1502, jump @1626\n      : @1383 [@dyn 751] (gas: 1)\n 42063: ra = 1504, jump @4\n      : @1384 [@dyn 752] (gas: 7)\n 42070: u64 [sp + 40] = 0\n 42073: u64 [sp + 32] = 0\n 42076: u64 [sp + 16] = 0x11\n 42080: a0 = 0x4\n 42083: a1 = sp + 0x10\n 42086: u64 [sp + 24] = 0\n 42089: ra = 1506, jump @4\n      : @1385 [@dyn 753] (gas: 2)\n 42096: a1 = i32 [0x20194]\n 42101: jump @1387 if a1 >u 63\n      : @1386 (gas: 2)\n 42105: u32 [0x20194] = 0x40\n 42111: fallthrough\n      : @1387 (gas: 7)\n 42112: a1 = 0x201a0\n 42117: i32 a1 = a1 + 0\n 42119: a0 = 0x1\n 42122: a2 = 0x24\n 42125: ra = 0x5e4\n 42129: ecalli 12 // 'seal_return'\n 42131: fallthrough\n      : @1388 [@dyn 754] (gas: 9)\n 42132: sp = sp + 0xffffffffffffff20\n 42136: u64 [sp + 0xd8] = ra\n 42140: u64 [sp + 0xd0] = s0\n 42144: u64 [sp + 0xc8] = s1\n 42148: s0 = sp + 0xe0\n 42152: sp = sp & 0xffffffffffffffe0\n 42155: s1 = a0\n 42157: ecalli 11 // 'return_data_size'\n 42159: fallthrough\n      : @1389 (gas: 1)\n 42160: jump @1402 if a0 == 0\n      : @1390 (gas: 6)\n 42164: u64 [sp + 0x18] = s1\n 42167: ecalli 11 // 'return_data_size'\n 42169: s1 = a0\n 42171: a0 = sp + 0xa0\n 42175: a1 = 0x40\n 42178: ra = 1510, jump @2\n      : @1391 [@dyn 755] (gas: 28)\n 42185: a2 = u64 [sp + 0xb8]\n 42189: a5 = u64 [sp + 0xb0]\n 42193: u64 [sp + 0x38] = a5\n 42196: t0 = u64 [sp + 0xa8]\n 42200: u64 [sp + 0x30] = t0\n 42203: t1 = u64 [sp + 0xa0]\n 42207: u64 [sp + 0x28] = t1\n 42210: a0 = s1 + 0x1f\n 42213: u64 [sp + 0x20] = s1\n 42216: a1 = a0 <u s1\n 42219: s1 = a2\n 42221: a0 = a0 & 0xffffffffffffffe0\n 42224: a2 = a0 + 0x20\n 42227: a0 = a2 <u a0\n 42230: a3 = a1 + a0\n 42233: a4 = a3 <u a1\n 42236: a4 = a0 if a0 == 0\n 42239: u64 [sp + 120] = 0\n 42242: u64 [sp + 0x60] = a2\n 42245: u64 [sp + 0x98] = s1\n 42249: u64 [sp + 0x90] = a5\n 42253: u64 [sp + 0x88] = t0\n 42257: u64 [sp + 0x80] = t1\n 42261: u64 [sp + 0x68] = a3\n 42264: a0 = sp + 0x80\n 42268: a1 = sp + 0x60\n 42271: u64 [sp + 0x70] = a4\n 42274: ra = 1512, jump @1343\n      : @1392 [@dyn 756] (gas: 5)\n 42280: a0 = u64 [sp + 0x28]\n 42283: a2 = u64 [sp + 0x30]\n 42286: a2 = a2 | s1\n 42289: a3 = u64 [sp + 0x38]\n 42292: t0 = 1514, jump @1601\n      : @1393 [@dyn 757] (gas: 1)\n 42298: jump @1401 if a1 != 0\n      : @1394 (gas: 7)\n 42302: u64 [sp + 88] = 0\n 42305: u64 [sp + 80] = 0\n 42308: u64 [sp + 72] = 0\n 42311: a1 = sp + 0x40\n 42314: a2 = u64 [sp + 0x20]\n 42317: u64 [sp + 0x40] = a2\n 42320: ra = 1516, jump @4\n      : @1395 [@dyn 758] (gas: 2)\n 42327: ecalli 11 // 'return_data_size'\n 42329: fallthrough\n      : @1396 (gas: 10)\n 42330: a3 = u64 [sp + 0x28]\n 42333: u64 [sp + 0x20] = s1\n 42336: a1 = u64 [sp + 0x38]\n 42339: a1 = a1 | s1\n 42342: a2 = 0xffffffe0\n 42352: a2 = a3 <u a2\n 42355: a4 = u64 [sp + 0x30]\n 42358: a2 = 0 if a4 != 0\n 42360: a2 = 0 if a1 != 0\n 42362: jump @1401 if a2 == 0\n      : @1397 (gas: 3)\n 42365: s1 = a0\n 42367: a0 = a0 >> 0x20\n 42370: jump @1401 if a0 != 0\n      : @1398 (gas: 5)\n 42373: i32 a0 = a3 + 0x20\n 42376: i32 a1 = s1 + 0\n 42378: u64 [sp + 0x10] = a1\n 42381: a1 = s1\n 42383: ra = 1518, jump @16\n      : @1399 [@dyn 759] (gas: 6)\n 42390: u32 [sp + 0xc0] = s1\n 42394: i32 a0 = a0 + 0\n 42396: i32 a1 = sp + 0xc0\n 42400: a2 = 0\n 42402: ecalli 10 // 'return_data_copy'\n 42404: fallthrough\n      : @1400 (gas: 8)\n 42405: a4 = u64 [sp + 0x28]\n 42408: a0 = i32 [sp + 0xc0]\n 42412: s1 = u64 [sp + 0x18]\n 42415: a1 = u64 [sp + 0x20]\n 42418: a2 = u64 [sp + 0x38]\n 42421: a3 = u64 [sp + 0x30]\n 42424: a5 = u64 [sp + 0x10]\n 42427: jump @1403 if a0 >=u a5\n      : @1401 (gas: 1)\n 42430: trap\n      : @1402 (gas: 5)\n 42431: a3 = 0\n 42433: a2 = 0\n 42435: a1 = 0\n 42437: a4 = 0x60\n 42440: fallthrough\n      : @1403 (gas: 5)\n 42441: u64 [s1] = a4\n 42443: u64 [s1 + 0x8] = a3\n 42446: u64 [s1 + 0x10] = a2\n 42449: u64 [s1 + 0x18] = a1\n 42452: t0 = 1520, jump @1624\n      : @1404 [@dyn 760] (gas: 1)\n 42458: ret\n      : @1405 [@dyn 761] (gas: 1)\n 42460: jump @1408 if a0 == 0\n      : @1406 (gas: 1)\n 42463: t0 = 1524, jump @1624\n      : @1407 [@dyn 762] (gas: 1)\n 42469: ret\n      : @1408 (gas: 3)\n 42471: a0 = sp + 0xa0\n 42475: a1 = 0x40\n 42478: ra = 1526, jump @2\n      : @1409 [@dyn 763] (gas: 1)\n 42485: t0 = 1528, jump @1583\n      : @1410 [@dyn 764] (gas: 1)\n 42491: jump @1422 if a0 != 0\n      : @1411 (gas: 1)\n 42494: t0 = 1530, jump @1599\n      : @1412 [@dyn 765] (gas: 1)\n 42500: ra = 1532, jump @4\n      : @1413 [@dyn 766] (gas: 1)\n 42507: t0 = 1534, jump @1568\n      : @1414 [@dyn 767] (gas: 1)\n 42513: jump @1422 if a0 == 0\n      : @1415 (gas: 1)\n 42516: t0 = 1536, jump @1614\n      : @1416 [@dyn 768] (gas: 1)\n 42522: ra = 1538, jump @4\n      : @1417 [@dyn 769] (gas: 1)\n 42529: t0 = 1540, jump @1581\n      : @1418 [@dyn 770] (gas: 1)\n 42535: jump @1422 if a0 == 0\n      : @1419 (gas: 8)\n 42538: s1 = u64 [sp + 0x18]\n 42541: i32 a0 = s1 + 0x24\n 42544: u64 [sp + 88] = 0\n 42547: u64 [sp + 80] = 0\n 42550: u64 [sp + 64] = 0xf\n 42554: a1 = sp + 0x40\n 42557: u64 [sp + 72] = 0\n 42560: ra = 1542, jump @4\n      : @1420 [@dyn 771] (gas: 1)\n 42567: t0 = 1544, jump @1589\n      : @1421 [@dyn 772] (gas: 1)\n 42573: jump @1423 if a0 != 0\n      : @1422 (gas: 1)\n 42576: trap\n      : @1423 (gas: 10)\n 42577: s1 = u64 [sp + 0x18]\n 42580: i32 a0 = s1 + 0x44\n 42583: a1 = u64 [0x20160]\n 42588: a2 = u64 [0x20168]\n 42593: u64 [sp + 0x38] = a1\n 42596: u64 [sp + 40] = 0\n 42599: u64 [sp + 0x30] = a2\n 42602: a1 = sp + 0x20\n 42605: u64 [sp + 32] = 0\n 42608: ra = 1546, jump @4\n      : @1424 [@dyn 773] (gas: 3)\n 42615: a1 = 0x64\n 42618: a0 = s1\n 42620: ra = 1548, jump @16\n      : @1425 [@dyn 774] (gas: 7)\n 42627: i32 a1 = a0 + 0\n 42629: a0 = 0x1\n 42632: a2 = 0x64\n 42635: ra = 0x60e\n 42639: ecalli 12 // 'seal_return'\n 42641: t0 = 0x610\n 42645: jump @1586\n      : @1426 [@dyn 775] (gas: 1)\n 42648: t0 = 1552, jump @1586\n      : @1427 [@dyn 776] (gas: 1)\n 42654: jump @1430 if a0 == 0\n      : @1428 (gas: 1)\n 42657: t0 = 1554, jump @1624\n      : @1429 [@dyn 777] (gas: 1)\n 42663: ret\n      : @1430 (gas: 3)\n 42665: a0 = sp + 0xa0\n 42669: a1 = 0x40\n 42672: ra = 1556, jump @2\n      : @1431 [@dyn 778] (gas: 1)\n 42679: t0 = 1558, jump @1583\n      : @1432 [@dyn 779] (gas: 1)\n 42685: jump @1444 if a0 != 0\n      : @1433 (gas: 1)\n 42688: t0 = 1560, jump @1599\n      : @1434 [@dyn 780] (gas: 1)\n 42694: ra = 1562, jump @4\n      : @1435 [@dyn 781] (gas: 1)\n 42701: t0 = 1564, jump @1568\n      : @1436 [@dyn 782] (gas: 1)\n 42707: jump @1444 if a0 == 0\n      : @1437 (gas: 1)\n 42710: t0 = 1566, jump @1614\n      : @1438 [@dyn 783] (gas: 1)\n 42716: ra = 1568, jump @4\n      : @1439 [@dyn 784] (gas: 1)\n 42723: t0 = 1570, jump @1581\n      : @1440 [@dyn 785] (gas: 1)\n 42729: jump @1444 if a0 == 0\n      : @1441 (gas: 8)\n 42732: s1 = u64 [sp + 0x18]\n 42735: i32 a0 = s1 + 0x24\n 42738: u64 [sp + 88] = 0\n 42741: u64 [sp + 80] = 0\n 42744: u64 [sp + 64] = 0x13\n 42748: a1 = sp + 0x40\n 42751: u64 [sp + 72] = 0\n 42754: ra = 1572, jump @4\n      : @1442 [@dyn 786] (gas: 1)\n 42761: t0 = 1574, jump @1589\n      : @1443 [@dyn 787] (gas: 1)\n 42767: jump @1445 if a0 != 0\n      : @1444 (gas: 1)\n 42770: trap\n      : @1445 (gas: 11)\n 42771: s1 = u64 [sp + 0x18]\n 42774: i32 a0 = s1 + 0x44\n 42777: a1 = u64 [0x20170]\n 42782: a2 = u64 [0x20178]\n 42787: u64 [sp + 0x38] = a1\n 42790: u64 [sp + 0x30] = a2\n 42793: a1 = 0x6973740000000000\n 42803: u64 [sp + 0x28] = a1\n 42806: a1 = sp + 0x20\n 42809: u64 [sp + 32] = 0\n 42812: ra = 1576, jump @4\n      : @1446 [@dyn 788] (gas: 3)\n 42819: a1 = 0x64\n 42822: a0 = s1\n 42824: ra = 1578, jump @16\n      : @1447 [@dyn 789] (gas: 7)\n 42831: i32 a1 = a0 + 0\n 42833: a0 = 0x1\n 42836: a2 = 0x64\n 42839: ra = 0x62c\n 42843: ecalli 12 // 'seal_return'\n 42845: t0 = 0x62e\n 42849: jump @1586\n      : @1448 [@dyn 790] (gas: 1)\n 42852: t0 = 1582, jump @1586\n      : @1449 [@dyn 791] (gas: 1)\n 42858: jump @1452 if a0 == 0\n      : @1450 (gas: 1)\n 42861: t0 = 1584, jump @1624\n      : @1451 [@dyn 792] (gas: 1)\n 42867: ret\n      : @1452 (gas: 3)\n 42869: a0 = sp + 0xa0\n 42873: a1 = 0x40\n 42876: ra = 1586, jump @2\n      : @1453 [@dyn 793] (gas: 1)\n 42883: t0 = 1588, jump @1583\n      : @1454 [@dyn 794] (gas: 1)\n 42889: jump @1466 if a0 != 0\n      : @1455 (gas: 1)\n 42892: t0 = 1590, jump @1599\n      : @1456 [@dyn 795] (gas: 1)\n 42898: ra = 1592, jump @4\n      : @1457 [@dyn 796] (gas: 1)\n 42905: t0 = 1594, jump @1568\n      : @1458 [@dyn 797] (gas: 1)\n 42911: jump @1466 if a0 == 0\n      : @1459 (gas: 1)\n 42914: t0 = 1596, jump @1614\n      : @1460 [@dyn 798] (gas: 1)\n 42920: ra = 1598, jump @4\n      : @1461 [@dyn 799] (gas: 1)\n 42927: t0 = 1600, jump @1581\n      : @1462 [@dyn 800] (gas: 1)\n 42933: jump @1466 if a0 == 0\n      : @1463 (gas: 8)\n 42936: s1 = u64 [sp + 0x18]\n 42939: i32 a0 = s1 + 0x24\n 42942: u64 [sp + 88] = 0\n 42945: u64 [sp + 80] = 0\n 42948: u64 [sp + 64] = 0x12\n 42952: a1 = sp + 0x40\n 42955: u64 [sp + 72] = 0\n 42958: ra = 1602, jump @4\n      : @1464 [@dyn 801] (gas: 1)\n 42965: t0 = 1604, jump @1589\n      : @1465 [@dyn 802] (gas: 1)\n 42971: jump @1467 if a0 != 0\n      : @1466 (gas: 1)\n 42974: trap\n      : @1467 (gas: 11)\n 42975: s1 = u64 [sp + 0x18]\n 42978: i32 a0 = s1 + 0x44\n 42981: a1 = u64 [0x20180]\n 42986: a2 = u64 [0x20188]\n 42991: u64 [sp + 0x38] = a1\n 42994: u64 [sp + 0x30] = a2\n 42997: a1 = 0x6564000000000000\n 43007: u64 [sp + 0x28] = a1\n 43010: a1 = sp + 0x20\n 43013: u64 [sp + 32] = 0\n 43016: ra = 1606, jump @4\n      : @1468 [@dyn 803] (gas: 3)\n 43023: a1 = 0x64\n 43026: a0 = s1\n 43028: ra = 1608, jump @16\n      : @1469 [@dyn 804] (gas: 6)\n 43035: i32 a1 = a0 + 0\n 43037: a0 = 0x1\n 43040: a2 = 0x64\n 43043: ra = 0x64a\n 43047: ecalli 12 // 'seal_return'\n 43049: fallthrough\n      : @1470 [@dyn 805] (gas: 22)\n 43050: sp = sp + 0xffffffffffffff40\n 43054: u64 [sp + 0xb8] = ra\n 43058: u64 [sp + 0xb0] = s0\n 43062: u64 [sp + 0xa8] = s1\n 43066: s0 = sp + 0xc0\n 43070: sp = sp & 0xfffffffffffffff0\n 43073: a4 = u64 [a1 + 0x10]\n 43076: a3 = u64 [a1 + 0x18]\n 43079: a5 = u64 [a1 + 0x8]\n 43082: a1 = u64 [a1]\n 43084: u64 [sp + 0x28] = a3\n 43087: u64 [sp + 0x20] = a5\n 43090: a5 = a5 | a3\n 43093: a3 = a1 | a4\n 43096: a3 = a3 | a5\n 43099: a3 = a3 >> 0x20\n 43102: u64 [sp + 0x30] = a4\n 43105: a4 = a4 | a5\n 43108: a4 = a4 << 0x20\n 43111: a3 = a3 | a4\n 43114: u64 [sp + 0x38] = a0\n 43117: jump @1474 if a3 != 0\n      : @1471 (gas: 10)\n 43121: a0 = u64 [a2 + 0x18]\n 43124: u64 [sp + 0x10] = a0\n 43127: s1 = u64 [a2 + 0x10]\n 43130: a0 = u64 [a2 + 0x8]\n 43133: u64 [sp + 0x8] = a0\n 43136: a0 = u64 [a2]\n 43138: u64 [sp] = a0\n 43140: a0 = sp + 0x80\n 43144: u64 [sp + 0x18] = a1\n 43147: ra = 1612, jump @2\n      : @1472 [@dyn 806] (gas: 19)\n 43154: t0 = u64 [sp + 0x10]\n 43157: a5 = u64 [sp + 0x8]\n 43160: t1 = u64 [sp]\n 43162: a0 = u64 [sp + 0x88]\n 43166: a1 = u64 [sp + 0x98]\n 43170: a2 = u64 [sp + 0x80]\n 43174: a3 = u64 [sp + 0x90]\n 43178: a4 = a0 ^ a5\n 43181: a0 = a5 <u a0\n 43184: a2 = t1 <u a2\n 43187: a2 = a0 if a4 != 0\n 43190: a0 = s1 <u a3\n 43193: a4 = a1 ^ t0\n 43196: a1 = t0 <u a1\n 43199: a1 = a0 if a4 == 0\n 43202: a3 = a3 ^ s1\n 43205: a3 = a3 | a4\n 43208: a1 = a2 if a3 == 0\n 43211: jump @1475 if a1 == 0\n      : @1473 (gas: 47)\n 43215: a0 = s1 >> 0x3b\n 43218: a1 = t0 << 0x5\n 43221: t0 = a1 | a0\n 43224: a1 = a5 >> 0x3b\n 43227: s1 = s1 << 0x5\n 43230: a1 = a1 | s1\n 43233: a2 = t1 >> 0x3b\n 43236: a3 = a5 << 0x5\n 43239: a2 = a2 | a3\n 43242: a3 = t1 << 0x5\n 43245: a0 = u64 [sp + 0x18]\n 43248: a3 = a3 + a0\n 43251: a4 = a3 <u a0\n 43254: a5 = u64 [sp + 0x20]\n 43257: a2 = a2 + a5\n 43260: a2 = a2 + a4\n 43263: a0 = a2 ^ a5\n 43266: s1 = a2 <u a5\n 43269: s1 = a4 if a0 == 0\n 43272: a5 = u64 [sp + 0x30]\n 43275: a1 = a1 + a5\n 43278: s1 = s1 + a1\n 43281: a4 = s1 <u a1\n 43284: a1 = a1 <u a5\n 43287: a5 = u64 [sp + 0x28]\n 43290: a0 = a5 + t0\n 43293: a0 = a0 + a1\n 43296: a0 = a0 + a4\n 43299: a1 = a3 + 0x20\n 43302: a3 = a1 <u a3\n 43305: a4 = a2 + a3\n 43308: a2 = a4 <u a2\n 43311: a2 = a3 if a3 == 0\n 43314: a2 = a2 + s1\n 43317: a3 = a2 <u s1\n 43320: a0 = a0 + a3\n 43323: a3 = u64 [sp + 0x38]\n 43326: u64 [a3] = a1\n 43328: u64 [a3 + 0x8] = a4\n 43331: u64 [a3 + 0x10] = a2\n 43334: u64 [a3 + 0x18] = a0\n 43337: sp = s0 + 0xffffffffffffff40\n 43341: ra = u64 [sp + 0xb8]\n 43345: s0 = u64 [sp + 0xb0]\n 43349: s1 = u64 [sp + 0xa8]\n 43353: sp = sp + 0xc0\n 43357: ret\n      : @1474 (gas: 1)\n 43359: trap\n      : @1475 (gas: 8)\n 43360: u64 [sp + 112] = 0\n 43363: u64 [sp + 104] = 0\n 43366: u64 [sp + 96] = 0\n 43369: a0 = 0x4e487b7100000000\n 43379: a1 = sp + 0x60\n 43382: u64 [sp + 0x78] = a0\n 43385: a0 = 0\n 43387: ra = 1614, jump @4\n      : @1476 [@dyn 807] (gas: 7)\n 43394: u64 [sp + 88] = 0\n 43397: u64 [sp + 80] = 0\n 43400: u64 [sp + 64] = 0x32\n 43404: a0 = 0x4\n 43407: a1 = sp + 0x40\n 43410: u64 [sp + 72] = 0\n 43413: ra = 1616, jump @4\n      : @1477 [@dyn 808] (gas: 2)\n 43420: a1 = i32 [0x20194]\n 43425: jump @1479 if a1 >u 63\n      : @1478 (gas: 2)\n 43429: u32 [0x20194] = 0x40\n 43435: fallthrough\n      : @1479 (gas: 7)\n 43436: a1 = 0x201a0\n 43441: i32 a1 = a1 + 0\n 43443: a0 = 0x1\n 43446: a2 = 0x24\n 43449: ra = 0x652\n 43453: ecalli 12 // 'seal_return'\n 43455: fallthrough\n      : @1480 [@dyn 809] (gas: 24)\n 43456: sp = sp + 0xfffffffffffffa40\n 43460: a2 = sp + 0x500\n 43464: u64 [a2 + 0xb8] = ra\n 43468: u64 [a2 + 0xb0] = s0\n 43472: u64 [a2 + 0xa8] = s1\n 43476: s0 = sp + 0x5c0\n 43480: sp = sp & 0xffffffffffffffe0\n 43483: s1 = sp\n 43485: a2 = u64 [a1]\n 43487: a3 = u64 [a1 + 0x8]\n 43490: a4 = u64 [a1 + 0x10]\n 43493: a1 = u64 [a1 + 0x18]\n 43496: u64 [s1 + 0x40] = a0\n 43499: u64 [s1 + 0x70] = a1\n 43502: u64 [s1 + 0x438] = a1\n 43506: u64 [s1 + 0x58] = a4\n 43509: u64 [s1 + 0x430] = a4\n 43513: u64 [s1 + 0x60] = a3\n 43516: u64 [s1 + 0x428] = a3\n 43520: a1 = s1 + 0x420\n 43524: u64 [s1 + 0x68] = a2\n 43527: u64 [s1 + 0x420] = a2\n 43531: a0 = 0\n 43533: ra = 1620, jump @4\n      : @1481 [@dyn 810] (gas: 7)\n 43540: u64 [s1 + 1048] = 0\n 43544: u64 [s1 + 1040] = 0\n 43548: u64 [s1 + 1024] = 0x2\n 43553: a0 = 0x20\n 43556: a1 = s1 + 0x400\n 43560: u64 [s1 + 1032] = 0\n 43564: ra = 1622, jump @4\n      : @1482 [@dyn 811] (gas: 3)\n 43571: a2 = 0x20194\n 43576: a0 = i32 [0x20194]\n 43581: jump @1484 if a0 >u 63\n      : @1483 (gas: 2)\n 43585: u32 [0x20194] = 0x40\n 43591: fallthrough\n      : @1484 (gas: 13)\n 43592: u64 [s1 + 0x28] = a2\n 43595: a0 = sp + 0xffffffffffffffe0\n 43598: a2 = a0 & 0xffffffffffffffe0\n 43601: u64 [s1 + 0x78] = a2\n 43604: sp = a2\n 43606: a0 = 0x201a0\n 43611: i32 a0 = a0 + 0\n 43613: i32 a2 = a2 + 0\n 43615: a1 = 0x40\n 43618: u64 [s1 + 0x20] = a0\n 43621: ra = 0x658\n 43625: ecalli 7 // 'hash_keccak_256'\n 43627: fallthrough\n      : @1485 [@dyn 812] (gas: 6)\n 43628: a3 = u64 [s1 + 0x78]\n 43631: a0 = u64 [a3 + 0x18]\n 43634: a1 = u64 [a3 + 0x10]\n 43637: a2 = u64 [a3 + 0x8]\n 43640: a3 = u64 [a3]\n 43642: t0 = 1626, jump @1606\n      : @1486 [@dyn 813] (gas: 8)\n 43648: a4 = s1 + 0x400\n 43652: u64 [a4 + 0x58] = a3\n 43655: u64 [a4 + 0x50] = a2\n 43658: u64 [a4 + 0x48] = a1\n 43661: u64 [a4 + 0x40] = a0\n 43664: a0 = s1 + 0x3e0\n 43668: a1 = s1 + 0x440\n 43672: ra = 1628, jump @6\n      : @1487 [@dyn 814] (gas: 9)\n 43679: a4 = s1 + 0x300\n 43683: a0 = u64 [a4 + 0xf0]\n 43687: a1 = u64 [a4 + 0xf8]\n 43691: a2 = u64 [a4 + 0xe8]\n 43695: a3 = u64 [a4 + 0xe0]\n 43699: a1 = a1 | a2\n 43702: a0 = a0 | a3\n 43705: a0 = a0 | a1\n 43708: jump @1549 if a0 == 0\n      : @1488 (gas: 11)\n 43712: a0 = u64 [s1 + 0x68]\n 43715: u64 [s1 + 0x3c0] = a0\n 43719: a0 = u64 [s1 + 0x60]\n 43722: u64 [s1 + 0x3c8] = a0\n 43726: a0 = u64 [s1 + 0x58]\n 43729: u64 [s1 + 0x3d0] = a0\n 43733: a1 = s1 + 0x3c0\n 43737: a0 = u64 [s1 + 0x70]\n 43740: u64 [s1 + 0x3d8] = a0\n 43744: a0 = 0\n 43746: ra = 1630, jump @4\n      : @1489 [@dyn 815] (gas: 7)\n 43753: u64 [s1 + 952] = 0\n 43757: u64 [s1 + 944] = 0\n 43761: u64 [s1 + 928] = 0x2\n 43766: a0 = 0x20\n 43769: a1 = s1 + 0x3a0\n 43773: u64 [s1 + 936] = 0\n 43777: ra = 1632, jump @4\n      : @1490 [@dyn 816] (gas: 7)\n 43784: a0 = sp + 0xffffffffffffffe0\n 43787: a0 = a0 & 0xffffffffffffffe0\n 43790: u64 [s1 + 0x48] = a0\n 43793: sp = a0\n 43795: a2 = u64 [s1 + 0x28]\n 43798: a0 = i32 [a2]\n 43800: jump @1492 if a0 >u 63\n      : @1491 (gas: 2)\n 43804: u32 [a2 + 0] = 0x40\n 43807: fallthrough\n      : @1492 (gas: 12)\n 43808: a0 = sp + 0xffffffffffffffe0\n 43811: a0 = a0 & 0xffffffffffffffe0\n 43814: u64 [s1 + 0x78] = a0\n 43817: sp = a0\n 43819: i32 a2 = a0 + 0\n 43821: a1 = 0x40\n 43824: a0 = u64 [s1 + 0x20]\n 43827: ra = 0x662\n 43831: ecalli 7 // 'hash_keccak_256'\n 43833: a3 = u64 [s1 + 0x78]\n 43836: t0 = 0x664\n 43840: jump @1592\n      : @1493 [@dyn 817] (gas: 2)\n 43843: a3 = u64 [s1 + 0x78]\n 43846: t0 = 1636, jump @1592\n      : @1494 [@dyn 818] (gas: 12)\n 43852: u64 [s1 + 0x60] = a1\n 43855: a2 = u64 [s1 + 0x48]\n 43858: u64 [a2 + 0x18] = a1\n 43861: u64 [s1 + 0x68] = a0\n 43864: u64 [a2 + 0x10] = a0\n 43867: u64 [s1 + 0x58] = a4\n 43870: u64 [a2 + 0x8] = a4\n 43873: u64 [s1 + 0x50] = a5\n 43876: u64 [a2] = a5\n 43878: a0 = s1 + 0x380\n 43882: a1 = 0x40\n 43885: ra = 1638, jump @2\n      : @1495 [@dyn 819] (gas: 17)\n 43892: a4 = s1 + 0x300\n 43896: a0 = u64 [a4 + 0x98]\n 43900: u64 [s1 + 0x38] = a0\n 43903: a1 = u64 [a4 + 0x90]\n 43907: u64 [s1 + 0x30] = a1\n 43910: a3 = u64 [a4 + 0x88]\n 43914: u64 [s1 + 0x70] = a3\n 43917: a2 = u64 [a4 + 0x80]\n 43921: u64 [s1 + 0x78] = a2\n 43924: u64 [a4 + 0x78] = a0\n 43927: u64 [a4 + 0x70] = a1\n 43930: u64 [a4 + 0x68] = a3\n 43933: a0 = s1 + 0x360\n 43937: u64 [a4 + 0x60] = a2\n 43940: ra = 0x668\n 43944: t0 = 0x59a\n 43948: jump @1600\n      : @1496 [@dyn 820] (gas: 3)\n 43951: a0 = s1 + 0x340\n 43955: a1 = u64 [s1 + 0x48]\n 43958: ra = 1642, jump @6\n      : @1497 [@dyn 821] (gas: 6)\n 43965: a0 = u64 [s1 + 0x38]\n 43968: a1 = u64 [s1 + 0x70]\n 43971: a0 = a0 | a1\n 43974: a2 = u64 [s1 + 0x30]\n 43977: a1 = u64 [s1 + 0x78]\n 43980: t0 = 1644, jump @1631\n      : @1498 [@dyn 822] (gas: 1)\n 43986: jump @1552 if a0 != 0\n      : @1499 (gas: 12)\n 43990: a4 = s1 + 0x300\n 43994: a0 = u64 [a4 + 0x58]\n 43997: a1 = u64 [a4 + 0x50]\n 44000: a2 = u64 [a4 + 0x48]\n 44003: a3 = u64 [a4 + 0x40]\n 44006: u64 [a4 + 0x20] = a3\n 44009: u64 [a4 + 0x28] = a2\n 44012: u64 [a4 + 0x30] = a1\n 44015: a1 = s1 + 0x320\n 44019: u64 [a4 + 0x38] = a0\n 44022: a0 = u64 [s1 + 0x78]\n 44025: ra = 1646, jump @4\n      : @1500 [@dyn 823] (gas: 20)\n 44032: a0 = u64 [s1 + 0x50]\n 44035: a0 = a0 + 0x1\n 44038: a1 = a0 <u 0x1\n 44041: a2 = u64 [s1 + 0x58]\n 44044: a1 = a1 + a2\n 44047: a2 = a0 | a1\n 44050: a2 = a2 <u 0x1\n 44053: a3 = u64 [s1 + 0x68]\n 44056: a2 = a2 + a3\n 44059: a3 = a2 <u a3\n 44062: a4 = u64 [s1 + 0x60]\n 44065: a3 = a3 + a4\n 44068: a4 = s1 + 0x400\n 44072: u64 [a4 + 0x68] = a1\n 44075: u64 [a4 + 0x60] = a0\n 44078: u64 [a4 + 0x70] = a2\n 44081: u64 [a4 + 0x78] = a3\n 44084: a0 = s1 + 0x300\n 44088: a1 = s1 + 0x460\n 44092: ra = 1648, jump @6\n      : @1501 [@dyn 824] (gas: 13)\n 44099: a0 = u64 [s1 + 0x38]\n 44102: a2 = u64 [s1 + 0x30]\n 44105: a2 = a2 | a0\n 44108: a0 = 0x100000000\n 44118: u64 [s1 + 0x38] = a0\n 44121: a0 = 0xffffffe0\n 44131: a1 = u64 [s1 + 0x78]\n 44134: a0 = a1 <u a0\n 44137: a1 = u64 [s1 + 0x70]\n 44140: a0 = 0 if a1 != 0\n 44142: u64 [s1 + 0x48] = a2\n 44145: a0 = 0 if a2 != 0\n 44147: jump @1552 if a0 == 0\n      : @1502 (gas: 14)\n 44151: a0 = s1 + 0x300\n 44155: a2 = u64 [a0 + 0x18]\n 44158: a1 = u64 [a0 + 0x10]\n 44161: a3 = u64 [a0 + 0x8]\n 44164: a4 = u64 [a0]\n 44166: a0 = u64 [s1 + 0x78]\n 44169: i32 a0 = a0 + 0x20\n 44172: a5 = s1 + 0x200\n 44176: u64 [a5 + 0xe0] = a4\n 44180: u64 [a5 + 0xe8] = a3\n 44184: u64 [a5 + 0xf0] = a1\n 44188: a1 = s1 + 0x2e0\n 44192: u64 [a5 + 0xf8] = a2\n 44196: ra = 1650, jump @4\n      : @1503 [@dyn 825] (gas: 3)\n 44203: a1 = u64 [s1 + 0x50]\n 44206: a0 = a1 + 0x2\n 44209: t0 = 1652, jump @1566\n      : @1504 [@dyn 826] (gas: 7)\n 44215: u64 [a4 + 0x88] = a2\n 44219: u64 [a4 + 0x80] = a0\n 44223: u64 [a4 + 0x90] = a3\n 44227: u64 [a4 + 0x98] = a1\n 44231: a0 = s1 + 0x2c0\n 44235: a1 = s1 + 0x480\n 44239: ra = 1654, jump @6\n      : @1505 [@dyn 827] (gas: 3)\n 44246: a0 = u64 [s1 + 0x38]\n 44249: a0 = a0 + 0xffffffffffffffc0\n 44252: t0 = 1656, jump @1569\n      : @1506 [@dyn 828] (gas: 1)\n 44258: jump @1552 if a0 == 0\n      : @1507 (gas: 14)\n 44262: a5 = s1 + 0x200\n 44266: a4 = u64 [a5 + 0xd8]\n 44270: a1 = u64 [a5 + 0xd0]\n 44274: a2 = u64 [a5 + 0xc8]\n 44278: a3 = u64 [a5 + 0xc0]\n 44282: a0 = u64 [s1 + 0x78]\n 44285: i32 a0 = a0 + 0x40\n 44288: u64 [a5 + 0xa0] = a3\n 44292: u64 [a5 + 0xa8] = a2\n 44296: u64 [a5 + 0xb0] = a1\n 44300: a1 = s1 + 0x2a0\n 44304: u64 [a5 + 0xb8] = a4\n 44308: u64 [s1 + 0x18] = a0\n 44311: ra = 1658, jump @4\n      : @1508 [@dyn 829] (gas: 3)\n 44318: a1 = u64 [s1 + 0x50]\n 44321: a0 = a1 + 0x3\n 44324: t0 = 1660, jump @1566\n      : @1509 [@dyn 830] (gas: 7)\n 44330: u64 [a4 + 0xa8] = a2\n 44334: u64 [a4 + 0xa0] = a0\n 44338: u64 [a4 + 0xb0] = a3\n 44342: u64 [a4 + 0xb8] = a1\n 44346: a0 = s1 + 0x280\n 44350: a1 = s1 + 0x4a0\n 44354: ra = 1662, jump @6\n      : @1510 [@dyn 831] (gas: 4)\n 44361: a0 = 0x100000000\n 44371: u64 [s1 + 0x38] = a0\n 44374: a0 = 0xffffffa0\n 44384: t0 = 1664, jump @1569\n      : @1511 [@dyn 832] (gas: 1)\n 44390: jump @1552 if a0 == 0\n      : @1512 (gas: 14)\n 44394: a5 = s1 + 0x200\n 44398: a4 = u64 [a5 + 0x98]\n 44402: a1 = u64 [a5 + 0x90]\n 44406: a2 = u64 [a5 + 0x88]\n 44410: a3 = u64 [a5 + 0x80]\n 44414: a0 = u64 [s1 + 0x78]\n 44417: i32 a0 = a0 + 0x60\n 44420: u64 [a5 + 0x60] = a3\n 44423: u64 [a5 + 0x68] = a2\n 44426: u64 [a5 + 0x70] = a1\n 44429: a1 = s1 + 0x260\n 44433: u64 [a5 + 0x78] = a4\n 44436: u64 [s1 + 0x30] = a0\n 44439: ra = 1666, jump @4\n      : @1513 [@dyn 833] (gas: 3)\n 44446: a1 = u64 [s1 + 0x50]\n 44449: a0 = a1 + 0x4\n 44452: t0 = 1668, jump @1566\n      : @1514 [@dyn 834] (gas: 7)\n 44458: u64 [a4 + 0xc8] = a2\n 44462: u64 [a4 + 0xc0] = a0\n 44466: u64 [a4 + 0xd0] = a3\n 44470: u64 [a4 + 0xd8] = a1\n 44474: a0 = s1 + 0x240\n 44478: a1 = s1 + 0x4c0\n 44482: ra = 1670, jump @6\n      : @1515 [@dyn 835] (gas: 3)\n 44489: a0 = u64 [s1 + 0x38]\n 44492: a0 = a0 + 0xffffffffffffff80\n 44495: t0 = 1672, jump @1569\n      : @1516 [@dyn 836] (gas: 1)\n 44501: jump @1552 if a0 == 0\n      : @1517 (gas: 13)\n 44505: a5 = s1 + 0x200\n 44509: a2 = u64 [a5 + 0x58]\n 44512: a1 = u64 [a5 + 0x50]\n 44515: a3 = u64 [a5 + 0x48]\n 44518: a4 = u64 [a5 + 0x40]\n 44521: a0 = u64 [s1 + 0x78]\n 44524: i32 a0 = a0 + 0x80\n 44528: u64 [a5 + 0x20] = a4\n 44531: u64 [a5 + 0x28] = a3\n 44534: u64 [a5 + 0x30] = a1\n 44537: a1 = s1 + 0x220\n 44541: u64 [a5 + 0x38] = a2\n 44544: ra = 1674, jump @4\n      : @1518 [@dyn 837] (gas: 3)\n 44551: a1 = u64 [s1 + 0x50]\n 44554: a0 = a1 + 0x5\n 44557: t0 = 1676, jump @1566\n      : @1519 [@dyn 838] (gas: 7)\n 44563: u64 [a4 + 0xe8] = a2\n 44567: u64 [a4 + 0xe0] = a0\n 44571: u64 [a4 + 0xf0] = a3\n 44575: u64 [a4 + 0xf8] = a1\n 44579: a0 = s1 + 0x200\n 44583: a1 = s1 + 0x4e0\n 44587: ra = 1678, jump @6\n      : @1520 [@dyn 839] (gas: 4)\n 44594: a0 = 0x100000000\n 44604: u64 [s1 + 0x38] = a0\n 44607: a0 = 0xffffff60\n 44617: t0 = 1680, jump @1569\n      : @1521 [@dyn 840] (gas: 1)\n 44623: jump @1552 if a0 == 0\n      : @1522 (gas: 14)\n 44627: a0 = s1 + 0x200\n 44631: a2 = u64 [a0 + 0x18]\n 44634: a1 = u64 [a0 + 0x10]\n 44637: a3 = u64 [a0 + 0x8]\n 44640: a4 = u64 [a0]\n 44642: a0 = u64 [s1 + 0x78]\n 44645: i32 a0 = a0 + 0xa0\n 44649: a5 = s1 + 0x100\n 44653: u64 [a5 + 0xe0] = a4\n 44657: u64 [a5 + 0xe8] = a3\n 44661: u64 [a5 + 0xf0] = a1\n 44665: a1 = s1 + 0x1e0\n 44669: u64 [a5 + 0xf8] = a2\n 44673: ra = 1682, jump @4\n      : @1523 [@dyn 841] (gas: 3)\n 44680: a1 = u64 [s1 + 0x50]\n 44683: a0 = a1 + 0x6\n 44686: t0 = 1684, jump @1572\n      : @1524 [@dyn 842] (gas: 7)\n 44692: u64 [a4 + 0x8] = a2\n 44695: u64 [a4] = a0\n 44697: u64 [a4 + 0x10] = a3\n 44700: u64 [a4 + 0x18] = a1\n 44703: a0 = s1 + 0x1c0\n 44707: a1 = s1 + 0x500\n 44711: ra = 1686, jump @6\n      : @1525 [@dyn 843] (gas: 3)\n 44718: a0 = u64 [s1 + 0x38]\n 44721: a0 = a0 + 0xffffffffffffff40\n 44725: t0 = 1688, jump @1569\n      : @1526 [@dyn 844] (gas: 1)\n 44731: jump @1552 if a0 == 0\n      : @1527 (gas: 15)\n 44735: a4 = s1 + 0x100\n 44739: a0 = u64 [a4 + 0xd0]\n 44743: u64 [s1 + 0x38] = a0\n 44746: a1 = u64 [a4 + 0xc8]\n 44750: a2 = u64 [a4 + 0xc0]\n 44754: a0 = a0 << 0x20\n 44757: a3 = a0 >> 0x20\n 44760: a0 = u64 [s1 + 0x78]\n 44763: i32 a0 = a0 + 0xc0\n 44767: u64 [s1 + 440] = 0\n 44771: u64 [a4 + 0xa0] = a2\n 44775: u64 [a4 + 0xa8] = a1\n 44779: a1 = s1 + 0x1a0\n 44783: u64 [a4 + 0xb0] = a3\n 44787: ra = 1690, jump @4\n      : @1528 [@dyn 845] (gas: 4)\n 44794: a1 = u64 [s1 + 0x38]\n 44797: a1 = a1 << 0x18\n 44800: a1 = a1 >> 0x38\n 44803: jump @1553 if a1 >u 3\n      : @1529 (gas: 10)\n 44808: a0 = 0x100000000\n 44818: u64 [s1 + 0x38] = a0\n 44821: a0 = 0xffffff20\n 44831: a2 = u64 [s1 + 0x78]\n 44834: a0 = a2 <u a0\n 44837: a2 = u64 [s1 + 0x70]\n 44840: a0 = 0 if a2 != 0\n 44842: a2 = u64 [s1 + 0x48]\n 44845: a0 = 0 if a2 != 0\n 44847: jump @1552 if a0 == 0\n      : @1530 (gas: 8)\n 44851: a0 = u64 [s1 + 0x78]\n 44854: i32 a0 = a0 + 0xe0\n 44858: u64 [s1 + 408] = 0\n 44862: u64 [s1 + 400] = 0\n 44866: u64 [s1 + 0x180] = a1\n 44870: a1 = s1 + 0x180\n 44874: u64 [s1 + 392] = 0\n 44878: ra = 1692, jump @4\n      : @1531 [@dyn 846] (gas: 3)\n 44885: a1 = u64 [s1 + 0x50]\n 44888: a0 = a1 + 0x7\n 44891: t0 = 1694, jump @1572\n      : @1532 [@dyn 847] (gas: 7)\n 44897: u64 [a4 + 0x20] = a0\n 44900: u64 [a4 + 0x28] = a2\n 44903: u64 [a4 + 0x30] = a3\n 44906: u64 [a4 + 0x38] = a1\n 44909: a0 = s1 + 0x160\n 44913: a1 = s1 + 0x520\n 44917: ra = 1696, jump @6\n      : @1533 [@dyn 848] (gas: 3)\n 44924: a0 = u64 [s1 + 0x38]\n 44927: a0 = a0 + 0xffffffffffffff00\n 44931: t0 = 1698, jump @1569\n      : @1534 [@dyn 849] (gas: 1)\n 44937: jump @1552 if a0 == 0\n      : @1535 (gas: 13)\n 44941: a5 = s1 + 0x100\n 44945: a2 = u64 [a5 + 0x78]\n 44948: a1 = u64 [a5 + 0x70]\n 44951: a3 = u64 [a5 + 0x68]\n 44954: a4 = u64 [a5 + 0x60]\n 44957: a0 = u64 [s1 + 0x78]\n 44960: i32 a0 = a0 + 0x100\n 44964: u64 [a5 + 0x40] = a4\n 44967: u64 [a5 + 0x48] = a3\n 44970: u64 [a5 + 0x50] = a1\n 44973: a1 = s1 + 0x140\n 44977: u64 [a5 + 0x58] = a2\n 44980: ra = 1700, jump @4\n      : @1536 [@dyn 850] (gas: 3)\n 44987: a1 = u64 [s1 + 0x50]\n 44990: a0 = a1 + 0x8\n 44993: t0 = 1702, jump @1572\n      : @1537 [@dyn 851] (gas: 7)\n 44999: u64 [a4 + 0x48] = a2\n 45002: u64 [a4 + 0x40] = a0\n 45005: u64 [a4 + 0x50] = a3\n 45008: u64 [a4 + 0x58] = a1\n 45011: a0 = s1 + 0x120\n 45015: a1 = s1 + 0x540\n 45019: ra = 1704, jump @6\n      : @1538 [@dyn 852] (gas: 2)\n 45026: a0 = 0xfffffee0\n 45036: t0 = 1706, jump @1569\n      : @1539 [@dyn 853] (gas: 1)\n 45042: jump @1552 if a0 == 0\n      : @1540 (gas: 11)\n 45046: a0 = u64 [s1 + 0x120]\n 45050: a0 = a0 & 0xff\n 45054: a1 = a0 >u 0\n 45056: a0 = u64 [s1 + 0x78]\n 45059: i32 a0 = a0 + 0x120\n 45063: u64 [s1 + 280] = 0\n 45067: u64 [s1 + 272] = 0\n 45071: u64 [s1 + 0x100] = a1\n 45075: a1 = s1 + 0x100\n 45079: u64 [s1 + 264] = 0\n 45083: ra = 1708, jump @4\n      : @1541 [@dyn 854] (gas: 3)\n 45090: a0 = s1 + 0xe0\n 45094: a1 = u64 [s1 + 0x30]\n 45097: ra = 1710, jump @2\n      : @1542 [@dyn 855] (gas: 12)\n 45104: a0 = u64 [s1 + 0xe0]\n 45108: u64 [s1 + 0x78] = a0\n 45111: a0 = u64 [s1 + 0xe8]\n 45115: u64 [s1 + 0x70] = a0\n 45118: a0 = u64 [s1 + 0xf0]\n 45122: u64 [s1 + 0x68] = a0\n 45125: a0 = u64 [s1 + 0xf8]\n 45129: u64 [s1 + 0x60] = a0\n 45132: i32 a0 = s1 + 0x560\n 45136: ra = 0x6b0\n 45140: ecalli 8 // 'now'\n 45142: fallthrough\n      : @1543 [@dyn 856] (gas: 17)\n 45143: a1 = s1 + 0x500\n 45147: a0 = u64 [a1 + 0x78]\n 45150: t0 = u64 [s1 + 0x560]\n 45154: a2 = u64 [a1 + 0x70]\n 45157: a3 = u64 [a1 + 0x68]\n 45160: a1 = u64 [s1 + 0x60]\n 45163: a4 = a0 ^ a1\n 45166: a1 = a0 <u a1\n 45169: a0 = u64 [s1 + 0x68]\n 45172: a5 = a2 <u a0\n 45175: a5 = a1 if a4 != 0\n 45178: a1 = u64 [s1 + 0x70]\n 45181: t1 = a3 ^ a1\n 45184: a3 = a3 <u a1\n 45187: a1 = u64 [s1 + 0x78]\n 45190: a1 = t0 <u a1\n 45193: t0 = 1714, jump @1613\n      : @1544 [@dyn 857] (gas: 1)\n 45199: jump @1550 if a1 == 0\n      : @1545 (gas: 3)\n 45203: a0 = s1 + 0xc0\n 45207: a1 = u64 [s1 + 0x18]\n 45210: ra = 1716, jump @2\n      : @1546 [@dyn 858] (gas: 12)\n 45217: a0 = u64 [s1 + 0xc0]\n 45221: u64 [s1 + 0x78] = a0\n 45224: a0 = u64 [s1 + 0xc8]\n 45228: u64 [s1 + 0x70] = a0\n 45231: a0 = u64 [s1 + 0xd0]\n 45235: u64 [s1 + 0x68] = a0\n 45238: a0 = u64 [s1 + 0xd8]\n 45242: u64 [s1 + 0x60] = a0\n 45245: i32 a0 = s1 + 0x580\n 45249: ra = 0x6b6\n 45253: ecalli 8 // 'now'\n 45255: fallthrough\n      : @1547 [@dyn 859] (gas: 17)\n 45256: a1 = s1 + 0x500\n 45260: a0 = u64 [a1 + 0x98]\n 45264: t0 = u64 [s1 + 0x580]\n 45268: a2 = u64 [a1 + 0x90]\n 45272: a3 = u64 [a1 + 0x88]\n 45276: a1 = u64 [s1 + 0x60]\n 45279: a4 = a0 ^ a1\n 45282: a1 = a0 <u a1\n 45285: a0 = u64 [s1 + 0x68]\n 45288: a5 = a2 <u a0\n 45291: a5 = a1 if a4 != 0\n 45294: a1 = u64 [s1 + 0x70]\n 45297: t1 = a3 ^ a1\n 45300: a3 = a3 <u a1\n 45303: a1 = u64 [s1 + 0x78]\n 45306: a1 = t0 <u a1\n 45309: t0 = 1720, jump @1613\n      : @1548 [@dyn 860] (gas: 5)\n 45315: a0 = a1 <u 0x3\n 45318: a0 = a0 + 0xffffffffffffffff\n 45321: a1 = 0x2 - a1\n 45324: a2 = a0\n 45326: jump @1551\n      : @1549 (gas: 3)\n 45328: a1 = 0\n 45330: a2 = 0\n 45332: jump @1551\n      : @1550 (gas: 4)\n 45334: a0 = 0\n 45336: a2 = 0\n 45338: a1 = 0x3\n 45341: fallthrough\n      : @1551 (gas: 12)\n 45342: a3 = u64 [s1 + 0x40]\n 45345: u64 [a3] = a1\n 45347: u64 [a3 + 0x8] = a0\n 45350: u64 [a3 + 0x10] = a2\n 45353: u64 [a3 + 0x18] = a0\n 45356: sp = s0 + 0xfffffffffffffa40\n 45360: a0 = sp + 0x500\n 45364: ra = u64 [a0 + 0xb8]\n 45368: s0 = u64 [a0 + 0xb0]\n 45372: s1 = u64 [a0 + 0xa8]\n 45376: sp = sp + 0x5c0\n 45380: ret\n      : @1552 (gas: 1)\n 45382: trap\n      : @1553 (gas: 1)\n 45383: t0 = 1722, jump @1610\n      : @1554 [@dyn 861] (gas: 1)\n 45389: ra = 1724, jump @4\n      : @1555 [@dyn 862] (gas: 7)\n 45396: u64 [s1 + 152] = 0\n 45400: u64 [s1 + 144] = 0\n 45404: u64 [s1 + 128] = 0x21\n 45409: a0 = 0x4\n 45412: a1 = s1 + 0x80\n 45416: u64 [s1 + 136] = 0\n 45420: ra = 1726, jump @4\n      : @1556 [@dyn 863] (gas: 3)\n 45427: a0 = u64 [s1 + 0x28]\n 45430: a0 = i32 [a0]\n 45432: jump @1558 if a0 >u 63\n      : @1557 (gas: 3)\n 45436: a1 = u64 [s1 + 0x28]\n 45439: u32 [a1 + 0] = 0x40\n 45442: fallthrough\n      : @1558 (gas: 7)\n 45443: a0 = 0x1\n 45446: a2 = 0x24\n 45449: a1 = u64 [s1 + 0x20]\n 45452: ecalli 12 // 'seal_return'\n 45454: a0 = 0\n 45456: ra = 0x6c0\n 45460: jump @22\n      : @1559 [export #0: 'call'] (gas: 2)\n 45464: a0 = 0\n 45466: ra = 1728, jump @22\n      : @1560 [@dyn 864] [export #1: 'deploy'] (gas: 2)\n 45473: a0 = 0x1\n 45476: ra = 1730, jump @22\n      : @1561 [@dyn 865] (gas: 12)\n 45483: a5 = s1 + 0x100\n 45487: a1 = u64 [a5 + 0xb8]\n 45491: a0 = u64 [a5 + 0xa8]\n 45495: a3 = u64 [a5 + 0xa0]\n 45499: a3 = a3 | a0\n 45502: a4 = 0x100000000\n 45512: a0 = 0xfffffffc\n 45522: a0 = a1 <u a0\n 45525: a2 = u64 [a5 + 0xb0]\n 45529: a0 = 0 if a2 != 0\n 45531: a0 = 0 if a3 != 0\n 45533: jump [t0]\n      : @1562 (gas: 7)\n 45535: a4 = 0x100000000\n 45545: a0 = 0xfffffffc\n 45555: a0 = a1 <u a0\n 45558: a2 = u64 [a5 + 0xb0]\n 45562: a0 = 0 if a2 != 0\n 45564: a0 = 0 if a3 != 0\n 45566: jump [t0]\n      : @1563 (gas: 18)\n 45568: a0 = u64 [a3]\n 45570: a1 = u64 [a3 + 0x8]\n 45573: a2 = u64 [a3 + 0x10]\n 45576: a3 = u64 [a3 + 0x18]\n 45579: a0 = reverse a0\n 45581: a1 = reverse a1\n 45583: a2 = reverse a2\n 45585: a3 = reverse a3\n 45587: a4 = a3 + 0x6\n 45590: a3 = a4 <u a3\n 45593: a5 = a2 + a3\n 45596: a2 = a5 <u a2\n 45599: a2 = a3 if a3 == 0\n 45602: a2 = a2 + a1\n 45605: a1 = a2 <u a1\n 45608: a0 = a0 + a1\n 45611: a1 = s1 + 0x3938\n 45615: jump [t0]\n      : @1564 (gas: 13)\n 45617: a1 = a0 <u a1\n 45620: a3 = u64 [s1 + 0x1b0]\n 45624: a2 = a3 + a1\n 45627: a3 = a2 <u a3\n 45630: a3 = a1 if a1 == 0\n 45633: a1 = u64 [s1 + 0x1a0]\n 45637: a3 = a3 + a1\n 45640: a1 = a3 <u a1\n 45643: a4 = u64 [s1 + 0x1b8]\n 45647: a1 = a1 + a4\n 45650: a4 = s1 + 0x3138\n 45654: a5 = a4 + 0x500\n 45658: jump [t0]\n      : @1565 (gas: 10)\n 45660: a4 = s1 + 0x100\n 45664: a3 = u64 [a4 + 0xa8]\n 45668: a2 = u64 [a4 + 0xb0]\n 45672: a1 = u64 [a4 + 0xb8]\n 45676: a0 = u64 [a4 + 0xa0]\n 45680: a0 = a0 + 0xffffffffffffffdc\n 45683: a0 = a1 <u a0\n 45686: a0 = 0 if a2 != 0\n 45688: a0 = 0 if a3 != 0\n 45690: jump [t0]\n      : @1566 (gas: 12)\n 45692: a1 = a0 <u a1\n 45695: a3 = u64 [s1 + 0x58]\n 45698: a2 = a3 + a1\n 45701: a3 = a2 <u a3\n 45704: a3 = a1 if a1 == 0\n 45707: a1 = u64 [s1 + 0x68]\n 45710: a3 = a3 + a1\n 45713: a1 = a3 <u a1\n 45716: a4 = u64 [s1 + 0x60]\n 45719: a1 = a1 + a4\n 45722: a4 = s1 + 0x400\n 45726: jump [t0]\n      : @1567 (gas: 9)\n 45728: a2 = s1 + 0x100\n 45732: a3 = u64 [a2 + 0xb8]\n 45736: a0 = 0xffffffbc\n 45746: a0 = a3 <u a0\n 45749: a1 = u64 [a2 + 0xb0]\n 45753: a0 = 0 if a1 != 0\n 45755: a1 = u64 [a2 + 0xa8]\n 45759: a0 = 0 if a1 != 0\n 45761: jump [t0]\n      : @1568 (gas: 11)\n 45763: a2 = u64 [sp + 0x8]\n 45766: a2 = a2 | s1\n 45769: s1 = 0x100000000\n 45779: a0 = 0xfffffffc\n 45789: a1 = u64 [sp + 0x18]\n 45792: a0 = a1 <u a0\n 45795: a1 = u64 [sp + 0x10]\n 45798: a0 = 0 if a1 != 0\n 45800: u64 [sp + 0x8] = a2\n 45803: a0 = 0 if a2 != 0\n 45805: jump [t0]\n      : @1569 (gas: 7)\n 45807: a1 = u64 [s1 + 0x78]\n 45810: a0 = a1 <u a0\n 45813: a1 = u64 [s1 + 0x70]\n 45816: a0 = 0 if a1 != 0\n 45818: a1 = u64 [s1 + 0x48]\n 45821: a0 = 0 if a1 != 0\n 45823: jump [t0]\n      : @1570 (gas: 20)\n 45825: a3 = u64 [s1 + 0x188]\n 45829: a0 = u64 [a3]\n 45831: a1 = u64 [a3 + 0x8]\n 45834: a2 = u64 [a3 + 0x10]\n 45837: a3 = u64 [a3 + 0x18]\n 45840: a0 = reverse a0\n 45842: a1 = reverse a1\n 45844: a2 = reverse a2\n 45846: a3 = reverse a3\n 45848: a4 = a3 + 0x5\n 45851: a3 = a4 <u a3\n 45854: a5 = a2 + a3\n 45857: a2 = a5 <u a2\n 45860: a2 = a3 if a3 == 0\n 45863: a2 = a2 + a1\n 45866: a1 = a2 <u a1\n 45869: a0 = a0 + a1\n 45872: a1 = s1 + 0x3138\n 45876: a3 = a1 + 0x700\n 45880: jump [t0]\n      : @1571 (gas: 25)\n 45882: a5 = s1 + 0x100\n 45886: a2 = u64 [a5 + 0xa0]\n 45890: a0 = u64 [a2 + 0x8]\n 45893: a1 = u64 [a2]\n 45895: a2 = i32 [a2 + 0x10]\n 45898: a0 = reverse a0\n 45900: a3 = a0 >> 0x20\n 45903: a1 = reverse a1\n 45905: a4 = a1 << 0x20\n 45908: a3 = a3 | a4\n 45911: a0 = a0 << 0x20\n 45914: a2 = reverse a2\n 45916: a2 = a2 >> 0x20\n 45919: a0 = a0 | a2\n 45922: a1 = a1 >> 0x20\n 45925: a2 = u64 [a5 + 0xa8]\n 45929: a1 = a1 ^ a2\n 45932: a2 = u64 [a5 + 0xb0]\n 45936: a0 = a0 ^ a2\n 45939: a0 = a0 | a1\n 45942: a1 = u64 [a5 + 0xb8]\n 45946: a1 = a1 ^ a3\n 45949: a0 = a0 | a1\n 45952: a0 = a0 <u 0x1\n 45955: jump [t0]\n      : @1572 (gas: 12)\n 45957: a1 = a0 <u a1\n 45960: a3 = u64 [s1 + 0x58]\n 45963: a2 = a3 + a1\n 45966: a3 = a2 <u a3\n 45969: a3 = a1 if a1 == 0\n 45972: a1 = u64 [s1 + 0x68]\n 45975: a3 = a3 + a1\n 45978: a1 = a3 <u a1\n 45981: a4 = u64 [s1 + 0x60]\n 45984: a1 = a1 + a4\n 45987: a4 = s1 + 0x500\n 45991: jump [t0]\n      : @1573 (gas: 19)\n 45993: a3 = u64 [s1 + 0x1b8]\n 45997: a0 = u64 [a3 + 0x18]\n 46000: a1 = u64 [a3 + 0x10]\n 46003: a2 = u64 [a3 + 0x8]\n 46006: a3 = u64 [a3]\n 46008: a5 = reverse a0\n 46010: u64 [s1 + 0x1a8] = a5\n 46014: a4 = reverse a1\n 46016: u64 [s1 + 0x1b0] = a4\n 46020: a2 = reverse a2\n 46022: u64 [s1 + 0x1a0] = a2\n 46026: a0 = reverse a3\n 46028: u64 [s1 + 0x1b8] = a0\n 46032: a1 = u64 [s1 + 0x190]\n 46036: u64 [a1 + 0x18] = a0\n 46039: u64 [a1 + 0x10] = a2\n 46042: u64 [a1 + 0x8] = a4\n 46045: u64 [a1] = a5\n 46047: jump [t0]\n      : @1574 (gas: 10)\n 46049: a0 = u64 [a3 + 0x18]\n 46052: a1 = u64 [a3 + 0x10]\n 46055: a2 = u64 [a3 + 0x8]\n 46058: a3 = u64 [a3]\n 46060: a0 = reverse a0\n 46062: a1 = reverse a1\n 46064: a2 = reverse a2\n 46066: a3 = reverse a3\n 46068: a4 = s1 + 0x3938\n 46072: jump [t0]\n      : @1575 (gas: 19)\n 46074: a3 = u64 [s1 + 0x1b0]\n 46078: a0 = u64 [a3 + 0x18]\n 46081: a1 = u64 [a3 + 0x10]\n 46084: a2 = u64 [a3 + 0x8]\n 46087: a3 = u64 [a3]\n 46089: a0 = reverse a0\n 46091: a1 = reverse a1\n 46093: a2 = reverse a2\n 46095: a3 = reverse a3\n 46097: a4 = u64 [s1 + 0x1b8]\n 46101: u64 [s1 + 0x198] = a3\n 46105: u64 [a4 + 0x18] = a3\n 46108: u64 [s1 + 0x1a0] = a2\n 46112: u64 [a4 + 0x10] = a2\n 46115: u64 [s1 + 0x1a8] = a1\n 46119: u64 [a4 + 0x8] = a1\n 46122: u64 [s1 + 0x1b0] = a0\n 46126: u64 [a4] = a0\n 46128: jump [t0]\n      : @1576 (gas: 8)\n 46130: a0 = sp + 0xffffffffffffffe0\n 46133: a0 = a0 & 0xffffffffffffffe0\n 46136: u64 [s1 + 0x188] = a0\n 46140: sp = a0\n 46142: i32 a2 = a0 + 0\n 46144: a1 = 0x40\n 46147: a0 = u64 [s1 + 0x198]\n 46151: jump [t0]\n      : @1577 (gas: 8)\n 46153: a0 = a0 | a2\n 46156: a2 = a4 | a1\n 46159: a2 = a2 | a0\n 46162: a2 = a2 >> 0x20\n 46165: a0 = a0 | a1\n 46168: a0 = a0 << 0x20\n 46171: a0 = a0 | a2\n 46174: jump [t0]\n      : @1578 (gas: 9)\n 46176: a3 = s1 + 0x100\n 46180: a2 = u64 [a3 + 0xb8]\n 46184: a0 = 0xffffffbc\n 46194: a0 = a2 <u a0\n 46197: a1 = u64 [a3 + 0xb0]\n 46201: a0 = 0 if a1 != 0\n 46203: a1 = u64 [a3 + 0xa8]\n 46207: a0 = 0 if a1 != 0\n 46209: jump [t0]\n      : @1579 (gas: 5)\n 46211: sp = a0\n 46213: i32 a2 = a0 + 0\n 46215: a1 = 0x40\n 46218: a0 = u64 [s1 + 0x198]\n 46222: jump [t0]\n      : @1580 (gas: 8)\n 46224: u64 [sp + 48] = 0\n 46227: u64 [sp + 40] = 0\n 46230: u64 [sp + 32] = 0\n 46233: a0 = 0x4e487b7100000000\n 46243: a1 = sp + 0x20\n 46246: u64 [sp + 0x38] = a0\n 46249: a0 = 0\n 46251: jump [t0]\n      : @1581 (gas: 8)\n 46253: a0 = s1 + 0xffffffffffffffdc\n 46256: a1 = u64 [sp + 0x18]\n 46259: a0 = a1 <u a0\n 46262: a1 = u64 [sp + 0x10]\n 46265: a0 = 0 if a1 != 0\n 46267: a1 = u64 [sp + 0x8]\n 46270: a0 = 0 if a1 != 0\n 46272: jump [t0]\n      : @1582 (gas: 17)\n 46274: a2 = u64 [s1 + 0x1b8]\n 46278: a0 = u64 [a2 + 0x8]\n 46281: a1 = i32 [a2 + 0x10]\n 46284: a2 = u64 [a2]\n 46286: a0 = reverse a0\n 46288: a3 = a0 << 0x20\n 46291: a1 = reverse a1\n 46293: a1 = a1 >> 0x20\n 46296: a3 = a3 | a1\n 46299: a0 = a0 >> 0x20\n 46302: a1 = reverse a2\n 46304: a2 = a1 << 0x20\n 46307: a0 = a0 | a2\n 46310: a1 = a1 >> 0x20\n 46313: a2 = s1 + 0x7ff\n 46317: a2 = a2 + 0x131\n 46321: jump [t0]\n      : @1583 (gas: 15)\n 46323: a2 = u64 [sp + 0xb8]\n 46327: s1 = u64 [sp + 0xb0]\n 46331: a0 = u64 [sp + 0xa8]\n 46335: a1 = u64 [sp + 0xa0]\n 46339: u64 [sp + 0x10] = a0\n 46342: u64 [sp + 0x8] = a2\n 46345: a0 = a0 | a2\n 46348: u64 [sp + 0x18] = a1\n 46351: a1 = a1 | s1\n 46354: a1 = a1 | a0\n 46357: a1 = a1 >> 0x20\n 46360: a0 = a0 | s1\n 46363: a0 = a0 << 0x20\n 46366: a0 = a0 | a1\n 46369: jump [t0]\n      : @1584 (gas: 13)\n 46371: a1 = a0 <u a1\n 46374: a3 = u64 [s1 + 0x198]\n 46378: a2 = a3 + a1\n 46381: a3 = a2 <u a3\n 46384: a3 = a1 if a1 == 0\n 46387: a1 = u64 [s1 + 0x1a8]\n 46391: a3 = a3 + a1\n 46394: a1 = a3 <u a1\n 46397: a4 = u64 [s1 + 0x1a0]\n 46401: a1 = a1 + a4\n 46404: a4 = s1 + 0x4138\n 46408: a5 = a4 + 0x300\n 46412: jump [t0]\n      : @1585 (gas: 13)\n 46414: a1 = a0 <u a1\n 46417: a3 = u64 [s1 + 0x1b0]\n 46421: a2 = a3 + a1\n 46424: a3 = a2 <u a3\n 46427: a3 = a1 if a1 == 0\n 46430: a1 = u64 [s1 + 0x1a0]\n 46434: a3 = a3 + a1\n 46437: a1 = a3 <u a1\n 46440: a4 = u64 [s1 + 0x1b8]\n 46444: a1 = a1 + a4\n 46447: a4 = s1 + 0x3138\n 46451: a5 = a4 + 0x600\n 46455: jump [t0]\n      : @1586 (gas: 14)\n 46457: sp = sp + 0xffffffffffffff20\n 46461: u64 [sp + 0xd8] = ra\n 46465: u64 [sp + 0xd0] = s0\n 46469: u64 [sp + 0xc8] = s1\n 46473: s0 = sp + 0xe0\n 46477: sp = sp & 0xfffffffffffffff0\n 46480: a1 = u64 [a0 + 0x10]\n 46483: a2 = u64 [a0 + 0x18]\n 46486: a3 = u64 [a0 + 0x8]\n 46489: a0 = u64 [a0]\n 46491: a2 = a2 | a3\n 46494: a0 = a0 | a1\n 46497: a0 = a0 | a2\n 46500: jump [t0]\n      : @1587 (gas: 15)\n 46502: a0 = u64 [a3 + 0x18]\n 46505: a1 = u64 [a3 + 0x10]\n 46508: a2 = u64 [a3 + 0x8]\n 46511: a3 = u64 [a3]\n 46513: a0 = reverse a0\n 46515: u64 [s1 + 0x188] = a0\n 46519: a0 = reverse a1\n 46521: u64 [s1 + 0x180] = a0\n 46525: a0 = reverse a2\n 46527: u64 [s1 + 0x178] = a0\n 46531: a0 = reverse a3\n 46533: u64 [s1 + 0x170] = a0\n 46537: a0 = sp + 0xffffffffffffffe0\n 46540: a0 = a0 & 0xffffffffffffffe0\n 46543: jump [t0]\n      : @1588 (gas: 18)\n 46545: a1 = a0 <u a1\n 46548: a3 = u64 [a5 + 0x90]\n 46552: a2 = a3 + a1\n 46555: a3 = a2 <u a3\n 46558: a3 = a1 if a1 == 0\n 46561: a1 = u64 [a5 + 0x80]\n 46565: a3 = a3 + a1\n 46568: a1 = a3 <u a1\n 46571: a4 = u64 [a5 + 0x88]\n 46575: a1 = a1 + a4\n 46578: a4 = a0 | a3\n 46581: a1 = a1 | a2\n 46584: a4 = a4 | a1\n 46587: a4 = a4 >> 0x20\n 46590: a1 = a1 | a3\n 46593: a1 = a1 << 0x20\n 46596: a1 = a1 | a4\n 46599: jump [t0]\n      : @1589 (gas: 7)\n 46601: a0 = 0xffffffbc\n 46611: a0 = s1 <u a0\n 46614: a1 = u64 [sp + 0x10]\n 46617: a0 = 0 if a1 != 0\n 46619: a1 = u64 [sp + 0x8]\n 46622: a0 = 0 if a1 != 0\n 46624: jump [t0]\n      : @1590 (gas: 12)\n 46626: a1 = a0 <u a1\n 46629: a3 = u64 [s1 + 0x180]\n 46633: a2 = a3 + a1\n 46636: a3 = a2 <u a3\n 46639: a3 = a1 if a1 == 0\n 46642: a1 = u64 [s1 + 0x190]\n 46646: a3 = a3 + a1\n 46649: a1 = a3 <u a1\n 46652: a4 = u64 [s1 + 0x188]\n 46656: a1 = a1 + a4\n 46659: a4 = s1 + 0x4138\n 46663: jump [t0]\n      : @1591 (gas: 12)\n 46665: a3 = u64 [s1 + 0x1b8]\n 46669: a0 = u64 [a3 + 0x18]\n 46672: a1 = u64 [a3 + 0x10]\n 46675: a2 = u64 [a3 + 0x8]\n 46678: a3 = u64 [a3]\n 46680: a0 = reverse a0\n 46682: a1 = reverse a1\n 46684: a2 = reverse a2\n 46686: a3 = reverse a3\n 46688: a4 = s1 + 0x4138\n 46692: a5 = a4 + 0x500\n 46696: jump [t0]\n      : @1592 (gas: 9)\n 46698: a0 = u64 [a3 + 0x18]\n 46701: a1 = u64 [a3 + 0x10]\n 46704: a2 = u64 [a3 + 0x8]\n 46707: a3 = u64 [a3]\n 46709: a5 = reverse a0\n 46711: a4 = reverse a1\n 46713: a0 = reverse a2\n 46715: a1 = reverse a3\n 46717: jump [t0]\n      : @1593 (gas: 8)\n 46719: a4 = a4 | a2\n 46722: a2 = a0 | a1\n 46725: a2 = a2 | a4\n 46728: a2 = a2 >> 0x20\n 46731: a1 = a1 | a4\n 46734: a1 = a1 << 0x20\n 46737: a1 = a1 | a2\n 46740: jump [t0]\n      : @1594 (gas: 15)\n 46742: a0 = u64 [a3 + 0x18]\n 46745: a1 = u64 [a3 + 0x10]\n 46748: a2 = u64 [a3 + 0x8]\n 46751: a3 = u64 [a3]\n 46753: a0 = reverse a0\n 46755: a4 = reverse a1\n 46757: a2 = reverse a2\n 46759: a3 = reverse a3\n 46761: a1 = u64 [s1 + 0x180]\n 46765: u64 [a1 + 0x18] = a3\n 46768: u64 [a1 + 0x10] = a2\n 46771: u64 [a1 + 0x8] = a4\n 46774: u64 [a1] = a0\n 46776: a0 = 0x2000\n 46780: jump [t0]\n      : @1595 (gas: 12)\n 46782: a1 = a0 <u a1\n 46785: a3 = u64 [s1 + 0x30]\n 46788: a2 = a3 + a1\n 46791: a3 = a2 <u a3\n 46794: a3 = a1 if a1 == 0\n 46797: a1 = u64 [s1 + 0x38]\n 46800: a3 = a3 + a1\n 46803: a1 = a3 <u a1\n 46806: a4 = u64 [s1 + 0x40]\n 46809: a1 = a1 + a4\n 46812: a4 = s1 + 0x4138\n 46816: jump [t0]\n      : @1596 (gas: 14)\n 46818: a4 = a1 <u t1\n 46821: a5 = a0 + a4\n 46824: a0 = a5 <u a0\n 46827: a0 = a4 if a4 == 0\n 46830: a0 = a0 + a2\n 46833: a2 = a0 <u a2\n 46836: a2 = a2 + a3\n 46839: u64 [sp + 0x40] = a1\n 46842: u64 [sp + 0x48] = a5\n 46845: u64 [sp + 0x50] = a0\n 46848: a0 = 0x40\n 46851: a1 = sp + a0\n 46854: u64 [sp + 0x58] = a2\n 46857: jump [t0]\n      : @1597 (gas: 11)\n 46859: a3 = u64 [s1 + 0x1b8]\n 46863: a0 = u64 [a3 + 0x18]\n 46866: a1 = u64 [a3 + 0x10]\n 46869: a2 = u64 [a3 + 0x8]\n 46872: a3 = u64 [a3]\n 46874: a0 = reverse a0\n 46876: a1 = reverse a1\n 46878: a2 = reverse a2\n 46880: a3 = reverse a3\n 46882: a4 = s1 + 0x4138\n 46886: jump [t0]\n      : @1598 (gas: 8)\n 46888: a0 = sp + 0xffffffffffffffe0\n 46891: a0 = a0 & 0xffffffffffffffe0\n 46894: u64 [s1 + 0x1b8] = a0\n 46898: sp = a0\n 46900: i32 a2 = a0 + 0\n 46902: a1 = 0x40\n 46905: a0 = u64 [s1 + 0xf8]\n 46909: jump [t0]\n      : @1599 (gas: 8)\n 46911: u64 [sp + 144] = 0\n 46915: u64 [sp + 136] = 0\n 46919: u64 [sp + 128] = 0\n 46923: a0 = 0x8c379a000000000\n 46933: a1 = sp + 0x80\n 46937: u64 [sp + 0x98] = a0\n 46941: a0 = u64 [sp + 0x18]\n 46944: jump [t0]\n      : @1600 (gas: 13)\n 46946: sp = sp + 0xffffffffffffff90\n 46949: u64 [sp + 0x68] = ra\n 46952: u64 [sp + 0x60] = s0\n 46955: s0 = sp + 0x70\n 46958: sp = sp & 0xfffffffffffffff0\n 46961: a3 = u64 [a0 + 0x18]\n 46964: a2 = u64 [a0 + 0x10]\n 46967: t1 = u64 [a0]\n 46969: a0 = u64 [a0 + 0x8]\n 46972: a4 = a3 >u 0\n 46974: a5 = a2 >u 0\n 46976: a5 = a4 if a3 != 0\n 46979: jump [t0]\n      : @1601 (gas: 7)\n 46981: a1 = a0 | a3\n 46984: a1 = a1 | a2\n 46987: a1 = a1 >> 0x20\n 46990: a2 = a2 | a3\n 46993: a2 = a2 << 0x20\n 46996: a1 = a1 | a2\n 46999: jump [t0]\n      : @1602 (gas: 5)\n 47001: sp = a0\n 47003: i32 a2 = a0 + 0\n 47005: a1 = 0x40\n 47008: a0 = u64 [s1 + 0x130]\n 47012: jump [t0]\n      : @1603 (gas: 5)\n 47014: a0 = sp + 0xffffffffffffffe0\n 47017: a2 = a0 & 0xffffffffffffffe0\n 47020: u64 [s1 + 0x1b8] = a2\n 47024: sp = a2\n 47026: jump [t0]\n      : @1604 (gas: 7)\n 47028: a0 = sp + 0xffffffffffffffe0\n 47031: a0 = a0 & 0xffffffffffffffe0\n 47034: u64 [s1 + 0x1b8] = a0\n 47038: sp = a0\n 47040: i32 a2 = a0 + 0\n 47042: a1 = 0x20\n 47045: jump [t0]\n      : @1605 (gas: 10)\n 47047: a0 = u64 [a4 + 0xc8]\n 47051: a1 = u64 [a4 + 0xd0]\n 47055: a2 = u64 [a4 + 0xd8]\n 47059: a3 = u64 [a4 + 0xe0]\n 47063: a4 = 0xffffff00ffffffff\n 47073: a2 = a2 & a4\n 47076: a4 = 0x300000000\n 47086: a2 = a2 | a4\n 47089: a4 = s1 + 0x4138\n 47093: jump [t0]\n      : @1606 (gas: 5)\n 47095: a0 = reverse a0\n 47097: a1 = reverse a1\n 47099: a2 = reverse a2\n 47101: a3 = reverse a3\n 47103: jump [t0]\n      : @1607 (gas: 4)\n 47105: i32 a0 = a0 + 0x138\n 47109: a3 = s1 + a0\n 47112: a4 = a3 + 0x400\n 47116: jump [t0]\n      : @1608 (gas: 8)\n 47118: a0 = u64 [a4 + 0x38]\n 47121: a1 = u64 [a4 + 0x40]\n 47124: a2 = u64 [a4 + 0x30]\n 47127: a3 = u64 [a4 + 0x28]\n 47130: a1 = a1 | a2\n 47133: a0 = a0 | a3\n 47136: a0 = a0 | a1\n 47139: jump [t0]\n      : @1609 (gas: 11)\n 47141: a4 = a0 <u a2\n 47144: a3 = u64 [s1 + 0x30]\n 47147: a2 = a3 + a4\n 47150: a3 = a2 <u a3\n 47153: a3 = a4 if a4 == 0\n 47156: a4 = u64 [s1 + 0x38]\n 47159: a3 = a3 + a4\n 47162: a4 = a3 <u a4\n 47165: a5 = u64 [s1 + 0x40]\n 47168: a4 = a4 + a5\n 47171: jump [t0]\n      : @1610 (gas: 8)\n 47173: u64 [s1 + 176] = 0\n 47177: u64 [s1 + 168] = 0\n 47181: u64 [s1 + 160] = 0\n 47185: a0 = 0x4e487b7100000000\n 47195: a1 = s1 + 0xa0\n 47199: u64 [s1 + 0xb8] = a0\n 47203: a0 = 0\n 47205: jump [t0]\n      : @1611 (gas: 9)\n 47207: a1 = a0 <u a1\n 47210: a3 = u64 [s1 + 0x178]\n 47214: a2 = a3 + a1\n 47217: a3 = a2 <u a3\n 47220: a3 = a1 if a1 == 0\n 47223: a1 = u64 [s1 + 0x190]\n 47227: a3 = a3 + a1\n 47230: a1 = a3 <u a1\n 47233: jump [t0]\n      : @1612 (gas: 10)\n 47235: a2 = s1 + 0x100\n 47239: a4 = u64 [a2 + 0xa8]\n 47243: a3 = u64 [a2 + 0xb0]\n 47247: a1 = u64 [a2 + 0xb8]\n 47251: a0 = u64 [a2 + 0xa0]\n 47255: a0 = a0 + 0xffffffffffffffdc\n 47258: a0 = a1 <u a0\n 47261: a0 = 0 if a3 != 0\n 47263: a0 = 0 if a4 != 0\n 47265: jump [t0]\n      : @1613 (gas: 5)\n 47267: a1 = a3 if t1 != 0\n 47270: a0 = a0 ^ a2\n 47273: a0 = a0 | a4\n 47276: a1 = a5 if a0 != 0\n 47279: jump [t0]\n      : @1614 (gas: 8)\n 47281: a0 = u64 [sp + 0x18]\n 47284: i32 a0 = a0 + 0x4\n 47287: u64 [sp + 120] = 0\n 47290: u64 [sp + 112] = 0\n 47293: u64 [sp + 96] = 0x20\n 47297: a1 = sp + 0x60\n 47300: u64 [sp + 104] = 0\n 47303: jump [t0]\n      : @1615 (gas: 8)\n 47305: a1 = s1 + a0\n 47308: u64 [a1 + 896] = 0\n 47312: u64 [a1 + 888] = 0\n 47316: u64 [a1 + 872] = 0x5\n 47321: a2 = a1\n 47323: a0 = 0x20\n 47326: a1 = 0x3000\n 47330: jump [t0]\n      : @1616 (gas: 4)\n 47332: a0 = 0x4138\n 47336: a3 = s1 + a0\n 47339: a4 = a3 + 0x500\n 47343: jump [t0]\n      : @1617 (gas: 9)\n 47345: a0 = u64 [a3 + 0x18]\n 47348: a1 = u64 [a3 + 0x10]\n 47351: a2 = u64 [a3 + 0x8]\n 47354: a3 = u64 [a3]\n 47356: a0 = reverse a0\n 47358: a4 = reverse a1\n 47360: a2 = reverse a2\n 47362: a3 = reverse a3\n 47364: jump [t0]\n      : @1618 (gas: 6)\n 47366: a0 = a1 <u a0\n 47369: a2 = u64 [a3 + 0x90]\n 47373: a0 = 0 if a2 != 0\n 47375: a2 = u64 [a3 + 0x88]\n 47379: a0 = 0 if a2 != 0\n 47381: jump [t0]\n      : @1619 (gas: 8)\n 47383: a0 = sp + 0xffffffffffffffe0\n 47386: a0 = a0 & 0xffffffffffffffe0\n 47389: u64 [s1 + 0x188] = a0\n 47393: sp = a0\n 47395: i32 a2 = a0 + 0\n 47397: a1 = 0x40\n 47400: a0 = u64 [s1 + 0x190]\n 47404: jump [t0]\n      : @1620 (gas: 5)\n 47406: a0 = sp + 0xffffffffffffffe0\n 47409: a0 = a0 & 0xffffffffffffffe0\n 47412: u64 [s1 + 0x1b8] = a0\n 47416: sp = a0\n 47418: jump [t0]\n      : @1621 (gas: 6)\n 47420: a1 = u64 [s1 + 0x1a0]\n 47424: a3 = a3 + a1\n 47427: a1 = a3 <u a1\n 47430: a4 = u64 [s1 + 0x1b8]\n 47434: a1 = a1 + a4\n 47437: jump [t0]\n      : @1622 (gas: 4)\n 47439: a2 = a0\n 47441: a0 = 0x4e487b7100000000\n 47451: a1 = s1 + 0x7ff\n 47455: jump [t0]\n      : @1623 (gas: 4)\n 47457: a2 = a3 + a1\n 47460: a3 = a2 <u a3\n 47463: a3 = a1 if a1 == 0\n 47466: jump [t0]\n      : @1624 (gas: 6)\n 47468: sp = s0 + 0xffffffffffffff20\n 47472: ra = u64 [sp + 0xd8]\n 47476: s0 = u64 [sp + 0xd0]\n 47480: s1 = u64 [sp + 0xc8]\n 47484: sp = sp + 0xe0\n 47488: jump [t0]\n      : @1625 (gas: 4)\n 47490: a0 = u64 [s1 + 0x1b8]\n 47494: a0 = i32 [a0]\n 47496: a1 = 0x23\n 47499: jump [t0]\n      : @1626 (gas: 8)\n 47501: u64 [sp + 64] = 0\n 47504: u64 [sp + 56] = 0\n 47507: u64 [sp + 48] = 0\n 47510: a0 = 0x4e487b7100000000\n 47520: a1 = sp + 0x30\n 47523: u64 [sp + 0x48] = a0\n 47526: a0 = 0\n 47528: jump [t0]\n      : @1627 (gas: 5)\n 47530: a0 = sp + 0xffffffffffffffe0\n 47533: a2 = a0 & 0xffffffffffffffe0\n 47536: u64 [s1 + 0x1b0] = a2\n 47540: sp = a2\n 47542: jump [t0]\n      : @1628 (gas: 7)\n 47544: a0 = sp + 0xffffffffffffffe0\n 47547: a0 = a0 & 0xffffffffffffffe0\n 47550: u64 [s1 + 0x190] = a0\n 47554: sp = a0\n 47556: i32 a2 = a0 + 0\n 47558: a1 = 0x40\n 47561: jump [t0]\n      : @1629 (gas: 4)\n 47563: i32 a0 = a0 + 0xfffffffffffff938\n 47567: a3 = s1 + a0\n 47570: a4 = a3 + 0x100\n 47574: jump [t0]\n      : @1630 (gas: 4)\n 47576: a0 = 0x3938\n 47580: a3 = s1 + a0\n 47583: a4 = a3 + 0x400\n 47587: jump [t0]\n      : @1631 (gas: 7)\n 47589: a1 = a1 | a2\n 47592: a1 = a1 | a0\n 47595: a1 = a1 >> 0x20\n 47598: a0 = a0 | a2\n 47601: a0 = a0 << 0x20\n 47604: a0 = a0 | a1\n 47607: jump [t0]\n      : @1632 (gas: 6)\n 47609: u64 [a2 + 1248] = 0\n 47613: u64 [a2 + 1240] = 0\n 47617: u64 [a2 + 1232] = 0\n 47621: u64 [a2 + 1224] = 0\n 47625: a0 = s1 + 0x4000\n 47629: jump [t0]\n      : @1633 (gas: 6)\n 47631: u64 [a2 + 320] = 0\n 47635: u64 [a2 + 312] = 0\n 47639: u64 [a2 + 304] = 0\n 47643: u64 [a2 + 296] = 0\n 47647: a0 = s1 + 0x4000\n 47651: jump [t0]\n      : @1634 (gas: 2)\n 47653: a3 = a2 & 0x40\n 47656: jump @1638 if a3 != 0\n      : @1635 (gas: 1)\n 47659: jump @1637 if a2 == 0\n      : @1636 (gas: 6)\n 47662: i32 a3 = 0x40 - a2\n 47665: a3 = a1 << a3\n 47668: a1 = a1 >> a2\n 47671: a0 = a0 >> a2\n 47674: a0 = a0 | a3\n 47677: ret\n      : @1637 (gas: 1)\n 47679: ret\n      : @1638 (gas: 4)\n 47681: a0 = a2 + 0xffffffffffffffc0\n 47684: a0 = a1 >> a0\n 47687: a1 = 0\n 47689: ret\n      : @1639 (gas: 2)\n 47691: a3 = a2 & 0x40\n 47694: jump @1643 if a3 != 0\n      : @1640 (gas: 1)\n 47697: jump @1642 if a2 == 0\n      : @1641 (gas: 6)\n 47700: i32 a3 = 0x40 - a2\n 47703: a3 = a0 >> a3\n 47706: a0 = a0 << a2\n 47709: a1 = a1 << a2\n 47712: a1 = a1 | a3\n 47715: ret\n      : @1642 (gas: 1)\n 47717: ret\n      : @1643 (gas: 4)\n 47719: a1 = a2 + 0xffffffffffffffc0\n 47722: a1 = a0 << a1\n 47725: a0 = 0\n 47727: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"ENDING_PERIOD()":"f13d1259","STARTING_PERIOD()":"3d757a4b","TREASURY_SHARE()":"32696174","WINNER_SHARE()":"dbe3010c","currentGameId()":"536a3ddc","emergencyEndGame(uint256)":"b256b11b","endGame(uint256)":"d0399bb8","gamePlayerList(uint256,uint256)":"ed456ee4","gamePlayers(uint256,address)":"62e2961b","games(uint256)":"117a5b90","getGamePlayerCount(uint256)":"ff8fb35c","getGamePlayers(uint256)":"15a40f49","getGameState(uint256)":"ffde0c74","getPlayerBid(uint256,address)":"a59d9ab7","owner()":"8da5cb5b","pendingWithdrawals(address)":"f3f43703","placeBid(uint256)":"9979ef45","startNewGame()":"482d51e0","withdraw()":"3ccfd60b","withdrawTreasury()":"166bab95"}},"irOptimized":"/// @use-src 0:\"contracts/BigWickGame.sol\"\nobject \"BigWickGame_924\" {\n    code {\n        {\n            /// @src 0:58:9198  \"contract BigWickGame {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:2133:2151  \"owner = msg.sender\" */ 0x00, /** @src 0:58:9198  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:2133:2151  \"owner = msg.sender\" */ 0x00), /** @src 0:58:9198  \"contract BigWickGame {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:2141:2151  \"msg.sender\" */ caller()))\n            /// @src 0:58:9198  \"contract BigWickGame {...\"\n            sstore(/** @src 0:2161:2178  \"currentGameId = 0\" */ 0x01, /** @src 0:2133:2151  \"owner = msg.sender\" */ 0x00)\n            /// @src 0:58:9198  \"contract BigWickGame {...\"\n            let _2 := datasize(\"BigWickGame_924_deployed\")\n            codecopy(_1, dataoffset(\"BigWickGame_924_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/BigWickGame.sol\"\n    object \"BigWickGame_924_deployed\" {\n        code {\n            {\n                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x117a5b90 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ 2)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _2 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ dataSlot)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _3 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1))\n                        let _4 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 2))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _5 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 3))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _6 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 4))\n                        let _7 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 5))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _8 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 6))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _9 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 7))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value := and(sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 8)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                        mstore(_1, _2)\n                        mstore(add(_1, 32), _3)\n                        mstore(add(_1, 64), _4)\n                        mstore(add(_1, 96), _5)\n                        mstore(add(_1, 128), _6)\n                        mstore(add(_1, 160), _7)\n                        mstore(add(_1, 192), and(_8, sub(shl(160, 1), 1)))\n                        abi_encode_enum_GameState(and(shr(160, _8), 0xff), add(_1, 224))\n                        mstore(add(_1, 256), _9)\n                        mstore(add(_1, 288), iszero(iszero(value)))\n                        return(_1, 320)\n                    }\n                    case 0x15a40f49 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let pos := mload(64)\n                        let memPtr := pos\n                        let length := sload(dataSlot_1)\n                        mstore(pos, length)\n                        pos := add(pos, 32)\n                        let updated_pos := pos\n                        mstore(0, dataSlot_1)\n                        let srcPtr := keccak256(0, 32)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                        let memPos := mload(64)\n                        let tail := add(memPos, 32)\n                        mstore(memPos, 32)\n                        let pos_1 := tail\n                        let length_1 := mload(memPtr)\n                        mstore(tail, length_1)\n                        pos_1 := add(memPos, 64)\n                        let srcPtr_1 := updated_pos\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), sub(shl(160, 1), 1)))\n                            pos_1 := add(pos_1, 32)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        return(memPos, sub(pos_1, memPos))\n                    }\n                    case 0x166bab95 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1673:1738  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1681:1700  \"msg.sender == owner\" */ eq(/** @src 0:1681:1691  \"msg.sender\" */ caller(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        /// @src 0:7800:7825  \"uint256 totalTreasury = 0\"\n                        let var_totalTreasury := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:7906:7919  \"uint256 i = 1\"\n                        let var_i := /** @src 0:7918:7919  \"1\" */ 0x01\n                        /// @src 0:7901:8108  \"for (uint256 i = 1; i <= currentGameId; i++) {...\"\n                        for { }\n                        /** @src 0:7918:7919  \"1\" */ 0x01\n                        /// @src 0:7906:7919  \"uint256 i = 1\"\n                        {\n                            /// @src 0:7941:7944  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:7921:7939  \"i <= currentGameId\"\n                            if gt(var_i, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:7918:7919  \"1\" */ 0x01))\n                            /// @src 0:7921:7939  \"i <= currentGameId\"\n                            { break }\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(0, var_i)\n                            mstore(0x20, /** @src 0:7964:7969  \"games\" */ 0x02)\n                            /// @src 0:7960:8098  \"if (games[i].finalized) {...\"\n                            if /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(/** @src 0:7964:7982  \"games[i].finalized\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:7964:7982  \"games[i].finalized\" */ 8)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                            /// @src 0:7960:8098  \"if (games[i].finalized) {...\"\n                            {\n                                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                                mstore(0, var_i)\n                                mstore(0x20, /** @src 0:7964:7969  \"games\" */ 0x02)\n                                /// @src 0:8002:8040  \"totalTreasury += games[i].treasuryFund\"\n                                var_totalTreasury := checked_add_uint256(var_totalTreasury, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:8019:8040  \"games[i].treasuryFund\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:8019:8040  \"games[i].treasuryFund\" */ 5)))\n                                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                                mstore(0, var_i)\n                                mstore(0x20, /** @src 0:7964:7969  \"games\" */ 0x02)\n                                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                                sstore(/** @src 0:8058:8079  \"games[i].treasuryFund\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:8019:8040  \"games[i].treasuryFund\" */ 5), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0)\n                            }\n                        }\n                        if /** @src 0:8134:8151  \"totalTreasury > 0\" */ iszero(var_totalTreasury)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 0x20)\n                            mstore(add(memPtr_1, 36), 29)\n                            mstore(add(memPtr_1, 68), \"No treasury funds to withdraw\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 0:8223:8268  \"payable(owner).call{value: totalTreasury}(\\\"\\\")\"\n                        let expr_component := call(gas(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1)), /** @src 0:8223:8268  \"payable(owner).call{value: totalTreasury}(\\\"\\\")\" */ var_totalTreasury, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0, 0, 0, 0)\n                        /// @src 0:8223:8268  \"payable(owner).call{value: totalTreasury}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:8278:8313  \"require(success, \\\"Transfer failed\\\")\"\n                        require_helper_stringliteral_25ad(expr_component)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(0, 0)\n                    }\n                    case 0x32696174 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, /** @src 0:800:802  \"10\" */ 0x0a)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x3ccfd60b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(0, /** @src 0:7483:7493  \"msg.sender\" */ caller())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0x20, /** @src 0:7464:7482  \"pendingWithdrawals\" */ 0x05)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _10 := sload(keccak256(0, 64))\n                        if /** @src 0:7512:7522  \"amount > 0\" */ iszero(_10)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 0x20)\n                            mstore(add(memPtr_2, 36), 20)\n                            mstore(add(memPtr_2, 68), \"No funds to withdraw\")\n                            revert(memPtr_2, 100)\n                        }\n                        mstore(0, /** @src 0:7483:7493  \"msg.sender\" */ caller())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0x20, /** @src 0:7464:7482  \"pendingWithdrawals\" */ 0x05)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(keccak256(0, 64), 0)\n                        /// @src 0:7638:7681  \"payable(msg.sender).call{value: amount}(\\\"\\\")\"\n                        let expr_component_1 := call(gas(), /** @src 0:7483:7493  \"msg.sender\" */ caller(), /** @src 0:7638:7681  \"payable(msg.sender).call{value: amount}(\\\"\\\")\" */ _10, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0, 0, 0, 0)\n                        /// @src 0:7638:7681  \"payable(msg.sender).call{value: amount}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:7691:7726  \"require(success, \\\"Transfer failed\\\")\"\n                        require_helper_stringliteral_25ad(expr_component_1)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(0, 0)\n                    }\n                    case 0x3d757a4b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, /** @src 0:641:647  \"2 days\" */ 0x02a300)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x482d51e0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1673:1738  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1681:1700  \"msg.sender == owner\" */ eq(/** @src 0:1681:1691  \"msg.sender\" */ caller(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        let _11 := sload(/** @src 0:2274:2287  \"currentGameId\" */ 0x01)\n                        /// @src 0:2274:2341  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                        let expr := /** @src 0:2274:2292  \"currentGameId == 0\" */ iszero(_11)\n                        /// @src 0:2274:2341  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                        if iszero(expr)\n                        {\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(0, _11)\n                            mstore(0x20, /** @src 0:2296:2301  \"games\" */ 0x02)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let value_1 := and(shr(160, sload(/** @src 0:2296:2322  \"games[currentGameId].state\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:2296:2322  \"games[currentGameId].state\" */ 6))), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_1, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:2274:2341  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                            expr := /** @src 0:2296:2341  \"games[currentGameId].state == GameState.Ended\" */ eq(value_1, /** @src 0:2326:2341  \"GameState.Ended\" */ 3)\n                        }\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 26)\n                            mstore(add(memPtr_3, 68), \"Current game must be ended\")\n                            revert(memPtr_3, 100)\n                        }\n                        /// @src 0:2391:2406  \"currentGameId++\"\n                        let _12 := increment_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ _11)\n                        sstore(/** @src 0:2274:2287  \"currentGameId\" */ 0x01, /** @src 0:58:9198  \"contract BigWickGame {...\" */ _12)\n                        let sum := add(/** @src 0:2436:2451  \"block.timestamp\" */ timestamp(), /** @src 0:641:647  \"2 days\" */ 0x02a300)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        if gt(/** @src 0:2436:2451  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let sum_1 := add(/** @src 0:2436:2451  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 604800)\n                        if gt(sum, sum_1)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let memPtr_4 := mload(64)\n                        finalize_allocation_20838(memPtr_4)\n                        mstore(memPtr_4, _12)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _13 := add(memPtr_4, 32)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_13, /** @src 0:2436:2451  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _14 := add(memPtr_4, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 64)\n                        mstore(_14, sum)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _15 := add(memPtr_4, 96)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_15, sum_1)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _16 := add(memPtr_4, 128)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_16, 0)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _17 := add(memPtr_4, 160)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_17, 0)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _18 := add(memPtr_4, 192)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_18, 0)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _19 := add(memPtr_4, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 224)\n                        mstore(_19, /** @src 0:2274:2287  \"currentGameId\" */ 0x01)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _20 := add(memPtr_4, 256)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_20, 0)\n                        /// @src 0:2619:2971  \"Game({...\"\n                        let _21 := add(memPtr_4, 288)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(_21, 0)\n                        mstore(0, _12)\n                        mstore(/** @src 0:2619:2971  \"Game({...\" */ 32, /** @src 0:2596:2601  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, mload(memPtr_4))\n                        sstore(add(dataSlot_2, /** @src 0:2274:2287  \"currentGameId\" */ 0x01), /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(_13))\n                        sstore(add(dataSlot_2, /** @src 0:2596:2601  \"games\" */ 0x02), /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(_14))\n                        sstore(add(dataSlot_2, 3), mload(_15))\n                        sstore(add(dataSlot_2, 4), mload(_16))\n                        sstore(add(dataSlot_2, 5), mload(_17))\n                        let memberSlot := add(dataSlot_2, 6)\n                        sstore(memberSlot, or(and(sload(memberSlot), shl(160, 0xffffffffffffffffffffffff)), and(and(mload(_18), sub(shl(160, 1), 1)), sub(shl(160, 1), 1))))\n                        let _22 := mload(_19)\n                        let _23 := iszero(lt(_22, 4))\n                        if _23\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        _23 := 0\n                        let _24 := sload(memberSlot)\n                        sstore(memberSlot, or(and(_24, not(shl(160, 255))), and(shl(/** @src 0:2619:2971  \"Game({...\" */ 160, /** @src 0:58:9198  \"contract BigWickGame {...\" */ _22), shl(160, 255))))\n                        sstore(add(dataSlot_2, 7), mload(_20))\n                        let memberSlot_1 := add(dataSlot_2, 8)\n                        let cleaned := iszero(iszero(mload(_21)))\n                        let value_2 := and(sload(memberSlot_1), not(255))\n                        sstore(memberSlot_1, or(value_2, and(cleaned, 255)))\n                        let _25 := sload(/** @src 0:2274:2287  \"currentGameId\" */ 0x01)\n                        /// @src 0:2995:3060  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\"\n                        let _26 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                        /// @src 0:2995:3060  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\"\n                        log2(_26, sub(abi_encode_uint256_uint256_uint256(_26, /** @src 0:2436:2451  \"block.timestamp\" */ timestamp(), /** @src 0:2995:3060  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\" */ sum, sum_1), _26), 0xa20ded433b888a649d4d8f7862a100fe47f47441b8b01e11ec294b10bc5ea5ee, _25)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _25)\n                        return(memPos_3, /** @src 0:2619:2971  \"Game({...\" */ 32)\n                    }\n                    case /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x536a3ddc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _27 := sload(/** @src 0:869:897  \"uint256 public currentGameId\" */ 1)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _27)\n                        return(memPos_4, 32)\n                    }\n                    case 0x62e2961b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ 3)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ value1, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ dataSlot_3)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x40)\n                        let _28 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ dataSlot_4)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _29 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1))\n                        let _30 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, 2))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value_3 := and(sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, 3)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _28)\n                        mstore(add(memPos_5, 32), _29)\n                        mstore(add(memPos_5, 64), _30)\n                        mstore(add(memPos_5, 96), iszero(iszero(value_3)))\n                        return(memPos_5, 128)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_4 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_4)\n                        return(memPos_6, 32)\n                    }\n                    case 0x9979ef45 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:1812:1874  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ value_5))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value_6 := and(shr(160, sload(/** @src 0:1960:1979  \"games[gameId].state\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:1960:1979  \"games[gameId].state\" */ 6))), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_6, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:1960:2056  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                        let expr_1 := /** @src 0:1960:2007  \"games[gameId].state == GameState.StartingPeriod\" */ eq(value_6, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1)\n                        /// @src 0:1960:2056  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                        if iszero(expr_1)\n                        {\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(0, value_5)\n                            mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let value_7 := and(shr(160, sload(/** @src 0:2011:2030  \"games[gameId].state\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:1960:1979  \"games[gameId].state\" */ 6))), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_7, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:1960:2056  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                            expr_1 := /** @src 0:2011:2056  \"games[gameId].state == GameState.EndingPeriod\" */ eq(value_7, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        }\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        if iszero(expr_1)\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 20)\n                            mstore(add(memPtr_5, 68), \"Game not in progress\")\n                            revert(memPtr_5, 100)\n                        }\n                        if /** @src 0:3218:3231  \"msg.value > 0\" */ iszero(/** @src 0:3218:3227  \"msg.value\" */ callvalue())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 33)\n                            mstore(add(memPtr_6, 68), \"Bid amount must be greater than \")\n                            mstore(add(memPtr_6, 100), \"0\")\n                            revert(memPtr_6, 132)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        if iszero(/** @src 0:3287:3326  \"block.timestamp < games[gameId].endTime\" */ lt(/** @src 0:3287:3302  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:3305:3326  \"games[gameId].endTime\" */ add(/** @src 0:58:9198  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:3305:3326  \"games[gameId].endTime\" */ 3))))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 14)\n                            mstore(add(memPtr_7, 68), \"Game has ended\")\n                            revert(memPtr_7, 100)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:3305:3326  \"games[gameId].endTime\" */ 3)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 0:3431:3462  \"gamePlayers[gameId][msg.sender]\"\n                        let dataSlot_7 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(/** @src 0:3451:3461  \"msg.sender\" */ caller(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:3431:3462  \"gamePlayers[gameId][msg.sender]\" */ dataSlot_6)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        dataSlot_7 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x40)\n                        /// @src 0:3528:3611  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                        let expr_2 := /** @src 0:3528:3569  \"block.timestamp >= game.endingPeriodStart\" */ iszero(lt(/** @src 0:3287:3302  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:3547:3569  \"game.endingPeriodStart\" */ add(dataSlot_5, /** @src 0:1820:1825  \"games\" */ 0x02))))\n                        /// @src 0:3528:3611  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                        if expr_2\n                        {\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let value_8 := and(shr(160, sload(/** @src 0:3573:3583  \"game.state\" */ add(dataSlot_5, /** @src 0:1960:1979  \"games[gameId].state\" */ 6))), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_8, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:3528:3611  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                            expr_2 := /** @src 0:3573:3611  \"game.state == GameState.StartingPeriod\" */ eq(value_8, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:3524:3673  \"if (block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod) {...\"\n                        if expr_2\n                        {\n                            /// @src 0:3627:3637  \"game.state\"\n                            let _31 := add(dataSlot_5, /** @src 0:1960:1979  \"games[gameId].state\" */ 6)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let cleaned_1 := 0\n                            cleaned_1 := 0\n                            sstore(_31, or(and(sload(_31), not(shl(160, 255))), shl(161, 1)))\n                        }\n                        /// @src 0:3736:3749  \"player.exists\"\n                        let _32 := add(dataSlot_7, /** @src 0:3305:3326  \"games[gameId].endTime\" */ 3)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _33 := sload(/** @src 0:3736:3749  \"player.exists\" */ _32)\n                        /// @src 0:3731:3849  \"if (!player.exists) {...\"\n                        if /** @src 0:3735:3749  \"!player.exists\" */ iszero(/** @src 0:58:9198  \"contract BigWickGame {...\" */ and(_33, 0xff))\n                        /// @src 0:3731:3849  \"if (!player.exists) {...\"\n                        {\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            sstore(_32, or(and(_33, not(255)), 1))\n                            mstore(0, value_5)\n                            mstore(32, 4)\n                            let dataSlot_8 := keccak256(0, 64)\n                            let oldLen := sload(dataSlot_8)\n                            if iszero(lt(oldLen, 18446744073709551616))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            sstore(dataSlot_8, add(oldLen, 1))\n                            let slot, offset := storage_array_index_access_address_dyn(dataSlot_8, oldLen)\n                            let _34 := sload(slot)\n                            let shiftBits := shl(/** @src 0:3305:3326  \"games[gameId].endTime\" */ 3, /** @src 0:58:9198  \"contract BigWickGame {...\" */ offset)\n                            sstore(slot, or(and(_34, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 0:3451:3461  \"msg.sender\" */ caller())))\n                        }\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(dataSlot_7, /** @src 0:3896:3924  \"player.totalBid += msg.value\" */ checked_add_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:3896:3924  \"player.totalBid += msg.value\" */ dataSlot_7), /** @src 0:3218:3227  \"msg.value\" */ callvalue()))\n                        /// @src 0:3934:3949  \"player.bidCount\"\n                        let _35 := add(dataSlot_7, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1)\n                        sstore(_35, /** @src 0:3934:3951  \"player.bidCount++\" */ increment_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:3934:3951  \"player.bidCount++\" */ _35)))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:3961:3979  \"player.lastBidTime\" */ add(dataSlot_7, /** @src 0:1820:1825  \"games\" */ 0x02), /** @src 0:3287:3302  \"block.timestamp\" */ timestamp())\n                        /// @src 0:4043:4056  \"game.totalPot\"\n                        let _36 := add(dataSlot_5, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 4)\n                        sstore(_36, /** @src 0:4043:4069  \"game.totalPot += msg.value\" */ checked_add_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:4043:4069  \"game.totalPot += msg.value\" */ _36), /** @src 0:3218:3227  \"msg.value\" */ callvalue()))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _37 := sload(/** @src 0:4134:4149  \"player.totalBid\" */ dataSlot_7)\n                        /// @src 0:4093:4150  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\"\n                        let _38 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_38, /** @src 0:3218:3227  \"msg.value\" */ callvalue())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(add(_38, 32), _37)\n                        /// @src 0:4093:4150  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\"\n                        log3(_38, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 64, /** @src 0:4093:4150  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\" */ 0x51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f, value_5, /** @src 0:3451:3461  \"msg.sender\" */ caller())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(0, 0)\n                    }\n                    case 0xa59d9ab7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value1_1 := abi_decode_address()\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:7005:7016  \"gamePlayers\" */ 0x03)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        /// @src 0:7005:7032  \"gamePlayers[gameId][player]\"\n                        let dataSlot_10 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(/** @src 0:7005:7032  \"gamePlayers[gameId][player]\" */ value1_1, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:7005:7024  \"gamePlayers[gameId]\" */ dataSlot_9)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        dataSlot_10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x40)\n                        let memPtr_8 := mload(64)\n                        finalize_allocation_20842(memPtr_8)\n                        let _39 := sload(/** @src 0:7005:7032  \"gamePlayers[gameId][player]\" */ dataSlot_10)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(memPtr_8, _39)\n                        let _40 := sload(add(/** @src 0:7005:7032  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1))\n                        mstore(add(memPtr_8, 32), _40)\n                        let _41 := sload(add(/** @src 0:7005:7032  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 2))\n                        mstore(add(memPtr_8, 64), _41)\n                        mstore(add(memPtr_8, 96), iszero(iszero(and(sload(add(/** @src 0:7005:7032  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:7005:7016  \"gamePlayers\" */ 0x03)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff))))\n                        let memPos_7 := mload(64)\n                        return(memPos_7, sub(abi_encode_uint256_uint256_uint256(memPos_7, _39, _40, _41), memPos_7))\n                    }\n                    case 0xb256b11b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 0:1673:1738  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1681:1700  \"msg.sender == owner\" */ eq(/** @src 0:1681:1691  \"msg.sender\" */ caller(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        mstore(0, value_9)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:1812:1874  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ value_9))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0, value_9)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        /// @src 0:8519:8529  \"game.state\"\n                        let _42 := add(dataSlot_11, 6)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value_10 := and(shr(160, sload(/** @src 0:8519:8529  \"game.state\" */ _42)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_10, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:8511:8571  \"require(game.state != GameState.Ended, \\\"Game already ended\\\")\"\n                        require_helper_stringliteral_9a4d(/** @src 0:8519:8548  \"game.state != GameState.Ended\" */ iszero(eq(value_10, /** @src 0:8533:8548  \"GameState.Ended\" */ 3)))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let cleaned_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        cleaned_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:8590:8618  \"game.state = GameState.Ended\" */ _42, /** @src 0:58:9198  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:8590:8618  \"game.state = GameState.Ended\" */ _42), /** @src 0:58:9198  \"contract BigWickGame {...\" */ not(shl(160, 255))), shl(160, 3)))\n                        /// @src 0:8628:8642  \"game.finalized\"\n                        let _43 := add(dataSlot_11, 8)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(_43, or(and(sload(_43), not(255)), 1))\n                        mstore(0, value_9)\n                        mstore(32, 4)\n                        let dataSlot_12 := keccak256(0, 64)\n                        let pos_2 := mload(64)\n                        let memPtr_9 := pos_2\n                        let length_2 := sload(dataSlot_12)\n                        mstore(pos_2, length_2)\n                        pos_2 := add(pos_2, 32)\n                        mstore(0, dataSlot_12)\n                        let srcPtr_2 := keccak256(0, 32)\n                        let i_2 := 0\n                        for { } lt(i_2, length_2) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_2, and(sload(srcPtr_2), sub(shl(160, 1), 1)))\n                            pos_2 := add(pos_2, 32)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_9, sub(pos_2, memPtr_9))\n                        /// @src 0:8789:8802  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:8784:9131  \"for (uint256 i = 0; i < playerList.length; i++) {...\"\n                        for { }\n                        /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1\n                        /// @src 0:8789:8802  \"uint256 i = 0\"\n                        {\n                            /// @src 0:8827:8830  \"i++\"\n                            var_i_1 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ add(/** @src 0:8827:8830  \"i++\" */ var_i_1, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:8827:8830  \"i++\"\n                        {\n                            /// @src 0:8804:8825  \"i < playerList.length\"\n                            if iszero(lt(var_i_1, /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(/** @src 0:8808:8825  \"playerList.length\" */ memPtr_9)))\n                            /// @src 0:8804:8825  \"i < playerList.length\"\n                            { break }\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let value_11 := and(mload(/** @src 0:8863:8876  \"playerList[i]\" */ memory_array_index_access_address_dyn(memPtr_9, var_i_1)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_9)\n                            mstore(32, /** @src 0:8533:8548  \"GameState.Ended\" */ 3)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let dataSlot_13 := keccak256(0, 64)\n                            /// @src 0:8910:8937  \"gamePlayers[gameId][player]\"\n                            let dataSlot_14 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(/** @src 0:8910:8937  \"gamePlayers[gameId][player]\" */ value_11, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:8910:8929  \"gamePlayers[gameId]\" */ dataSlot_13)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            dataSlot_14 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x40)\n                            let _44 := sload(/** @src 0:8910:8937  \"gamePlayers[gameId][player]\" */ dataSlot_14)\n                            /// @src 0:8973:9121  \"if (playerBid > 0) {...\"\n                            if /** @src 0:8977:8990  \"playerBid > 0\" */ iszero(iszero(_44))\n                            /// @src 0:8973:9121  \"if (playerBid > 0) {...\"\n                            {\n                                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                                mstore(0, value_11)\n                                mstore(32, /** @src 0:9010:9028  \"pendingWithdrawals\" */ 0x05)\n                                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                                let dataSlot_15 := keccak256(0, 64)\n                                sstore(dataSlot_15, /** @src 0:9010:9049  \"pendingWithdrawals[player] += playerBid\" */ checked_add_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:9010:9049  \"pendingWithdrawals[player] += playerBid\" */ dataSlot_15), _44))\n                                /// @src 0:9072:9106  \"WithdrawalReady(player, playerBid)\"\n                                let _45 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                                mstore(_45, _44)\n                                /// @src 0:9072:9106  \"WithdrawalReady(player, playerBid)\"\n                                log2(_45, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 32, /** @src 0:9072:9106  \"WithdrawalReady(player, playerBid)\" */ 0x61f4a796c29c0b19830a107f63c010f13bcd46bf2118e1747abc3dedad4c2403, value_11)\n                            }\n                        }\n                        /// @src 0:9154:9189  \"GameEnded(gameId, address(0), 0, 0)\"\n                        let _46 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_46, 0)\n                        mstore(add(_46, 32), 0)\n                        /// @src 0:9154:9189  \"GameEnded(gameId, address(0), 0, 0)\"\n                        log3(_46, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 64, /** @src 0:9154:9189  \"GameEnded(gameId, address(0), 0, 0)\" */ 0x64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800, value_9, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0)\n                        return(0, 0)\n                    }\n                    case 0xd0399bb8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_12 := calldataload(4)\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:1812:1874  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1820:1850  \"games[gameId].gameId == gameId\" */ value_12))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1820:1825  \"games\" */ 0x02)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let dataSlot_16 := keccak256(0, 64)\n                        if /** @src 0:4289:4320  \"block.timestamp >= game.endTime\" */ lt(/** @src 0:4289:4304  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:4308:4320  \"game.endTime\" */ add(dataSlot_16, 3)))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 22)\n                            mstore(add(memPtr_10, 68), \"Game has not ended yet\")\n                            revert(memPtr_10, 100)\n                        }\n                        /// @src 0:4365:4375  \"game.state\"\n                        let _47 := add(dataSlot_16, 6)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value_13 := and(shr(160, sload(/** @src 0:4365:4375  \"game.state\" */ _47)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_13, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:4357:4417  \"require(game.state != GameState.Ended, \\\"Game already ended\\\")\"\n                        require_helper_stringliteral_9a4d(/** @src 0:4365:4394  \"game.state != GameState.Ended\" */ iszero(eq(value_13, /** @src 0:4308:4320  \"game.endTime\" */ 3)))\n                        /// @src 0:4436:4450  \"game.finalized\"\n                        let _48 := add(dataSlot_16, 8)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        if iszero(/** @src 0:4435:4450  \"!game.finalized\" */ iszero(/** @src 0:58:9198  \"contract BigWickGame {...\" */ and(sload(/** @src 0:4436:4450  \"game.finalized\" */ _48), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff)))\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 22)\n                            mstore(add(memPtr_11, 68), \"Game already finalized\")\n                            revert(memPtr_11, 100)\n                        }\n                        let _49 := sload(/** @src 0:4638:4660  \"game.endingPeriodStart\" */ add(dataSlot_16, /** @src 0:1820:1825  \"games\" */ 0x02))\n                        /// @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        let expr_mpos := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                        /// @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        let _50 := add(expr_mpos, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 32)\n                        mstore(_50, /** @src 0:4289:4304  \"block.timestamp\" */ timestamp())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(add(/** @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\" */ expr_mpos, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 64), /** @src 0:4729:4745  \"block.prevrandao\" */ prevrandao())\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(add(/** @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\" */ expr_mpos, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 96), value_12)\n                        /// @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        mstore(expr_mpos, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 96)\n                        /// @src 0:4695:4754  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        finalize_allocation(expr_mpos, 128)\n                        /// @src 0:4638:4773  \"game.endingPeriodStart + ...\"\n                        let expr_3 := checked_add_uint256(_49, /** @src 0:58:9198  \"contract BigWickGame {...\" */ mod(/** @src 0:4685:4755  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))\" */ keccak256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ _50, mload(/** @src 0:4685:4755  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))\" */ expr_mpos)), /** @src 0:693:699  \"5 days\" */ 0x069780))\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:4792:4806  \"game.candleEnd\" */ add(dataSlot_16, 7), /** @src 0:58:9198  \"contract BigWickGame {...\" */ expr_3)\n                        let cleaned_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        cleaned_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:4828:4856  \"game.state = GameState.Ended\" */ _47, /** @src 0:58:9198  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:4828:4856  \"game.state = GameState.Ended\" */ _47), /** @src 0:58:9198  \"contract BigWickGame {...\" */ not(shl(160, 255))), shl(160, 3)))\n                        /// @src 0:4880:4918  \"CandleEndDetermined(gameId, candleEnd)\"\n                        let _51 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_51, expr_3)\n                        /// @src 0:4880:4918  \"CandleEndDetermined(gameId, candleEnd)\"\n                        log2(_51, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 32, /** @src 0:4880:4918  \"CandleEndDetermined(gameId, candleEnd)\" */ 0x86ed31336f526d2a8d9eed7596b4e5f8d4ef5c5a9384792afa58506239913a8b, value_12)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        mstore(0, value_12)\n                        mstore(32, 4)\n                        let dataSlot_17 := keccak256(0, 64)\n                        let pos_3 := mload(64)\n                        let memPtr_12 := pos_3\n                        let length_3 := sload(dataSlot_17)\n                        mstore(pos_3, length_3)\n                        pos_3 := add(pos_3, 32)\n                        mstore(0, dataSlot_17)\n                        let srcPtr_3 := keccak256(0, 32)\n                        let i_3 := 0\n                        for { } lt(i_3, length_3) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_3, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                            pos_3 := add(pos_3, 32)\n                            srcPtr_3 := add(srcPtr_3, 1)\n                        }\n                        finalize_allocation(memPtr_12, sub(pos_3, memPtr_12))\n                        /// @src 0:5882:5916  \"address currentWinner = address(0)\"\n                        let var_currentWinner := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5926:5948  \"uint256 highestBid = 0\"\n                        let var_highestBid := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5972:5985  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5967:6405  \"for (uint256 i = 0; i < playerList.length; i++) {...\"\n                        for { }\n                        /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1\n                        /// @src 0:5972:5985  \"uint256 i = 0\"\n                        {\n                            /// @src 0:6010:6013  \"i++\"\n                            var_i_2 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ add(/** @src 0:6010:6013  \"i++\" */ var_i_2, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:6010:6013  \"i++\"\n                        {\n                            /// @src 0:5987:6008  \"i < playerList.length\"\n                            if iszero(lt(var_i_2, /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(/** @src 0:5991:6008  \"playerList.length\" */ memPtr_12)))\n                            /// @src 0:5987:6008  \"i < playerList.length\"\n                            { break }\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let value_14 := and(mload(/** @src 0:6046:6059  \"playerList[i]\" */ memory_array_index_access_address_dyn(memPtr_12, var_i_2)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_12)\n                            mstore(32, /** @src 0:4308:4320  \"game.endTime\" */ 3)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let dataSlot_18 := keccak256(0, 64)\n                            /// @src 0:6100:6127  \"gamePlayers[gameId][player]\"\n                            let dataSlot_19 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ and(/** @src 0:6100:6127  \"gamePlayers[gameId][player]\" */ value_14, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:6100:6119  \"gamePlayers[gameId]\" */ dataSlot_18)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            dataSlot_19 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x40)\n                            let memPtr_13 := mload(64)\n                            finalize_allocation_20842(memPtr_13)\n                            let _52 := sload(dataSlot_19)\n                            mstore(memPtr_13, _52)\n                            mstore(add(memPtr_13, 32), sload(add(dataSlot_19, 1)))\n                            let _53 := sload(add(dataSlot_19, /** @src 0:1820:1825  \"games\" */ 0x02))\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            mstore(add(memPtr_13, 64), _53)\n                            mstore(add(memPtr_13, 96), iszero(iszero(and(sload(add(dataSlot_19, /** @src 0:4308:4320  \"game.endTime\" */ 3)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0xff))))\n                            /// @src 0:6217:6288  \"playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid\"\n                            let expr_4 := /** @src 0:6217:6252  \"playerData.lastBidTime <= candleEnd\" */ iszero(gt(_53, expr_3))\n                            /// @src 0:6217:6288  \"playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid\"\n                            if expr_4\n                            {\n                                expr_4 := /** @src 0:6256:6288  \"playerData.totalBid > highestBid\" */ gt(_52, var_highestBid)\n                            }\n                            /// @src 0:6213:6395  \"if (playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid) {...\"\n                            if expr_4\n                            {\n                                /// @src 0:6308:6340  \"highestBid = playerData.totalBid\"\n                                var_highestBid := _52\n                                /// @src 0:6358:6380  \"currentWinner = player\"\n                                var_currentWinner := value_14\n                            }\n                        }\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _54 := and(/** @src 0:5079:5099  \"winner != address(0)\" */ var_currentWinner, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:5075:5662  \"if (winner != address(0)) {...\"\n                        if /** @src 0:5079:5099  \"winner != address(0)\" */ iszero(iszero(/** @src 0:58:9198  \"contract BigWickGame {...\" */ _54))\n                        /// @src 0:5075:5662  \"if (winner != address(0)) {...\"\n                        {\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            sstore(/** @src 0:5115:5135  \"game.winner = winner\" */ _47, /** @src 0:58:9198  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:5115:5135  \"game.winner = winner\" */ _47), /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(160, 0xffffffffffffffffffffffff)), _54))\n                            let _55 := sload(/** @src 0:5229:5242  \"game.totalPot\" */ add(dataSlot_16, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 4))\n                            let product := mul(_55, /** @src 0:744:746  \"90\" */ 0x5a)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            if iszero(or(iszero(_55), eq(/** @src 0:744:746  \"90\" */ 0x5a, /** @src 0:58:9198  \"contract BigWickGame {...\" */ div(product, _55))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            let r := div(product, /** @src 0:5261:5264  \"100\" */ 0x64)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let diff := sub(_55, r)\n                            if gt(diff, _55)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            sstore(/** @src 0:5357:5374  \"game.treasuryFund\" */ add(dataSlot_16, 5), /** @src 0:58:9198  \"contract BigWickGame {...\" */ diff)\n                            mstore(0, _54)\n                            mstore(32, /** @src 0:5357:5374  \"game.treasuryFund\" */ 5)\n                            /// @src 0:58:9198  \"contract BigWickGame {...\"\n                            let dataSlot_20 := keccak256(0, 64)\n                            sstore(dataSlot_20, /** @src 0:5469:5510  \"pendingWithdrawals[winner] += winnerPrize\" */ checked_add_uint256(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:5469:5510  \"pendingWithdrawals[winner] += winnerPrize\" */ dataSlot_20), r))\n                            /// @src 0:5542:5596  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\"\n                            let _56 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                            mstore(_56, r)\n                            mstore(add(_56, 32), diff)\n                            /// @src 0:5542:5596  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\"\n                            log3(_56, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 64, /** @src 0:5542:5596  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\" */ 0x64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800, value_12, _54)\n                            /// @src 0:5615:5651  \"WithdrawalReady(winner, winnerPrize)\"\n                            let _57 := /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(64)\n                            mstore(_57, r)\n                            /// @src 0:5615:5651  \"WithdrawalReady(winner, winnerPrize)\"\n                            log2(_57, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 32, /** @src 0:5615:5651  \"WithdrawalReady(winner, winnerPrize)\" */ 0x61f4a796c29c0b19830a107f63c010f13bcd46bf2118e1747abc3dedad4c2403, _54)\n                        }\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        sstore(_48, or(and(sload(_48), not(255)), 1))\n                        return(0, 0)\n                    }\n                    case 0xdbe3010c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 0:744:746  \"90\" */ 0x5a)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0xed456ee4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_15 := calldataload(36)\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let dataSlot_21 := keccak256(0, 64)\n                        /// @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\"\n                        if iszero(lt(value_15, /** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(/** @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\" */ dataSlot_21)))\n                        {\n                            revert(/** @src 0:58:9198  \"contract BigWickGame {...\" */ 0, 0)\n                        }\n                        /// @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\"\n                        let slot_1, offset_1 := storage_array_index_access_address_dyn(dataSlot_21, value_15)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let value_16 := and(shr(shl(3, offset_1), sload(/** @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\" */ slot_1)), /** @src 0:58:9198  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, value_16)\n                        return(memPos_9, 32)\n                    }\n                    case 0xf13d1259 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 0:693:699  \"5 days\" */ 0x069780)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xf3f43703 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_17 := 0\n                        value_17 := calldataload(4)\n                        let _58 := and(value_17, sub(shl(160, 1), 1))\n                        if iszero(eq(value_17, _58)) { revert(0, 0) }\n                        mstore(0, _58)\n                        mstore(32, /** @src 0:1074:1127  \"mapping(address => uint256) public pendingWithdrawals\" */ 5)\n                        /// @src 0:58:9198  \"contract BigWickGame {...\"\n                        let _59 := sload(keccak256(0, 64))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _59)\n                        return(memPos_11, 32)\n                    }\n                    case 0xff8fb35c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let length_4 := sload(keccak256(0, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, length_4)\n                        return(memPos_12, 32)\n                    }\n                    case 0xffde0c74 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_getGameState(calldataload(4))\n                        let memPos_13 := mload(64)\n                        abi_encode_enum_GameState(ret, memPos_13)\n                        return(memPos_13, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_enum_GameState(value, pos)\n            {\n                if iszero(lt(value, 4))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(pos, value)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:58:9198  \"contract BigWickGame {...\"\n            function finalize_allocation_20838(memPtr)\n            {\n                let newFreePtr := add(memPtr, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_20842(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function require_helper_stringliteral_1b98(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"Only owner can call this functio\")\n                    mstore(add(memPtr, 100), \"n\")\n                    revert(memPtr, 132)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:58:9198  \"contract BigWickGame {...\" */ returndatasize())\n                }\n            }\n            function require_helper_stringliteral_25ad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_c11e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Game does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9a4d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Game already ended\")\n                    revert(memPtr, 100)\n                }\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 654 @src 0:6460:6854  \"function getGameState(uint256 gameId) external view returns (GameState) {...\"\n            function fun_getGameState(var_gameId) -> var\n            {\n                /// @src 0:6521:6530  \"GameState\"\n                var := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                mstore(0, var_gameId)\n                mstore(0x20, /** @src 0:6546:6551  \"games\" */ 0x02)\n                /// @src 0:6542:6600  \"if (games[gameId].gameId == 0) return GameState.NotStarted\"\n                if /** @src 0:6546:6571  \"games[gameId].gameId == 0\" */ iszero(/** @src 0:58:9198  \"contract BigWickGame {...\" */ sload(keccak256(0, 0x40)))\n                /// @src 0:6542:6600  \"if (games[gameId].gameId == 0) return GameState.NotStarted\"\n                {\n                    /// @src 0:6573:6600  \"return GameState.NotStarted\"\n                    var := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 0\n                    /// @src 0:6573:6600  \"return GameState.NotStarted\"\n                    leave\n                }\n                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                mstore(0, var_gameId)\n                mstore(0x20, /** @src 0:6546:6551  \"games\" */ 0x02)\n                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                let dataSlot := keccak256(0, 0x40)\n                let memPtr := mload(0x40)\n                finalize_allocation_20838(memPtr)\n                mstore(memPtr, sload(dataSlot))\n                mstore(add(memPtr, 0x20), sload(add(dataSlot, 1)))\n                let _1 := sload(add(dataSlot, /** @src 0:6546:6551  \"games\" */ 0x02))\n                /// @src 0:58:9198  \"contract BigWickGame {...\"\n                let _2 := add(memPtr, 0x40)\n                mstore(_2, _1)\n                let _3 := sload(add(dataSlot, 3))\n                let _4 := add(memPtr, 96)\n                mstore(_4, _3)\n                mstore(add(memPtr, 128), sload(add(dataSlot, 4)))\n                mstore(add(memPtr, 160), sload(add(dataSlot, 5)))\n                let _5 := sload(add(dataSlot, 6))\n                mstore(add(memPtr, 192), and(_5, sub(shl(160, 1), 1)))\n                let value := and(shr(160, _5), 0xff)\n                if iszero(lt(value, 4))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n                mstore(add(memPtr, 224), value)\n                mstore(add(memPtr, 256), sload(add(dataSlot, 7)))\n                mstore(add(memPtr, 288), iszero(iszero(and(sload(add(dataSlot, 8)), 0xff))))\n                /// @src 0:6661:6720  \"if (block.timestamp >= game.endTime) return GameState.Ended\"\n                if /** @src 0:6665:6696  \"block.timestamp >= game.endTime\" */ iszero(lt(/** @src 0:6665:6680  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(/** @src 0:6684:6696  \"game.endTime\" */ _4)))\n                /// @src 0:6661:6720  \"if (block.timestamp >= game.endTime) return GameState.Ended\"\n                {\n                    /// @src 0:6698:6720  \"return GameState.Ended\"\n                    var := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 3\n                    /// @src 0:6698:6720  \"return GameState.Ended\"\n                    leave\n                }\n                /// @src 0:6730:6806  \"if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod\"\n                if /** @src 0:6734:6775  \"block.timestamp >= game.endingPeriodStart\" */ iszero(lt(/** @src 0:6665:6680  \"block.timestamp\" */ timestamp(), /** @src 0:58:9198  \"contract BigWickGame {...\" */ mload(/** @src 0:6753:6775  \"game.endingPeriodStart\" */ _2)))\n                /// @src 0:6730:6806  \"if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod\"\n                {\n                    /// @src 0:6777:6806  \"return GameState.EndingPeriod\"\n                    var := /** @src 0:6546:6551  \"games\" */ 0x02\n                    /// @src 0:6777:6806  \"return GameState.EndingPeriod\"\n                    leave\n                }\n                /// @src 0:6816:6847  \"return GameState.StartingPeriod\"\n                var := /** @src 0:58:9198  \"contract BigWickGame {...\" */ 1\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e471973721a6095b11ad972dcbff3afe0c63274e131e6934ff62764b04a0d89e64736f6c634300081c0033\"\n    }\n}\n","hash":"d8ced440b76036fe5c967876090689263164f269c825b9146186c6c2a2b15db2","factoryDependencies":{}}}}}}