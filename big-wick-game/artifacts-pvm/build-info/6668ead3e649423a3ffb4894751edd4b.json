{"id":"6668ead3e649423a3ffb4894751edd4b","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/BigWickGame.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract BigWickGame {\n    enum GameState { NotStarted, StartingPeriod, EndingPeriod, Ended }\n    \n    struct Game {\n        uint256 gameId;\n        uint256 startTime;\n        uint256 endingPeriodStart;\n        uint256 endTime;\n        uint256 totalPot;\n        uint256 treasuryFund;\n        address winner;\n        GameState state;\n        uint256 candleEnd;\n        bool finalized;\n    }\n\n    struct Player {\n        uint256 totalBid;\n        uint256 bidCount;\n        uint256 lastBidTime;\n        bool exists;\n    }\n\n    // Constants\n    uint256 public constant STARTING_PERIOD = 2 days;\n    uint256 public constant ENDING_PERIOD = 5 days;\n    uint256 public constant WINNER_SHARE = 90; // 90%\n    uint256 public constant TREASURY_SHARE = 10; // 10%\n    \n    // State variables\n    address public owner;\n    uint256 public currentGameId;\n    mapping(uint256 => Game) public games;\n    mapping(uint256 => mapping(address => Player)) public gamePlayers;\n    mapping(uint256 => address[]) public gamePlayerList;\n    \n    // Events\n    event GameStarted(uint256 indexed gameId, uint256 startTime, uint256 endingPeriodStart, uint256 endTime);\n    event BidPlaced(uint256 indexed gameId, address indexed player, uint256 amount, uint256 totalBid);\n    event GameEnded(uint256 indexed gameId, address indexed winner, uint256 prizeAmount, uint256 treasuryAmount);\n    event CandleEndDetermined(uint256 indexed gameId, uint256 candleEnd);\n    \n    // Modifiers\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n    \n    modifier gameExists(uint256 gameId) {\n        require(games[gameId].gameId == gameId, \"Game does not exist\");\n        _;\n    }\n    \n    modifier gameInProgress(uint256 gameId) {\n        require(games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod, \"Game not in progress\");\n        _;\n    }\n    \n    constructor() {\n        owner = msg.sender;\n        currentGameId = 0;\n    }\n    \n    function startNewGame() external onlyOwner returns (uint256) {\n        require(currentGameId == 0 || games[currentGameId].state == GameState.Ended, \"Current game must be ended\");\n        \n        currentGameId++;\n        uint256 startTime = block.timestamp;\n        uint256 endingPeriodStart = startTime + STARTING_PERIOD;\n        uint256 endTime = endingPeriodStart + ENDING_PERIOD;\n        \n        games[currentGameId] = Game({\n            gameId: currentGameId,\n            startTime: startTime,\n            endingPeriodStart: endingPeriodStart,\n            endTime: endTime,\n            totalPot: 0,\n            treasuryFund: 0,\n            winner: address(0),\n            state: GameState.StartingPeriod,\n            candleEnd: 0,\n            finalized: false\n        });\n        \n        emit GameStarted(currentGameId, startTime, endingPeriodStart, endTime);\n        return currentGameId;\n    }\n    \n    function placeBid(uint256 gameId) external payable gameExists(gameId) gameInProgress(gameId) {\n        require(msg.value > 0, \"Bid amount must be greater than 0\");\n        require(block.timestamp < games[gameId].endTime, \"Game has ended\");\n        \n        Game storage game = games[gameId];\n        Player storage player = gamePlayers[gameId][msg.sender];\n        \n        // Update game state based on time\n        if (block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod) {\n            game.state = GameState.EndingPeriod;\n        }\n        \n        // Add new player if not exists\n        if (!player.exists) {\n            player.exists = true;\n            gamePlayerList[gameId].push(msg.sender);\n        }\n        \n        // Update player bid\n        player.totalBid += msg.value;\n        player.bidCount++;\n        player.lastBidTime = block.timestamp;\n        \n        // Update game pot\n        game.totalPot += msg.value;\n        \n        emit BidPlaced(gameId, msg.sender, msg.value, player.totalBid);\n    }\n    \n    function endGame(uint256 gameId) external gameExists(gameId) {\n        Game storage game = games[gameId];\n        require(block.timestamp >= game.endTime, \"Game has not ended yet\");\n        require(game.state != GameState.Ended, \"Game already ended\");\n        require(!game.finalized, \"Game already finalized\");\n        \n        // Determine candle end using pseudo-randomness\n        // In production, this should use VRF for true randomness\n        uint256 candleEnd = game.endingPeriodStart + \n            (uint256(keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))) % ENDING_PERIOD);\n        \n        game.candleEnd = candleEnd;\n        game.state = GameState.Ended;\n        \n        emit CandleEndDetermined(gameId, candleEnd);\n        \n        // Determine winner - player with highest bid at candle end\n        address winner = determineWinner(gameId, candleEnd);\n        \n        if (winner != address(0)) {\n            game.winner = winner;\n            \n            // Calculate prize distribution\n            uint256 winnerPrize = (game.totalPot * WINNER_SHARE) / 100;\n            uint256 treasuryAmount = game.totalPot - winnerPrize;\n            \n            game.treasuryFund = treasuryAmount;\n            \n            // Transfer prize to winner\n            payable(winner).transfer(winnerPrize);\n            \n            emit GameEnded(gameId, winner, winnerPrize, treasuryAmount);\n        }\n        \n        game.finalized = true;\n    }\n    \n    function determineWinner(uint256 gameId, uint256 candleEnd) internal view returns (address) {\n        address[] memory playerList = gamePlayerList[gameId];\n        address currentWinner = address(0);\n        uint256 highestBid = 0;\n        \n        for (uint256 i = 0; i < playerList.length; i++) {\n            address player = playerList[i];\n            Player memory playerData = gamePlayers[gameId][player];\n            \n            // Only consider bids placed before candle end\n            if (playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid) {\n                highestBid = playerData.totalBid;\n                currentWinner = player;\n            }\n        }\n        \n        return currentWinner;\n    }\n    \n    function getGameState(uint256 gameId) external view returns (GameState) {\n        if (games[gameId].gameId == 0) return GameState.NotStarted;\n        \n        Game memory game = games[gameId];\n        if (block.timestamp >= game.endTime) return GameState.Ended;\n        if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod;\n        return GameState.StartingPeriod;\n    }\n    \n    function getPlayerBid(uint256 gameId, address player) external view returns (uint256, uint256, uint256) {\n        Player memory playerData = gamePlayers[gameId][player];\n        return (playerData.totalBid, playerData.bidCount, playerData.lastBidTime);\n    }\n    \n    function getGamePlayers(uint256 gameId) external view returns (address[] memory) {\n        return gamePlayerList[gameId];\n    }\n    \n    function getGamePlayerCount(uint256 gameId) external view returns (uint256) {\n        return gamePlayerList[gameId].length;\n    }\n    \n    function withdrawTreasury() external onlyOwner {\n        uint256 totalTreasury = 0;\n        \n        // Calculate total treasury from all ended games\n        for (uint256 i = 1; i <= currentGameId; i++) {\n            if (games[i].finalized) {\n                totalTreasury += games[i].treasuryFund;\n                games[i].treasuryFund = 0;\n            }\n        }\n        \n        require(totalTreasury > 0, \"No treasury funds to withdraw\");\n        payable(owner).transfer(totalTreasury);\n    }\n    \n    // Emergency function to end game if needed\n    function emergencyEndGame(uint256 gameId) external onlyOwner gameExists(gameId) {\n        Game storage game = games[gameId];\n        require(game.state != GameState.Ended, \"Game already ended\");\n        \n        game.state = GameState.Ended;\n        game.finalized = true;\n        \n        // Refund all players proportionally\n        address[] memory playerList = gamePlayerList[gameId];\n        \n        for (uint256 i = 0; i < playerList.length; i++) {\n            address player = playerList[i];\n            uint256 playerBid = gamePlayers[gameId][player].totalBid;\n            \n            if (playerBid > 0) {\n                payable(player).transfer(playerBid);\n            }\n        }\n        \n        emit GameEnded(gameId, address(0), 0, 0);\n    }\n}"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"1.5.2","compilerSource":"npm","settings":{"optimizer":{}}}}},"output":{"errors":[{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/BigWickGame.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"0","start":5332,"end":5369},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/BigWickGame.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"0","start":7664,"end":7702},"type":"Warning"},{"component":"general","errorCode":null,"formattedMessage":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n\n--> contracts/BigWickGame.sol\n","message":"\nWarning: It looks like you are using '<address payable>.send/transfer(<X>)'.\nUsing '<address payable>.send/transfer(<X>)' is deprecated and strongly discouraged!\nThe resolc compiler uses a heuristic to detect '<address payable>.send/transfer(<X>)' calls,\nwhich disables call re-entrancy and supplies all remaining gas instead of the 2300 gas stipend.\nHowever, detection is not guaranteed. You are advised to carefully test this, employ\nre-entrancy guards or use the withdrawal pattern instead!\nLearn more on https://docs.soliditylang.org/en/latest/security-considerations.html#reentrancy\nand https://docs.soliditylang.org/en/latest/common-patterns.html#withdrawal-from-contracts\n","severity":"warning","sourceLocation":{"file":"0","start":8399,"end":8434},"type":"Warning"}],"version":"0.8.28","long_version":"0.8.28+commit.7893614a.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/BigWickGame.sol":{"id":0,"ast":{"absolutePath":"contracts/BigWickGame.sol","exportedSymbols":{"BigWickGame":[856]},"id":857,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"BigWickGame","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":856,"linearizedBaseContracts":[856],"name":"BigWickGame","nameLocation":"67:11:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"BigWickGame.GameState","id":6,"members":[{"id":2,"name":"NotStarted","nameLocation":"102:10:0","nodeType":"EnumValue","src":"102:10:0"},{"id":3,"name":"StartingPeriod","nameLocation":"114:14:0","nodeType":"EnumValue","src":"114:14:0"},{"id":4,"name":"EndingPeriod","nameLocation":"130:12:0","nodeType":"EnumValue","src":"130:12:0"},{"id":5,"name":"Ended","nameLocation":"144:5:0","nodeType":"EnumValue","src":"144:5:0"}],"name":"GameState","nameLocation":"90:9:0","nodeType":"EnumDefinition","src":"85:66:0"},{"canonicalName":"BigWickGame.Game","id":28,"members":[{"constant":false,"id":8,"mutability":"mutable","name":"gameId","nameLocation":"191:6:0","nodeType":"VariableDeclaration","scope":28,"src":"183:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"183:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10,"mutability":"mutable","name":"startTime","nameLocation":"215:9:0","nodeType":"VariableDeclaration","scope":28,"src":"207:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9,"name":"uint256","nodeType":"ElementaryTypeName","src":"207:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"242:17:0","nodeType":"VariableDeclaration","scope":28,"src":"234:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11,"name":"uint256","nodeType":"ElementaryTypeName","src":"234:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"endTime","nameLocation":"277:7:0","nodeType":"VariableDeclaration","scope":28,"src":"269:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16,"mutability":"mutable","name":"totalPot","nameLocation":"302:8:0","nodeType":"VariableDeclaration","scope":28,"src":"294:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"294:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"treasuryFund","nameLocation":"328:12:0","nodeType":"VariableDeclaration","scope":28,"src":"320:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"320:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"winner","nameLocation":"358:6:0","nodeType":"VariableDeclaration","scope":28,"src":"350:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"350:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":23,"mutability":"mutable","name":"state","nameLocation":"384:5:0","nodeType":"VariableDeclaration","scope":28,"src":"374:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"typeName":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"GameState","nameLocations":["374:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":6,"src":"374:9:0"},"referencedDeclaration":6,"src":"374:9:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"visibility":"internal"},{"constant":false,"id":25,"mutability":"mutable","name":"candleEnd","nameLocation":"407:9:0","nodeType":"VariableDeclaration","scope":28,"src":"399:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":24,"name":"uint256","nodeType":"ElementaryTypeName","src":"399:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"finalized","nameLocation":"431:9:0","nodeType":"VariableDeclaration","scope":28,"src":"426:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":26,"name":"bool","nodeType":"ElementaryTypeName","src":"426:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Game","nameLocation":"168:4:0","nodeType":"StructDefinition","scope":856,"src":"161:286:0","visibility":"public"},{"canonicalName":"BigWickGame.Player","id":37,"members":[{"constant":false,"id":30,"mutability":"mutable","name":"totalBid","nameLocation":"485:8:0","nodeType":"VariableDeclaration","scope":37,"src":"477:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"bidCount","nameLocation":"511:8:0","nodeType":"VariableDeclaration","scope":37,"src":"503:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"lastBidTime","nameLocation":"537:11:0","nodeType":"VariableDeclaration","scope":37,"src":"529:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"529:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"exists","nameLocation":"563:6:0","nodeType":"VariableDeclaration","scope":37,"src":"558:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":35,"name":"bool","nodeType":"ElementaryTypeName","src":"558:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Player","nameLocation":"460:6:0","nodeType":"StructDefinition","scope":856,"src":"453:123:0","visibility":"public"},{"constant":true,"functionSelector":"3d757a4b","id":40,"mutability":"constant","name":"STARTING_PERIOD","nameLocation":"623:15:0","nodeType":"VariableDeclaration","scope":856,"src":"599:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"641:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_172800_by_1","typeString":"int_const 172800"},"value":"2"},"visibility":"public"},{"constant":true,"functionSelector":"f13d1259","id":43,"mutability":"constant","name":"ENDING_PERIOD","nameLocation":"677:13:0","nodeType":"VariableDeclaration","scope":856,"src":"653:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35","id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"693:6:0","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_432000_by_1","typeString":"int_const 432000"},"value":"5"},"visibility":"public"},{"constant":true,"functionSelector":"dbe3010c","id":46,"mutability":"constant","name":"WINNER_SHARE","nameLocation":"729:12:0","nodeType":"VariableDeclaration","scope":856,"src":"705:41:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":44,"name":"uint256","nodeType":"ElementaryTypeName","src":"705:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3930","id":45,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"744:2:0","typeDescriptions":{"typeIdentifier":"t_rational_90_by_1","typeString":"int_const 90"},"value":"90"},"visibility":"public"},{"constant":true,"functionSelector":"32696174","id":49,"mutability":"constant","name":"TREASURY_SHARE","nameLocation":"783:14:0","nodeType":"VariableDeclaration","scope":856,"src":"759:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":48,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"800:2:0","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":51,"mutability":"mutable","name":"owner","nameLocation":"858:5:0","nodeType":"VariableDeclaration","scope":856,"src":"843:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"536a3ddc","id":53,"mutability":"mutable","name":"currentGameId","nameLocation":"884:13:0","nodeType":"VariableDeclaration","scope":856,"src":"869:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"869:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"117a5b90","id":58,"mutability":"mutable","name":"games","nameLocation":"935:5:0","nodeType":"VariableDeclaration","scope":856,"src":"903:37:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game)"},"typeName":{"id":57,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"911:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"903:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":56,"nodeType":"UserDefinedTypeName","pathNode":{"id":55,"name":"Game","nameLocations":["922:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"922:4:0"},"referencedDeclaration":28,"src":"922:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}}},"visibility":"public"},{"constant":false,"functionSelector":"62e2961b","id":65,"mutability":"mutable","name":"gamePlayers","nameLocation":"1000:11:0","nodeType":"VariableDeclaration","scope":856,"src":"946:65:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player))"},"typeName":{"id":64,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"954:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"946:46:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":63,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"965:26:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":62,"nodeType":"UserDefinedTypeName","pathNode":{"id":61,"name":"Player","nameLocations":["984:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"984:6:0"},"referencedDeclaration":37,"src":"984:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}}}},"visibility":"public"},{"constant":false,"functionSelector":"ed456ee4","id":70,"mutability":"mutable","name":"gamePlayerList","nameLocation":"1054:14:0","nodeType":"VariableDeclaration","scope":856,"src":"1017:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"typeName":{"id":69,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":66,"name":"uint256","nodeType":"ElementaryTypeName","src":"1025:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1017:29:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":68,"nodeType":"ArrayTypeName","src":"1036:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"a20ded433b888a649d4d8f7862a100fe47f47441b8b01e11ec294b10bc5ea5ee","id":80,"name":"GameStarted","nameLocation":"1099:11:0","nodeType":"EventDefinition","parameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1127:6:0","nodeType":"VariableDeclaration","scope":80,"src":"1111:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"1111:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1143:9:0","nodeType":"VariableDeclaration","scope":80,"src":"1135:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":76,"indexed":false,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"1162:17:0","nodeType":"VariableDeclaration","scope":80,"src":"1154:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1189:7:0","nodeType":"VariableDeclaration","scope":80,"src":"1181:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1110:87:0"},"src":"1093:105:0"},{"anonymous":false,"eventSelector":"51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f","id":90,"name":"BidPlaced","nameLocation":"1209:9:0","nodeType":"EventDefinition","parameters":{"id":89,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1235:6:0","nodeType":"VariableDeclaration","scope":90,"src":"1219:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":84,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1259:6:0","nodeType":"VariableDeclaration","scope":90,"src":"1243:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":83,"name":"address","nodeType":"ElementaryTypeName","src":"1243:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":86,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1275:6:0","nodeType":"VariableDeclaration","scope":90,"src":"1267:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":85,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":88,"indexed":false,"mutability":"mutable","name":"totalBid","nameLocation":"1291:8:0","nodeType":"VariableDeclaration","scope":90,"src":"1283:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:82:0"},"src":"1203:98:0"},{"anonymous":false,"eventSelector":"64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800","id":100,"name":"GameEnded","nameLocation":"1312:9:0","nodeType":"EventDefinition","parameters":{"id":99,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1338:6:0","nodeType":"VariableDeclaration","scope":100,"src":"1322:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1322:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":94,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1362:6:0","nodeType":"VariableDeclaration","scope":100,"src":"1346:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"1346:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":96,"indexed":false,"mutability":"mutable","name":"prizeAmount","nameLocation":"1378:11:0","nodeType":"VariableDeclaration","scope":100,"src":"1370:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"1370:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"indexed":false,"mutability":"mutable","name":"treasuryAmount","nameLocation":"1399:14:0","nodeType":"VariableDeclaration","scope":100,"src":"1391:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"1391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1321:93:0"},"src":"1306:109:0"},{"anonymous":false,"eventSelector":"86ed31336f526d2a8d9eed7596b4e5f8d4ef5c5a9384792afa58506239913a8b","id":106,"name":"CandleEndDetermined","nameLocation":"1426:19:0","nodeType":"EventDefinition","parameters":{"id":105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":102,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1462:6:0","nodeType":"VariableDeclaration","scope":106,"src":"1446:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":101,"name":"uint256","nodeType":"ElementaryTypeName","src":"1446:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":104,"indexed":false,"mutability":"mutable","name":"candleEnd","nameLocation":"1478:9:0","nodeType":"VariableDeclaration","scope":106,"src":"1470:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1470:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1445:43:0"},"src":"1420:69:0"},{"body":{"id":117,"nodeType":"Block","src":"1537:93:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":109,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1555:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1559:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1555:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":111,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"1569:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1555:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e","id":113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1576:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""},"value":"Only owner can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef","typeString":"literal_string \"Only owner can call this function\""}],"id":108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1547:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1547:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":115,"nodeType":"ExpressionStatement","src":"1547:65:0"},{"id":116,"nodeType":"PlaceholderStatement","src":"1622:1:0"}]},"id":118,"name":"onlyOwner","nameLocation":"1525:9:0","nodeType":"ModifierDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"1534:2:0"},"src":"1516:114:0","virtual":false,"visibility":"internal"},{"body":{"id":133,"nodeType":"Block","src":"1676:90:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":123,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1694:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1700:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1694:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1708:6:0","memberName":"gameId","nodeType":"MemberAccess","referencedDeclaration":8,"src":"1694:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":127,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1718:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1694:30:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520646f6573206e6f74206578697374","id":129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""},"value":"Game does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c11ed5fbd5fb2ec0121f9af3f38a3b57a185a37042b240276f517e10e046145a","typeString":"literal_string \"Game does not exist\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1686:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1686:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"1686:62:0"},{"id":132,"nodeType":"PlaceholderStatement","src":"1758:1:0"}]},"id":134,"name":"gameExists","nameLocation":"1649:10:0","nodeType":"ModifierDefinition","parameters":{"id":121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":120,"mutability":"mutable","name":"gameId","nameLocation":"1668:6:0","nodeType":"VariableDeclaration","scope":134,"src":"1660:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1659:16:0"},"src":"1640:126:0","virtual":false,"visibility":"internal"},{"body":{"id":158,"nodeType":"Block","src":"1816:157:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":139,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1834:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":141,"indexExpression":{"id":140,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"1840:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1834:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1848:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"1834:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":143,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1857:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1867:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"1857:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"1834:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":146,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1885:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":148,"indexExpression":{"id":147,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"1891:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1885:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":149,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1899:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"1885:19:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":150,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1908:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1918:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"1908:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"1885:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1834:96:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420696e2070726f6772657373","id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1932:22:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf008ded0954b5cea0bd82ea6867da9c65a7bdfbe8a7ed259836a49dae7b8c4e","typeString":"literal_string \"Game not in progress\""},"value":"Game not in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf008ded0954b5cea0bd82ea6867da9c65a7bdfbe8a7ed259836a49dae7b8c4e","typeString":"literal_string \"Game not in progress\""}],"id":138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1826:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:129:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":156,"nodeType":"ExpressionStatement","src":"1826:129:0"},{"id":157,"nodeType":"PlaceholderStatement","src":"1965:1:0"}]},"id":159,"name":"gameInProgress","nameLocation":"1785:14:0","nodeType":"ModifierDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"gameId","nameLocation":"1808:6:0","nodeType":"VariableDeclaration","scope":159,"src":"1800:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1799:16:0"},"src":"1776:197:0","virtual":false,"visibility":"internal"},{"body":{"id":171,"nodeType":"Block","src":"1997:62:0","statements":[{"expression":{"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2007:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2015:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2019:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2015:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2007:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":166,"nodeType":"ExpressionStatement","src":"2007:18:0"},{"expression":{"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":167,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2035:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2051:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2035:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":170,"nodeType":"ExpressionStatement","src":"2035:17:0"}]},"id":172,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"1994:2:0"},"returnParameters":{"id":161,"nodeType":"ParameterList","parameters":[],"src":"1997:0:0"},"scope":856,"src":"1983:76:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":244,"nodeType":"Block","src":"2130:841:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":180,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2148:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2165:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2148:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":183,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2170:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":185,"indexExpression":{"id":184,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2176:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2170:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2191:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"2170:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":187,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2200:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2210:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"2200:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"2170:45:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2148:67:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43757272656e742067616d65206d75737420626520656e646564","id":191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2217:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_0549921b13bfefc9725ba3d66707ec2cba4700f446eef8d27a0ccf3de98bebe1","typeString":"literal_string \"Current game must be ended\""},"value":"Current game must be ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0549921b13bfefc9725ba3d66707ec2cba4700f446eef8d27a0ccf3de98bebe1","typeString":"literal_string \"Current game must be ended\""}],"id":179,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2140:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2140:106:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":193,"nodeType":"ExpressionStatement","src":"2140:106:0"},{"expression":{"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2265:15:0","subExpression":{"id":194,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2265:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":196,"nodeType":"ExpressionStatement","src":"2265:15:0"},{"assignments":[198],"declarations":[{"constant":false,"id":198,"mutability":"mutable","name":"startTime","nameLocation":"2298:9:0","nodeType":"VariableDeclaration","scope":244,"src":"2290:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2290:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":201,"initialValue":{"expression":{"id":199,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2310:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2316:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"2310:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2290:35:0"},{"assignments":[203],"declarations":[{"constant":false,"id":203,"mutability":"mutable","name":"endingPeriodStart","nameLocation":"2343:17:0","nodeType":"VariableDeclaration","scope":244,"src":"2335:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2335:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":204,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2363:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":205,"name":"STARTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2375:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2363:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2335:55:0"},{"assignments":[209],"declarations":[{"constant":false,"id":209,"mutability":"mutable","name":"endTime","nameLocation":"2408:7:0","nodeType":"VariableDeclaration","scope":244,"src":"2400:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":208,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":213,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":210,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2418:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":211,"name":"ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"2438:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2418:33:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2400:51:0"},{"expression":{"id":233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":214,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2470:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":216,"indexExpression":{"id":215,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2476:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2470:20:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":218,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2520:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":219,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2558:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":220,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2600:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":221,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2640:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"hexValue":"30","id":226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2731:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2723:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"2723:7:0","typeDescriptions":{}}},"id":227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":228,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"2754:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2764:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"2754:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},{"hexValue":"30","id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2803:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"66616c7365","id":231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2829:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":217,"name":"Game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2493:4:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Game_$28_storage_ptr_$","typeString":"type(struct BigWickGame.Game storage pointer)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2512:6:0","2547:9:0","2581:17:0","2631:7:0","2661:8:0","2686:12:0","2715:6:0","2747:5:0","2792:9:0","2818:9:0"],"names":["gameId","startTime","endingPeriodStart","endTime","totalPot","treasuryFund","winner","state","candleEnd","finalized"],"nodeType":"FunctionCall","src":"2493:352:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"src":"2470:375:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":234,"nodeType":"ExpressionStatement","src":"2470:375:0"},{"eventCall":{"arguments":[{"id":236,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2881:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":237,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2896:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":238,"name":"endingPeriodStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"2907:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":239,"name":"endTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"2926:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":235,"name":"GameStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2869:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2869:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":241,"nodeType":"EmitStatement","src":"2864:70:0"},{"expression":{"id":242,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"2951:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":178,"id":243,"nodeType":"Return","src":"2944:20:0"}]},"functionSelector":"482d51e0","id":245,"implemented":true,"kind":"function","modifiers":[{"id":175,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyOwner","nameLocations":["2102:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":118,"src":"2102:9:0"},"nodeType":"ModifierInvocation","src":"2102:9:0"}],"name":"startNewGame","nameLocation":"2078:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[],"src":"2090:2:0"},"returnParameters":{"id":178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"2121:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2121:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2120:9:0"},"scope":856,"src":"2069:902:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":367,"nodeType":"Block","src":"3074:957:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":257,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3092:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3096:5:0","memberName":"value","nodeType":"MemberAccess","src":"3092:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3104:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3092:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42696420616d6f756e74206d7573742062652067726561746572207468616e2030","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3107:35:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5882313ad2953dc0b1088d9a14e993caf03e9dd7190cacb11b6e11ae20890871","typeString":"literal_string \"Bid amount must be greater than 0\""},"value":"Bid amount must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5882313ad2953dc0b1088d9a14e993caf03e9dd7190cacb11b6e11ae20890871","typeString":"literal_string \"Bid amount must be greater than 0\""}],"id":256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3084:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3084:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"3084:59:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":265,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3161:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3167:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3161:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":267,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3179:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":269,"indexExpression":{"id":268,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3185:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3179:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3193:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"3179:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3161:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d652068617320656e646564","id":272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3202:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea","typeString":"literal_string \"Game has ended\""},"value":"Game has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01c6b72aa1d9c812347f9a63e0dfd9230f8762847e367ff26a82625e7dbfbfea","typeString":"literal_string \"Game has ended\""}],"id":264,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3153:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3153:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":274,"nodeType":"ExpressionStatement","src":"3153:66:0"},{"assignments":[277],"declarations":[{"constant":false,"id":277,"mutability":"mutable","name":"game","nameLocation":"3251:4:0","nodeType":"VariableDeclaration","scope":367,"src":"3238:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":276,"nodeType":"UserDefinedTypeName","pathNode":{"id":275,"name":"Game","nameLocations":["3238:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"3238:4:0"},"referencedDeclaration":28,"src":"3238:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":281,"initialValue":{"baseExpression":{"id":278,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"3258:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":280,"indexExpression":{"id":279,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3264:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3258:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3238:33:0"},{"assignments":[284],"declarations":[{"constant":false,"id":284,"mutability":"mutable","name":"player","nameLocation":"3296:6:0","nodeType":"VariableDeclaration","scope":367,"src":"3281:21:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":283,"nodeType":"UserDefinedTypeName","pathNode":{"id":282,"name":"Player","nameLocations":["3281:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"3281:6:0"},"referencedDeclaration":37,"src":"3281:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":291,"initialValue":{"baseExpression":{"baseExpression":{"id":285,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3305:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":287,"indexExpression":{"id":286,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3317:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3305:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":290,"indexExpression":{"expression":{"id":288,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3325:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3329:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3325:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3305:31:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3281:55:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":292,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3402:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3408:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3402:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":294,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3421:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":295,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3426:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"3421:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3402:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":297,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3447:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3452:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"3447:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":299,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3461:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3471:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"3461:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"3447:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3402:83:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":311,"nodeType":"IfStatement","src":"3398:149:0","trueBody":{"id":310,"nodeType":"Block","src":"3487:60:0","statements":[{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":303,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3501:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":305,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3506:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"3501:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":306,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3514:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3524:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"3514:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"3501:35:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":309,"nodeType":"ExpressionStatement","src":"3501:35:0"}]}},{"condition":{"id":314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3609:14:0","subExpression":{"expression":{"id":312,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3610:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3617:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3610:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":330,"nodeType":"IfStatement","src":"3605:118:0","trueBody":{"id":329,"nodeType":"Block","src":"3625:98:0","statements":[{"expression":{"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":315,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3639:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3646:6:0","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":36,"src":"3639:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3655:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3639:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":320,"nodeType":"ExpressionStatement","src":"3639:20:0"},{"expression":{"arguments":[{"expression":{"id":325,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3701:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3705:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3701:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":321,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"3673:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":323,"indexExpression":{"id":322,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3688:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3673:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3696:4:0","memberName":"push","nodeType":"MemberAccess","src":"3673:27:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3673:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"3673:39:0"}]}},{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3770:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3777:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"3770:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":334,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3789:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3793:5:0","memberName":"value","nodeType":"MemberAccess","src":"3789:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3770:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":337,"nodeType":"ExpressionStatement","src":"3770:28:0"},{"expression":{"id":341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3808:17:0","subExpression":{"expression":{"id":338,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3808:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3815:8:0","memberName":"bidCount","nodeType":"MemberAccess","referencedDeclaration":32,"src":"3808:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":342,"nodeType":"ExpressionStatement","src":"3808:17:0"},{"expression":{"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":343,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3835:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3842:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"3835:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":346,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3856:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3862:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3856:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3835:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":349,"nodeType":"ExpressionStatement","src":"3835:36:0"},{"expression":{"id":355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":350,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"3917:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3922:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3917:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":353,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3934:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3938:5:0","memberName":"value","nodeType":"MemberAccess","src":"3934:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3917:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":356,"nodeType":"ExpressionStatement","src":"3917:26:0"},{"eventCall":{"arguments":[{"id":358,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3977:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":359,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3985:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3989:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3985:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3997:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4001:5:0","memberName":"value","nodeType":"MemberAccess","src":"3997:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":363,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4008:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player storage pointer"}},"id":364,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4015:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"4008:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":357,"name":"BidPlaced","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"3967:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3967:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"EmitStatement","src":"3962:62:0"}]},"functionSelector":"9979ef45","id":368,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":250,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3043:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":251,"kind":"modifierInvocation","modifierName":{"id":249,"name":"gameExists","nameLocations":["3032:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"3032:10:0"},"nodeType":"ModifierInvocation","src":"3032:18:0"},{"arguments":[{"id":253,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3066:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":254,"kind":"modifierInvocation","modifierName":{"id":252,"name":"gameInProgress","nameLocations":["3051:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":159,"src":"3051:14:0"},"nodeType":"ModifierInvocation","src":"3051:22:0"}],"name":"placeBid","nameLocation":"2990:8:0","nodeType":"FunctionDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"mutability":"mutable","name":"gameId","nameLocation":"3007:6:0","nodeType":"VariableDeclaration","scope":368,"src":"2999:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2999:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2998:16:0"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"3074:0:0"},"scope":856,"src":"2981:1050:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":513,"nodeType":"Block","src":"4102:1410:0","statements":[{"assignments":[378],"declarations":[{"constant":false,"id":378,"mutability":"mutable","name":"game","nameLocation":"4125:4:0","nodeType":"VariableDeclaration","scope":513,"src":"4112:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":377,"nodeType":"UserDefinedTypeName","pathNode":{"id":376,"name":"Game","nameLocations":["4112:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"4112:4:0"},"referencedDeclaration":28,"src":"4112:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":382,"initialValue":{"baseExpression":{"id":379,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"4132:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":381,"indexExpression":{"id":380,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4138:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4132:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4112:33:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":384,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4163:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4169:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4163:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":386,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4182:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":387,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4187:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"4182:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4163:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520686173206e6f7420656e64656420796574","id":389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4196:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f","typeString":"literal_string \"Game has not ended yet\""},"value":"Game has not ended yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b70411cebaa36ba0a724ba9c651322f1198b5de54646b926fb5ecde11825bf1f","typeString":"literal_string \"Game has not ended yet\""}],"id":383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4155:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4155:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":391,"nodeType":"ExpressionStatement","src":"4155:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":393,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4239:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4244:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"4239:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":395,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4253:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4263:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4253:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"4239:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c726561647920656e646564","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4270:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""},"value":"Game already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""}],"id":392,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4231:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4231:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":400,"nodeType":"ExpressionStatement","src":"4231:60:0"},{"expression":{"arguments":[{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4309:15:0","subExpression":{"expression":{"id":402,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4310:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4315:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"4310:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c72656164792066696e616c697a6564","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4326:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7cc20c9aecc765d0b4a39de05c936055bd74f0368c6f2cb73e0c208db66f7977","typeString":"literal_string \"Game already finalized\""},"value":"Game already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7cc20c9aecc765d0b4a39de05c936055bd74f0368c6f2cb73e0c208db66f7977","typeString":"literal_string \"Game already finalized\""}],"id":401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4301:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4301:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"4301:50:0"},{"assignments":[409],"declarations":[{"constant":false,"id":409,"mutability":"mutable","name":"candleEnd","nameLocation":"4500:9:0","nodeType":"VariableDeclaration","scope":513,"src":"4492:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4492:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":429,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":410,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4512:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4517:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"4512:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":417,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4586:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4592:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"4586:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":419,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4603:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4609:10:0","memberName":"prevrandao","nodeType":"MemberAccess","src":"4603:16:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":421,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4621:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":415,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"4569:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4573:12:0","memberName":"encodePacked","nodeType":"MemberAccess","src":"4569:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4569:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":414,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"4559:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4559:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4551:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"4551:7:0","typeDescriptions":{}}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:79:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":425,"name":"ENDING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":43,"src":"4633:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4551:95:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":427,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4550:97:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4512:135:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4492:155:0"},{"expression":{"id":434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":430,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4666:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":432,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4671:9:0","memberName":"candleEnd","nodeType":"MemberAccess","referencedDeclaration":25,"src":"4666:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":433,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4683:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4666:26:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":435,"nodeType":"ExpressionStatement","src":"4666:26:0"},{"expression":{"id":441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":436,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4702:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4707:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"4702:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":439,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"4715:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4725:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"4715:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"4702:28:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":442,"nodeType":"ExpressionStatement","src":"4702:28:0"},{"eventCall":{"arguments":[{"id":444,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4774:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":445,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4782:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":443,"name":"CandleEndDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"4754:19:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4754:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"EmitStatement","src":"4749:43:0"},{"assignments":[449],"declarations":[{"constant":false,"id":449,"mutability":"mutable","name":"winner","nameLocation":"4887:6:0","nodeType":"VariableDeclaration","scope":513,"src":"4879:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":454,"initialValue":{"arguments":[{"id":451,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4912:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":452,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4920:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":450,"name":"determineWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"4896:15:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (uint256,uint256) view returns (address)"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4896:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:51:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":455,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"4953:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4971:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4963:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":456,"name":"address","nodeType":"ElementaryTypeName","src":"4963:7:0","typeDescriptions":{}}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4963:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4953:20:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":506,"nodeType":"IfStatement","src":"4949:517:0","trueBody":{"id":505,"nodeType":"Block","src":"4975:491:0","statements":[{"expression":{"id":465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":461,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"4989:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4994:6:0","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":20,"src":"4989:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":464,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5003:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4989:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":466,"nodeType":"ExpressionStatement","src":"4989:20:0"},{"assignments":[468],"declarations":[{"constant":false,"id":468,"mutability":"mutable","name":"winnerPrize","nameLocation":"5088:11:0","nodeType":"VariableDeclaration","scope":505,"src":"5080:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":467,"name":"uint256","nodeType":"ElementaryTypeName","src":"5080:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":476,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":469,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5103:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5108:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"5103:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":471,"name":"WINNER_SHARE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"5119:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5103:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5102:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"313030","id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5135:3:0","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"5102:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5080:58:0"},{"assignments":[478],"declarations":[{"constant":false,"id":478,"mutability":"mutable","name":"treasuryAmount","nameLocation":"5160:14:0","nodeType":"VariableDeclaration","scope":505,"src":"5152:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"5152:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":483,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":479,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5177:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5182:8:0","memberName":"totalPot","nodeType":"MemberAccess","referencedDeclaration":16,"src":"5177:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":481,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5193:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5177:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5152:52:0"},{"expression":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":484,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5231:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":486,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5236:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"5231:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":487,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5251:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5231:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":489,"nodeType":"ExpressionStatement","src":"5231:34:0"},{"expression":{"arguments":[{"id":495,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5357:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":492,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5340:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5332:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"5332:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5332:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:8:0","memberName":"transfer","nodeType":"MemberAccess","src":"5332:24:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5332:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"5332:37:0"},{"eventCall":{"arguments":[{"id":499,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"5411:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":500,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"5419:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":501,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"5427:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":502,"name":"treasuryAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"5440:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":498,"name":"GameEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"5401:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5401:54:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":504,"nodeType":"EmitStatement","src":"5396:59:0"}]}},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":507,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"5484:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":509,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5489:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"5484:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5501:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5484:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":512,"nodeType":"ExpressionStatement","src":"5484:21:0"}]},"functionSelector":"d0399bb8","id":514,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":373,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4094:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":374,"kind":"modifierInvocation","modifierName":{"id":372,"name":"gameExists","nameLocations":["4083:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"4083:10:0"},"nodeType":"ModifierInvocation","src":"4083:18:0"}],"name":"endGame","nameLocation":"4050:7:0","nodeType":"FunctionDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"gameId","nameLocation":"4066:6:0","nodeType":"VariableDeclaration","scope":514,"src":"4058:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"4058:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4057:16:0"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"4102:0:0"},"scope":856,"src":"4041:1471:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":593,"nodeType":"Block","src":"5614:640:0","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"playerList","nameLocation":"5641:10:0","nodeType":"VariableDeclaration","scope":593,"src":"5624:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"5624:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":526,"nodeType":"ArrayTypeName","src":"5624:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":531,"initialValue":{"baseExpression":{"id":528,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"5654:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":530,"indexExpression":{"id":529,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5669:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5654:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5624:52:0"},{"assignments":[533],"declarations":[{"constant":false,"id":533,"mutability":"mutable","name":"currentWinner","nameLocation":"5694:13:0","nodeType":"VariableDeclaration","scope":593,"src":"5686:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"5686:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":538,"initialValue":{"arguments":[{"hexValue":"30","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5718:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5710:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":534,"name":"address","nodeType":"ElementaryTypeName","src":"5710:7:0","typeDescriptions":{}}},"id":537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5710:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5686:34:0"},{"assignments":[540],"declarations":[{"constant":false,"id":540,"mutability":"mutable","name":"highestBid","nameLocation":"5738:10:0","nodeType":"VariableDeclaration","scope":593,"src":"5730:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5730:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":542,"initialValue":{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5751:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5730:22:0"},{"body":{"id":589,"nodeType":"Block","src":"5819:390:0","statements":[{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"player","nameLocation":"5841:6:0","nodeType":"VariableDeclaration","scope":589,"src":"5833:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":554,"name":"address","nodeType":"ElementaryTypeName","src":"5833:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":559,"initialValue":{"baseExpression":{"id":556,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"5850:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":558,"indexExpression":{"id":557,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5861:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5850:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5833:30:0"},{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"playerData","nameLocation":"5891:10:0","nodeType":"VariableDeclaration","scope":589,"src":"5877:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":561,"nodeType":"UserDefinedTypeName","pathNode":{"id":560,"name":"Player","nameLocations":["5877:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"5877:6:0"},"referencedDeclaration":37,"src":"5877:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":568,"initialValue":{"baseExpression":{"baseExpression":{"id":563,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"5904:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":565,"indexExpression":{"id":564,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"5916:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5904:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":567,"indexExpression":{"id":566,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"5924:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5904:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5877:54:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":569,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6021:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":570,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6032:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6021:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":571,"name":"candleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"6047:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6021:35:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":573,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6060:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":574,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6071:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6060:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":575,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6082:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6060:32:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6021:71:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":588,"nodeType":"IfStatement","src":"6017:182:0","trueBody":{"id":587,"nodeType":"Block","src":"6094:105:0","statements":[{"expression":{"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":578,"name":"highestBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"6112:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":579,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"6125:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":580,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6136:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6125:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6112:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":582,"nodeType":"ExpressionStatement","src":"6112:32:0"},{"expression":{"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":583,"name":"currentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6162:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":584,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"6178:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6162:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":586,"nodeType":"ExpressionStatement","src":"6162:22:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":547,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5791:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":548,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"5795:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5806:6:0","memberName":"length","nodeType":"MemberAccess","src":"5795:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5791:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"initializationExpression":{"assignments":[544],"declarations":[{"constant":false,"id":544,"mutability":"mutable","name":"i","nameLocation":"5784:1:0","nodeType":"VariableDeclaration","scope":590,"src":"5776:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5776:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":546,"initialValue":{"hexValue":"30","id":545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5788:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5776:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5814:3:0","subExpression":{"id":551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"5814:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":553,"nodeType":"ExpressionStatement","src":"5814:3:0"},"nodeType":"ForStatement","src":"5771:438:0"},{"expression":{"id":591,"name":"currentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"6234:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":522,"id":592,"nodeType":"Return","src":"6227:20:0"}]},"id":594,"implemented":true,"kind":"function","modifiers":[],"name":"determineWinner","nameLocation":"5531:15:0","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"gameId","nameLocation":"5555:6:0","nodeType":"VariableDeclaration","scope":594,"src":"5547:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"5547:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"candleEnd","nameLocation":"5571:9:0","nodeType":"VariableDeclaration","scope":594,"src":"5563:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"5563:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5546:35:0"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":594,"src":"5605:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"5605:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5604:9:0"},"scope":856,"src":"5522:732:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":640,"nodeType":"Block","src":"6336:322:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":602,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6350:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":604,"indexExpression":{"id":603,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6356:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6350:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":605,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6364:6:0","memberName":"gameId","nodeType":"MemberAccess","referencedDeclaration":8,"src":"6350:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6374:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6350:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":611,"nodeType":"IfStatement","src":"6346:58:0","trueBody":{"expression":{"expression":{"id":608,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6384:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6394:10:0","memberName":"NotStarted","nodeType":"MemberAccess","referencedDeclaration":2,"src":"6384:20:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":601,"id":610,"nodeType":"Return","src":"6377:27:0"}},{"assignments":[614],"declarations":[{"constant":false,"id":614,"mutability":"mutable","name":"game","nameLocation":"6435:4:0","nodeType":"VariableDeclaration","scope":640,"src":"6423:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":613,"nodeType":"UserDefinedTypeName","pathNode":{"id":612,"name":"Game","nameLocations":["6423:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"6423:4:0"},"referencedDeclaration":28,"src":"6423:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":618,"initialValue":{"baseExpression":{"id":615,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"6442:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":617,"indexExpression":{"id":616,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6448:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6442:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6423:32:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":619,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6469:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6475:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6469:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":621,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6488:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"id":622,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6493:7:0","memberName":"endTime","nodeType":"MemberAccess","referencedDeclaration":14,"src":"6488:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6469:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":627,"nodeType":"IfStatement","src":"6465:59:0","trueBody":{"expression":{"expression":{"id":624,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6509:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6519:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"6509:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":601,"id":626,"nodeType":"Return","src":"6502:22:0"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":628,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6538:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6544:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"6538:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":630,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"6557:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_memory_ptr","typeString":"struct BigWickGame.Game memory"}},"id":631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6562:17:0","memberName":"endingPeriodStart","nodeType":"MemberAccess","referencedDeclaration":12,"src":"6557:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6538:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":636,"nodeType":"IfStatement","src":"6534:76:0","trueBody":{"expression":{"expression":{"id":633,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6588:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6598:12:0","memberName":"EndingPeriod","nodeType":"MemberAccess","referencedDeclaration":4,"src":"6588:22:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":601,"id":635,"nodeType":"Return","src":"6581:29:0"}},{"expression":{"expression":{"id":637,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"6627:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6637:14:0","memberName":"StartingPeriod","nodeType":"MemberAccess","referencedDeclaration":3,"src":"6627:24:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"functionReturnParameters":601,"id":639,"nodeType":"Return","src":"6620:31:0"}]},"functionSelector":"ffde0c74","id":641,"implemented":true,"kind":"function","modifiers":[],"name":"getGameState","nameLocation":"6273:12:0","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"gameId","nameLocation":"6294:6:0","nodeType":"VariableDeclaration","scope":641,"src":"6286:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"6286:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6285:16:0"},"returnParameters":{"id":601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":641,"src":"6325:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"typeName":{"id":599,"nodeType":"UserDefinedTypeName","pathNode":{"id":598,"name":"GameState","nameLocations":["6325:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":6,"src":"6325:9:0"},"referencedDeclaration":6,"src":"6325:9:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"visibility":"internal"}],"src":"6324:11:0"},"scope":856,"src":"6264:394:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":671,"nodeType":"Block","src":"6772:154:0","statements":[{"assignments":[656],"declarations":[{"constant":false,"id":656,"mutability":"mutable","name":"playerData","nameLocation":"6796:10:0","nodeType":"VariableDeclaration","scope":671,"src":"6782:24:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player"},"typeName":{"id":655,"nodeType":"UserDefinedTypeName","pathNode":{"id":654,"name":"Player","nameLocations":["6782:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":37,"src":"6782:6:0"},"referencedDeclaration":37,"src":"6782:6:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage_ptr","typeString":"struct BigWickGame.Player"}},"visibility":"internal"}],"id":662,"initialValue":{"baseExpression":{"baseExpression":{"id":657,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"6809:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":659,"indexExpression":{"id":658,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6821:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6809:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":661,"indexExpression":{"id":660,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":645,"src":"6829:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6809:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6782:54:0"},{"expression":{"components":[{"expression":{"id":663,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"6854:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6865:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"6854:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":665,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"6875:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6886:8:0","memberName":"bidCount","nodeType":"MemberAccess","referencedDeclaration":32,"src":"6875:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":667,"name":"playerData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":656,"src":"6896:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_memory_ptr","typeString":"struct BigWickGame.Player memory"}},"id":668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6907:11:0","memberName":"lastBidTime","nodeType":"MemberAccess","referencedDeclaration":34,"src":"6896:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6853:66:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":653,"id":670,"nodeType":"Return","src":"6846:73:0"}]},"functionSelector":"a59d9ab7","id":672,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerBid","nameLocation":"6677:12:0","nodeType":"FunctionDefinition","parameters":{"id":646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":643,"mutability":"mutable","name":"gameId","nameLocation":"6698:6:0","nodeType":"VariableDeclaration","scope":672,"src":"6690:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"6690:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":645,"mutability":"mutable","name":"player","nameLocation":"6714:6:0","nodeType":"VariableDeclaration","scope":672,"src":"6706:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":644,"name":"address","nodeType":"ElementaryTypeName","src":"6706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6689:32:0"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"6745:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6745:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"6754:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6754:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":672,"src":"6763:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":651,"name":"uint256","nodeType":"ElementaryTypeName","src":"6763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6744:27:0"},"scope":856,"src":"6668:258:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":684,"nodeType":"Block","src":"7017:46:0","statements":[{"expression":{"baseExpression":{"id":680,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7034:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":682,"indexExpression":{"id":681,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":674,"src":"7049:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7034:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":679,"id":683,"nodeType":"Return","src":"7027:29:0"}]},"functionSelector":"15a40f49","id":685,"implemented":true,"kind":"function","modifiers":[],"name":"getGamePlayers","nameLocation":"6945:14:0","nodeType":"FunctionDefinition","parameters":{"id":675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":674,"mutability":"mutable","name":"gameId","nameLocation":"6968:6:0","nodeType":"VariableDeclaration","scope":685,"src":"6960:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":673,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6959:16:0"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":685,"src":"6999:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":676,"name":"address","nodeType":"ElementaryTypeName","src":"6999:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":677,"nodeType":"ArrayTypeName","src":"6999:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6998:18:0"},"scope":856,"src":"6936:127:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":697,"nodeType":"Block","src":"7149:53:0","statements":[{"expression":{"expression":{"baseExpression":{"id":692,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"7166:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":694,"indexExpression":{"id":693,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"7181:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7166:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7189:6:0","memberName":"length","nodeType":"MemberAccess","src":"7166:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":691,"id":696,"nodeType":"Return","src":"7159:36:0"}]},"functionSelector":"ff8fb35c","id":698,"implemented":true,"kind":"function","modifiers":[],"name":"getGamePlayerCount","nameLocation":"7082:18:0","nodeType":"FunctionDefinition","parameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"gameId","nameLocation":"7109:6:0","nodeType":"VariableDeclaration","scope":698,"src":"7101:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"7101:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7100:16:0"},"returnParameters":{"id":691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":698,"src":"7140:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":689,"name":"uint256","nodeType":"ElementaryTypeName","src":"7140:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7139:9:0"},"scope":856,"src":"7073:129:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":754,"nodeType":"Block","src":"7259:450:0","statements":[{"assignments":[704],"declarations":[{"constant":false,"id":704,"mutability":"mutable","name":"totalTreasury","nameLocation":"7277:13:0","nodeType":"VariableDeclaration","scope":754,"src":"7269:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":703,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":706,"initialValue":{"hexValue":"30","id":705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7293:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7269:25:0"},{"body":{"id":737,"nodeType":"Block","src":"7415:162:0","statements":[{"condition":{"expression":{"baseExpression":{"id":717,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7433:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":719,"indexExpression":{"id":718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7439:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7433:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":720,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7442:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"7433:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":736,"nodeType":"IfStatement","src":"7429:138:0","trueBody":{"id":735,"nodeType":"Block","src":"7453:114:0","statements":[{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":721,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7471:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":722,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7488:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":724,"indexExpression":{"id":723,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7494:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7488:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":725,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7497:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7488:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7471:38:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":727,"nodeType":"ExpressionStatement","src":"7471:38:0"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":728,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7527:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":730,"indexExpression":{"id":729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7533:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7527:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"id":731,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7536:12:0","memberName":"treasuryFund","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7527:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7527:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":734,"nodeType":"ExpressionStatement","src":"7527:25:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":711,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7390:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":712,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":53,"src":"7395:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7390:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":738,"initializationExpression":{"assignments":[708],"declarations":[{"constant":false,"id":708,"mutability":"mutable","name":"i","nameLocation":"7383:1:0","nodeType":"VariableDeclaration","scope":738,"src":"7375:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":707,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"initialValue":{"hexValue":"31","id":709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"7375:13:0"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7410:3:0","subExpression":{"id":714,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"7410:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":716,"nodeType":"ExpressionStatement","src":"7410:3:0"},"nodeType":"ForStatement","src":"7370:207:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":740,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7603:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7619:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7603:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2074726561737572792066756e647320746f207769746864726177","id":743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7622:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_afa61b47edd5c78db3a86067b76f0091e67103fda79d528a96b3b8dfbf84cdd3","typeString":"literal_string \"No treasury funds to withdraw\""},"value":"No treasury funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_afa61b47edd5c78db3a86067b76f0091e67103fda79d528a96b3b8dfbf84cdd3","typeString":"literal_string \"No treasury funds to withdraw\""}],"id":739,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7595:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7595:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":745,"nodeType":"ExpressionStatement","src":"7595:59:0"},{"expression":{"arguments":[{"id":751,"name":"totalTreasury","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"7688:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"7672:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7664:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":746,"name":"address","nodeType":"ElementaryTypeName","src":"7664:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7664:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7679:8:0","memberName":"transfer","nodeType":"MemberAccess","src":"7664:23:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7664:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"7664:38:0"}]},"functionSelector":"166bab95","id":755,"implemented":true,"kind":"function","modifiers":[{"id":701,"kind":"modifierInvocation","modifierName":{"id":700,"name":"onlyOwner","nameLocations":["7249:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":118,"src":"7249:9:0"},"nodeType":"ModifierInvocation","src":"7249:9:0"}],"name":"withdrawTreasury","nameLocation":"7221:16:0","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[],"src":"7237:2:0"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"7259:0:0"},"scope":856,"src":"7212:497:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":854,"nodeType":"Block","src":"7847:677:0","statements":[{"assignments":[767],"declarations":[{"constant":false,"id":767,"mutability":"mutable","name":"game","nameLocation":"7870:4:0","nodeType":"VariableDeclaration","scope":854,"src":"7857:17:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"},"typeName":{"id":766,"nodeType":"UserDefinedTypeName","pathNode":{"id":765,"name":"Game","nameLocations":["7857:4:0"],"nodeType":"IdentifierPath","referencedDeclaration":28,"src":"7857:4:0"},"referencedDeclaration":28,"src":"7857:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game"}},"visibility":"internal"}],"id":771,"initialValue":{"baseExpression":{"id":768,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7877:5:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$28_storage_$","typeString":"mapping(uint256 => struct BigWickGame.Game storage ref)"}},"id":770,"indexExpression":{"id":769,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"7883:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7877:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage","typeString":"struct BigWickGame.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7857:33:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"},"id":777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":773,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7908:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7913:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"7908:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":775,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"7922:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7932:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"7922:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"7908:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c726561647920656e646564","id":778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7939:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""},"value":"Game already ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9a4dbac0c075c0bc5062722621ba9571340c4195a63b4f22489c57756fb84b24","typeString":"literal_string \"Game already ended\""}],"id":772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7900:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7900:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":780,"nodeType":"ExpressionStatement","src":"7900:60:0"},{"expression":{"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":781,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"7979:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7984:5:0","memberName":"state","nodeType":"MemberAccess","referencedDeclaration":23,"src":"7979:10:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":784,"name":"GameState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"7992:9:0","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_GameState_$6_$","typeString":"type(enum BigWickGame.GameState)"}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8002:5:0","memberName":"Ended","nodeType":"MemberAccess","referencedDeclaration":5,"src":"7992:15:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"src":"7979:28:0","typeDescriptions":{"typeIdentifier":"t_enum$_GameState_$6","typeString":"enum BigWickGame.GameState"}},"id":787,"nodeType":"ExpressionStatement","src":"7979:28:0"},{"expression":{"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":788,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"8017:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$28_storage_ptr","typeString":"struct BigWickGame.Game storage pointer"}},"id":790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8022:9:0","memberName":"finalized","nodeType":"MemberAccess","referencedDeclaration":27,"src":"8017:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8034:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8017:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":793,"nodeType":"ExpressionStatement","src":"8017:21:0"},{"assignments":[798],"declarations":[{"constant":false,"id":798,"mutability":"mutable","name":"playerList","nameLocation":"8119:10:0","nodeType":"VariableDeclaration","scope":854,"src":"8102:27:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"8102:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":797,"nodeType":"ArrayTypeName","src":"8102:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":802,"initialValue":{"baseExpression":{"id":799,"name":"gamePlayerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"8132:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint256 => address[] storage ref)"}},"id":801,"indexExpression":{"id":800,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8147:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8132:22:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8102:52:0"},{"body":{"id":842,"nodeType":"Block","src":"8221:238:0","statements":[{"assignments":[815],"declarations":[{"constant":false,"id":815,"mutability":"mutable","name":"player","nameLocation":"8243:6:0","nodeType":"VariableDeclaration","scope":842,"src":"8235:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"8235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":819,"initialValue":{"baseExpression":{"id":816,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8252:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":818,"indexExpression":{"id":817,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8263:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8252:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8235:30:0"},{"assignments":[821],"declarations":[{"constant":false,"id":821,"mutability":"mutable","name":"playerBid","nameLocation":"8287:9:0","nodeType":"VariableDeclaration","scope":842,"src":"8279:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":820,"name":"uint256","nodeType":"ElementaryTypeName","src":"8279:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":828,"initialValue":{"expression":{"baseExpression":{"baseExpression":{"id":822,"name":"gamePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"8299:11:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_Player_$37_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct BigWickGame.Player storage ref))"}},"id":824,"indexExpression":{"id":823,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8311:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8299:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Player_$37_storage_$","typeString":"mapping(address => struct BigWickGame.Player storage ref)"}},"id":826,"indexExpression":{"id":825,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8319:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8299:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_Player_$37_storage","typeString":"struct BigWickGame.Player storage ref"}},"id":827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8327:8:0","memberName":"totalBid","nodeType":"MemberAccess","referencedDeclaration":30,"src":"8299:36:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8279:56:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"playerBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8366:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8378:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8366:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":841,"nodeType":"IfStatement","src":"8362:87:0","trueBody":{"id":840,"nodeType":"Block","src":"8381:68:0","statements":[{"expression":{"arguments":[{"id":837,"name":"playerBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":821,"src":"8424:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":834,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":815,"src":"8407:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8399:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8399:8:0","stateMutability":"payable","typeDescriptions":{}}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8415:8:0","memberName":"transfer","nodeType":"MemberAccess","src":"8399:24:0","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":839,"nodeType":"ExpressionStatement","src":"8399:35:0"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8193:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":808,"name":"playerList","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"8197:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8208:6:0","memberName":"length","nodeType":"MemberAccess","src":"8197:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8193:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":843,"initializationExpression":{"assignments":[804],"declarations":[{"constant":false,"id":804,"mutability":"mutable","name":"i","nameLocation":"8186:1:0","nodeType":"VariableDeclaration","scope":843,"src":"8178:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":803,"name":"uint256","nodeType":"ElementaryTypeName","src":"8178:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":806,"initialValue":{"hexValue":"30","id":805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8190:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8178:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8216:3:0","subExpression":{"id":811,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":804,"src":"8216:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":813,"nodeType":"ExpressionStatement","src":"8216:3:0"},"nodeType":"ForStatement","src":"8173:286:0"},{"eventCall":{"arguments":[{"id":845,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"8492:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8508:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8500:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":846,"name":"address","nodeType":"ElementaryTypeName","src":"8500:7:0","typeDescriptions":{}}},"id":849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8500:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8512:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8515:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":844,"name":"GameEnded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"8482:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256,uint256)"}},"id":852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8482:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":853,"nodeType":"EmitStatement","src":"8477:40:0"}]},"functionSelector":"b256b11b","id":855,"implemented":true,"kind":"function","modifiers":[{"id":760,"kind":"modifierInvocation","modifierName":{"id":759,"name":"onlyOwner","nameLocations":["7818:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":118,"src":"7818:9:0"},"nodeType":"ModifierInvocation","src":"7818:9:0"},{"arguments":[{"id":762,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"7839:6:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":763,"kind":"modifierInvocation","modifierName":{"id":761,"name":"gameExists","nameLocations":["7828:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":134,"src":"7828:10:0"},"nodeType":"ModifierInvocation","src":"7828:18:0"}],"name":"emergencyEndGame","nameLocation":"7776:16:0","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"gameId","nameLocation":"7801:6:0","nodeType":"VariableDeclaration","scope":855,"src":"7793:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7792:16:0"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"7847:0:0"},"scope":856,"src":"7767:757:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":857,"src":"58:8468:0","usedErrors":[],"usedEvents":[80,90,100,106]}],"src":"32:8494:0"}}},"contracts":{"contracts/BigWickGame.sol":{"BigWickGame":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalBid","type":"uint256"}],"name":"BidPlaced","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"candleEnd","type":"uint256"}],"name":"CandleEndDetermined","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"prizeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"treasuryAmount","type":"uint256"}],"name":"GameEnded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endingPeriodStart","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endTime","type":"uint256"}],"name":"GameStarted","type":"event"},{"inputs":[],"name":"ENDING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"STARTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TREASURY_SHARE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"WINNER_SHARE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"emergencyEndGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"endGame","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"gamePlayerList","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"gamePlayers","outputs":[{"internalType":"uint256","name":"totalBid","type":"uint256"},{"internalType":"uint256","name":"bidCount","type":"uint256"},{"internalType":"uint256","name":"lastBidTime","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"endingPeriodStart","type":"uint256"},{"internalType":"uint256","name":"endTime","type":"uint256"},{"internalType":"uint256","name":"totalPot","type":"uint256"},{"internalType":"uint256","name":"treasuryFund","type":"uint256"},{"internalType":"address","name":"winner","type":"address"},{"internalType":"enum BigWickGame.GameState","name":"state","type":"uint8"},{"internalType":"uint256","name":"candleEnd","type":"uint256"},{"internalType":"bool","name":"finalized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGamePlayerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGamePlayers","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameState","outputs":[{"internalType":"enum BigWickGame.GameState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"},{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerBid","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"placeBid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"startNewGame","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBid\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"candleEnd\",\"type\":\"uint256\"}],\"name\":\"CandleEndDetermined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prizeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryAmount\",\"type\":\"uint256\"}],\"name\":\"GameEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endingPeriodStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"}],\"name\":\"GameStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ENDING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STARTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WINNER_SHARE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"emergencyEndGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"endGame\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"gamePlayerList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gamePlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bidCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBidTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endingPeriodStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalPot\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasuryFund\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"enum BigWickGame.GameState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"candleEnd\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGamePlayerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGamePlayers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGameState\",\"outputs\":[{\"internalType\":\"enum BigWickGame.GameState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startNewGame\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BigWickGame.sol\":\"BigWickGame\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/BigWickGame.sol\":{\"keccak256\":\"0x7f526eb0d20d65851307637a72175b8dc608c60fabbdfde03ec393f14597f086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90918753cc5b15d363af6121f9e426314cb061d6c88a894451c01cfede867ac7\",\"dweb:/ipfs/Qme4aDF6fWxQEe8z3ZthZ8NhpENahCpC3zww5YX2Z5MQ9P\"]}},\"version\":1}","solc_version":"0.8.28+commit.7893614a.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 336/65920 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 12564\n// Code size = 45240 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20158]\n     5: jump @35 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30180\n    14: i32 a0 = a0 + 0\n    16: ecalli 12 // 'set_immutable_data'\n    18: jump @35\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @15\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @15\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 32)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ra = 0x6\n   659: ecalli 6 // 'get_storage'\n   661: fallthrough\n      : @7 [@dyn 3] (gas: 5)\n   662: a0 = u64 [sp + 0x38]\n   665: a1 = u64 [sp + 0x30]\n   668: a2 = u64 [sp + 0x28]\n   671: a3 = u64 [sp + 0x20]\n   674: t0 = 8, jump @1447\n      : @8 [@dyn 4] (gas: 10)\n   680: u64 [s1 + 0x18] = a3\n   683: u64 [s1 + 0x10] = a2\n   686: u64 [s1 + 0x8] = a1\n   689: u64 [s1] = a0\n   691: sp = s0 + 0xffffffffffffffa0\n   694: ra = u64 [sp + 0x58]\n   697: s0 = u64 [sp + 0x50]\n   700: s1 = u64 [sp + 0x48]\n   703: sp = sp + 0x60\n   706: ret\n      : @9 (gas: 40)\n   708: sp = sp + 0xffffffffffffffa0\n   711: u64 [sp + 0x58] = ra\n   714: u64 [sp + 0x50] = s0\n   717: s0 = sp + 0x60\n   720: sp = sp & 0xffffffffffffffe0\n   723: t0 = u64 [a0]\n   725: a3 = u64 [a0 + 0x8]\n   728: a4 = u64 [a0 + 0x10]\n   731: a0 = u64 [a0 + 0x18]\n   734: t1 = u64 [a1]\n   736: a2 = u64 [a1 + 0x8]\n   739: a5 = u64 [a1 + 0x10]\n   742: a1 = u64 [a1 + 0x18]\n   745: t2 = reverse a0\n   747: a4 = reverse a4\n   749: a3 = reverse a3\n   751: a0 = reverse t0\n   753: t0 = reverse a1\n   755: a5 = reverse a5\n   757: a2 = reverse a2\n   759: a1 = reverse t1\n   761: u64 [sp + 0x18] = a0\n   764: u64 [sp + 0x10] = a3\n   767: u64 [sp + 0x8] = a4\n   770: u64 [sp] = t2\n   772: u64 [sp + 0x38] = a1\n   775: u64 [sp + 0x30] = a2\n   778: u64 [sp + 0x28] = a5\n   781: u64 [sp + 0x20] = t0\n   784: i32 a1 = sp + 0\n   786: i32 a3 = sp + 0x20\n   789: a2 = 0xffffffffffffffff\n   792: a4 = 0x20\n   795: a0 = 0\n   797: ecalli 13 // 'set_storage'\n   799: sp = s0 + 0xffffffffffffffa0\n   802: ra = u64 [sp + 0x58]\n   805: s0 = u64 [sp + 0x50]\n   808: sp = sp + 0x60\n   811: ret\n      : @10 (gas: 24)\n   813: sp = sp + 0xffffffffffffff60\n   817: u64 [sp + 0x98] = ra\n   821: u64 [sp + 0x90] = s0\n   825: u64 [sp + 0x88] = s1\n   829: s0 = sp + 0xa0\n   833: sp = sp & 0xffffffffffffffe0\n   836: a4 = u64 [a3]\n   838: u64 [sp + 0x38] = a4\n   841: a4 = u64 [a3 + 0x8]\n   844: u64 [sp + 0x30] = a4\n   847: a4 = u64 [a3 + 0x10]\n   850: u64 [sp + 0x28] = a4\n   853: a3 = u64 [a3 + 0x18]\n   856: u64 [sp + 0x20] = a3\n   859: a3 = u64 [a2]\n   861: u64 [sp + 0x18] = a3\n   864: a3 = u64 [a2 + 0x8]\n   867: u64 [sp + 0x10] = a3\n   870: a3 = u64 [a2 + 0x10]\n   873: u64 [sp + 0x8] = a3\n   876: a2 = u64 [a2 + 0x18]\n   879: u64 [sp] = a2\n   881: s1 = a1\n   883: ra = 10, jump @15\n      : @11 [@dyn 5] (gas: 35)\n   888: a1 = u64 [sp]\n   890: a1 = reverse a1\n   892: a2 = u64 [sp + 0x8]\n   895: a2 = reverse a2\n   897: a3 = u64 [sp + 0x10]\n   900: a3 = reverse a3\n   902: a4 = u64 [sp + 0x18]\n   905: a4 = reverse a4\n   907: u64 [sp + 0x58] = a4\n   910: u64 [sp + 0x50] = a3\n   913: u64 [sp + 0x48] = a2\n   916: u64 [sp + 0x40] = a1\n   919: a1 = u64 [sp + 0x20]\n   922: a1 = reverse a1\n   924: a2 = u64 [sp + 0x28]\n   927: a2 = reverse a2\n   929: a3 = u64 [sp + 0x30]\n   932: a3 = reverse a3\n   934: a4 = u64 [sp + 0x38]\n   937: a4 = reverse a4\n   939: u64 [sp + 0x78] = a4\n   942: u64 [sp + 0x70] = a3\n   945: u64 [sp + 0x68] = a2\n   948: u64 [sp + 0x60] = a1\n   951: i32 a2 = a0 + 0\n   953: i32 a3 = s1 + 0\n   955: i32 a0 = sp + 0x40\n   958: a1 = 0x2\n   961: ecalli 5 // 'deposit_event'\n   963: sp = s0 + 0xffffffffffffff60\n   967: ra = u64 [sp + 0x98]\n   971: s0 = u64 [sp + 0x90]\n   975: s1 = u64 [sp + 0x88]\n   979: sp = sp + 0xa0\n   983: ret\n      : @12 (gas: 33)\n   985: sp = sp + 0xffffffffffffff20\n   989: u64 [sp + 0xd8] = ra\n   993: u64 [sp + 0xd0] = s0\n   997: u64 [sp + 0xc8] = s1\n  1001: s0 = sp + 0xe0\n  1005: sp = sp & 0xffffffffffffffe0\n  1008: a5 = u64 [a4]\n  1010: u64 [sp + 0x40] = a5\n  1013: a5 = u64 [a4 + 0x8]\n  1016: u64 [sp + 0x48] = a5\n  1019: a5 = u64 [a4 + 0x10]\n  1022: u64 [sp + 0x50] = a5\n  1025: a4 = u64 [a4 + 0x18]\n  1028: u64 [sp + 0x58] = a4\n  1031: t0 = 0xc\n  1034: a4 = u64 [a3]\n  1036: u64 [sp + 0x18] = a4\n  1039: a4 = u64 [a3 + 0x8]\n  1042: u64 [sp + 0x20] = a4\n  1045: a4 = u64 [a3 + 0x10]\n  1048: u64 [sp + 0x28] = a4\n  1051: a3 = u64 [a3 + 0x18]\n  1054: u64 [sp + 0x30] = a3\n  1057: s1 = u64 [a2]\n  1059: a3 = u64 [a2 + 0x8]\n  1062: u64 [sp] = a3\n  1064: a3 = u64 [a2 + 0x10]\n  1067: u64 [sp + 0x8] = a3\n  1070: a2 = u64 [a2 + 0x18]\n  1073: u64 [sp + 0x10] = a2\n  1076: u64 [sp + 56] = 0x40\n  1080: ra = 0xe\n  1083: jump @15\n      : @13 [@dyn 6] (gas: 2)\n  1086: u64 [sp + 0x38] = a1\n  1089: ra = 14, jump @15\n      : @14 [@dyn 7] (gas: 46)\n  1094: a1 = reverse s1\n  1096: u64 [sp + 0x78] = a1\n  1099: a1 = u64 [sp]\n  1101: a1 = reverse a1\n  1103: u64 [sp + 0x70] = a1\n  1106: a1 = u64 [sp + 0x8]\n  1109: a1 = reverse a1\n  1111: u64 [sp + 0x68] = a1\n  1114: a1 = u64 [sp + 0x10]\n  1117: a1 = reverse a1\n  1119: u64 [sp + 0x60] = a1\n  1122: a1 = u64 [sp + 0x18]\n  1125: a1 = reverse a1\n  1127: u64 [sp + 0x98] = a1\n  1131: a1 = u64 [sp + 0x20]\n  1134: a1 = reverse a1\n  1136: u64 [sp + 0x90] = a1\n  1140: a1 = u64 [sp + 0x28]\n  1143: a1 = reverse a1\n  1145: u64 [sp + 0x88] = a1\n  1149: a1 = u64 [sp + 0x30]\n  1152: a1 = reverse a1\n  1154: u64 [sp + 0x80] = a1\n  1158: a1 = u64 [sp + 0x40]\n  1161: a1 = reverse a1\n  1163: u64 [sp + 0xb8] = a1\n  1167: a1 = u64 [sp + 0x48]\n  1170: a1 = reverse a1\n  1172: u64 [sp + 0xb0] = a1\n  1176: a1 = u64 [sp + 0x50]\n  1179: a1 = reverse a1\n  1181: u64 [sp + 0xa8] = a1\n  1185: a1 = u64 [sp + 0x58]\n  1188: a1 = reverse a1\n  1190: u64 [sp + 0xa0] = a1\n  1194: i32 a2 = a0 + 0\n  1196: a3 = i32 [sp + 0x38]\n  1199: i32 a0 = sp + 0x60\n  1202: a1 = 0x3\n  1205: ecalli 5 // 'deposit_event'\n  1207: sp = s0 + 0xffffffffffffff20\n  1211: ra = u64 [sp + 0xd8]\n  1215: s0 = u64 [sp + 0xd0]\n  1219: s1 = u64 [sp + 0xc8]\n  1223: sp = sp + 0xe0\n  1227: ret\n      : @15 (gas: 2)\n  1229: i32 a2 = a0 >> 0x10\n  1232: jump @20 if a2 != 0\n      : @16 (gas: 4)\n  1235: a1 = a1 + a0\n  1238: i32 a1 = a1 + 0x1f\n  1241: a1 = a1 & 0xffffffffffffffe0\n  1244: jump @20 if a1 >u 65536\n      : @17 (gas: 3)\n  1250: a2 = 0x20154\n  1255: a3 = i32 [0x20154]\n  1260: jump @19 if a3 >=u a1\n      : @18 (gas: 2)\n  1263: u32 [0x20154] = a1\n  1268: fallthrough\n      : @19 (gas: 4)\n  1269: a1 = 0x20160\n  1274: i32 a0 = a0 + 0\n  1276: a0 = a0 + a1\n  1279: ret\n      : @20 (gas: 1)\n  1281: trap\n      : @21 (gas: 6)\n  1282: sp = sp + 0xfffffffffffffff0\n  1285: u64 [sp + 0x8] = ra\n  1288: u64 [sp] = s0\n  1290: s0 = a0 & 0x1\n  1293: ecalli 3 // 'call_data_size'\n  1295: fallthrough\n      : @22 (gas: 2)\n  1296: u32 [0x20150] = a0\n  1301: jump @24 if s0 == 0\n      : @23 (gas: 1)\n  1304: ra = 16, jump @25\n      : @24 [@dyn 8] (gas: 1)\n  1308: ra = 18, jump @37\n      : @25 [@dyn 9] (gas: 13)\n  1313: sp = sp + 0xfffffffffffffec0\n  1317: u64 [sp + 0x138] = ra\n  1321: u64 [sp + 0x130] = s0\n  1325: u64 [sp + 0x128] = s1\n  1329: s0 = sp + 0x140\n  1333: sp = sp & 0xffffffffffffffe0\n  1336: u64 [sp + 88] = 0\n  1339: u64 [sp + 80] = 0\n  1342: u64 [sp + 64] = 0x80\n  1347: a0 = 0x40\n  1350: a1 = sp + a0\n  1353: u64 [sp + 72] = 0\n  1356: ra = 20, jump @4\n      : @26 [@dyn 10] (gas: 7)\n  1361: u64 [sp + 120] = 0\n  1364: u64 [sp + 112] = 0\n  1367: u64 [sp + 104] = 0\n  1370: u64 [sp + 96] = 0\n  1373: i32 a0 = sp + 0x60\n  1376: ecalli 14 // 'value_transferred'\n  1378: fallthrough\n      : @27 (gas: 8)\n  1379: a0 = u64 [sp + 0x70]\n  1382: a1 = u64 [sp + 0x78]\n  1385: a2 = u64 [sp + 0x68]\n  1388: a3 = u64 [sp + 0x60]\n  1391: a1 = a1 | a2\n  1394: a0 = a0 | a3\n  1397: a0 = a0 | a1\n  1400: jump @29 if a0 == 0\n      : @28 (gas: 7)\n  1403: a1 = 0x20160\n  1408: i32 a1 = a1 + 0\n  1410: a0 = 0x1\n  1413: a2 = 0\n  1415: ra = 0x1e\n  1418: ecalli 11 // 'seal_return'\n  1420: jump @37\n      : @29 (gas: 25)\n  1423: s1 = 0x30160\n  1428: i32 a0 = s1 + 0\n  1430: ecalli 4 // 'caller'\n  1432: a0 = u64 [0x30168]\n  1437: a1 = i32 [0x30170]\n  1442: a2 = u64 [0x30160]\n  1447: a0 = reverse a0\n  1449: a3 = a0 << 0x20\n  1452: a1 = reverse a1\n  1454: a1 = a1 >> 0x20\n  1457: a1 = a1 | a3\n  1460: u64 [sp + 0x18] = a1\n  1463: a0 = a0 >> 0x20\n  1466: a1 = reverse a2\n  1468: s1 = a1 << 0x20\n  1471: a0 = a0 | s1\n  1474: u64 [sp + 0x10] = a0\n  1477: s1 = a1 >> 0x20\n  1480: u64 [sp + 152] = 0\n  1484: u64 [sp + 144] = 0\n  1488: u64 [sp + 136] = 0\n  1492: u64 [sp + 128] = 0\n  1496: a0 = sp + 0x20\n  1499: a1 = sp + 0x80\n  1503: ra = 22, jump @6\n      : @30 [@dyn 11] (gas: 17)\n  1508: a0 = u32 [sp + 0x34]\n  1511: a0 = a0 << 0x20\n  1514: a1 = u64 [sp + 0x38]\n  1517: a0 = a0 | s1\n  1520: u64 [sp + 184] = 0\n  1524: u64 [sp + 176] = 0\n  1528: u64 [sp + 168] = 0\n  1532: u64 [sp + 160] = 0\n  1536: u64 [sp + 0xd8] = a1\n  1540: a1 = u64 [sp + 0x10]\n  1543: u64 [sp + 0xc8] = a1\n  1547: a1 = u64 [sp + 0x18]\n  1550: u64 [sp + 0xc0] = a1\n  1554: u64 [sp + 0xd0] = a0\n  1558: a0 = sp + 0xa0\n  1562: a1 = sp + 0xc0\n  1566: ra = 24, jump @9\n      : @31 [@dyn 12] (gas: 11)\n  1571: u64 [sp + 248] = 0\n  1575: u64 [sp + 240] = 0\n  1579: u64 [sp + 232] = 0\n  1583: u64 [sp + 224] = 0x1\n  1588: u64 [sp + 280] = 0\n  1592: u64 [sp + 272] = 0\n  1596: u64 [sp + 264] = 0\n  1600: u64 [sp + 256] = 0\n  1604: a0 = sp + 0xe0\n  1608: a1 = sp + 0x100\n  1612: ra = 26, jump @9\n      : @32 [@dyn 13] (gas: 2)\n  1617: a1 = i32 [0x20154]\n  1622: jump @34 if a1 >u 127\n      : @33 (gas: 2)\n  1626: u32 [0x20154] = 0x80\n  1633: fallthrough\n      : @34 (gas: 6)\n  1634: a0 = 0x20160\n  1639: i32 a0 = a0 + 0x80\n  1643: a1 = 0\n  1645: a2 = 0\n  1647: ecalli 1 // 'call_data_copy'\n  1649: jump @0\n      : @35 (gas: 3)\n  1652: a0 = 0x80\n  1656: a1 = 0\n  1658: ra = 28, jump @15\n      : @36 [@dyn 14] (gas: 6)\n  1663: i32 a1 = a0 + 0\n  1665: a0 = 0\n  1667: a2 = 0\n  1669: ra = 0x1e\n  1672: ecalli 11 // 'seal_return'\n  1674: fallthrough\n      : @37 [@dyn 15] (gas: 16)\n  1675: sp = sp + 0xfffffffffffffe10\n  1679: u64 [sp + 0x1e8] = ra\n  1683: u64 [sp + 0x1e0] = s0\n  1687: u64 [sp + 0x1d8] = s1\n  1691: s0 = sp + 0x1f0\n  1695: sp = sp + 0xffffffffffffbf90\n  1699: sp = sp & 0xffffffffffffffe0\n  1702: s1 = sp\n  1704: a2 = s1 + 0x3158\n  1708: u64 [a2 + 192] = 0\n  1712: u64 [a2 + 184] = 0\n  1716: u64 [a2 + 168] = 0x80\n  1722: a0 = 0x40\n  1725: a1 = s1 + 0x3200\n  1729: u64 [a2 + 176] = 0\n  1733: ra = 32, jump @4\n      : @38 [@dyn 16] (gas: 4)\n  1738: a0 = 0x20150\n  1743: u64 [s1 + 0x1b8] = a0\n  1747: a0 = i32 [0x20150]\n  1752: jump @40 if a0 >=u 4\n      : @39 (gas: 1)\n  1756: jump @1078\n      : @40 (gas: 6)\n  1760: a0 = s1 + 0x3000\n  1764: i32 a0 = a0 + 0x220\n  1768: a1 = 0\n  1770: ra = 0x22\n  1773: ecalli 2 // 'call_data_load'\n  1775: fallthrough\n      : @41 [@dyn 17] (gas: 3)\n  1776: a3 = s1 + 0x3158\n  1780: a0 = i32 [a3 + 0xe4]\n  1784: jump @43 if a0 != 2376452955\n      : @42 (gas: 1)\n  1791: jump @267\n      : @43 (gas: 1)\n  1794: jump @81 if a0 == 2574905157\n      : @44 (gas: 1)\n  1802: jump @46 if a0 != 2778569399\n      : @45 (gas: 1)\n  1809: jump @497\n      : @46 (gas: 2)\n  1812: a2 = s1 + 0x3958\n  1816: jump @194 if a0 == 2992025883\n      : @47 (gas: 1)\n  1824: jump @141 if a0 == 3493436344\n      : @48 (gas: 1)\n  1832: jump @184 if a0 == 3689087244\n      : @49 (gas: 2)\n  1840: a4 = s1 + 0x4158\n  1844: jump @51 if a0 != 3980750564\n      : @50 (gas: 1)\n  1851: jump @574\n      : @51 (gas: 1)\n  1854: jump @53 if a0 != 4047311449\n      : @52 (gas: 1)\n  1861: jump @544\n      : @53 (gas: 1)\n  1864: jump @55 if a0 != 4287607644\n      : @54 (gas: 1)\n  1870: jump @278\n      : @55 (gas: 1)\n  1873: jump @57 if a0 != 4292742260\n      : @56 (gas: 1)\n  1879: jump @484\n      : @57 (gas: 1)\n  1882: jump @59 if a0 != 363073353\n      : @58 (gas: 1)\n  1889: jump @417\n      : @59 (gas: 1)\n  1892: jump @61 if a0 != 376155029\n      : @60 (gas: 1)\n  1899: jump @445\n      : @61 (gas: 1)\n  1902: jump @63 if a0 != 845767028\n      : @62 (gas: 1)\n  1909: jump @406\n      : @63 (gas: 1)\n  1912: jump @65 if a0 != 1031109195\n      : @64 (gas: 1)\n  1919: jump @257\n      : @65 (gas: 1)\n  1922: jump @67 if a0 != 1210929632\n      : @66 (gas: 1)\n  1929: jump @296\n      : @67 (gas: 1)\n  1932: jump @69 if a0 == 1399471580\n      : @68 (gas: 1)\n  1939: jump @601\n      : @69 (gas: 8)\n  1942: u64 [a3 + 1952] = 0\n  1946: u64 [a3 + 1944] = 0\n  1950: u64 [a3 + 1936] = 0\n  1954: u64 [a3 + 1928] = 0\n  1958: a0 = s1 + 0x4000\n  1962: i32 a0 = a0 + 0xfffffffffffff8e0\n  1966: ecalli 14 // 'value_transferred'\n  1968: fallthrough\n      : @70 (gas: 10)\n  1969: a4 = s1 + 0x3158\n  1973: a5 = a4 + 0x700\n  1977: a0 = u64 [a5 + 0x98]\n  1981: a1 = u64 [a5 + 0xa0]\n  1985: a2 = u64 [a5 + 0x90]\n  1989: a3 = u64 [a5 + 0x88]\n  1993: a1 = a1 | a2\n  1996: a0 = a0 | a3\n  1999: a0 = a0 | a1\n  2002: jump @72 if a0 == 0\n      : @71 (gas: 1)\n  2005: jump @1033\n      : @72 (gas: 3)\n  2008: a0 = u64 [s1 + 0x1b8]\n  2012: a0 = i32 [a0]\n  2014: jump @74 if a0 >u 3\n      : @73 (gas: 1)\n  2018: jump @1034\n      : @74 (gas: 7)\n  2021: u64 [a4 + 1984] = 0\n  2025: u64 [a4 + 1976] = 0\n  2029: u64 [a4 + 1968] = 0\n  2033: u64 [a4 + 1960] = 0x1\n  2038: a0 = s1 + 0x1180\n  2042: a1 = s1 + 0x3900\n  2046: ra = 36, jump @6\n      : @75 [@dyn 18] (gas: 13)\n  2051: a0 = s1 + 0x1140\n  2055: a1 = u64 [a0 + 0x58]\n  2058: a2 = s1 + 0x100\n  2062: u64 [a2 + 0xb8] = a1\n  2066: a1 = u64 [a0 + 0x50]\n  2069: u64 [a2 + 0xb0] = a1\n  2073: a1 = u64 [a0 + 0x48]\n  2076: u64 [a2 + 0xa8] = a1\n  2080: a0 = u64 [a0 + 0x40]\n  2083: u64 [a2 + 0xa0] = a0\n  2087: a0 = s1 + 0x1160\n  2091: a1 = 0x40\n  2094: ra = 38, jump @2\n      : @76 [@dyn 19] (gas: 6)\n  2099: a3 = s1 + 0x1140\n  2103: a0 = u64 [a3 + 0x38]\n  2106: a1 = u64 [a3 + 0x30]\n  2109: a2 = u64 [a3 + 0x28]\n  2112: a4 = u64 [a3 + 0x20]\n  2115: t0 = 40, jump @1449\n      : @77 [@dyn 20] (gas: 1)\n  2121: jump @79 if a0 == 0\n      : @78 (gas: 1)\n  2124: jump @912\n      : @79 (gas: 10)\n  2127: a2 = s1 + 0x100\n  2131: a0 = u64 [a2 + 0xa0]\n  2135: u64 [a3] = a0\n  2137: a0 = u64 [a2 + 0xa8]\n  2141: u64 [a3 + 0x8] = a0\n  2144: a0 = u64 [a2 + 0xb0]\n  2148: u64 [a3 + 0x10] = a0\n  2151: t0 = 0x2a\n  2154: a1 = s1 + 0x1140\n  2158: fallthrough\n      : @80 [@dyn 21] (gas: 6)\n  2159: a0 = u64 [a2 + 0xb8]\n  2163: u64 [a3 + 0x18] = a0\n  2166: a0 = a4\n  2168: u64 [s1 + 0x1b8] = a4\n  2172: ra = 0x218\n  2176: jump @4\n      : @81 (gas: 1)\n  2179: t0 = 44, jump @1471\n      : @82 [@dyn 22] (gas: 1)\n  2185: jump @84 if a1 <u a0\n      : @83 (gas: 1)\n  2188: jump @1035\n      : @84 (gas: 23)\n  2191: a0 = s1 + 0x4000\n  2195: i32 a0 = a0 + 0xfffffffffffff9e0\n  2199: a1 = 0x4\n  2202: ecalli 2 // 'call_data_load'\n  2204: a0 = s1 + 0x3958\n  2208: a4 = u64 [a0 + 0xa0]\n  2212: a3 = u64 [a0 + 0x98]\n  2216: a1 = u64 [a0 + 0x90]\n  2220: a2 = u64 [a0 + 0x88]\n  2224: a0 = s1 + 0x1958\n  2228: a5 = s1 + 0x100\n  2232: u64 [a5 + 0xa0] = a4\n  2236: u64 [a0 + 0x3c0] = a4\n  2240: u64 [a5 + 0xa8] = a3\n  2244: a4 = a0 + 0x300\n  2248: u64 [a4 + 0xb8] = a3\n  2252: u64 [a5 + 0xb0] = a1\n  2256: u64 [a4 + 0xb0] = a1\n  2260: a1 = s1 + 0x1d00\n  2264: u64 [a5 + 0xb8] = a2\n  2268: u64 [a4 + 0xa8] = a2\n  2272: a0 = 0\n  2274: ra = 46, jump @4\n      : @85 [@dyn 23] (gas: 9)\n  2279: a0 = s1 + 0x1958\n  2283: u64 [a0 + 928] = 0\n  2287: u64 [a0 + 920] = 0\n  2291: u64 [a0 + 912] = 0\n  2295: a3 = a0\n  2297: a0 = 0x20\n  2300: a1 = s1 + 0x1ce0\n  2304: u64 [a3 + 904] = 0x2\n  2309: ra = 48, jump @4\n      : @86 [@dyn 24] (gas: 3)\n  2314: a1 = 0x20154\n  2319: a0 = i32 [0x20154]\n  2324: jump @88 if a0 >u 63\n      : @87 (gas: 2)\n  2328: u32 [0x20154] = 0x40\n  2334: fallthrough\n      : @88 (gas: 15)\n  2335: a0 = sp + 0xffffffffffffffe0\n  2338: a2 = a0 & 0xffffffffffffffe0\n  2341: u64 [s1 + 0x188] = a2\n  2345: sp = a2\n  2347: a0 = 0x20160\n  2352: i32 a0 = a0 + 0\n  2354: u64 [s1 + 0x190] = a1\n  2358: i32 a2 = a2 + 0\n  2360: a1 = 0x40\n  2363: u64 [s1 + 0x198] = a0\n  2367: ra = 0x32\n  2370: ecalli 7 // 'hash_keccak_256'\n  2372: a3 = u64 [s1 + 0x188]\n  2376: t0 = 0x34\n  2379: jump @1426\n      : @89 [@dyn 25] (gas: 2)\n  2383: a3 = u64 [s1 + 0x188]\n  2387: t0 = 52, jump @1426\n      : @90 [@dyn 26] (gas: 7)\n  2393: u64 [a4 + 0xc0] = a3\n  2397: u64 [a4 + 0xb8] = a2\n  2401: u64 [a4 + 0xb0] = a1\n  2405: u64 [a4 + 0xa8] = a0\n  2409: a0 = s1 + 0x1cc0\n  2413: a1 = s1 + 0x3a00\n  2417: ra = 54, jump @6\n      : @91 [@dyn 27] (gas: 23)\n  2422: a4 = s1 + 0x1958\n  2426: a0 = u64 [a4 + 0x380]\n  2430: a1 = u64 [a4 + 0x370]\n  2434: a2 = u64 [a4 + 0x368]\n  2438: a3 = u64 [a4 + 0x378]\n  2442: a5 = u64 [s1 + 0x1a0]\n  2446: a0 = a0 ^ a5\n  2449: a5 = u64 [s1 + 0x1b0]\n  2453: a1 = a1 ^ a5\n  2456: a0 = a0 | a1\n  2459: a1 = u64 [s1 + 0x1a8]\n  2463: a1 = a1 ^ a3\n  2466: a3 = u64 [s1 + 0x1b8]\n  2470: a2 = a2 ^ a3\n  2473: a1 = a1 | a2\n  2476: a0 = a0 | a1\n  2479: a0 = a0 <u 0x1\n  2482: u64 [a4 + 864] = 0\n  2486: u64 [a4 + 856] = 0\n  2490: u64 [a4 + 0x348] = a0\n  2494: a0 = s1 + 0x1ca0\n  2498: u64 [a4 + 848] = 0\n  2502: ra = 56, jump @1283\n      : @92 [@dyn 28] (gas: 13)\n  2508: a0 = s1 + 0x1958\n  2512: a1 = u64 [s1 + 0x1a0]\n  2516: a3 = a0 + 0x300\n  2520: u64 [a3 + 0x40] = a1\n  2523: a1 = u64 [s1 + 0x1a8]\n  2527: u64 [a3 + 0x38] = a1\n  2530: a1 = u64 [s1 + 0x1b0]\n  2534: u64 [a3 + 0x30] = a1\n  2537: a1 = s1 + 0x1c80\n  2541: a2 = u64 [s1 + 0x1b8]\n  2545: u64 [a3 + 0x28] = a2\n  2548: a0 = 0\n  2550: ra = 58, jump @4\n      : @93 [@dyn 29] (gas: 3)\n  2555: t0 = 0x3c\n  2558: a1 = s1 + 0x1958\n  2562: fallthrough\n      : @94 [@dyn 30] (gas: 8)\n  2563: u64 [a1 + 800] = 0\n  2567: u64 [a1 + 792] = 0\n  2571: u64 [a1 + 776] = 0x2\n  2576: a2 = a1\n  2578: a0 = 0x20\n  2581: a1 = s1 + 0x1c60\n  2585: u64 [a2 + 784] = 0\n  2589: ra = 62, jump @4\n      : @95 [@dyn 31] (gas: 3)\n  2594: a1 = u64 [s1 + 0x190]\n  2598: a0 = i32 [a1]\n  2600: jump @97 if a0 >u 63\n      : @96 (gas: 3)\n  2604: u32 [a1 + 0] = 0x40\n  2607: t0 = 0x40\n  2610: jump @1427\n      : @97 (gas: 1)\n  2614: t0 = 64, jump @1427\n      : @98 [@dyn 32] (gas: 4)\n  2620: ra = 0x42\n  2623: ecalli 7 // 'hash_keccak_256'\n  2625: t0 = 0x44\n  2628: jump @1421\n      : @99 [@dyn 33] (gas: 1)\n  2632: t0 = 68, jump @1421\n      : @100 [@dyn 34] (gas: 7)\n  2638: u64 [a1 + 0xc8] = a4\n  2642: u64 [a1 + 0xd0] = a5\n  2646: u64 [a1 + 0xd8] = a2\n  2650: u64 [a1 + 0xe0] = a0\n  2654: a0 = s1 + 0x1c40\n  2658: a1 = s1 + 0x3a20\n  2662: ra = 70, jump @6\n      : @101 [@dyn 35] (gas: 3)\n  2667: t0 = 0x48\n  2670: a2 = s1 + 0x1958\n  2674: fallthrough\n      : @102 [@dyn 36] (gas: 2)\n  2675: a0 = u8 [a2 + 0x2fc]\n  2679: jump @104 if a0 <=u 3\n      : @103 (gas: 1)\n  2683: jump @1036\n      : @104 (gas: 1)\n  2686: jump @119 if a0 == 1\n      : @105 (gas: 12)\n  2691: a0 = u64 [s1 + 0x1b8]\n  2695: a3 = a2 + 0x200\n  2699: u64 [a3 + 0xc8] = a0\n  2703: a0 = u64 [s1 + 0x1b0]\n  2707: u64 [a3 + 0xd0] = a0\n  2711: a0 = u64 [s1 + 0x1a8]\n  2715: u64 [a3 + 0xd8] = a0\n  2719: a1 = s1 + 0x1c20\n  2723: a0 = u64 [s1 + 0x1a0]\n  2727: u64 [a3 + 0xe0] = a0\n  2731: a0 = 0\n  2733: ra = 74, jump @4\n      : @106 [@dyn 37] (gas: 3)\n  2738: t0 = 0x4c\n  2741: a1 = s1 + 0x1958\n  2745: fallthrough\n      : @107 [@dyn 38] (gas: 8)\n  2746: u64 [a1 + 704] = 0\n  2750: u64 [a1 + 696] = 0\n  2754: u64 [a1 + 680] = 0x2\n  2759: a2 = a1\n  2761: a0 = 0x20\n  2764: a1 = s1 + 0x1c00\n  2768: u64 [a2 + 688] = 0\n  2772: ra = 78, jump @4\n      : @108 [@dyn 39] (gas: 3)\n  2777: a2 = u64 [s1 + 0x190]\n  2781: a0 = i32 [a2]\n  2783: jump @110 if a0 >u 63\n      : @109 (gas: 3)\n  2787: u32 [a2 + 0] = 0x40\n  2790: t0 = 0x50\n  2793: jump @1427\n      : @110 (gas: 1)\n  2797: t0 = 80, jump @1427\n      : @111 [@dyn 40] (gas: 4)\n  2803: ra = 0x52\n  2806: ecalli 7 // 'hash_keccak_256'\n  2808: t0 = 0x54\n  2811: jump @1421\n      : @112 [@dyn 41] (gas: 1)\n  2815: t0 = 84, jump @1421\n      : @113 [@dyn 42] (gas: 7)\n  2821: u64 [a1 + 0xe8] = a4\n  2825: u64 [a1 + 0xf0] = a5\n  2829: u64 [a1 + 0xf8] = a2\n  2833: u64 [a1 + 0x100] = a0\n  2837: a0 = s1 + 0x1be0\n  2841: a1 = s1 + 0x3a40\n  2845: ra = 86, jump @6\n      : @114 [@dyn 43] (gas: 3)\n  2850: t0 = 0x58\n  2853: a2 = s1 + 0x1958\n  2857: fallthrough\n      : @115 [@dyn 44] (gas: 2)\n  2858: a0 = u8 [a2 + 0x29c]\n  2862: jump @117 if a0 <=u 3\n      : @116 (gas: 1)\n  2866: jump @1095\n      : @117 (gas: 1)\n  2869: jump @119 if a0 == 2\n      : @118 (gas: 1)\n  2873: jump @845\n      : @119 (gas: 9)\n  2876: a0 = s1 + 0x3958\n  2880: u64 [a0 + 288] = 0\n  2884: u64 [a0 + 280] = 0\n  2888: u64 [a0 + 272] = 0\n  2892: u64 [a0 + 264] = 0\n  2896: a0 = s1 + 0x4000\n  2900: i32 a0 = a0 + 0xfffffffffffffa60\n  2904: ecalli 14 // 'value_transferred'\n  2906: fallthrough\n      : @120 (gas: 10)\n  2907: a3 = s1 + 0x3958\n  2911: a4 = a3 + 0x100\n  2915: a0 = u64 [a4 + 0x18]\n  2918: a1 = u64 [a4 + 0x20]\n  2921: a2 = u64 [a4 + 0x10]\n  2924: a3 = u64 [a4 + 0x8]\n  2927: a1 = a1 | a2\n  2930: a0 = a0 | a3\n  2933: a0 = a0 | a1\n  2936: jump @122 if a0 == 0\n      : @121 (gas: 1)\n  2939: jump @712\n      : @122 (gas: 3)\n  2942: a0 = s1 + 0x14e0\n  2946: a1 = 0x40\n  2949: ra = 90, jump @2\n      : @123 [@dyn 45] (gas: 14)\n  2954: a2 = s1 + 0x1140\n  2958: t0 = u64 [a2 + 0x3b8]\n  2962: a1 = a2 + 0x300\n  2966: a5 = u64 [a1 + 0xb0]\n  2970: a4 = u64 [a1 + 0xa8]\n  2974: a0 = u64 [a1 + 0xa0]\n  2978: a3 = a4 | t0\n  2981: a1 = a0 | a5\n  2984: a1 = a1 | a3\n  2987: a1 = a1 >> 0x20\n  2990: a3 = a3 | a5\n  2993: a3 = a3 << 0x20\n  2996: a1 = a1 | a3\n  2999: jump @125 if a1 == 0\n      : @124 (gas: 1)\n  3002: jump @912\n      : @125 (gas: 11)\n  3005: u64 [a2 + 912] = 0\n  3009: u64 [a2 + 904] = 0\n  3013: u64 [a2 + 896] = 0\n  3017: a3 = 0x8c379a000000000\n  3027: a1 = s1 + 0x14c0\n  3031: u64 [a2 + 0x398] = a3\n  3035: u64 [s1 + 0x1b8] = a0\n  3039: u64 [s1 + 0x1b0] = a4\n  3043: u64 [s1 + 0x1a0] = t0\n  3047: u64 [s1 + 0x1a8] = a5\n  3051: ra = 92, jump @4\n      : @126 [@dyn 46] (gas: 1)\n  3056: t0 = 94, jump @1415\n      : @127 [@dyn 47] (gas: 1)\n  3062: jump @129 if a0 != 0\n      : @128 (gas: 1)\n  3065: jump @912\n      : @129 (gas: 10)\n  3068: i32 a0 = a1 + 0x4\n  3071: a2 = s1 + 0x1140\n  3075: u64 [a2 + 888] = 0\n  3079: u64 [a2 + 880] = 0\n  3083: u64 [a2 + 864] = 0x20\n  3088: a1 = s1 + 0x14a0\n  3092: u64 [a2 + 872] = 0\n  3096: u64 [s1 + 0x1a8] = a3\n  3100: u64 [s1 + 0x1a0] = a4\n  3104: ra = 96, jump @4\n      : @130 [@dyn 48] (gas: 10)\n  3109: a3 = s1 + 0x100\n  3113: a1 = u64 [a3 + 0xb8]\n  3117: a0 = u64 [a3 + 0xa0]\n  3121: a0 = a0 + 0xffffffffffffffdc\n  3124: a0 = a1 <u a0\n  3127: a2 = u64 [a3 + 0xb0]\n  3131: a0 = 0 if a2 != 0\n  3133: a2 = u64 [a3 + 0xa8]\n  3137: a0 = 0 if a2 != 0\n  3139: jump @132 if a0 != 0\n      : @131 (gas: 1)\n  3142: jump @912\n      : @132 (gas: 8)\n  3145: i32 a0 = a1 + 0x24\n  3148: a2 = s1 + 0x1140\n  3152: u64 [a2 + 856] = 0\n  3156: u64 [a2 + 848] = 0\n  3160: u64 [a2 + 832] = 0x21\n  3165: a1 = s1 + 0x1480\n  3169: u64 [a2 + 840] = 0\n  3173: ra = 98, jump @4\n      : @133 [@dyn 49] (gas: 10)\n  3178: a0 = s1 + 0x100\n  3182: a3 = u64 [a0 + 0xa8]\n  3186: a4 = u64 [a0 + 0xb0]\n  3190: a1 = u64 [a0 + 0xb8]\n  3194: a2 = 0x100000000\n  3204: a0 = 0xffffffbc\n  3214: a0 = a1 <u a0\n  3217: a0 = 0 if a4 != 0\n  3219: a0 = 0 if a3 != 0\n  3221: jump @135 if a0 != 0\n      : @134 (gas: 1)\n  3224: jump @912\n      : @135 (gas: 14)\n  3227: i32 a0 = a1 + 0x44\n  3230: a1 = u64 [0x200a0]\n  3235: a5 = s1 + 0x1140\n  3239: a4 = a5 + 0x300\n  3243: u64 [a4 + 0x38] = a1\n  3246: a1 = u64 [0x200a8]\n  3251: u64 [s1 + 0x1a0] = a2\n  3255: a2 = u64 [0x200b0]\n  3260: a3 = u64 [0x200b8]\n  3265: u64 [a4 + 0x30] = a1\n  3268: u64 [a4 + 0x28] = a2\n  3271: a1 = s1 + 0x1460\n  3275: u64 [a4 + 0x20] = a3\n  3278: ra = 100, jump @4\n      : @136 [@dyn 50] (gas: 10)\n  3283: a3 = s1 + 0x100\n  3287: a2 = u64 [a3 + 0xb8]\n  3291: a0 = u64 [a3 + 0xa0]\n  3295: a0 = a0 + 0xffffffffffffff9c\n  3298: a0 = a2 <u a0\n  3301: a1 = u64 [a3 + 0xb0]\n  3305: a0 = 0 if a1 != 0\n  3307: a1 = u64 [a3 + 0xa8]\n  3311: a0 = 0 if a1 != 0\n  3313: jump @138 if a0 != 0\n      : @137 (gas: 1)\n  3316: jump @912\n      : @138 (gas: 9)\n  3319: i32 a0 = a2 + 0x64\n  3322: a3 = s1 + 0x1140\n  3326: u64 [a3 + 784] = 0\n  3330: u64 [a3 + 776] = 0\n  3334: a1 = 0x3000000000000000\n  3344: u64 [a3 + 0x318] = a1\n  3348: a1 = s1 + 0x1440\n  3352: u64 [a3 + 768] = 0\n  3356: ra = 102, jump @4\n      : @139 [@dyn 51] (gas: 3)\n  3361: a1 = 0x84\n  3365: a0 = u64 [s1 + 0x1b8]\n  3369: ra = 104, jump @15\n      : @140 [@dyn 52] (gas: 5)\n  3374: i32 a1 = a0 + 0\n  3376: a0 = 0x1\n  3379: a2 = 0x84\n  3383: ecalli 11 // 'seal_return'\n  3385: fallthrough\n      : @141 (gas: 9)\n  3386: u64 [a2 + 1344] = 0\n  3390: u64 [a2 + 1336] = 0\n  3394: u64 [a2 + 1328] = 0\n  3398: u64 [a2 + 1320] = 0\n  3402: a0 = s1 + 0x4000\n  3406: i32 a0 = a0 + 0xfffffffffffffe80\n  3410: ra = 0x6a\n  3413: ecalli 14 // 'value_transferred'\n  3415: fallthrough\n      : @142 [@dyn 53] (gas: 10)\n  3416: a3 = s1 + 0x3958\n  3420: a4 = a3 + 0x500\n  3424: a0 = u64 [a4 + 0x38]\n  3427: a1 = u64 [a4 + 0x40]\n  3430: a2 = u64 [a4 + 0x30]\n  3433: a3 = u64 [a4 + 0x28]\n  3436: a1 = a1 | a2\n  3439: a0 = a0 | a3\n  3442: a0 = a0 | a1\n  3445: jump @144 if a0 == 0\n      : @143 (gas: 1)\n  3448: jump @1039\n      : @144 (gas: 1)\n  3451: t0 = 108, jump @1471\n      : @145 [@dyn 54] (gas: 1)\n  3457: jump @147 if a1 <u a0\n      : @146 (gas: 1)\n  3460: jump @1040\n      : @147 (gas: 23)\n  3463: a0 = s1 + 0x4000\n  3467: i32 a0 = a0 + 0xfffffffffffffea0\n  3471: a1 = 0x4\n  3474: ecalli 2 // 'call_data_load'\n  3476: a0 = s1 + 0x3958\n  3480: a5 = a0 + 0x500\n  3484: a4 = u64 [a5 + 0x60]\n  3487: a3 = u64 [a5 + 0x58]\n  3490: a1 = u64 [a5 + 0x50]\n  3493: a2 = u64 [a5 + 0x48]\n  3496: a0 = s1 + 0x2958\n  3500: u64 [s1 + 0x88] = a4\n  3504: a5 = a0 + 0x500\n  3508: u64 [a5 + 0xa0] = a4\n  3512: u64 [s1 + 0x90] = a3\n  3516: u64 [a5 + 0x98] = a3\n  3520: u64 [s1 + 0x98] = a1\n  3524: u64 [a5 + 0x90] = a1\n  3528: a1 = s1 + 0x2ee0\n  3532: u64 [s1 + 0xa0] = a2\n  3536: u64 [a5 + 0x88] = a2\n  3540: a0 = 0\n  3542: ra = 110, jump @4\n      : @148 [@dyn 55] (gas: 9)\n  3547: a0 = s1 + 0x2958\n  3551: u64 [a0 + 1408] = 0\n  3555: u64 [a0 + 1400] = 0\n  3559: u64 [a0 + 1392] = 0\n  3563: a3 = a0\n  3565: a0 = 0x20\n  3568: a1 = s1 + 0x2ec0\n  3572: u64 [a3 + 1384] = 0x2\n  3577: ra = 112, jump @4\n      : @149 [@dyn 56] (gas: 3)\n  3582: a1 = 0x20154\n  3587: a0 = i32 [0x20154]\n  3592: jump @151 if a0 >u 63\n      : @150 (gas: 3)\n  3596: u32 [0x20154] = 0x40\n  3602: t0 = 0x72\n  3605: jump @1459\n      : @151 (gas: 1)\n  3609: t0 = 114, jump @1459\n      : @152 [@dyn 57] (gas: 12)\n  3615: a0 = 0x20160\n  3620: u64 [s1 + 0x20] = a0\n  3623: i32 a0 = a0 + 0\n  3625: u64 [s1 + 0x100] = a1\n  3629: i32 a2 = a2 + 0\n  3631: a1 = 0x40\n  3634: u64 [s1 + 0xf8] = a0\n  3638: ra = 0x74\n  3641: ecalli 7 // 'hash_keccak_256'\n  3643: a3 = u64 [s1 + 0x1b8]\n  3647: t0 = 0x76\n  3650: jump @1426\n      : @153 [@dyn 58] (gas: 2)\n  3654: a3 = u64 [s1 + 0x1b8]\n  3658: t0 = 118, jump @1426\n      : @154 [@dyn 59] (gas: 8)\n  3664: a5 = a4 + 0x500\n  3668: u64 [a5 + 0x80] = a3\n  3672: u64 [a5 + 0x78] = a2\n  3675: u64 [a5 + 0x70] = a1\n  3678: u64 [a5 + 0x68] = a0\n  3681: a0 = s1 + 0x2ea0\n  3685: a1 = s1 + 0x3ec0\n  3689: ra = 120, jump @6\n      : @155 [@dyn 60] (gas: 23)\n  3694: a4 = s1 + 0x2958\n  3698: a0 = u64 [a4 + 0x560]\n  3702: a1 = u64 [a4 + 0x550]\n  3706: a2 = u64 [a4 + 0x548]\n  3710: a3 = u64 [a4 + 0x558]\n  3714: a5 = u64 [s1 + 0x88]\n  3718: a0 = a0 ^ a5\n  3721: a5 = u64 [s1 + 0x98]\n  3725: a1 = a1 ^ a5\n  3728: a0 = a0 | a1\n  3731: a1 = u64 [s1 + 0x90]\n  3735: a1 = a1 ^ a3\n  3738: a3 = u64 [s1 + 0xa0]\n  3742: a2 = a2 ^ a3\n  3745: a1 = a1 | a2\n  3748: a0 = a0 | a1\n  3751: a0 = a0 <u 0x1\n  3754: u64 [a4 + 1344] = 0\n  3758: u64 [a4 + 1336] = 0\n  3762: u64 [a4 + 0x528] = a0\n  3766: a0 = s1 + 0x2e80\n  3770: u64 [a4 + 1328] = 0\n  3774: ra = 122, jump @1283\n      : @156 [@dyn 61] (gas: 13)\n  3780: a0 = s1 + 0x2958\n  3784: a1 = u64 [s1 + 0x88]\n  3788: a3 = a0 + 0x500\n  3792: u64 [a3 + 0x20] = a1\n  3795: a1 = u64 [s1 + 0x90]\n  3799: u64 [a3 + 0x18] = a1\n  3802: a1 = u64 [s1 + 0x98]\n  3806: u64 [a3 + 0x10] = a1\n  3809: a1 = s1 + 0x2e60\n  3813: a2 = u64 [s1 + 0xa0]\n  3817: u64 [a3 + 0x8] = a2\n  3820: a0 = 0\n  3822: ra = 124, jump @4\n      : @157 [@dyn 62] (gas: 3)\n  3827: t0 = 0x7e\n  3830: a1 = s1 + 0x2958\n  3834: fallthrough\n      : @158 [@dyn 63] (gas: 8)\n  3835: u64 [a1 + 1280] = 0\n  3839: u64 [a1 + 1272] = 0\n  3843: u64 [a1 + 1256] = 0x2\n  3848: a2 = a1\n  3850: a0 = 0x20\n  3853: a1 = s1 + 0x2e40\n  3857: u64 [a2 + 1264] = 0\n  3861: ra = 128, jump @4\n      : @159 [@dyn 64] (gas: 3)\n  3867: a1 = u64 [s1 + 0x100]\n  3871: a0 = i32 [a1]\n  3873: jump @161 if a0 >u 63\n      : @160 (gas: 3)\n  3877: u32 [a1 + 0] = 0x40\n  3880: t0 = 0x82\n  3884: jump @1441\n      : @161 (gas: 1)\n  3888: t0 = 130, jump @1441\n      : @162 [@dyn 65] (gas: 31)\n  3895: ecalli 7 // 'hash_keccak_256'\n  3897: a3 = u64 [s1 + 0x1b8]\n  3901: a0 = u64 [a3]\n  3903: a1 = u64 [a3 + 0x8]\n  3906: a2 = u64 [a3 + 0x10]\n  3909: a3 = u64 [a3 + 0x18]\n  3912: a4 = reverse a0\n  3914: a5 = reverse a1\n  3916: a2 = reverse a2\n  3918: a0 = reverse a3\n  3920: t0 = a0 + 0x3\n  3923: u64 [s1 + 0x28] = a0\n  3926: a1 = t0 <u a0\n  3929: a0 = a2 + a1\n  3932: u64 [s1 + 0x30] = a2\n  3935: a3 = a0 <u a2\n  3938: a3 = a1 if a1 == 0\n  3941: a3 = a3 + a5\n  3944: u64 [s1 + 0x38] = a5\n  3947: a1 = a3 <u a5\n  3950: u64 [s1 + 0x40] = a4\n  3953: a1 = a1 + a4\n  3956: a4 = s1 + 0x3958\n  3960: u64 [a4 + 0x588] = t0\n  3964: a2 = a4 + 0x500\n  3968: u64 [a2 + 0x90] = a0\n  3972: u64 [a2 + 0x98] = a3\n  3976: u64 [a2 + 0xa0] = a1\n  3980: a0 = s1 + 0x2e20\n  3984: a1 = s1 + 0x3ee0\n  3988: ra = 132, jump @6\n      : @163 [@dyn 66] (gas: 15)\n  3994: a0 = s1 + 0x2958\n  3998: a2 = a0 + 0x400\n  4002: a1 = u64 [a2 + 0xc8]\n  4006: u64 [s1 + 0x1b8] = a1\n  4010: a1 = u64 [a2 + 0xd0]\n  4014: u64 [s1 + 0x1b0] = a1\n  4018: a1 = u64 [a2 + 0xd8]\n  4022: u64 [s1 + 0x1a8] = a1\n  4026: a0 = u64 [a2 + 0xe0]\n  4030: u64 [s1 + 0x1a0] = a0\n  4034: a0 = s1 + 0x4000\n  4038: i32 a0 = a0 + 0xffffffffffffff00\n  4042: ra = 0x86\n  4046: ecalli 8 // 'now'\n  4048: fallthrough\n      : @164 [@dyn 67] (gas: 18)\n  4049: a1 = s1 + 0x3958\n  4053: a4 = a1 + 0x500\n  4057: a0 = u64 [a4 + 0xc0]\n  4061: t0 = u64 [a1 + 0x5a8]\n  4065: a2 = u64 [a4 + 0xb8]\n  4069: a3 = u64 [a4 + 0xb0]\n  4073: a1 = u64 [s1 + 0x1a0]\n  4077: a4 = a0 ^ a1\n  4080: a1 = a0 <u a1\n  4083: a0 = u64 [s1 + 0x1a8]\n  4087: a5 = a2 <u a0\n  4090: a5 = a1 if a4 != 0\n  4093: a1 = u64 [s1 + 0x1b0]\n  4097: t1 = a3 ^ a1\n  4100: a3 = a3 <u a1\n  4103: a1 = u64 [s1 + 0x1b8]\n  4107: a1 = t0 <u a1\n  4110: t0 = 136, jump @1456\n      : @165 [@dyn 68] (gas: 1)\n  4117: jump @167 if a1 != 0\n      : @166 (gas: 1)\n  4120: jump @646\n      : @167 (gas: 3)\n  4123: a0 = s1 + 0x25a0\n  4127: a1 = 0x40\n  4130: ra = 138, jump @2\n      : @168 [@dyn 69] (gas: 14)\n  4136: a2 = s1 + 0x2158\n  4140: t0 = u64 [a2 + 0x460]\n  4144: a1 = a2 + 0x400\n  4148: a5 = u64 [a1 + 0x58]\n  4151: a4 = u64 [a1 + 0x50]\n  4154: a0 = u64 [a1 + 0x48]\n  4157: a3 = a4 | t0\n  4160: a1 = a0 | a5\n  4163: a1 = a1 | a3\n  4166: a1 = a1 >> 0x20\n  4169: a3 = a3 | a5\n  4172: a3 = a3 << 0x20\n  4175: a1 = a1 | a3\n  4178: jump @170 if a1 == 0\n      : @169 (gas: 1)\n  4181: jump @912\n      : @170 (gas: 11)\n  4184: u64 [a2 + 1080] = 0\n  4188: u64 [a2 + 1072] = 0\n  4192: u64 [a2 + 1064] = 0\n  4196: a3 = 0x8c379a000000000\n  4206: a1 = s1 + 0x2580\n  4210: u64 [a2 + 0x440] = a3\n  4214: u64 [s1 + 0x1b8] = a0\n  4218: u64 [s1 + 0x1b0] = a4\n  4222: u64 [s1 + 0x1a0] = t0\n  4226: u64 [s1 + 0x1a8] = a5\n  4230: ra = 140, jump @4\n      : @171 [@dyn 70] (gas: 1)\n  4236: t0 = 142, jump @1415\n      : @172 [@dyn 71] (gas: 1)\n  4243: jump @174 if a0 != 0\n      : @173 (gas: 1)\n  4246: jump @912\n      : @174 (gas: 3)\n  4249: i32 a0 = a1 + 0x4\n  4252: a1 = 0x2158\n  4256: t0 = 144, jump @1473\n      : @175 [@dyn 72] (gas: 5)\n  4263: a1 = s1 + 0x2560\n  4267: u64 [a2 + 1040] = 0\n  4271: u64 [s1 + 0x1a8] = a3\n  4275: u64 [s1 + 0x1a0] = a4\n  4279: ra = 146, jump @4\n      : @176 [@dyn 73] (gas: 1)\n  4285: t0 = 148, jump @1417\n      : @177 [@dyn 74] (gas: 1)\n  4292: jump @179 if a0 != 0\n      : @178 (gas: 1)\n  4295: jump @912\n      : @179 (gas: 8)\n  4298: i32 a0 = a1 + 0x24\n  4301: a3 = s1 + 0x2158\n  4305: u64 [a3 + 1024] = 0\n  4309: u64 [a3 + 1016] = 0\n  4313: u64 [a3 + 1000] = 0x16\n  4318: a1 = s1 + 0x2540\n  4322: u64 [a3 + 1008] = 0\n  4326: ra = 150, jump @4\n      : @180 [@dyn 75] (gas: 1)\n  4332: t0 = 152, jump @1419\n      : @181 [@dyn 76] (gas: 1)\n  4339: jump @183 if a0 != 0\n      : @182 (gas: 1)\n  4342: jump @912\n      : @183 (gas: 13)\n  4345: i32 a0 = a3 + 0x44\n  4348: a1 = u64 [0x20058]\n  4353: a2 = u64 [0x20060]\n  4358: a3 = u64 [0x20068]\n  4363: a4 = s1 + 0x2158\n  4367: a5 = a4 + 0x300\n  4371: u64 [a5 + 0xe0] = a1\n  4375: u64 [a5 + 0xd8] = a2\n  4379: u64 [a5 + 0xd0] = a3\n  4383: a1 = s1 + 0x2520\n  4387: u64 [a4 + 968] = 0\n  4391: ra = 0x3a8\n  4395: jump @4\n      : @184 (gas: 8)\n  4398: u64 [a2 + 1984] = 0\n  4402: u64 [a2 + 1976] = 0\n  4406: u64 [a2 + 1968] = 0\n  4410: u64 [a2 + 1960] = 0\n  4414: a0 = s1 + 0x4000\n  4418: i32 a0 = a0 + 0x100\n  4422: ecalli 14 // 'value_transferred'\n  4424: fallthrough\n      : @185 (gas: 10)\n  4425: a3 = s1 + 0x3958\n  4429: a4 = a3 + 0x700\n  4433: a0 = u64 [a4 + 0xb8]\n  4437: a1 = u64 [a4 + 0xc0]\n  4441: a2 = u64 [a4 + 0xb0]\n  4445: a3 = u64 [a4 + 0xa8]\n  4449: a1 = a1 | a2\n  4452: a0 = a0 | a3\n  4455: a0 = a0 | a1\n  4458: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  4461: jump @1041\n      : @187 (gas: 3)\n  4464: a0 = u64 [s1 + 0x1b8]\n  4468: a0 = i32 [a0]\n  4470: jump @189 if a0 >u 3\n      : @188 (gas: 1)\n  4474: jump @1042\n      : @189 (gas: 3)\n  4477: a0 = s1 + 0x2f20\n  4481: a1 = 0x40\n  4484: ra = 154, jump @2\n      : @190 [@dyn 77] (gas: 7)\n  4490: a3 = s1 + 0x2958\n  4494: a5 = a3 + 0x500\n  4498: a4 = u64 [a5 + 0xe0]\n  4502: a1 = u64 [a5 + 0xd8]\n  4506: a2 = u64 [a5 + 0xd0]\n  4510: a0 = u64 [a5 + 0xc8]\n  4514: t0 = 156, jump @1438\n      : @191 [@dyn 78] (gas: 1)\n  4521: jump @193 if a1 == 0\n      : @192 (gas: 1)\n  4524: jump @912\n      : @193 (gas: 8)\n  4527: u64 [a3 + 1472] = 0\n  4531: u64 [a3 + 1464] = 0\n  4535: u64 [a3 + 1448] = 0x5a\n  4540: a1 = s1 + 0x2f00\n  4544: u64 [a3 + 1456] = 0\n  4548: u64 [s1 + 0x1b8] = a0\n  4552: ra = 0x218\n  4556: jump @4\n      : @194 (gas: 11)\n  4559: u64 [a2 + 1024] = 0\n  4563: u64 [a2 + 1016] = 0\n  4567: u64 [a2 + 1008] = 0\n  4571: u64 [a2 + 1000] = 0\n  4575: a0 = s1 + 0x4000\n  4579: i32 a0 = a0 + 0xfffffffffffffd40\n  4583: ra = 0x9e\n  4587: ecalli 14 // 'value_transferred'\n  4589: a0 = 0x3958\n  4593: t0 = 0xa0\n  4597: jump @1467\n      : @195 [@dyn 79] (gas: 2)\n  4601: a0 = 0x3958\n  4605: t0 = 160, jump @1467\n      : @196 [@dyn 80] (gas: 1)\n  4612: jump @198 if a0 == 0\n      : @197 (gas: 1)\n  4615: jump @1043\n      : @198 (gas: 1)\n  4618: t0 = 162, jump @1471\n      : @199 [@dyn 81] (gas: 1)\n  4625: jump @201 if a1 <u a0\n      : @200 (gas: 1)\n  4628: jump @1044\n      : @201 (gas: 21)\n  4631: a0 = s1 + 0x4000\n  4635: i32 a0 = a0 + 0xfffffffffffffd60\n  4639: a1 = 0x4\n  4642: ecalli 2 // 'call_data_load'\n  4644: a0 = s1 + 0x3958\n  4648: a2 = a0 + 0x400\n  4652: a1 = u64 [a2 + 0x20]\n  4655: u64 [s1 + 0xd0] = a1\n  4659: a1 = u64 [a2 + 0x18]\n  4662: u64 [s1 + 0xd8] = a1\n  4666: a1 = u64 [a2 + 0x10]\n  4669: u64 [s1 + 0xe0] = a1\n  4673: a1 = u64 [a2 + 0x8]\n  4676: u64 [s1 + 0xe8] = a1\n  4680: u64 [a0 + 1088] = 0\n  4684: u64 [a0 + 1080] = 0\n  4688: u64 [a0 + 1072] = 0\n  4692: u64 [a0 + 1064] = 0\n  4696: a0 = s1 + 0x2500\n  4700: a1 = s1 + 0x3d80\n  4704: ra = 164, jump @6\n      : @202 [@dyn 82] (gas: 15)\n  4710: a0 = s1 + 0x2158\n  4714: a1 = u64 [a0 + 0x3b0]\n  4718: u64 [s1 + 0x1b8] = a1\n  4722: a1 = u64 [a0 + 0x3a8]\n  4726: u64 [s1 + 0x1b0] = a1\n  4730: a0 = u32 [a0 + 0x3b8]\n  4734: u64 [s1 + 0x1a8] = a0\n  4738: a0 = 0x30160\n  4743: u64 [s1 + 0xb0] = a0\n  4747: i32 a0 = a0 + 0\n  4749: ra = 0xa6\n  4753: ecalli 4 // 'caller'\n  4755: a2 = u64 [s1 + 0xb0]\n  4759: t0 = 0xa8\n  4763: jump @1423\n      : @203 [@dyn 83] (gas: 2)\n  4767: a2 = u64 [s1 + 0xb0]\n  4771: t0 = 168, jump @1423\n      : @204 [@dyn 84] (gas: 17)\n  4778: a4 = s1 + 0x100\n  4782: a2 = u64 [a4 + 0xa8]\n  4786: a1 = a1 ^ a2\n  4789: a2 = u64 [a4 + 0xb0]\n  4793: a0 = a0 ^ a2\n  4796: a0 = a0 | a1\n  4799: a1 = u64 [a4 + 0xb8]\n  4803: a1 = a1 ^ a3\n  4806: a0 = a0 | a1\n  4809: a0 = a0 <u 0x1\n  4812: a1 = s1 + 0x2158\n  4816: u64 [a1 + 928] = 0\n  4820: u64 [a1 + 920] = 0\n  4824: u64 [a1 + 0x388] = a0\n  4828: a0 = s1 + 0x24e0\n  4832: u64 [a1 + 912] = 0\n  4836: ra = 170, jump @1245\n      : @205 [@dyn 85] (gas: 13)\n  4843: a0 = u64 [s1 + 0xd0]\n  4847: a2 = s1 + 0x2158\n  4851: a3 = a2 + 0x300\n  4855: u64 [a3 + 0x80] = a0\n  4859: a0 = u64 [s1 + 0xd8]\n  4863: u64 [a3 + 0x78] = a0\n  4866: a0 = u64 [s1 + 0xe0]\n  4870: u64 [a3 + 0x70] = a0\n  4873: a1 = s1 + 0x24c0\n  4877: a0 = u64 [s1 + 0xe8]\n  4881: u64 [a3 + 0x68] = a0\n  4884: a0 = 0\n  4886: ra = 172, jump @4\n      : @206 [@dyn 86] (gas: 9)\n  4892: a0 = s1 + 0x2158\n  4896: u64 [a0 + 864] = 0\n  4900: u64 [a0 + 856] = 0\n  4904: u64 [a0 + 848] = 0\n  4908: a3 = a0\n  4910: a0 = 0x20\n  4913: a1 = s1 + 0x24a0\n  4917: u64 [a3 + 840] = 0x2\n  4922: ra = 174, jump @4\n      : @207 [@dyn 87] (gas: 3)\n  4928: a1 = 0x20154\n  4933: a0 = i32 [0x20154]\n  4938: jump @209 if a0 >u 63\n      : @208 (gas: 3)\n  4942: u32 [0x20154] = 0x40\n  4948: t0 = 0xb0\n  4952: jump @1459\n      : @209 (gas: 1)\n  4956: t0 = 176, jump @1459\n      : @210 [@dyn 88] (gas: 12)\n  4963: a0 = 0x20160\n  4968: u64 [s1 + 0xa8] = a0\n  4972: i32 a0 = a0 + 0\n  4974: u64 [s1 + 0xf8] = a1\n  4978: i32 a2 = a2 + 0\n  4980: a1 = 0x40\n  4983: u64 [s1 + 0x100] = a0\n  4987: ra = 0xb2\n  4991: ecalli 7 // 'hash_keccak_256'\n  4993: a3 = u64 [s1 + 0x1b8]\n  4997: t0 = 0xb4\n  5001: jump @1426\n      : @211 [@dyn 89] (gas: 2)\n  5005: a3 = u64 [s1 + 0x1b8]\n  5009: t0 = 180, jump @1426\n      : @212 [@dyn 90] (gas: 8)\n  5016: a5 = a4 + 0x400\n  5020: u64 [a5 + 0x60] = a3\n  5023: u64 [a5 + 0x58] = a2\n  5026: u64 [a5 + 0x50] = a1\n  5029: u64 [a5 + 0x48] = a0\n  5032: a0 = s1 + 0x2480\n  5036: a1 = s1 + 0x3da0\n  5040: ra = 182, jump @6\n      : @213 [@dyn 91] (gas: 23)\n  5046: a4 = s1 + 0x2158\n  5050: a0 = u64 [a4 + 0x340]\n  5054: a1 = u64 [a4 + 0x330]\n  5058: a2 = u64 [a4 + 0x328]\n  5062: a3 = u64 [a4 + 0x338]\n  5066: a5 = u64 [s1 + 0xd0]\n  5070: a0 = a0 ^ a5\n  5073: a5 = u64 [s1 + 0xe0]\n  5077: a1 = a1 ^ a5\n  5080: a0 = a0 | a1\n  5083: a1 = u64 [s1 + 0xd8]\n  5087: a1 = a1 ^ a3\n  5090: a3 = u64 [s1 + 0xe8]\n  5094: a2 = a2 ^ a3\n  5097: a1 = a1 | a2\n  5100: a0 = a0 | a1\n  5103: a0 = a0 <u 0x1\n  5106: u64 [a4 + 800] = 0\n  5110: u64 [a4 + 792] = 0\n  5114: u64 [a4 + 0x308] = a0\n  5118: a0 = s1 + 0x2460\n  5122: u64 [a4 + 784] = 0\n  5126: ra = 184, jump @1283\n      : @214 [@dyn 92] (gas: 13)\n  5133: a0 = s1 + 0x2158\n  5137: a1 = u64 [s1 + 0xd0]\n  5141: u64 [a0 + 0x300] = a1\n  5145: a1 = u64 [s1 + 0xd8]\n  5149: a3 = a0 + 0x200\n  5153: u64 [a3 + 0xf8] = a1\n  5157: a1 = u64 [s1 + 0xe0]\n  5161: u64 [a3 + 0xf0] = a1\n  5165: a1 = s1 + 0x2440\n  5169: a2 = u64 [s1 + 0xe8]\n  5173: u64 [a3 + 0xe8] = a2\n  5177: a0 = 0\n  5179: ra = 186, jump @4\n      : @215 [@dyn 93] (gas: 3)\n  5185: t0 = 0xbc\n  5189: a1 = s1 + 0x2158\n  5193: fallthrough\n      : @216 [@dyn 94] (gas: 8)\n  5194: u64 [a1 + 736] = 0\n  5198: u64 [a1 + 728] = 0\n  5202: u64 [a1 + 712] = 0x2\n  5207: a2 = a1\n  5209: a0 = 0x20\n  5212: a1 = s1 + 0x2420\n  5216: u64 [a2 + 720] = 0\n  5220: ra = 190, jump @4\n      : @217 [@dyn 95] (gas: 3)\n  5226: a1 = u64 [s1 + 0xf8]\n  5230: a0 = i32 [a1]\n  5232: jump @219 if a0 >u 63\n      : @218 (gas: 3)\n  5236: u32 [a1 + 0] = 0x40\n  5239: t0 = 0xc0\n  5243: jump @1444\n      : @219 (gas: 1)\n  5247: t0 = 192, jump @1444\n      : @220 [@dyn 96] (gas: 33)\n  5254: a0 = u64 [s1 + 0x100]\n  5258: ecalli 7 // 'hash_keccak_256'\n  5260: a3 = u64 [s1 + 0x1b8]\n  5264: a0 = u64 [a3]\n  5266: a1 = u64 [a3 + 0x8]\n  5269: a2 = u64 [a3 + 0x10]\n  5272: a3 = u64 [a3 + 0x18]\n  5275: t0 = reverse a0\n  5277: a5 = reverse a1\n  5279: a2 = reverse a2\n  5281: a3 = reverse a3\n  5283: a0 = sp + 0xffffffffffffffe0\n  5286: a1 = a0 & 0xffffffffffffffe0\n  5289: sp = a1\n  5291: t1 = a3 + 0x6\n  5294: u64 [s1 + 0x198] = a3\n  5298: a4 = t1 <u a3\n  5301: a0 = a2 + a4\n  5304: u64 [s1 + 0x1a0] = a2\n  5308: a3 = a0 <u a2\n  5311: a3 = a4 if a4 == 0\n  5314: a3 = a3 + a5\n  5317: u64 [s1 + 0x1a8] = a5\n  5321: a2 = a3 <u a5\n  5324: u64 [s1 + 0x1b0] = t0\n  5328: a2 = a2 + t0\n  5331: u64 [a1 + 0x8] = a0\n  5334: u64 [a1] = t1\n  5336: u64 [a1 + 0x10] = a3\n  5339: u64 [a1 + 0x18] = a2\n  5342: a0 = s1 + 0x2400\n  5346: u64 [s1 + 0x1b8] = a1\n  5350: ra = 194, jump @6\n      : @221 [@dyn 97] (gas: 2)\n  5356: a1 = s1 + 0x2158\n  5360: fallthrough\n      : @222 (gas: 2)\n  5361: a0 = u8 [a1 + 0x2bc]\n  5365: jump @224 if a0 <=u 3\n      : @223 (gas: 1)\n  5369: jump @1045\n      : @224 (gas: 8)\n  5372: a0 = a0 + 0xfffffffffffffffd\n  5375: a0 = a0 >u 0\n  5377: u64 [a1 + 672] = 0\n  5381: u64 [a1 + 664] = 0\n  5385: u64 [a1 + 0x288] = a0\n  5389: a0 = s1 + 0x23e0\n  5393: u64 [a1 + 656] = 0\n  5397: ra = 196, jump @1303\n      : @225 [@dyn 98] (gas: 3)\n  5404: a0 = s1 + 0x23c0\n  5408: a1 = u64 [s1 + 0x1b8]\n  5412: ra = 198, jump @6\n      : @226 [@dyn 99] (gas: 7)\n  5418: a3 = s1 + 0x2158\n  5422: a4 = a3 + 0x200\n  5426: a0 = u64 [a4 + 0x68]\n  5429: a1 = u64 [a4 + 0x70]\n  5432: a2 = u64 [a4 + 0x78]\n  5435: a3 = u64 [a4 + 0x80]\n  5439: t0 = 200, jump @1464\n      : @227 [@dyn 100] (gas: 8)\n  5446: a5 = a4 + 0x400\n  5450: u64 [a5 + 0x80] = a3\n  5454: u64 [a5 + 0x70] = a1\n  5457: u64 [a5 + 0x68] = a0\n  5460: u64 [a5 + 0x78] = a2\n  5463: a1 = s1 + 0x3dc0\n  5467: a0 = u64 [s1 + 0x1b8]\n  5471: ra = 202, jump @9\n      : @228 [@dyn 101] (gas: 23)\n  5477: a0 = sp + 0xffffffffffffffe0\n  5480: a5 = a0 & 0xffffffffffffffe0\n  5483: sp = a5\n  5485: a1 = u64 [s1 + 0x198]\n  5489: a0 = a1 + 0x8\n  5492: a1 = a0 <u a1\n  5495: a3 = u64 [s1 + 0x1a0]\n  5499: a2 = a3 + a1\n  5502: a3 = a2 <u a3\n  5505: a3 = a1 if a1 == 0\n  5508: a1 = u64 [s1 + 0x1a8]\n  5512: a3 = a3 + a1\n  5515: a1 = a3 <u a1\n  5518: a4 = u64 [s1 + 0x1b0]\n  5522: a4 = a4 + a1\n  5525: a1 = a5\n  5527: u64 [s1 + 0x1b8] = a5\n  5531: u64 [a5 + 0x18] = a4\n  5534: u64 [a5 + 0x10] = a3\n  5537: u64 [a5 + 0x8] = a2\n  5540: u64 [a5] = a0\n  5542: a0 = s1 + 0x23a0\n  5546: ra = 204, jump @6\n      : @229 [@dyn 102] (gas: 17)\n  5552: a3 = s1 + 0x2158\n  5556: a4 = a3 + 0x200\n  5560: a0 = u64 [a4 + 0x48]\n  5563: a1 = u64 [a4 + 0x50]\n  5566: a2 = u64 [a4 + 0x60]\n  5569: a3 = u64 [a4 + 0x58]\n  5572: a0 = a0 & 0xffffffffffffff00\n  5576: a0 = a0 | 0x1\n  5579: a4 = s1 + 0x3958\n  5583: a5 = a4 + 0x400\n  5587: u64 [a5 + 0xa0] = a2\n  5591: u64 [a5 + 0x98] = a3\n  5595: u64 [a5 + 0x90] = a1\n  5599: u64 [a5 + 0x88] = a0\n  5603: a1 = s1 + 0x3de0\n  5607: a0 = u64 [s1 + 0x1b8]\n  5611: ra = 206, jump @9\n      : @230 [@dyn 103] (gas: 13)\n  5617: a0 = u64 [s1 + 0xd0]\n  5621: a2 = s1 + 0x2158\n  5625: a3 = a2 + 0x200\n  5629: u64 [a3 + 0x40] = a0\n  5632: a0 = u64 [s1 + 0xd8]\n  5636: u64 [a3 + 0x38] = a0\n  5639: a0 = u64 [s1 + 0xe0]\n  5643: u64 [a3 + 0x30] = a0\n  5646: a1 = s1 + 0x2380\n  5650: a0 = u64 [s1 + 0xe8]\n  5654: u64 [a3 + 0x28] = a0\n  5657: a0 = 0\n  5659: ra = 208, jump @4\n      : @231 [@dyn 104] (gas: 3)\n  5665: t0 = 0xd2\n  5669: a1 = s1 + 0x2158\n  5673: fallthrough\n      : @232 [@dyn 105] (gas: 8)\n  5674: u64 [a1 + 544] = 0\n  5678: u64 [a1 + 536] = 0\n  5682: u64 [a1 + 520] = 0x4\n  5687: a2 = a1\n  5689: a0 = 0x20\n  5692: a1 = s1 + 0x2360\n  5696: u64 [a2 + 528] = 0\n  5700: ra = 212, jump @4\n      : @233 [@dyn 106] (gas: 7)\n  5706: a0 = sp + 0xffffffffffffffe0\n  5709: a0 = a0 & 0xffffffffffffffe0\n  5712: u64 [s1 + 0x1b8] = a0\n  5716: sp = a0\n  5718: a2 = u64 [s1 + 0xf8]\n  5722: a0 = i32 [a2]\n  5724: jump @235 if a0 >u 63\n      : @234 (gas: 2)\n  5728: u32 [a2 + 0] = 0x40\n  5731: fallthrough\n      : @235 (gas: 4)\n  5732: a0 = sp + 0xffffffffffffffe0\n  5735: a0 = a0 & 0xffffffffffffffe0\n  5738: u64 [s1 + 0x1b0] = a0\n  5742: t0 = 214, jump @1458\n      : @236 [@dyn 107] (gas: 4)\n  5749: ra = 0xd8\n  5753: ecalli 7 // 'hash_keccak_256'\n  5755: t0 = 0xda\n  5759: jump @1428\n      : @237 [@dyn 108] (gas: 1)\n  5763: t0 = 218, jump @1428\n      : @238 [@dyn 109] (gas: 3)\n  5770: a0 = s1 + 0x2340\n  5774: a1 = 0x40\n  5777: ra = 220, jump @2\n      : @239 [@dyn 110] (gas: 13)\n  5783: a0 = s1 + 0x2158\n  5787: a1 = u64 [a0 + 0x200]\n  5791: u64 [s1 + 0xc8] = a1\n  5795: a2 = a0 + 0x100\n  5799: a1 = u64 [a2 + 0xf8]\n  5803: u64 [s1 + 0xc0] = a1\n  5807: a1 = u64 [a2 + 0xf0]\n  5811: u64 [s1 + 0xb8] = a1\n  5815: a0 = u64 [a2 + 0xe8]\n  5819: u64 [s1 + 0xf0] = a0\n  5823: a0 = s1 + 0x2320\n  5827: a1 = u64 [s1 + 0x1b8]\n  5831: ra = 222, jump @6\n      : @240 [@dyn 111] (gas: 6)\n  5837: a0 = u64 [s1 + 0xf0]\n  5841: a1 = u64 [s1 + 0xc8]\n  5845: a2 = u64 [s1 + 0xb8]\n  5849: a2 = a2 | a1\n  5852: a3 = u64 [s1 + 0xc0]\n  5856: t0 = 224, jump @1461\n      : @241 [@dyn 112] (gas: 1)\n  5863: jump @243 if a1 == 0\n      : @242 (gas: 1)\n  5866: jump @912\n      : @243 (gas: 16)\n  5869: a5 = s1 + 0x2158\n  5873: a2 = u64 [a5 + 0x1e0]\n  5877: a1 = u64 [a5 + 0x1d8]\n  5881: a3 = u64 [a5 + 0x1d0]\n  5885: a4 = u64 [a5 + 0x1c8]\n  5889: u64 [s1 + 0x118] = a4\n  5893: u64 [a5 + 0x1a8] = a4\n  5897: u64 [s1 + 0x120] = a3\n  5901: a4 = a5 + 0x100\n  5905: u64 [a4 + 0xb0] = a3\n  5909: u64 [s1 + 0x128] = a1\n  5913: u64 [a4 + 0xb8] = a1\n  5917: a1 = s1 + 0x2300\n  5921: u64 [s1 + 0x130] = a2\n  5925: u64 [a4 + 0xc0] = a2\n  5929: ra = 226, jump @4\n      : @244 [@dyn 113] (gas: 14)\n  5935: a0 = u64 [s1 + 0x198]\n  5939: a1 = s1 + 0x2158\n  5943: a2 = a1 + 0x100\n  5947: u64 [a2 + 0xa0] = a0\n  5951: a0 = u64 [s1 + 0x1a0]\n  5955: u64 [a2 + 0x98] = a0\n  5959: a0 = u64 [s1 + 0x1a8]\n  5963: u64 [a2 + 0x90] = a0\n  5967: a2 = a1\n  5969: a1 = s1 + 0x22e0\n  5973: a0 = u64 [s1 + 0x1b0]\n  5977: u64 [a2 + 0x188] = a0\n  5981: a0 = 0\n  5983: ra = 228, jump @4\n      : @245 [@dyn 114] (gas: 7)\n  5989: a0 = sp + 0xffffffffffffffe0\n  5992: a0 = a0 & 0xffffffffffffffe0\n  5995: u64 [s1 + 0x110] = a0\n  5999: sp = a0\n  6001: a2 = u64 [s1 + 0xf8]\n  6005: a0 = i32 [a2]\n  6007: jump @247 if a0 >u 31\n      : @246 (gas: 2)\n  6011: u32 [a2 + 0] = 0x20\n  6014: fallthrough\n      : @247 (gas: 3)\n  6015: a0 = 0xffffffff\n  6025: u64 [s1 + 0x138] = a0\n  6029: t0 = 230, jump @1445\n      : @248 [@dyn 115] (gas: 36)\n  6036: a0 = u64 [s1 + 0x100]\n  6040: ecalli 7 // 'hash_keccak_256'\n  6042: u64 [s1 + 408] = 0\n  6046: u64 [s1 + 400] = 0\n  6050: a5 = 0\n  6052: u64 [s1 + 392] = 0\n  6056: a3 = u64 [s1 + 0x1b8]\n  6060: a0 = u64 [a3 + 0x18]\n  6063: a1 = u64 [a3 + 0x10]\n  6066: a2 = u64 [a3 + 0x8]\n  6069: a3 = u64 [a3]\n  6071: t0 = reverse a0\n  6073: a0 = reverse a1\n  6075: a4 = reverse a2\n  6077: a2 = reverse a3\n  6079: a1 = u64 [s1 + 0x110]\n  6083: a3 = a2\n  6085: u64 [a1 + 0x18] = a2\n  6088: u64 [s1 + 0x150] = a4\n  6092: u64 [a1 + 0x10] = a4\n  6095: a2 = a0\n  6097: u64 [a1 + 0x8] = a0\n  6100: u64 [s1 + 0x158] = t0\n  6104: u64 [a1] = t0\n  6106: a0 = 0xffffffe0\n  6116: a4 = s1 + 0x100\n  6120: u64 [a4 + 0x8] = a0\n  6123: a0 = u64 [s1 + 0xf0]\n  6127: u64 [a4 + 0xb8] = a0\n  6131: a0 = u64 [s1 + 0xb8]\n  6135: u64 [a4 + 0xb0] = a0\n  6139: a0 = u64 [s1 + 0xc0]\n  6143: u64 [a4 + 0xa8] = a0\n  6147: a0 = u64 [s1 + 0xc8]\n  6151: u64 [a4 + 0xa0] = a0\n  6155: fallthrough\n      : @249 (gas: 37)\n  6156: u64 [s1 + 0x168] = a3\n  6160: u64 [s1 + 0x170] = a2\n  6164: t1 = u64 [s1 + 0x1b8]\n  6168: t2 = t1 + 0x20\n  6171: a0 = u64 [s1 + 0x118]\n  6175: a2 = u64 [s1 + 0x198]\n  6179: a0 = a2 <u a0\n  6182: a2 = u64 [s1 + 0x120]\n  6186: a4 = u64 [s1 + 0x190]\n  6190: a3 = a4 ^ a2\n  6193: a2 = a4 <u a2\n  6196: a2 = a0 if a3 == 0\n  6199: a4 = u64 [s1 + 0x128]\n  6203: a0 = a5 <u a4\n  6206: a3 = u64 [s1 + 0x130]\n  6210: t0 = u64 [s1 + 0x188]\n  6214: ra = t0 ^ a3\n  6217: a3 = t0 <u a3\n  6220: a3 = a0 if ra == 0\n  6223: u64 [s1 + 0x160] = a5\n  6227: a0 = a5 ^ a4\n  6230: a0 = a0 | ra\n  6233: u64 [s1 + 0x180] = t2\n  6237: a4 = t2 <u t1\n  6240: a3 = a2 if a0 == 0\n  6243: a2 = s1 + 0x100\n  6247: a0 = u64 [a2 + 0xb0]\n  6251: t0 = a0 + a4\n  6254: a0 = t0 <u a0\n  6257: a0 = a4 if a4 == 0\n  6260: a5 = u64 [a2 + 0xa8]\n  6264: a4 = a5 + a0\n  6267: a0 = a4 <u a5\n  6270: a5 = u64 [a2 + 0xa0]\n  6274: a0 = a0 + a5\n  6277: u64 [a2 + 0x78] = a0\n  6280: jump @251 if a3 != 0\n      : @250 (gas: 1)\n  6283: jump @804\n      : @251 (gas: 4)\n  6286: u64 [s1 + 0x140] = a4\n  6290: u64 [s1 + 0x148] = t0\n  6294: a0 = s1 + 0x2060\n  6298: ra = 232, jump @6\n      : @252 [@dyn 116] (gas: 1)\n  6304: t0 = 234, jump @1457\n      : @253 [@dyn 117] (gas: 1)\n  6311: jump @255 if a1 != 0\n      : @254 (gas: 1)\n  6314: jump @912\n      : @255 (gas: 17)\n  6317: a3 = s1 + 0x1958\n  6321: a4 = a3 + 0x700\n  6325: a0 = u64 [a4 + 0x18]\n  6328: a1 = u64 [a4 + 0x10]\n  6331: a2 = u64 [a4 + 0x8]\n  6334: a4 = u64 [s1 + 0x138]\n  6338: a0 = a0 & a4\n  6341: a1 = a1 & 0xffffffffffffffff\n  6344: a2 = a2 & 0xffffffffffffffff\n  6347: u64 [a3 + 1792] = 0\n  6351: a4 = a3 + 0x600\n  6355: u64 [a4 + 0xe8] = a2\n  6359: u64 [a4 + 0xf0] = a1\n  6363: a1 = s1 + 0x2040\n  6367: u64 [a4 + 0xf8] = a0\n  6371: a0 = u64 [s1 + 0x180]\n  6375: ra = 236, jump @4\n      : @256 [@dyn 118] (gas: 47)\n  6381: a4 = u64 [s1 + 0x158]\n  6385: a4 = a4 + 0x1\n  6388: u64 [s1 + 0x158] = a4\n  6392: a0 = a4 <u 0x1\n  6395: a3 = u64 [s1 + 0x170]\n  6399: a3 = a3 + a0\n  6402: a0 = a4 | a3\n  6405: a0 = a0 <u 0x1\n  6408: a1 = u64 [s1 + 0x150]\n  6412: t1 = a1 + a0\n  6415: a1 = t1 <u a1\n  6418: a0 = u64 [s1 + 0x168]\n  6422: a0 = a0 + a1\n  6425: a2 = u64 [s1 + 0x198]\n  6429: a2 = a2 + 0x1\n  6432: a1 = a2 <u 0x1\n  6435: a5 = u64 [s1 + 0x190]\n  6439: a5 = a5 + a1\n  6442: u64 [s1 + 0x198] = a2\n  6446: u64 [s1 + 0x190] = a5\n  6450: a1 = a2 | a5\n  6453: a1 = a1 <u 0x1\n  6456: a2 = u64 [s1 + 0x160]\n  6460: t0 = a2 + a1\n  6463: a2 = t0 <u a2\n  6466: a5 = u64 [s1 + 0x188]\n  6470: a5 = a5 + a2\n  6473: u64 [s1 + 0x188] = a5\n  6477: a2 = a3\n  6479: a5 = s1 + 0x100\n  6483: a1 = u64 [a5 + 0x10]\n  6486: u64 [a1 + 0x8] = a3\n  6489: u64 [a1] = a4\n  6491: u64 [a1 + 0x10] = t1\n  6494: a3 = a0\n  6496: u64 [a1 + 0x18] = a0\n  6499: u64 [s1 + 0x150] = t1\n  6503: a0 = u64 [a5 + 0x80]\n  6507: u64 [a5 + 0xb8] = a0\n  6511: a0 = u64 [a5 + 0x48]\n  6514: u64 [a5 + 0xb0] = a0\n  6518: a0 = u64 [a5 + 0x40]\n  6521: u64 [a5 + 0xa8] = a0\n  6525: a0 = u64 [a5 + 0x78]\n  6528: u64 [a5 + 0xa0] = a0\n  6532: a5 = t0\n  6534: jump @249\n      : @257 (gas: 8)\n  6537: u64 [a3 + 1056] = 0\n  6541: u64 [a3 + 1048] = 0\n  6545: u64 [a3 + 1040] = 0\n  6549: u64 [a3 + 1032] = 0\n  6553: a0 = s1 + 0x3000\n  6557: i32 a0 = a0 + 0x560\n  6561: ecalli 14 // 'value_transferred'\n  6563: fallthrough\n      : @258 (gas: 10)\n  6564: a3 = s1 + 0x3158\n  6568: a4 = a3 + 0x400\n  6572: a0 = u64 [a4 + 0x18]\n  6575: a1 = u64 [a4 + 0x20]\n  6578: a2 = u64 [a4 + 0x10]\n  6581: a3 = u64 [a4 + 0x8]\n  6584: a1 = a1 | a2\n  6587: a0 = a0 | a3\n  6590: a0 = a0 | a1\n  6593: jump @260 if a0 == 0\n      : @259 (gas: 1)\n  6596: jump @1052\n      : @260 (gas: 3)\n  6599: a0 = u64 [s1 + 0x1b8]\n  6603: a0 = i32 [a0]\n  6605: jump @262 if a0 >u 3\n      : @261 (gas: 1)\n  6609: jump @1053\n      : @262 (gas: 4)\n  6612: a0 = s1 + 0x7ff\n  6616: a0 = a0 + 0x1c1\n  6620: a1 = 0x40\n  6623: ra = 238, jump @2\n      : @263 [@dyn 119] (gas: 7)\n  6629: a3 = s1 + 0x7ff\n  6633: a3 = a3 + 0x139\n  6637: a4 = u64 [a3 + 0xa0]\n  6641: a1 = u64 [a3 + 0x98]\n  6645: a2 = u64 [a3 + 0x90]\n  6649: a0 = u64 [a3 + 0x88]\n  6653: t0 = 240, jump @1438\n      : @264 [@dyn 120] (gas: 1)\n  6660: jump @266 if a1 == 0\n      : @265 (gas: 1)\n  6663: jump @912\n      : @266 (gas: 9)\n  6666: u64 [a3 + 128] = 0\n  6670: u64 [a3 + 120] = 0\n  6673: u64 [a3 + 104] = 0x2a300\n  6679: a1 = s1 + 0x7ff\n  6683: a1 = a1 + 0x1a1\n  6687: u64 [a3 + 112] = 0\n  6690: u64 [s1 + 0x1b8] = a0\n  6694: ra = 0x218\n  6698: jump @4\n      : @267 (gas: 9)\n  6701: a0 = s1 + 0x3958\n  6705: u64 [a0 + 96] = 0\n  6708: u64 [a0 + 88] = 0\n  6711: u64 [a0 + 80] = 0\n  6714: u64 [a0 + 72] = 0\n  6717: a0 = s1 + 0x4000\n  6721: i32 a0 = a0 + 0xfffffffffffff9a0\n  6725: ecalli 14 // 'value_transferred'\n  6727: fallthrough\n      : @268 (gas: 9)\n  6728: a3 = s1 + 0x3958\n  6732: a0 = u64 [a3 + 0x58]\n  6735: a1 = u64 [a3 + 0x60]\n  6738: a2 = u64 [a3 + 0x50]\n  6741: a3 = u64 [a3 + 0x48]\n  6744: a1 = a1 | a2\n  6747: a0 = a0 | a3\n  6750: a0 = a0 | a1\n  6753: jump @270 if a0 == 0\n      : @269 (gas: 1)\n  6756: jump @1054\n      : @270 (gas: 3)\n  6759: a0 = u64 [s1 + 0x1b8]\n  6763: a0 = i32 [a0]\n  6765: jump @272 if a0 >u 3\n      : @271 (gas: 1)\n  6769: jump @1055\n      : @272 (gas: 8)\n  6772: a0 = s1 + 0x3958\n  6776: u64 [a0 + 128] = 0\n  6780: u64 [a0 + 120] = 0\n  6783: u64 [a0 + 112] = 0\n  6786: u64 [a0 + 104] = 0\n  6789: a0 = s1 + 0x13e0\n  6793: a1 = s1 + 0x39c0\n  6797: ra = 242, jump @6\n      : @273 [@dyn 121] (gas: 12)\n  6803: a0 = s1 + 0x1140\n  6807: a2 = a0 + 0x200\n  6811: a1 = u64 [a2 + 0xb0]\n  6815: a3 = s1 + 0x100\n  6819: u64 [a3 + 0xa8] = a1\n  6823: a1 = u64 [a2 + 0xa8]\n  6827: u64 [a3 + 0xb8] = a1\n  6831: a0 = u64 [a2 + 0xa0]\n  6835: u64 [a3 + 0xb0] = a0\n  6839: a0 = s1 + 0x13c0\n  6843: a1 = 0x40\n  6846: ra = 244, jump @2\n      : @274 [@dyn 122] (gas: 7)\n  6852: a3 = s1 + 0x1140\n  6856: a5 = a3 + 0x200\n  6860: a4 = u64 [a5 + 0x98]\n  6864: a1 = u64 [a5 + 0x90]\n  6868: a2 = u64 [a5 + 0x88]\n  6872: a0 = u64 [a5 + 0x80]\n  6876: t0 = 246, jump @1438\n      : @275 [@dyn 123] (gas: 1)\n  6883: jump @277 if a1 == 0\n      : @276 (gas: 1)\n  6886: jump @912\n      : @277 (gas: 15)\n  6889: a4 = s1 + 0x100\n  6893: a1 = u64 [a4 + 0xa8]\n  6897: a1 = a1 << 0x20\n  6900: a2 = a1 >> 0x20\n  6903: u64 [a3 + 632] = 0\n  6907: a1 = u64 [a4 + 0xb0]\n  6911: a5 = a3 + 0x200\n  6915: u64 [a5 + 0x60] = a1\n  6918: a1 = u64 [a4 + 0xb8]\n  6922: u64 [a5 + 0x68] = a1\n  6925: a1 = s1 + 0x13a0\n  6929: u64 [a5 + 0x70] = a2\n  6932: u64 [s1 + 0x1b8] = a0\n  6936: ra = 0x218\n  6940: jump @4\n      : @278 (gas: 9)\n  6943: u64 [a4 + 96] = 0\n  6946: u64 [a4 + 88] = 0\n  6949: u64 [a4 + 80] = 0\n  6952: u64 [a4 + 72] = 0\n  6955: a0 = s1 + 0x4000\n  6959: i32 a0 = a0 + 0x1a0\n  6963: ra = 0xf8\n  6967: ecalli 14 // 'value_transferred'\n  6969: fallthrough\n      : @279 [@dyn 124] (gas: 9)\n  6970: a3 = s1 + 0x4158\n  6974: a0 = u64 [a3 + 0x58]\n  6977: a1 = u64 [a3 + 0x60]\n  6980: a2 = u64 [a3 + 0x50]\n  6983: a3 = u64 [a3 + 0x48]\n  6986: a1 = a1 | a2\n  6989: a0 = a0 | a3\n  6992: a0 = a0 | a1\n  6995: jump @281 if a0 == 0\n      : @280 (gas: 1)\n  6998: jump @1056\n      : @281 (gas: 1)\n  7001: t0 = 250, jump @1471\n      : @282 [@dyn 125] (gas: 1)\n  7008: jump @284 if a1 <u a0\n      : @283 (gas: 1)\n  7011: jump @1057\n      : @284 (gas: 18)\n  7014: a0 = s1 + 0x4000\n  7018: i32 a0 = a0 + 0x1c0\n  7022: a1 = 0x4\n  7025: ecalli 2 // 'call_data_load'\n  7027: a3 = s1 + 0x4158\n  7031: a0 = u64 [a3 + 0x68]\n  7034: a1 = u64 [a3 + 0x70]\n  7037: a2 = u64 [a3 + 0x78]\n  7040: a3 = u64 [a3 + 0x80]\n  7044: a4 = s1 + 0x3158\n  7048: u64 [a4] = a3\n  7050: a3 = a4 + 0xffffffffffffff00\n  7054: u64 [a3 + 0xf8] = a2\n  7058: u64 [a3 + 0xf0] = a1\n  7062: a1 = s1 + 0x3140\n  7066: u64 [a3 + 0xe8] = a0\n  7070: a0 = 0\n  7072: ra = 252, jump @4\n      : @285 [@dyn 126] (gas: 8)\n  7078: a2 = s1 + 0x2958\n  7082: u64 [a2 + 2016] = 0\n  7086: u64 [a2 + 2008] = 0\n  7090: u64 [a2 + 1992] = 0x4\n  7095: a0 = 0x20\n  7098: a1 = s1 + 0x3120\n  7102: u64 [a2 + 2000] = 0\n  7106: ra = 254, jump @4\n      : @286 [@dyn 127] (gas: 2)\n  7112: a1 = i32 [0x20154]\n  7117: jump @288 if a1 >u 63\n      : @287 (gas: 4)\n  7121: a1 = 0x40\n  7124: u32 [0x20154] = a1\n  7129: t0 = 0x100\n  7133: jump @1459\n      : @288 (gas: 1)\n  7137: t0 = 256, jump @1459\n      : @289 [@dyn 128] (gas: 22)\n  7144: a0 = 0x20160\n  7149: i32 a0 = a0 + 0\n  7151: i32 a2 = a2 + 0\n  7153: a1 = 0x40\n  7156: ecalli 7 // 'hash_keccak_256'\n  7158: a3 = u64 [s1 + 0x1b8]\n  7162: a0 = u64 [a3 + 0x18]\n  7165: a1 = u64 [a3 + 0x10]\n  7168: a2 = u64 [a3 + 0x8]\n  7171: a3 = u64 [a3]\n  7173: a0 = reverse a0\n  7175: a1 = reverse a1\n  7177: a2 = reverse a2\n  7179: a3 = reverse a3\n  7181: a4 = s1 + 0x4158\n  7185: u64 [a4 + 0xa0] = a3\n  7189: u64 [a4 + 0x98] = a2\n  7193: u64 [a4 + 0x90] = a1\n  7197: u64 [a4 + 0x88] = a0\n  7201: a0 = s1 + 0x3100\n  7205: a1 = s1 + 0x41e0\n  7209: ra = 258, jump @6\n      : @290 [@dyn 129] (gas: 3)\n  7215: t0 = 0x104\n  7219: a1 = s1 + 0x2958\n  7223: fallthrough\n      : @291 [@dyn 130] (gas: 13)\n  7224: a2 = a1 + 0x700\n  7228: a0 = u64 [a2 + 0xc0]\n  7232: a1 = s1 + 0x100\n  7236: u64 [a1 + 0xb8] = a0\n  7240: a0 = u64 [a2 + 0xb8]\n  7244: u64 [a1 + 0xb0] = a0\n  7248: a0 = u64 [a2 + 0xb0]\n  7252: u64 [a1 + 0xa8] = a0\n  7256: a0 = u64 [a2 + 0xa8]\n  7260: u64 [a1 + 0xa0] = a0\n  7264: a0 = s1 + 0x30e0\n  7268: a1 = 0x40\n  7271: ra = 262, jump @2\n      : @292 [@dyn 131] (gas: 7)\n  7277: a3 = s1 + 0x2958\n  7281: a5 = a3 + 0x700\n  7285: a0 = u64 [a5 + 0xa0]\n  7289: a1 = u64 [a5 + 0x98]\n  7293: a2 = u64 [a5 + 0x90]\n  7297: a4 = u64 [a5 + 0x88]\n  7301: t0 = 264, jump @1449\n      : @293 [@dyn 132] (gas: 1)\n  7308: jump @295 if a0 == 0\n      : @294 (gas: 1)\n  7311: jump @912\n      : @295 (gas: 15)\n  7314: a2 = s1 + 0x100\n  7318: a0 = u64 [a2 + 0xa0]\n  7322: a5 = a3 + 0x700\n  7326: u64 [a5 + 0x68] = a0\n  7329: a0 = u64 [a2 + 0xa8]\n  7333: u64 [a5 + 0x70] = a0\n  7336: a0 = u64 [a2 + 0xb0]\n  7340: u64 [a5 + 0x78] = a0\n  7343: a1 = s1 + 0x30c0\n  7347: a0 = u64 [a2 + 0xb8]\n  7351: u64 [a5 + 0x80] = a0\n  7355: a0 = a4\n  7357: u64 [s1 + 0x1b8] = a4\n  7361: ra = 0x218\n  7365: jump @4\n      : @296 (gas: 8)\n  7368: u64 [a3 + 1088] = 0\n  7372: u64 [a3 + 1080] = 0\n  7376: u64 [a3 + 1072] = 0\n  7380: u64 [a3 + 1064] = 0\n  7384: a0 = s1 + 0x3000\n  7388: i32 a0 = a0 + 0x580\n  7392: ecalli 14 // 'value_transferred'\n  7394: fallthrough\n      : @297 (gas: 10)\n  7395: a4 = s1 + 0x3158\n  7399: a5 = a4 + 0x400\n  7403: a0 = u64 [a5 + 0x38]\n  7406: a1 = u64 [a5 + 0x40]\n  7409: a2 = u64 [a5 + 0x30]\n  7412: a3 = u64 [a5 + 0x28]\n  7415: a1 = a1 | a2\n  7418: a0 = a0 | a3\n  7421: a0 = a0 | a1\n  7424: jump @299 if a0 == 0\n      : @298 (gas: 1)\n  7427: jump @1058\n      : @299 (gas: 3)\n  7430: a0 = u64 [s1 + 0x1b8]\n  7434: a0 = i32 [a0]\n  7436: jump @301 if a0 >u 3\n      : @300 (gas: 1)\n  7440: jump @1059\n      : @301 (gas: 7)\n  7443: u64 [a4 + 1120] = 0\n  7447: u64 [a4 + 1112] = 0\n  7451: u64 [a4 + 1104] = 0\n  7455: u64 [a4 + 1096] = 0\n  7459: a0 = s1 + 0x1120\n  7463: a1 = s1 + 0x35a0\n  7467: ra = 266, jump @6\n      : @302 [@dyn 133] (gas: 14)\n  7473: a0 = s1 + 0x7ff\n  7477: a0 = a0 + 0x139\n  7481: a1 = u64 [a0 + 0x7f0]\n  7485: u64 [s1 + 0x1b8] = a1\n  7489: a1 = u64 [a0 + 0x7e8]\n  7493: u64 [s1 + 0x1b0] = a1\n  7497: a0 = u32 [a0 + 0x7f8]\n  7501: u64 [s1 + 0x1a8] = a0\n  7505: a0 = 0x30160\n  7510: u64 [s1 + 0x1a0] = a0\n  7514: i32 a0 = a0 + 0\n  7516: ra = 0x10c\n  7520: ecalli 4 // 'caller'\n  7522: fallthrough\n      : @303 [@dyn 134] (gas: 3)\n  7523: a5 = s1 + 0x100\n  7527: a2 = u64 [a5 + 0xa0]\n  7531: t0 = 270, jump @1423\n      : @304 [@dyn 135] (gas: 17)\n  7538: a2 = u64 [a5 + 0xa8]\n  7542: a1 = a1 ^ a2\n  7545: a2 = u64 [a5 + 0xb0]\n  7549: a0 = a0 ^ a2\n  7552: a0 = a0 | a1\n  7555: a1 = u64 [a5 + 0xb8]\n  7559: a1 = a1 ^ a3\n  7562: a0 = a0 | a1\n  7565: a0 = a0 <u 0x1\n  7568: a1 = s1 + 0x7ff\n  7572: a1 = a1 + 0x139\n  7576: u64 [a1 + 2016] = 0\n  7580: u64 [a1 + 2008] = 0\n  7584: u64 [a1 + 0x7c8] = a0\n  7588: a0 = s1 + 0x1100\n  7592: u64 [a1 + 2000] = 0\n  7596: ra = 272, jump @1245\n      : @305 [@dyn 136] (gas: 9)\n  7602: a0 = s1 + 0x3158\n  7606: u64 [a0 + 1152] = 0\n  7610: u64 [a0 + 1144] = 0\n  7614: u64 [a0 + 1136] = 0\n  7618: a1 = a0\n  7620: u64 [a1 + 1128] = 0x1\n  7625: a0 = s1 + 0x10e0\n  7629: a1 = s1 + 0x35c0\n  7633: ra = 274, jump @6\n      : @306 [@dyn 137] (gas: 11)\n  7639: a2 = s1 + 0x7ff\n  7643: a2 = a2 + 0x139\n  7647: t0 = u64 [a2 + 0x7c0]\n  7651: a0 = a2 + 0x700\n  7655: a5 = u64 [a0 + 0xb8]\n  7659: a4 = u64 [a0 + 0xb0]\n  7663: a3 = u64 [a0 + 0xa8]\n  7667: a0 = a4 | t0\n  7670: a1 = a3 | a5\n  7673: a0 = a0 | a1\n  7676: jump @316 if a0 == 0\n      : @307 (gas: 13)\n  7680: a0 = s1 + 0x100\n  7684: u64 [a0 + 0xb8] = a3\n  7688: a1 = a2 + 0x700\n  7692: u64 [a1 + 0x88] = a3\n  7696: u64 [a0 + 0xb0] = a4\n  7700: u64 [a1 + 0x90] = a4\n  7704: u64 [a0 + 0xa8] = a5\n  7708: u64 [a1 + 0x98] = a5\n  7712: a1 = s1 + 0x10c0\n  7716: u64 [s1 + 0x1a0] = t0\n  7720: u64 [a2 + 0x7a0] = t0\n  7724: a0 = 0\n  7726: ra = 276, jump @4\n      : @308 [@dyn 138] (gas: 10)\n  7732: a1 = s1 + 0x7ff\n  7736: a1 = a1 + 0x139\n  7740: u64 [a1 + 1920] = 0\n  7744: u64 [a1 + 1912] = 0\n  7748: u64 [a1 + 1896] = 0x2\n  7753: a2 = a1\n  7755: a0 = 0x20\n  7758: a1 = s1 + 0x10a0\n  7762: u64 [a2 + 1904] = 0\n  7766: ra = 278, jump @4\n      : @309 [@dyn 139] (gas: 3)\n  7772: a2 = 0x20154\n  7777: a0 = i32 [0x20154]\n  7782: jump @311 if a0 >u 63\n      : @310 (gas: 2)\n  7786: u32 [0x20154] = 0x40\n  7792: fallthrough\n      : @311 (gas: 37)\n  7793: u64 [s1 + 0x190] = a2\n  7797: a0 = sp + 0xffffffffffffffe0\n  7800: a2 = a0 & 0xffffffffffffffe0\n  7803: u64 [s1 + 0x198] = a2\n  7807: sp = a2\n  7809: a0 = 0x20160\n  7814: i32 a0 = a0 + 0\n  7816: i32 a2 = a2 + 0\n  7818: a1 = 0x40\n  7821: u64 [s1 + 0x188] = a0\n  7825: ecalli 7 // 'hash_keccak_256'\n  7827: a3 = u64 [s1 + 0x198]\n  7831: a0 = u64 [a3]\n  7833: a1 = u64 [a3 + 0x8]\n  7836: a2 = u64 [a3 + 0x10]\n  7839: a3 = u64 [a3 + 0x18]\n  7842: a0 = reverse a0\n  7844: a1 = reverse a1\n  7846: a2 = reverse a2\n  7848: a3 = reverse a3\n  7850: a4 = a3 + 0x6\n  7853: a3 = a4 <u a3\n  7856: a5 = a2 + a3\n  7859: a2 = a5 <u a2\n  7862: a2 = a3 if a3 == 0\n  7865: a2 = a2 + a1\n  7868: a1 = a2 <u a1\n  7871: a0 = a0 + a1\n  7874: a1 = s1 + 0x3158\n  7878: a3 = a1 + 0x400\n  7882: u64 [a3 + 0x88] = a4\n  7886: u64 [a3 + 0x90] = a5\n  7890: u64 [a3 + 0x98] = a2\n  7894: u64 [a3 + 0xa0] = a0\n  7898: a0 = s1 + 0x1080\n  7902: a1 = s1 + 0x35e0\n  7906: ra = 280, jump @6\n      : @312 [@dyn 140] (gas: 4)\n  7912: a2 = s1 + 0x7ff\n  7916: a2 = a2 + 0x139\n  7920: a0 = u8 [a2 + 0x75c]\n  7924: jump @314 if a0 <=u 3\n      : @313 (gas: 1)\n  7928: jump @1099\n      : @314 (gas: 5)\n  7931: a3 = u64 [s1 + 0x1b8]\n  7935: a4 = u64 [s1 + 0x1b0]\n  7939: a5 = u64 [s1 + 0x1a8]\n  7943: t0 = u64 [s1 + 0x1a0]\n  7947: jump @316 if a0 == 3\n      : @315 (gas: 1)\n  7951: jump @871\n      : @316 (gas: 13)\n  7954: a0 = sp + 0xffffffffffffffe0\n  7957: a0 = a0 & 0xffffffffffffffe0\n  7960: u64 [s1 + 0x1b8] = a0\n  7964: sp = a0\n  7966: u64 [a2 + 0x640] = t0\n  7970: u64 [a2 + 0x638] = a5\n  7974: u64 [a2 + 0x630] = a4\n  7978: a0 = s1 + 0x7ff\n  7982: a0 = a0 + 0x781\n  7986: a1 = s1 + 0x7ff\n  7990: a1 = a1 + 0x761\n  7994: u64 [a2 + 0x628] = a3\n  7998: ra = 282, jump @1267\n      : @317 [@dyn 141] (gas: 24)\n  8004: a3 = s1 + 0x7ff\n  8008: a3 = a3 + 0x139\n  8012: a4 = a3 + 0x600\n  8016: a1 = u64 [a4 + 0x58]\n  8019: a2 = u64 [a4 + 0x60]\n  8022: a0 = u64 [a4 + 0x48]\n  8025: a3 = u64 [a4 + 0x50]\n  8028: u64 [s1 + 0x170] = a1\n  8032: a4 = u64 [s1 + 0x1b8]\n  8036: u64 [a4 + 0x10] = a1\n  8039: u64 [s1 + 0x168] = a2\n  8043: u64 [a4 + 0x18] = a2\n  8046: u64 [s1 + 0x178] = a0\n  8050: u64 [a4] = a0\n  8052: u64 [s1 + 0x160] = a3\n  8056: u64 [a4 + 0x8] = a3\n  8059: a1 = a4\n  8061: a2 = s1 + 0x3158\n  8065: u64 [a2 + 1216] = 0\n  8069: u64 [a2 + 1208] = 0\n  8073: u64 [a2 + 1200] = 0\n  8077: u64 [a2 + 1192] = 0x1\n  8082: a0 = s1 + 0x3600\n  8086: ra = 284, jump @9\n      : @318 [@dyn 142] (gas: 25)\n  8092: a0 = s1 + 0x3000\n  8096: i32 a0 = a0 + 0x620\n  8100: ecalli 8 // 'now'\n  8102: a3 = s1 + 0x3158\n  8106: a4 = a3 + 0x400\n  8110: a0 = u64 [a4 + 0xe0]\n  8114: a1 = u64 [a4 + 0xd8]\n  8118: a2 = u64 [a4 + 0xc8]\n  8122: a3 = u64 [a4 + 0xd0]\n  8126: a4 = a2 + 0x2a300\n  8131: u64 [s1 + 0x1b8] = a4\n  8135: a2 = a4 <u a2\n  8138: a4 = a3 + a2\n  8141: u64 [s1 + 0x1b0] = a4\n  8145: a3 = a4 <u a3\n  8148: a3 = a2 if a2 == 0\n  8151: a3 = a3 + a1\n  8154: u64 [s1 + 0x1a8] = a3\n  8158: a1 = a3 <u a1\n  8161: a0 = a0 + a1\n  8164: u64 [s1 + 0x1a0] = a0\n  8168: a0 = s1 + 0x3000\n  8172: i32 a0 = a0 + 0x640\n  8176: ecalli 8 // 'now'\n  8178: fallthrough\n      : @319 (gas: 22)\n  8179: a3 = s1 + 0x3158\n  8183: a0 = u64 [a3 + 0x4f0]\n  8187: a1 = u64 [a3 + 0x4e8]\n  8191: a2 = u64 [a3 + 0x500]\n  8195: t0 = u64 [a3 + 0x4f8]\n  8199: a3 = s1 + 0x100\n  8203: a5 = u64 [a3 + 0xb0]\n  8207: a4 = a0 ^ a5\n  8210: a0 = a5 <u a0\n  8213: a5 = u64 [a3 + 0xb8]\n  8217: a1 = a5 <u a1\n  8220: a1 = a0 if a4 != 0\n  8223: a5 = u64 [a3 + 0xa8]\n  8227: a0 = a5 <u t0\n  8230: a4 = u64 [a3 + 0xa0]\n  8234: a3 = a2 ^ a4\n  8237: a2 = a4 <u a2\n  8240: a2 = a0 if a3 == 0\n  8243: a0 = t0 ^ a5\n  8246: a0 = a0 | a3\n  8249: a1 = a2 if a0 != 0\n  8252: jump @321 if a1 == 0\n      : @320 (gas: 1)\n  8255: jump @1082\n      : @321 (gas: 4)\n  8258: a0 = s1 + 0x3000\n  8262: i32 a0 = a0 + 0x660\n  8266: ecalli 8 // 'now'\n  8268: fallthrough\n      : @322 (gas: 34)\n  8269: a0 = s1 + 0x3158\n  8273: t0 = u64 [a0 + 0x520]\n  8277: a2 = a0 + 0x500\n  8281: a1 = u64 [a2 + 0x18]\n  8284: a5 = u64 [a2 + 0x8]\n  8287: a3 = u64 [a2 + 0x10]\n  8290: a2 = a5 + 0x93a80\n  8295: a0 = a2 <u a5\n  8298: a5 = a3 + a0\n  8301: a3 = a5 <u a3\n  8304: a3 = a0 if a0 == 0\n  8307: a0 = a1 + a3\n  8310: a1 = a0 <u a1\n  8313: a1 = a1 + t0\n  8316: a4 = u64 [s1 + 0x1a8]\n  8320: t0 = a0 <u a4\n  8323: u64 [s1 + 0x158] = a2\n  8327: a3 = u64 [s1 + 0x1b8]\n  8331: t1 = a2 <u a3\n  8334: a3 = u64 [s1 + 0x1b0]\n  8338: a2 = a3 ^ a5\n  8341: u64 [s1 + 0x150] = a5\n  8345: a3 = a5 <u a3\n  8348: a3 = t1 if a2 == 0\n  8351: a2 = u64 [s1 + 0x1a0]\n  8355: a5 = a2 ^ a1\n  8358: u64 [s1 + 0x140] = a1\n  8362: a2 = a1 <u a2\n  8365: a2 = t0 if a5 == 0\n  8368: u64 [s1 + 0x148] = a0\n  8372: a0 = a0 ^ a4\n  8375: a0 = a0 | a5\n  8378: a3 = a2 if a0 != 0\n  8381: jump @324 if a3 == 0\n      : @323 (gas: 1)\n  8384: jump @1088\n      : @324 (gas: 4)\n  8387: a0 = s1 + 0x7ff\n  8391: a0 = a0 + 0x741\n  8395: a1 = 0x40\n  8398: ra = 286, jump @2\n      : @325 [@dyn 143] (gas: 21)\n  8404: a1 = s1 + 0x7ff\n  8408: a1 = a1 + 0x139\n  8412: a5 = a1 + 0x600\n  8416: a0 = u64 [a5 + 0x20]\n  8419: u64 [s1 + 0x188] = a0\n  8423: a2 = u64 [a5 + 0x18]\n  8426: u64 [s1 + 0x180] = a2\n  8430: a3 = u64 [a5 + 0x10]\n  8433: u64 [s1 + 0x190] = a3\n  8437: a4 = u64 [a5 + 0x8]\n  8440: u64 [s1 + 0x198] = a4\n  8444: u64 [a5] = a0\n  8446: a5 = a1 + 0x500\n  8450: u64 [a5 + 0xf8] = a2\n  8454: u64 [a5 + 0xf0] = a3\n  8458: a0 = s1 + 0x7ff\n  8462: a0 = a0 + 0x721\n  8466: u64 [a5 + 0xe8] = a4\n  8470: ra = 0x120\n  8474: t0 = 0x4f8\n  8478: jump @1443\n      : @326 [@dyn 144] (gas: 13)\n  8482: a4 = s1 + 0x100\n  8486: a2 = u64 [a4 + 0x98]\n  8490: a0 = u64 [a4 + 0x88]\n  8494: a1 = u64 [a4 + 0x90]\n  8498: a0 = a0 | a1\n  8501: a3 = u64 [a4 + 0x80]\n  8505: a1 = a2 | a3\n  8508: a1 = a1 | a0\n  8511: a1 = a1 >> 0x20\n  8514: a0 = a0 | a3\n  8517: a0 = a0 << 0x20\n  8520: a0 = a0 | a1\n  8523: jump @328 if a0 == 0\n      : @327 (gas: 1)\n  8526: jump @912\n      : @328 (gas: 15)\n  8529: a0 = u64 [s1 + 0x178]\n  8533: a3 = s1 + 0x7ff\n  8537: a3 = a3 + 0x139\n  8541: a4 = a3 + 0x500\n  8545: u64 [a4 + 0xc8] = a0\n  8549: a0 = u64 [s1 + 0x160]\n  8553: u64 [a4 + 0xd0] = a0\n  8557: a0 = u64 [s1 + 0x170]\n  8561: u64 [a4 + 0xd8] = a0\n  8565: a1 = s1 + 0x7ff\n  8569: a1 = a1 + 0x701\n  8573: a0 = u64 [s1 + 0x168]\n  8577: u64 [a4 + 0xe0] = a0\n  8581: a0 = a2\n  8583: ra = 290, jump @4\n      : @329 [@dyn 145] (gas: 4)\n  8589: a0 = s1 + 0x3000\n  8593: i32 a0 = a0 + 0x680\n  8597: ecalli 8 // 'now'\n  8599: fallthrough\n      : @330 (gas: 12)\n  8600: a5 = s1 + 0x100\n  8604: a4 = u64 [a5 + 0x98]\n  8608: a0 = u64 [a5 + 0x88]\n  8612: a2 = u64 [a5 + 0x80]\n  8616: a2 = a2 | a0\n  8619: a3 = 0x100000000\n  8629: a0 = 0xffffffe0\n  8639: a0 = a4 <u a0\n  8642: a1 = u64 [a5 + 0x90]\n  8646: a0 = 0 if a1 != 0\n  8648: a0 = 0 if a2 != 0\n  8650: jump @332 if a0 != 0\n      : @331 (gas: 1)\n  8653: jump @912\n      : @332 (gas: 19)\n  8656: a0 = s1 + 0x3158\n  8660: u64 [s1 + 0x188] = a2\n  8664: u64 [s1 + 0x180] = a3\n  8668: a5 = u64 [a0 + 0x528]\n  8672: a1 = u64 [a0 + 0x530]\n  8676: a2 = u64 [a0 + 0x538]\n  8680: a3 = u64 [a0 + 0x540]\n  8684: i32 a0 = a4 + 0x20\n  8687: a4 = s1 + 0x7ff\n  8691: a4 = a4 + 0x139\n  8695: u64 [a4 + 0x5c0] = a3\n  8699: a3 = a4 + 0x500\n  8703: u64 [a3 + 0xb8] = a2\n  8707: u64 [a3 + 0xb0] = a1\n  8711: a1 = s1 + 0x7ff\n  8715: a1 = a1 + 0x6e1\n  8719: u64 [a3 + 0xa8] = a5\n  8723: u64 [s1 + 0x138] = a0\n  8727: ra = 292, jump @4\n      : @333 [@dyn 146] (gas: 5)\n  8733: a3 = s1 + 0x100\n  8737: a1 = u64 [a3 + 0x98]\n  8741: a0 = u64 [a3 + 0x80]\n  8745: a0 = a0 + 0xffffffffffffffc0\n  8748: t0 = 294, jump @1436\n      : @334 [@dyn 147] (gas: 1)\n  8755: jump @336 if a0 != 0\n      : @335 (gas: 1)\n  8758: jump @912\n      : @336 (gas: 17)\n  8761: i32 a2 = a1 + 0x40\n  8764: a0 = u64 [s1 + 0x1b8]\n  8768: a3 = s1 + 0x7ff\n  8772: a3 = a3 + 0x139\n  8776: a4 = a3 + 0x500\n  8780: u64 [a4 + 0x88] = a0\n  8784: a0 = u64 [s1 + 0x1b0]\n  8788: u64 [a4 + 0x90] = a0\n  8792: a0 = u64 [s1 + 0x1a8]\n  8796: u64 [a4 + 0x98] = a0\n  8800: a1 = s1 + 0x7ff\n  8804: a1 = a1 + 0x6c1\n  8808: a0 = u64 [s1 + 0x1a0]\n  8812: u64 [a4 + 0xa0] = a0\n  8816: u64 [s1 + 0x180] = a2\n  8820: a0 = a2\n  8822: ra = 296, jump @4\n      : @337 [@dyn 148] (gas: 10)\n  8828: a4 = s1 + 0x100\n  8832: a1 = u64 [a4 + 0x98]\n  8836: a3 = 0x100000000\n  8846: a0 = 0xffffffa0\n  8856: a0 = a1 <u a0\n  8859: a2 = u64 [a4 + 0x90]\n  8863: a0 = 0 if a2 != 0\n  8865: a2 = u64 [a4 + 0x88]\n  8869: a0 = 0 if a2 != 0\n  8871: jump @339 if a0 != 0\n      : @338 (gas: 1)\n  8874: jump @912\n      : @339 (gas: 19)\n  8877: i32 a2 = a1 + 0x60\n  8880: a0 = u64 [s1 + 0x158]\n  8884: a1 = s1 + 0x7ff\n  8888: a1 = a1 + 0x139\n  8892: u64 [s1 + 0x130] = a3\n  8896: a3 = a1\n  8898: a4 = a1 + 0x500\n  8902: u64 [a4 + 0x68] = a0\n  8905: a0 = u64 [s1 + 0x150]\n  8909: u64 [a4 + 0x70] = a0\n  8912: a0 = u64 [s1 + 0x148]\n  8916: u64 [a4 + 0x78] = a0\n  8919: a1 = s1 + 0x7ff\n  8923: a1 = a1 + 0x6a1\n  8927: a0 = u64 [s1 + 0x140]\n  8931: u64 [a3 + 0x580] = a0\n  8935: u64 [s1 + 0x128] = a2\n  8939: a0 = a2\n  8941: ra = 298, jump @4\n      : @340 [@dyn 149] (gas: 5)\n  8947: a3 = s1 + 0x100\n  8951: a1 = u64 [a3 + 0x98]\n  8955: a0 = u64 [a3 + 0x30]\n  8958: a0 = a0 + 0xffffffffffffff80\n  8961: t0 = 300, jump @1436\n      : @341 [@dyn 150] (gas: 1)\n  8968: jump @343 if a0 != 0\n      : @342 (gas: 1)\n  8971: jump @912\n      : @343 (gas: 11)\n  8974: i32 a0 = a1 + 0x80\n  8978: a2 = s1 + 0x7ff\n  8982: a2 = a2 + 0x139\n  8986: u64 [a2 + 1376] = 0\n  8990: u64 [a2 + 1368] = 0\n  8994: u64 [a2 + 1360] = 0\n  8998: a1 = s1 + 0x7ff\n  9002: a1 = a1 + 0x681\n  9006: u64 [a2 + 1352] = 0\n  9010: u64 [s1 + 0x130] = a0\n  9014: ra = 302, jump @4\n      : @344 [@dyn 151] (gas: 10)\n  9020: a4 = s1 + 0x100\n  9024: a1 = u64 [a4 + 0x98]\n  9028: a3 = 0x100000000\n  9038: a0 = 0xffffff60\n  9048: a0 = a1 <u a0\n  9051: a2 = u64 [a4 + 0x90]\n  9055: a0 = 0 if a2 != 0\n  9057: a2 = u64 [a4 + 0x88]\n  9061: a0 = 0 if a2 != 0\n  9063: jump @346 if a0 != 0\n      : @345 (gas: 1)\n  9066: jump @912\n      : @346 (gas: 12)\n  9069: i32 a0 = a1 + 0xa0\n  9073: a2 = s1 + 0x7ff\n  9077: a2 = a2 + 0x139\n  9081: u64 [a2 + 1344] = 0\n  9085: u64 [a2 + 1336] = 0\n  9089: u64 [a2 + 1328] = 0\n  9093: a1 = s1 + 0x7ff\n  9097: a1 = a1 + 0x661\n  9101: u64 [a2 + 1320] = 0\n  9105: u64 [s1 + 0x118] = a0\n  9109: u64 [s1 + 0x120] = a3\n  9113: ra = 304, jump @4\n      : @347 [@dyn 152] (gas: 5)\n  9119: a3 = s1 + 0x100\n  9123: a1 = u64 [a3 + 0x98]\n  9127: a0 = u64 [a3 + 0x20]\n  9130: a0 = a0 + 0xffffffffffffff40\n  9134: t0 = 306, jump @1436\n      : @348 [@dyn 153] (gas: 1)\n  9141: jump @350 if a0 != 0\n      : @349 (gas: 1)\n  9144: jump @912\n      : @350 (gas: 11)\n  9147: i32 a0 = a1 + 0xc0\n  9151: a2 = s1 + 0x7ff\n  9155: a2 = a2 + 0x139\n  9159: u64 [a2 + 1312] = 0\n  9163: u64 [a2 + 1304] = 0\n  9167: u64 [a2 + 1296] = 0\n  9171: a1 = s1 + 0x7ff\n  9175: a1 = a1 + 0x641\n  9179: u64 [a2 + 1288] = 0\n  9183: u64 [s1 + 0x120] = a0\n  9187: ra = 308, jump @4\n      : @351 [@dyn 154] (gas: 10)\n  9193: a5 = s1 + 0x100\n  9197: a0 = u64 [a5 + 0x98]\n  9201: a4 = 0x100000000\n  9211: a1 = 0xffffff20\n  9221: a1 = a0 <u a1\n  9224: a3 = u64 [a5 + 0x90]\n  9228: a1 = 0 if a3 != 0\n  9230: a3 = u64 [a5 + 0x88]\n  9234: a1 = 0 if a3 != 0\n  9236: jump @353 if a1 != 0\n      : @352 (gas: 1)\n  9239: jump @912\n      : @353 (gas: 12)\n  9242: i32 a0 = a0 + 0xe0\n  9246: a3 = s1 + 0x7ff\n  9250: a3 = a3 + 0x139\n  9254: u64 [a3 + 1280] = 0\n  9258: u64 [a3 + 1272] = 0\n  9262: u64 [a3 + 1264] = 0\n  9266: a1 = s1 + 0x7ff\n  9270: a1 = a1 + 0x621\n  9274: u64 [a3 + 1256] = 0x1\n  9279: u64 [s1 + 0x108] = a0\n  9283: u64 [s1 + 0x110] = a4\n  9287: ra = 310, jump @4\n      : @354 [@dyn 155] (gas: 5)\n  9293: a3 = s1 + 0x100\n  9297: a1 = u64 [a3 + 0x98]\n  9301: a0 = u64 [a3 + 0x10]\n  9304: a0 = a0 + 0xffffffffffffff00\n  9308: t0 = 312, jump @1436\n      : @355 [@dyn 156] (gas: 1)\n  9315: jump @357 if a0 != 0\n      : @356 (gas: 1)\n  9318: jump @912\n      : @357 (gas: 11)\n  9321: i32 a0 = a1 + 0x100\n  9325: a2 = s1 + 0x7ff\n  9329: a2 = a2 + 0x139\n  9333: u64 [a2 + 1248] = 0\n  9337: u64 [a2 + 1240] = 0\n  9341: u64 [a2 + 1232] = 0\n  9345: a1 = s1 + 0x7ff\n  9349: a1 = a1 + 0x601\n  9353: u64 [a2 + 1224] = 0\n  9357: u64 [s1 + 0x110] = a0\n  9361: ra = 314, jump @4\n      : @358 [@dyn 157] (gas: 4)\n  9367: a3 = s1 + 0x100\n  9371: a1 = u64 [a3 + 0x98]\n  9375: a0 = 0xfffffee0\n  9385: t0 = 316, jump @1436\n      : @359 [@dyn 158] (gas: 1)\n  9392: jump @361 if a0 != 0\n      : @360 (gas: 1)\n  9395: jump @912\n      : @361 (gas: 11)\n  9398: i32 a0 = a1 + 0x120\n  9402: a2 = s1 + 0x7ff\n  9406: a2 = a2 + 0x139\n  9410: u64 [a2 + 1216] = 0\n  9414: u64 [a2 + 1208] = 0\n  9418: u64 [a2 + 1200] = 0\n  9422: a1 = s1 + 0x7ff\n  9426: a1 = a1 + 0x5e1\n  9430: u64 [a2 + 1192] = 0\n  9434: u64 [s1 + 0x100] = a0\n  9438: ra = 318, jump @4\n      : @362 [@dyn 159] (gas: 15)\n  9444: a0 = u64 [s1 + 0x168]\n  9448: a2 = s1 + 0x7ff\n  9452: a2 = a2 + 0x139\n  9456: a3 = a2 + 0x400\n  9460: u64 [a3 + 0xa0] = a0\n  9464: a0 = u64 [s1 + 0x170]\n  9468: u64 [a3 + 0x98] = a0\n  9472: a0 = u64 [s1 + 0x160]\n  9476: u64 [a3 + 0x90] = a0\n  9480: a1 = s1 + 0x7ff\n  9484: a1 = a1 + 0x5c1\n  9488: a0 = u64 [s1 + 0x178]\n  9492: u64 [a3 + 0x88] = a0\n  9496: a0 = 0\n  9498: ra = 320, jump @4\n      : @363 [@dyn 160] (gas: 11)\n  9504: a1 = s1 + 0x7ff\n  9508: a1 = a1 + 0x139\n  9512: u64 [a1 + 1152] = 0\n  9516: u64 [a1 + 1144] = 0\n  9520: u64 [a1 + 1128] = 0x2\n  9525: a2 = a1\n  9527: a0 = 0x20\n  9530: a1 = s1 + 0x7ff\n  9534: a1 = a1 + 0x5a1\n  9538: u64 [a2 + 1136] = 0\n  9542: ra = 322, jump @4\n      : @364 [@dyn 161] (gas: 8)\n  9548: a0 = sp + 0xffffffffffffffe0\n  9551: a0 = a0 & 0xffffffffffffffe0\n  9554: u64 [s1 + 0x168] = a0\n  9558: sp = a0\n  9560: a0 = 0x20154\n  9565: u64 [s1 + 0xf8] = a0\n  9569: a0 = i32 [0x20154]\n  9574: jump @366 if a0 >u 63\n      : @365 (gas: 3)\n  9578: a1 = u64 [s1 + 0xf8]\n  9582: u32 [a1 + 0] = 0x40\n  9585: fallthrough\n      : @366 (gas: 32)\n  9586: a0 = sp + 0xffffffffffffffe0\n  9589: a2 = a0 & 0xffffffffffffffe0\n  9592: u64 [s1 + 0x190] = a2\n  9596: sp = a2\n  9598: a0 = 0x20160\n  9603: i32 a0 = a0 + 0\n  9605: i32 a2 = a2 + 0\n  9607: a1 = 0x40\n  9610: u64 [s1 + 0xf0] = a0\n  9614: ecalli 7 // 'hash_keccak_256'\n  9616: a3 = u64 [s1 + 0x190]\n  9620: a0 = u64 [a3 + 0x18]\n  9623: a1 = u64 [a3 + 0x10]\n  9626: a2 = u64 [a3 + 0x8]\n  9629: a3 = u64 [a3]\n  9631: a4 = reverse a0\n  9633: u64 [s1 + 0x170] = a4\n  9637: a1 = reverse a1\n  9639: u64 [s1 + 0x178] = a1\n  9643: a2 = reverse a2\n  9645: u64 [s1 + 0x190] = a2\n  9649: a0 = reverse a3\n  9651: u64 [s1 + 0x188] = a0\n  9655: a3 = u64 [s1 + 0x168]\n  9659: u64 [a3 + 0x18] = a0\n  9662: u64 [a3 + 0x10] = a2\n  9665: u64 [a3 + 0x8] = a1\n  9668: u64 [a3] = a4\n  9670: a0 = s1 + 0x7ff\n  9674: a0 = a0 + 0x581\n  9678: a1 = u64 [s1 + 0x198]\n  9682: ra = 324, jump @2\n      : @367 [@dyn 162] (gas: 16)\n  9688: a3 = s1 + 0x7ff\n  9692: a3 = a3 + 0x139\n  9696: a4 = a3 + 0x400\n  9700: a0 = u64 [a4 + 0x60]\n  9703: a1 = u64 [a4 + 0x58]\n  9706: a2 = u64 [a4 + 0x50]\n  9709: a3 = u64 [a4 + 0x48]\n  9712: a4 = s1 + 0x3158\n  9716: a5 = a4 + 0x500\n  9720: u64 [a5 + 0x60] = a0\n  9723: u64 [a5 + 0x58] = a1\n  9726: u64 [a5 + 0x50] = a2\n  9729: u64 [a5 + 0x48] = a3\n  9732: a1 = s1 + 0x36a0\n  9736: a0 = u64 [s1 + 0x168]\n  9740: ra = 326, jump @9\n      : @368 [@dyn 163] (gas: 4)\n  9746: a0 = s1 + 0x7ff\n  9750: a0 = a0 + 0x561\n  9754: a1 = u64 [s1 + 0x138]\n  9758: ra = 328, jump @2\n      : @369 [@dyn 164] (gas: 31)\n  9764: a0 = s1 + 0x7ff\n  9768: a0 = a0 + 0x139\n  9772: t0 = u64 [a0 + 0x428]\n  9776: t1 = u64 [a0 + 0x430]\n  9780: t2 = u64 [a0 + 0x438]\n  9784: a3 = u64 [a0 + 0x440]\n  9788: a0 = u64 [s1 + 0x170]\n  9792: a0 = a0 + 0x1\n  9795: a5 = a0 <u 0x1\n  9798: a1 = u64 [s1 + 0x178]\n  9802: a5 = a5 + a1\n  9805: a4 = a0 | a5\n  9808: a4 = a4 <u 0x1\n  9811: a1 = u64 [s1 + 0x190]\n  9815: a4 = a4 + a1\n  9818: a1 = a4 <u a1\n  9821: a2 = u64 [s1 + 0x188]\n  9825: a1 = a1 + a2\n  9828: a2 = s1 + 0x3158\n  9832: u64 [a2 + 0x580] = a1\n  9836: a1 = a2 + 0x500\n  9840: u64 [a1 + 0x78] = a4\n  9843: u64 [a1 + 0x70] = a5\n  9846: u64 [a1 + 0x68] = a0\n  9849: u64 [a1 + 0xa0] = a3\n  9853: u64 [a2 + 0x598] = t2\n  9857: u64 [a2 + 0x590] = t1\n  9861: u64 [a2 + 0x588] = t0\n  9865: a0 = s1 + 0x36c0\n  9869: a1 = s1 + 0x36e0\n  9873: ra = 330, jump @9\n      : @370 [@dyn 165] (gas: 4)\n  9879: a0 = s1 + 0x7ff\n  9883: a0 = a0 + 0x541\n  9887: a1 = u64 [s1 + 0x180]\n  9891: ra = 332, jump @2\n      : @371 [@dyn 166] (gas: 31)\n  9897: a0 = s1 + 0x7ff\n  9901: a0 = a0 + 0x139\n  9905: t0 = u64 [a0 + 0x408]\n  9909: t1 = u64 [a0 + 0x410]\n  9913: t2 = u64 [a0 + 0x418]\n  9917: a3 = u64 [a0 + 0x420]\n  9921: a0 = u64 [s1 + 0x170]\n  9925: a4 = a0 + 0x2\n  9928: a5 = a4 <u a0\n  9931: a1 = u64 [s1 + 0x178]\n  9935: a0 = a1 + a5\n  9938: a1 = a0 <u a1\n  9941: a1 = a5 if a5 == 0\n  9944: a2 = u64 [s1 + 0x190]\n  9948: a1 = a1 + a2\n  9951: a5 = a1 <u a2\n  9954: a2 = u64 [s1 + 0x188]\n  9958: a5 = a5 + a2\n  9961: a2 = s1 + 0x3158\n  9965: u64 [a2 + 0x5c0] = a5\n  9969: a5 = a2 + 0x500\n  9973: u64 [a5 + 0xb8] = a1\n  9977: u64 [a5 + 0xb0] = a0\n  9981: u64 [a5 + 0xa8] = a4\n  9985: u64 [a5 + 0xe0] = a3\n  9989: u64 [a2 + 0x5d8] = t2\n  9993: u64 [a2 + 0x5d0] = t1\n  9997: u64 [a2 + 0x5c8] = t0\n 10001: a0 = s1 + 0x3700\n 10005: a1 = s1 + 0x3720\n 10009: ra = 334, jump @9\n      : @372 [@dyn 167] (gas: 4)\n 10015: a0 = s1 + 0x7ff\n 10019: a0 = a0 + 0x521\n 10023: a1 = u64 [s1 + 0x128]\n 10027: ra = 336, jump @2\n      : @373 [@dyn 168] (gas: 31)\n 10033: a0 = s1 + 0x7ff\n 10037: a0 = a0 + 0x139\n 10041: t0 = u64 [a0 + 0x3e8]\n 10045: t1 = u64 [a0 + 0x3f0]\n 10049: t2 = u64 [a0 + 0x3f8]\n 10053: a3 = u64 [a0 + 0x400]\n 10057: a0 = u64 [s1 + 0x170]\n 10061: a4 = a0 + 0x3\n 10064: a5 = a4 <u a0\n 10067: a1 = u64 [s1 + 0x178]\n 10071: a0 = a1 + a5\n 10074: a1 = a0 <u a1\n 10077: a1 = a5 if a5 == 0\n 10080: a2 = u64 [s1 + 0x190]\n 10084: a1 = a1 + a2\n 10087: a5 = a1 <u a2\n 10090: a2 = u64 [s1 + 0x188]\n 10094: a5 = a5 + a2\n 10097: a2 = s1 + 0x3158\n 10101: u64 [a2 + 0x600] = a5\n 10105: a5 = a2 + 0x500\n 10109: u64 [a5 + 0xf8] = a1\n 10113: u64 [a5 + 0xf0] = a0\n 10117: u64 [a5 + 0xe8] = a4\n 10121: u64 [a2 + 0x620] = a3\n 10125: u64 [a2 + 0x618] = t2\n 10129: u64 [a2 + 0x610] = t1\n 10133: u64 [a2 + 0x608] = t0\n 10137: a0 = s1 + 0x3740\n 10141: a1 = s1 + 0x3760\n 10145: ra = 338, jump @9\n      : @374 [@dyn 169] (gas: 4)\n 10151: a0 = s1 + 0x7ff\n 10155: a0 = a0 + 0x501\n 10159: a1 = u64 [s1 + 0x130]\n 10163: ra = 340, jump @2\n      : @375 [@dyn 170] (gas: 31)\n 10169: a0 = s1 + 0x7ff\n 10173: a0 = a0 + 0x139\n 10177: t0 = u64 [a0 + 0x3c8]\n 10181: t1 = u64 [a0 + 0x3d0]\n 10185: t2 = u64 [a0 + 0x3d8]\n 10189: a3 = u64 [a0 + 0x3e0]\n 10193: a0 = u64 [s1 + 0x170]\n 10197: a4 = a0 + 0x4\n 10200: a5 = a4 <u a0\n 10203: a1 = u64 [s1 + 0x178]\n 10207: a0 = a1 + a5\n 10210: a1 = a0 <u a1\n 10213: a1 = a5 if a5 == 0\n 10216: a2 = u64 [s1 + 0x190]\n 10220: a1 = a1 + a2\n 10223: a5 = a1 <u a2\n 10226: a2 = u64 [s1 + 0x188]\n 10230: a5 = a5 + a2\n 10233: a2 = s1 + 0x3158\n 10237: u64 [a2 + 0x640] = a5\n 10241: a5 = a2 + 0x600\n 10245: u64 [a5 + 0x38] = a1\n 10248: u64 [a5 + 0x30] = a0\n 10251: u64 [a5 + 0x28] = a4\n 10254: u64 [a5 + 0x60] = a3\n 10257: u64 [a2 + 0x658] = t2\n 10261: u64 [a2 + 0x650] = t1\n 10265: u64 [a2 + 0x648] = t0\n 10269: a0 = s1 + 0x3780\n 10273: a1 = s1 + 0x37a0\n 10277: ra = 342, jump @9\n      : @376 [@dyn 171] (gas: 4)\n 10283: a0 = s1 + 0x7ff\n 10287: a0 = a0 + 0x4e1\n 10291: a1 = u64 [s1 + 0x118]\n 10295: ra = 344, jump @2\n      : @377 [@dyn 172] (gas: 31)\n 10301: a0 = s1 + 0x7ff\n 10305: a0 = a0 + 0x139\n 10309: t0 = u64 [a0 + 0x3a8]\n 10313: t1 = u64 [a0 + 0x3b0]\n 10317: t2 = u64 [a0 + 0x3b8]\n 10321: a3 = u64 [a0 + 0x3c0]\n 10325: a0 = u64 [s1 + 0x170]\n 10329: a4 = a0 + 0x5\n 10332: a5 = a4 <u a0\n 10335: a1 = u64 [s1 + 0x178]\n 10339: a0 = a1 + a5\n 10342: a1 = a0 <u a1\n 10345: a1 = a5 if a5 == 0\n 10348: a2 = u64 [s1 + 0x190]\n 10352: a1 = a1 + a2\n 10355: a5 = a1 <u a2\n 10358: a2 = u64 [s1 + 0x188]\n 10362: a5 = a5 + a2\n 10365: a2 = s1 + 0x3158\n 10369: u64 [a2 + 0x680] = a5\n 10373: a5 = a2 + 0x600\n 10377: u64 [a5 + 0x78] = a1\n 10380: u64 [a5 + 0x70] = a0\n 10383: u64 [a5 + 0x68] = a4\n 10386: u64 [a5 + 0xa0] = a3\n 10390: u64 [a2 + 0x698] = t2\n 10394: u64 [a2 + 0x690] = t1\n 10398: u64 [a2 + 0x688] = t0\n 10402: a0 = s1 + 0x37c0\n 10406: a1 = s1 + 0x37e0\n 10410: ra = 346, jump @9\n      : @378 [@dyn 173] (gas: 6)\n 10416: a0 = sp + 0xffffffffffffffe0\n 10419: a5 = a0 & 0xffffffffffffffe0\n 10422: sp = a5\n 10424: a1 = u64 [s1 + 0x170]\n 10428: a0 = a1 + 0x6\n 10431: t0 = 348, jump @1451\n      : @379 [@dyn 174] (gas: 11)\n 10438: a4 = u64 [s1 + 0x188]\n 10442: a1 = a1 + a4\n 10445: u64 [s1 + 0x198] = a5\n 10449: u64 [a5 + 0x18] = a1\n 10452: u64 [a5 + 0x10] = a3\n 10455: u64 [a5 + 0x8] = a2\n 10458: u64 [a5] = a0\n 10460: a0 = s1 + 0x7ff\n 10464: a0 = a0 + 0x4c1\n 10468: a1 = u64 [s1 + 0x120]\n 10472: ra = 350, jump @2\n      : @380 [@dyn 175] (gas: 12)\n 10478: a0 = s1 + 0x7ff\n 10482: a0 = a0 + 0x139\n 10486: a1 = u64 [a0 + 0x388]\n 10490: u64 [s1 + 0x180] = a1\n 10494: a1 = u64 [a0 + 0x390]\n 10498: u64 [s1 + 0x168] = a1\n 10502: a1 = u32 [a0 + 0x398]\n 10506: u64 [s1 + 0x160] = a1\n 10510: a0 = s1 + 0x7ff\n 10514: a0 = a0 + 0x4a1\n 10518: a1 = u64 [s1 + 0x198]\n 10522: ra = 352, jump @6\n      : @381 [@dyn 176] (gas: 18)\n 10528: a1 = s1 + 0x7ff\n 10532: a1 = a1 + 0x139\n 10536: a0 = u32 [a1 + 0x37c]\n 10540: a0 = a0 << 0x20\n 10543: a1 = u64 [a1 + 0x380]\n 10547: a2 = u64 [s1 + 0x160]\n 10551: a0 = a0 | a2\n 10554: a2 = s1 + 0x3158\n 10558: a3 = u64 [s1 + 0x168]\n 10562: a4 = a2 + 0x600\n 10566: u64 [a4 + 0xb0] = a3\n 10570: a3 = u64 [s1 + 0x180]\n 10574: u64 [a4 + 0xa8] = a3\n 10578: u64 [a4 + 0xc0] = a1\n 10582: u64 [a4 + 0xb8] = a0\n 10586: a1 = s1 + 0x3800\n 10590: a0 = u64 [s1 + 0x198]\n 10594: ra = 354, jump @9\n      : @382 [@dyn 177] (gas: 4)\n 10600: a0 = s1 + 0x7ff\n 10604: a0 = a0 + 0x481\n 10608: a1 = u64 [s1 + 0x108]\n 10612: ra = 356, jump @2\n      : @383 [@dyn 178] (gas: 19)\n 10618: a2 = s1 + 0x7ff\n 10622: a2 = a2 + 0x139\n 10626: a3 = a2 + 0x300\n 10630: a0 = u64 [a3 + 0x60]\n 10633: a1 = u64 [a3 + 0x58]\n 10636: a5 = u64 [a3 + 0x50]\n 10639: a4 = u64 [a3 + 0x48]\n 10642: a2 = a0 >u 0\n 10644: a3 = a1 >u 0\n 10646: a3 = a2 if a0 != 0\n 10649: a2 = a5 >u 0\n 10651: u64 [s1 + 0x180] = a4\n 10655: a4 = a4 <u 0x4\n 10658: a4 = a4 ^ 0x1\n 10661: u64 [s1 + 0x168] = a5\n 10665: a4 = a2 if a5 != 0\n 10668: a0 = a0 | a1\n 10671: a4 = a3 if a0 != 0\n 10674: jump @385 if a4 == 0\n      : @384 (gas: 1)\n 10677: jump @1110\n      : @385 (gas: 4)\n 10680: a0 = s1 + 0x7ff\n 10684: a0 = a0 + 0x461\n 10688: a1 = u64 [s1 + 0x198]\n 10692: ra = 358, jump @6\n      : @386 [@dyn 179] (gas: 26)\n 10698: a0 = s1 + 0x7ff\n 10702: a0 = a0 + 0x139\n 10706: t0 = u64 [a0 + 0x328]\n 10710: a4 = a0 + 0x300\n 10714: a1 = u64 [a4 + 0x30]\n 10717: a2 = u64 [a4 + 0x40]\n 10720: a3 = u64 [a4 + 0x38]\n 10723: a0 = u64 [s1 + 0x180]\n 10727: a4 = a0 >> 0x20\n 10730: a5 = u64 [s1 + 0x168]\n 10734: a5 = a5 << 0x20\n 10737: a4 = a4 | a5\n 10740: a5 = a0 << 0x20\n 10743: a0 = 0xffffff00ffffffff\n 10753: a0 = a0 & a3\n 10756: a0 = a0 | a5\n 10759: a2 = a2 | a4\n 10762: a3 = s1 + 0x3158\n 10766: a4 = a3 + 0x600\n 10770: u64 [a4 + 0xd0] = a1\n 10774: u64 [a3 + 0x6c8] = t0\n 10778: u64 [a4 + 0xe0] = a2\n 10782: u64 [a4 + 0xd8] = a0\n 10786: a1 = s1 + 0x3820\n 10790: a0 = u64 [s1 + 0x198]\n 10794: ra = 360, jump @9\n      : @387 [@dyn 180] (gas: 4)\n 10800: a0 = s1 + 0x7ff\n 10804: a0 = a0 + 0x441\n 10808: a1 = u64 [s1 + 0x110]\n 10812: ra = 362, jump @2\n      : @388 [@dyn 181] (gas: 31)\n 10818: a0 = s1 + 0x7ff\n 10822: a0 = a0 + 0x139\n 10826: t0 = u64 [a0 + 0x308]\n 10830: t1 = u64 [a0 + 0x310]\n 10834: t2 = u64 [a0 + 0x318]\n 10838: a3 = u64 [a0 + 0x320]\n 10842: a0 = u64 [s1 + 0x170]\n 10846: a4 = a0 + 0x7\n 10849: a5 = a4 <u a0\n 10852: a1 = u64 [s1 + 0x178]\n 10856: a0 = a1 + a5\n 10859: a1 = a0 <u a1\n 10862: a1 = a5 if a5 == 0\n 10865: a2 = u64 [s1 + 0x190]\n 10869: a1 = a1 + a2\n 10872: a5 = a1 <u a2\n 10875: a2 = u64 [s1 + 0x188]\n 10879: a5 = a5 + a2\n 10882: a2 = s1 + 0x3158\n 10886: u64 [a2 + 0x700] = a5\n 10890: a5 = a2 + 0x600\n 10894: u64 [a5 + 0xf8] = a1\n 10898: u64 [a5 + 0xf0] = a0\n 10902: u64 [a5 + 0xe8] = a4\n 10906: u64 [a2 + 0x720] = a3\n 10910: u64 [a2 + 0x718] = t2\n 10914: u64 [a2 + 0x710] = t1\n 10918: u64 [a2 + 0x708] = t0\n 10922: a0 = s1 + 0x3840\n 10926: a1 = s1 + 0x3860\n 10930: ra = 364, jump @9\n      : @389 [@dyn 182] (gas: 7)\n 10936: a0 = sp + 0xffffffffffffffe0\n 10939: a4 = a0 & 0xffffffffffffffe0\n 10942: u64 [s1 + 0x198] = a4\n 10946: sp = a4\n 10948: a1 = u64 [s1 + 0x170]\n 10952: a0 = a1 + 0x8\n 10955: t0 = 366, jump @1451\n      : @390 [@dyn 183] (gas: 10)\n 10962: a5 = u64 [s1 + 0x188]\n 10966: a1 = a1 + a5\n 10969: u64 [a4 + 0x18] = a1\n 10972: u64 [a4 + 0x10] = a3\n 10975: u64 [a4 + 0x8] = a2\n 10978: u64 [a4] = a0\n 10980: a0 = s1 + 0x7ff\n 10984: a0 = a0 + 0x421\n 10988: a1 = u64 [s1 + 0x100]\n 10992: ra = 368, jump @2\n      : @391 [@dyn 184] (gas: 16)\n 10998: a3 = s1 + 0x7ff\n 11002: a3 = a3 + 0x139\n 11006: a4 = a3 + 0x200\n 11010: a0 = u64 [a4 + 0xf8]\n 11014: a1 = u64 [a3 + 0x300]\n 11018: a2 = u64 [a4 + 0xf0]\n 11022: a3 = u64 [a4 + 0xe8]\n 11026: a1 = a1 | a2\n 11029: a0 = a0 | a3\n 11032: a0 = a0 | a1\n 11035: a0 = a0 >u 0\n 11037: u64 [s1 + 0x190] = a0\n 11041: a0 = s1 + 0x7ff\n 11045: a0 = a0 + 0x401\n 11049: a1 = u64 [s1 + 0x198]\n 11053: ra = 370, jump @6\n      : @392 [@dyn 185] (gas: 19)\n 11059: a3 = s1 + 0x7ff\n 11063: a3 = a3 + 0x139\n 11067: a4 = a3 + 0x200\n 11071: a0 = u64 [a4 + 0xc8]\n 11075: a1 = u64 [a4 + 0xd0]\n 11079: a2 = u64 [a4 + 0xe0]\n 11083: a3 = u64 [a4 + 0xd8]\n 11087: a0 = a0 & 0xffffffffffffff00\n 11091: a4 = u64 [s1 + 0x190]\n 11095: a0 = a0 | a4\n 11098: a4 = s1 + 0x3158\n 11102: a5 = a4 + 0x700\n 11106: u64 [a5 + 0x40] = a2\n 11109: u64 [a5 + 0x38] = a3\n 11112: u64 [a5 + 0x30] = a1\n 11115: u64 [a5 + 0x28] = a0\n 11118: a1 = s1 + 0x3880\n 11122: a0 = u64 [s1 + 0x198]\n 11126: ra = 372, jump @9\n      : @393 [@dyn 186] (gas: 9)\n 11132: a1 = s1 + 0x3158\n 11136: u64 [a1 + 1888] = 0\n 11140: u64 [a1 + 1880] = 0\n 11144: u64 [a1 + 1872] = 0\n 11148: u64 [a1 + 1864] = 0x1\n 11153: a0 = s1 + 0x7ff\n 11157: a0 = a0 + 0x3e1\n 11161: a1 = s1 + 0x38a0\n 11165: ra = 374, jump @6\n      : @394 [@dyn 187] (gas: 15)\n 11171: a1 = s1 + 0x7ff\n 11175: a1 = a1 + 0x139\n 11179: a2 = a1 + 0x200\n 11183: a0 = u64 [a2 + 0xc0]\n 11187: u64 [s1 + 0x178] = a0\n 11191: a0 = u64 [a2 + 0xb8]\n 11195: u64 [s1 + 0x170] = a0\n 11199: a0 = u64 [a2 + 0xb0]\n 11203: u64 [s1 + 0x168] = a0\n 11207: a0 = u64 [a2 + 0xa8]\n 11211: u64 [s1 + 0x160] = a0\n 11215: a0 = s1 + 0x7ff\n 11219: a0 = a0 + 0x3c1\n 11223: a1 = 0x40\n 11226: ra = 376, jump @2\n      : @395 [@dyn 188] (gas: 62)\n 11232: a0 = s1 + 0x7ff\n 11236: a0 = a0 + 0x139\n 11240: a2 = a0 + 0x200\n 11244: a1 = u64 [a2 + 0xa0]\n 11248: u64 [s1 + 0x190] = a1\n 11252: a1 = u64 [a2 + 0x98]\n 11256: u64 [s1 + 0x188] = a1\n 11260: a1 = u64 [a2 + 0x90]\n 11264: u64 [s1 + 0x180] = a1\n 11268: a1 = u64 [a2 + 0x88]\n 11272: u64 [s1 + 0x198] = a1\n 11276: a0 = s1 + 0x4000\n 11280: i32 a0 = a0 + 0xfffffffffffff8c0\n 11284: ecalli 8 // 'now'\n 11286: a3 = s1 + 0x3158\n 11290: a4 = a3 + 0x700\n 11294: a0 = u64 [a4 + 0x68]\n 11297: a1 = u64 [a4 + 0x70]\n 11300: a2 = u64 [a4 + 0x78]\n 11303: a3 = u64 [a4 + 0x80]\n 11307: a4 = u64 [s1 + 0x140]\n 11311: a5 = s1 + 0x7ff\n 11315: a5 = a5 + 0x139\n 11319: u64 [a5 + 0x200] = a4\n 11323: a4 = u64 [s1 + 0x148]\n 11327: u64 [a5 + 0x1f8] = a4\n 11331: a4 = u64 [s1 + 0x150]\n 11335: u64 [a5 + 0x1f0] = a4\n 11339: a4 = u64 [s1 + 0x158]\n 11343: u64 [a5 + 0x1e8] = a4\n 11347: a4 = u64 [s1 + 0x1a0]\n 11351: u64 [a5 + 0x220] = a4\n 11355: a4 = u64 [s1 + 0x1a8]\n 11359: u64 [a5 + 0x218] = a4\n 11363: a4 = u64 [s1 + 0x1b0]\n 11367: u64 [a5 + 0x210] = a4\n 11371: a4 = u64 [s1 + 0x1b8]\n 11375: u64 [a5 + 0x208] = a4\n 11379: a4 = a5 + 0x200\n 11383: u64 [a4 + 0x40] = a3\n 11386: u64 [a4 + 0x38] = a2\n 11389: u64 [a4 + 0x30] = a1\n 11392: u64 [a4 + 0x28] = a0\n 11395: a0 = u64 [s1 + 0x190]\n 11399: u64 [a4 + 0x60] = a0\n 11402: a0 = u64 [s1 + 0x188]\n 11406: u64 [a4 + 0x58] = a0\n 11409: a0 = u64 [s1 + 0x180]\n 11413: u64 [a4 + 0x50] = a0\n 11416: a0 = s1 + 0x7ff\n 11420: a0 = a0 + 0x3a1\n 11424: a1 = s1 + 0x7ff\n 11428: a1 = a1 + 0x381\n 11432: a2 = s1 + 0x7ff\n 11436: a2 = a2 + 0x361\n 11440: a3 = s1 + 0x7ff\n 11444: a3 = a3 + 0x341\n 11448: a4 = s1 + 0x7ff\n 11452: a4 = a4 + 0x321\n 11456: t0 = u64 [s1 + 0x198]\n 11460: u64 [a5 + 0x248] = t0\n 11464: ra = 378, jump @1192\n      : @396 [@dyn 189] (gas: 14)\n 11470: a4 = s1 + 0x100\n 11474: a1 = u64 [a4 + 0x80]\n 11478: a2 = a1\n 11480: a0 = u64 [a4 + 0x90]\n 11484: a0 = a0 | a1\n 11487: a3 = u64 [a4 + 0x88]\n 11491: a1 = u64 [a4 + 0x98]\n 11495: a1 = a1 | a3\n 11498: a1 = a1 | a0\n 11501: a1 = a1 >> 0x20\n 11504: a0 = a0 | a3\n 11507: a0 = a0 << 0x20\n 11510: a0 = a0 | a1\n 11513: jump @398 if a0 == 0\n      : @397 (gas: 1)\n 11516: jump @912\n      : @398 (gas: 36)\n 11519: t0 = a3\n 11521: a1 = s1 + 0x7ff\n 11525: a1 = a1 + 0x139\n 11529: a4 = a1 + 0x200\n 11533: a0 = u64 [a4 + 0x70]\n 11536: a3 = u64 [a4 + 0x80]\n 11540: u64 [s1 + 0x1b8] = a3\n 11544: t1 = u64 [a1 + 0x268]\n 11548: a3 = u64 [a4 + 0x78]\n 11551: ra = a0 ^ a2\n 11554: a5 = a0 <u a2\n 11557: t2 = u64 [s1 + 0x198]\n 11561: a1 = t1 <u t2\n 11564: a5 = a1 if ra == 0\n 11567: a4 = a3 - t0\n 11570: ra = a4 - a5\n 11573: a4 = a4 <u a5\n 11576: u64 [s1 + 0x1b0] = a4\n 11580: a3 = a3 <u t0\n 11583: a5 = u64 [s1 + 0x190]\n 11587: a4 = u64 [s1 + 0x1b8]\n 11591: a5 = a4 - a5\n 11594: a5 = a5 - a3\n 11597: a3 = u64 [s1 + 0x1b0]\n 11601: a5 = a5 - a3\n 11604: a0 = a0 - a2\n 11607: a0 = a0 - a1\n 11610: a1 = t1 - t2\n 11613: a0 = a0 | a5\n 11616: a3 = a1 | ra\n 11619: a3 = a3 | a0\n 11622: a0 = a0 | ra\n 11625: a3 = a3 >> 0x20\n 11628: a0 = a0 << 0x20\n 11631: a0 = a0 | a3\n 11634: jump @400 if a0 == 0\n      : @399 (gas: 1)\n 11637: jump @912\n      : @400 (gas: 26)\n 11640: a0 = u64 [0x200d8]\n 11645: a2 = u64 [0x200e0]\n 11650: a4 = s1 + 0x7ff\n 11654: a4 = a4 + 0x139\n 11658: a5 = a4 + 0x100\n 11662: u64 [a5 + 0xe0] = a0\n 11666: u64 [a5 + 0xd8] = a2\n 11670: a0 = u64 [0x200e8]\n 11675: a2 = u64 [0x200f0]\n 11680: a4 = s1 + 0x100\n 11684: a3 = u64 [a4 + 0x60]\n 11687: u64 [a5 + 0xa8] = a3\n 11691: a3 = u64 [a4 + 0x68]\n 11694: u64 [a5 + 0xb0] = a3\n 11698: u64 [a5 + 0xd0] = a0\n 11702: u64 [a5 + 0xc8] = a2\n 11706: a0 = u64 [a4 + 0x70]\n 11709: u64 [a5 + 0xb8] = a0\n 11713: a2 = s1 + 0x7ff\n 11717: a2 = a2 + 0x301\n 11721: a3 = s1 + 0x7ff\n 11725: a3 = a3 + 0x2e1\n 11729: a0 = u64 [a4 + 0x78]\n 11732: u64 [a5 + 0xc0] = a0\n 11736: a0 = u64 [a4 + 0x98]\n 11740: ra = 380, jump @10\n      : @401 [@dyn 190] (gas: 4)\n 11746: a0 = s1 + 0x7ff\n 11750: a0 = a0 + 0x2c1\n 11754: a1 = 0x40\n 11757: ra = 382, jump @2\n      : @402 [@dyn 191] (gas: 8)\n 11763: a3 = s1 + 0x7ff\n 11767: a3 = a3 + 0x139\n 11771: a5 = a3 + 0x100\n 11775: a0 = u64 [a5 + 0xa0]\n 11779: a1 = u64 [a5 + 0x98]\n 11783: a2 = u64 [a5 + 0x90]\n 11787: a4 = u64 [a5 + 0x88]\n 11791: t0 = 384, jump @1449\n      : @403 [@dyn 192] (gas: 1)\n 11797: jump @405 if a0 == 0\n      : @404 (gas: 1)\n 11800: jump @912\n      : @405 (gas: 18)\n 11803: a3 = a4\n 11805: a0 = s1 + 0x7ff\n 11809: a0 = a0 + 0x139\n 11813: a5 = s1 + 0x100\n 11817: a1 = u64 [a5 + 0x60]\n 11820: u64 [a0 + 0x168] = a1\n 11824: a1 = u64 [a5 + 0x68]\n 11827: u64 [a0 + 0x170] = a1\n 11831: a1 = u64 [a5 + 0x70]\n 11834: u64 [a0 + 0x178] = a1\n 11838: a1 = s1 + 0x7ff\n 11842: a1 = a1 + 0x2a1\n 11846: a2 = u64 [a5 + 0x78]\n 11849: u64 [a0 + 0x180] = a2\n 11853: a0 = a4\n 11855: u64 [a5 + 0xb8] = a3\n 11859: ra = 0x218\n 11863: jump @4\n      : @406 (gas: 11)\n 11866: u64 [a3 + 1024] = 0\n 11870: u64 [a3 + 1016] = 0\n 11874: u64 [a3 + 1008] = 0\n 11878: u64 [a3 + 1000] = 0\n 11882: a0 = s1 + 0x3000\n 11886: i32 a0 = a0 + 0x540\n 11890: ra = 0x182\n 11894: ecalli 14 // 'value_transferred'\n 11896: a0 = 0x3158\n 11900: t0 = 0x184\n 11904: jump @1467\n      : @407 [@dyn 193] (gas: 2)\n 11908: a0 = 0x3158\n 11912: t0 = 388, jump @1467\n      : @408 [@dyn 194] (gas: 1)\n 11919: jump @410 if a0 == 0\n      : @409 (gas: 1)\n 11922: jump @1060\n      : @410 (gas: 3)\n 11925: a0 = u64 [s1 + 0x1b8]\n 11929: a0 = i32 [a0]\n 11931: jump @412 if a0 >u 3\n      : @411 (gas: 1)\n 11935: jump @1061\n      : @412 (gas: 4)\n 11938: a0 = s1 + 0x7ff\n 11942: a0 = a0 + 0x181\n 11946: a1 = 0x40\n 11949: ra = 390, jump @2\n      : @413 [@dyn 195] (gas: 7)\n 11955: a3 = s1 + 0x7ff\n 11959: a3 = a3 + 0x139\n 11963: a4 = u64 [a3 + 0x60]\n 11966: a1 = u64 [a3 + 0x58]\n 11969: a2 = u64 [a3 + 0x50]\n 11972: a0 = u64 [a3 + 0x48]\n 11975: t0 = 392, jump @1438\n      : @414 [@dyn 196] (gas: 1)\n 11981: jump @416 if a1 == 0\n      : @415 (gas: 1)\n 11984: jump @912\n      : @416 (gas: 9)\n 11987: u64 [a3 + 64] = 0\n 11990: u64 [a3 + 56] = 0\n 11993: u64 [a3 + 40] = 0xa\n 11997: a1 = s1 + 0x7ff\n 12001: a1 = a1 + 0x161\n 12005: u64 [a3 + 48] = 0\n 12008: u64 [s1 + 0x1b8] = a0\n 12012: ra = 0x218\n 12016: jump @4\n      : @417 (gas: 9)\n 12019: u64 [a3 + 576] = 0\n 12023: u64 [a3 + 568] = 0\n 12027: u64 [a3 + 560] = 0\n 12031: u64 [a3 + 552] = 0\n 12035: a0 = s1 + 0x3000\n 12039: i32 a0 = a0 + 0x380\n 12043: ra = 0x18a\n 12047: ecalli 14 // 'value_transferred'\n 12049: fallthrough\n      : @418 [@dyn 197] (gas: 10)\n 12050: a3 = s1 + 0x3158\n 12054: a4 = a3 + 0x200\n 12058: a0 = u64 [a4 + 0x38]\n 12061: a1 = u64 [a4 + 0x40]\n 12064: a2 = u64 [a4 + 0x30]\n 12067: a3 = u64 [a4 + 0x28]\n 12070: a1 = a1 | a2\n 12073: a0 = a0 | a3\n 12076: a0 = a0 | a1\n 12079: jump @420 if a0 == 0\n      : @419 (gas: 1)\n 12082: jump @1062\n      : @420 (gas: 1)\n 12085: t0 = 396, jump @1471\n      : @421 [@dyn 198] (gas: 1)\n 12092: jump @423 if a1 <u a0\n      : @422 (gas: 1)\n 12095: jump @1063\n      : @423 (gas: 17)\n 12098: a0 = s1 + 0x3000\n 12102: i32 a0 = a0 + 0x3a0\n 12106: a1 = 0x4\n 12109: ecalli 2 // 'call_data_load'\n 12111: a3 = s1 + 0x3158\n 12115: a4 = a3 + 0x200\n 12119: a0 = u64 [a4 + 0x48]\n 12122: a1 = u64 [a4 + 0x50]\n 12125: a2 = u64 [a4 + 0x58]\n 12128: a3 = u64 [a4 + 0x60]\n 12131: u64 [s1 + 0x678] = a3\n 12135: u64 [s1 + 0x670] = a2\n 12139: u64 [s1 + 0x668] = a1\n 12143: a1 = s1 + 0x660\n 12147: u64 [s1 + 0x660] = a0\n 12151: a0 = 0\n 12153: ra = 398, jump @4\n      : @424 [@dyn 199] (gas: 7)\n 12159: u64 [s1 + 1624] = 0\n 12163: u64 [s1 + 1616] = 0\n 12167: u64 [s1 + 1600] = 0x4\n 12172: a0 = 0x20\n 12175: a1 = s1 + 0x640\n 12179: u64 [s1 + 1608] = 0\n 12183: ra = 400, jump @4\n      : @425 [@dyn 200] (gas: 7)\n 12189: a0 = sp + 0xffffffffffffffe0\n 12192: a0 = a0 & 0xffffffffffffffe0\n 12195: u64 [s1 + 0x1b8] = a0\n 12199: sp = a0\n 12201: a2 = 0x20154\n 12206: a0 = i32 [0x20154]\n 12211: jump @427 if a0 >u 63\n      : @426 (gas: 2)\n 12215: u32 [0x20154] = 0x40\n 12221: fallthrough\n      : @427 (gas: 32)\n 12222: u64 [s1 + 0x1a8] = a2\n 12226: a0 = sp + 0xffffffffffffffe0\n 12229: a2 = a0 & 0xffffffffffffffe0\n 12232: u64 [s1 + 0x1b0] = a2\n 12236: sp = a2\n 12238: a0 = 0x20160\n 12243: i32 a0 = a0 + 0\n 12245: i32 a2 = a2 + 0\n 12247: a1 = 0x40\n 12250: u64 [s1 + 0x1a0] = a0\n 12254: ecalli 7 // 'hash_keccak_256'\n 12256: a3 = u64 [s1 + 0x1b0]\n 12260: a0 = u64 [a3 + 0x18]\n 12263: a1 = u64 [a3 + 0x10]\n 12266: a2 = u64 [a3 + 0x8]\n 12269: a3 = u64 [a3]\n 12271: a0 = reverse a0\n 12273: a1 = reverse a1\n 12275: a2 = reverse a2\n 12277: a3 = reverse a3\n 12279: a4 = u64 [s1 + 0x1b8]\n 12283: u64 [s1 + 0x188] = a3\n 12287: u64 [a4 + 0x18] = a3\n 12290: u64 [s1 + 0x190] = a2\n 12294: u64 [a4 + 0x10] = a2\n 12297: u64 [s1 + 0x198] = a1\n 12301: u64 [a4 + 0x8] = a1\n 12304: u64 [s1 + 0x1b0] = a0\n 12308: u64 [a4] = a0\n 12310: a0 = s1 + 0x620\n 12314: a1 = 0x40\n 12317: ra = 402, jump @2\n      : @428 [@dyn 201] (gas: 12)\n 12323: a1 = s1 + 0x600\n 12327: a0 = u64 [a1 + 0x38]\n 12330: u64 [s1 + 0xf0] = a0\n 12334: a0 = u64 [a1 + 0x30]\n 12337: u64 [s1 + 0xe8] = a0\n 12341: a0 = u64 [a1 + 0x28]\n 12344: u64 [s1 + 0xe0] = a0\n 12348: a0 = u64 [a1 + 0x20]\n 12351: u64 [s1 + 0xf8] = a0\n 12355: a0 = s1 + 0x600\n 12359: a1 = u64 [s1 + 0x1b8]\n 12363: ra = 404, jump @6\n      : @429 [@dyn 202] (gas: 6)\n 12369: a4 = u64 [s1 + 0xe0]\n 12373: a3 = u64 [s1 + 0xe8]\n 12377: a0 = u64 [s1 + 0xf8]\n 12381: a2 = u64 [s1 + 0xf0]\n 12385: a2 = a2 | a4\n 12388: t0 = 406, jump @1461\n      : @430 [@dyn 203] (gas: 1)\n 12394: jump @432 if a1 == 0\n      : @431 (gas: 1)\n 12397: jump @912\n      : @432 (gas: 15)\n 12400: t0 = u64 [s1 + 0x618]\n 12404: a3 = s1 + 0x600\n 12408: a1 = u64 [a3 + 0x10]\n 12411: a5 = u64 [a3 + 0x8]\n 12414: a2 = u64 [a3]\n 12416: u64 [s1 + 0x128] = a2\n 12420: u64 [s1 + 0x5e0] = a2\n 12424: u64 [s1 + 0x130] = a5\n 12428: u64 [s1 + 0x5e8] = a5\n 12432: u64 [s1 + 0x138] = a1\n 12436: u64 [s1 + 0x5f0] = a1\n 12440: a1 = s1 + 0x5e0\n 12444: u64 [s1 + 0x140] = t0\n 12448: u64 [s1 + 0x5f8] = t0\n 12452: ra = 408, jump @4\n      : @433 [@dyn 204] (gas: 26)\n 12458: a1 = u64 [s1 + 0xf8]\n 12462: a0 = a1 + 0x20\n 12465: u64 [s1 + 0x108] = a0\n 12469: a0 = a0 <u a1\n 12472: a2 = u64 [s1 + 0xe0]\n 12476: a1 = a2 + a0\n 12479: u64 [s1 + 0x118] = a1\n 12483: a1 = a1 <u a2\n 12486: a1 = a0 if a0 == 0\n 12489: a0 = u64 [s1 + 0xe8]\n 12493: a1 = a1 + a0\n 12496: u64 [s1 + 0x100] = a1\n 12500: a0 = a1 <u a0\n 12503: u64 [s1 + 0x1b8] = a0\n 12507: a0 = u64 [s1 + 0x188]\n 12511: a2 = s1 + 0x500\n 12515: u64 [a2 + 0xd8] = a0\n 12519: a0 = u64 [s1 + 0x190]\n 12523: u64 [a2 + 0xd0] = a0\n 12527: a0 = u64 [s1 + 0x198]\n 12531: u64 [a2 + 0xc8] = a0\n 12535: a1 = s1 + 0x5c0\n 12539: a0 = u64 [s1 + 0x1b0]\n 12543: u64 [a2 + 0xc0] = a0\n 12547: a0 = 0\n 12549: ra = 410, jump @4\n      : @434 [@dyn 205] (gas: 7)\n 12555: a0 = sp + 0xffffffffffffffe0\n 12558: a0 = a0 & 0xffffffffffffffe0\n 12561: u64 [s1 + 0x120] = a0\n 12565: sp = a0\n 12567: a2 = u64 [s1 + 0x1a8]\n 12571: a0 = i32 [a2]\n 12573: jump @436 if a0 >u 31\n      : @435 (gas: 2)\n 12577: u32 [a2 + 0] = 0x20\n 12580: fallthrough\n      : @436 (gas: 7)\n 12581: a0 = u64 [s1 + 0xf0]\n 12585: a1 = u64 [s1 + 0x1b8]\n 12589: a0 = a0 + a1\n 12592: u64 [s1 + 0x110] = a0\n 12596: a0 = 0xffffffff\n 12606: u64 [s1 + 0x148] = a0\n 12610: t0 = 412, jump @1445\n      : @437 [@dyn 206] (gas: 34)\n 12616: a0 = u64 [s1 + 0x1a0]\n 12620: ecalli 7 // 'hash_keccak_256'\n 12622: t0 = 0\n 12624: t1 = 0\n 12626: ra = 0\n 12628: u64 [s1 + 408] = 0\n 12632: a3 = u64 [s1 + 0x1b8]\n 12636: a0 = u64 [a3 + 0x18]\n 12639: a1 = u64 [a3 + 0x10]\n 12642: a2 = u64 [a3 + 0x8]\n 12645: a5 = u64 [a3]\n 12647: t2 = reverse a0\n 12649: a4 = reverse a1\n 12651: a3 = reverse a2\n 12653: a2 = reverse a5\n 12655: a1 = u64 [s1 + 0x120]\n 12659: a0 = a2\n 12661: u64 [a1 + 0x18] = a2\n 12664: u64 [s1 + 0x178] = a3\n 12668: u64 [a1 + 0x10] = a3\n 12671: a5 = a4\n 12673: u64 [a1 + 0x8] = a4\n 12676: u64 [s1 + 0x180] = t2\n 12680: u64 [a1] = t2\n 12682: a3 = s1 + 0x100\n 12686: a2 = u64 [a3 + 0x8]\n 12689: u64 [a3 + 0xb8] = a2\n 12693: a2 = u64 [a3 + 0x18]\n 12696: u64 [a3 + 0xa8] = a2\n 12700: a2 = u64 [a3]\n 12702: u64 [a3 + 0xa0] = a2\n 12706: a2 = u64 [a3 + 0x10]\n 12709: u64 [a3 + 0xb0] = a2\n 12713: fallthrough\n      : @438 (gas: 20)\n 12714: a4 = s1 + 0x100\n 12718: u64 [a4 + 0x88] = a0\n 12722: u64 [a4 + 0x90] = a5\n 12726: a0 = u64 [a4 + 0x28]\n 12729: a0 = t0 <u a0\n 12732: a2 = u64 [a4 + 0x30]\n 12735: a3 = t1 ^ a2\n 12738: a2 = t1 <u a2\n 12741: a2 = a0 if a3 == 0\n 12744: a0 = u64 [a4 + 0x38]\n 12747: t2 = ra <u a0\n 12750: a3 = u64 [a4 + 0x40]\n 12753: a5 = u64 [a4 + 0x98]\n 12757: a4 = a5 ^ a3\n 12760: a3 = a5 <u a3\n 12763: a3 = t2 if a4 == 0\n 12766: a0 = ra ^ a0\n 12769: a0 = a0 | a4\n 12772: a3 = a2 if a0 == 0\n 12775: jump @440 if a3 != 0\n      : @439 (gas: 1)\n 12778: jump @831\n      : @440 (gas: 5)\n 12781: u64 [s1 + 0x160] = ra\n 12785: u64 [s1 + 0x168] = t1\n 12789: u64 [s1 + 0x170] = t0\n 12793: a0 = s1 + 0x4a0\n 12797: ra = 414, jump @6\n      : @441 [@dyn 207] (gas: 13)\n 12803: a1 = s1 + 0x100\n 12807: a0 = u64 [a1 + 0xb8]\n 12811: a4 = u64 [a1 + 0xa0]\n 12815: a2 = a0 | a4\n 12818: a3 = u64 [a1 + 0xb0]\n 12822: a5 = u64 [a1 + 0xa8]\n 12826: a1 = a5 | a3\n 12829: a2 = a2 | a1\n 12832: a2 = a2 >> 0x20\n 12835: a1 = a1 | a4\n 12838: a1 = a1 << 0x20\n 12841: a1 = a1 | a2\n 12844: jump @443 if a1 == 0\n      : @442 (gas: 1)\n 12847: jump @912\n      : @443 (gas: 18)\n 12850: u64 [s1 + 0x1a0] = a4\n 12854: a4 = u64 [s1 + 0x4b0]\n 12858: a1 = u64 [s1 + 0x4a8]\n 12862: a2 = u64 [s1 + 0x4a0]\n 12866: u64 [s1 + 0x1b0] = a3\n 12870: a3 = u64 [s1 + 0x148]\n 12874: a4 = a4 & a3\n 12877: a1 = a1 & 0xffffffffffffffff\n 12880: a2 = a2 & 0xffffffffffffffff\n 12883: u64 [s1 + 1176] = 0\n 12887: a3 = s1 + 0x400\n 12891: u64 [a3 + 0x80] = a2\n 12895: u64 [a3 + 0x88] = a1\n 12899: a1 = s1 + 0x480\n 12903: u64 [a3 + 0x90] = a4\n 12907: u64 [s1 + 0x1b8] = a0\n 12911: u64 [s1 + 0x1a8] = a5\n 12915: ra = 416, jump @4\n      : @444 [@dyn 208] (gas: 57)\n 12921: a1 = u64 [s1 + 0x1b8]\n 12925: a0 = a1 + 0x20\n 12928: u64 [s1 + 0x158] = a0\n 12932: a2 = a0 <u a1\n 12935: a1 = u64 [s1 + 0x1a8]\n 12939: a0 = a1 + a2\n 12942: u64 [s1 + 0x150] = a0\n 12946: a3 = a0 <u a1\n 12949: a3 = a2 if a2 == 0\n 12952: a0 = u64 [s1 + 0x1a0]\n 12956: ra = a0 + a3\n 12959: a3 = ra <u a0\n 12962: a0 = u64 [s1 + 0x1b0]\n 12966: a0 = a0 + a3\n 12969: u64 [s1 + 0x1b0] = a0\n 12973: t2 = u64 [s1 + 0x180]\n 12977: t2 = t2 + 0x1\n 12980: u64 [s1 + 0x180] = t2\n 12984: a3 = t2 <u 0x1\n 12987: a0 = u64 [s1 + 0x190]\n 12991: a0 = a0 + a3\n 12994: a3 = t2 | a0\n 12997: a3 = a3 <u 0x1\n 13000: a1 = u64 [s1 + 0x178]\n 13004: a3 = a3 + a1\n 13007: a4 = a3 <u a1\n 13010: a2 = u64 [s1 + 0x188]\n 13014: a2 = a2 + a4\n 13017: t0 = u64 [s1 + 0x170]\n 13021: t0 = t0 + 0x1\n 13024: a4 = t0 <u 0x1\n 13027: t1 = u64 [s1 + 0x168]\n 13031: t1 = t1 + a4\n 13034: a4 = t0 | t1\n 13037: a4 = a4 <u 0x1\n 13040: a5 = u64 [s1 + 0x160]\n 13044: a4 = a4 + a5\n 13047: a5 = a4 <u a5\n 13050: a1 = u64 [s1 + 0x198]\n 13054: a1 = a1 + a5\n 13057: u64 [s1 + 0x198] = a1\n 13061: a5 = a0\n 13063: a1 = u64 [s1 + 0x120]\n 13067: u64 [a1 + 0x8] = a0\n 13070: u64 [a1] = t2\n 13072: u64 [a1 + 0x10] = a3\n 13075: a0 = a2\n 13077: u64 [a1 + 0x18] = a2\n 13080: u64 [s1 + 0x178] = a3\n 13084: a3 = s1 + 0x100\n 13088: a2 = u64 [a3 + 0x58]\n 13091: u64 [a3 + 0xb8] = a2\n 13095: a2 = u64 [a3 + 0x50]\n 13098: u64 [a3 + 0xa8] = a2\n 13102: u64 [s1 + 0x1a0] = ra\n 13106: ra = a4\n 13108: jump @438\n      : @445 (gas: 8)\n 13111: u64 [a3 + 640] = 0\n 13115: u64 [a3 + 632] = 0\n 13119: u64 [a3 + 624] = 0\n 13123: u64 [a3 + 616] = 0\n 13127: a0 = s1 + 0x3000\n 13131: i32 a0 = a0 + 0x3c0\n 13135: ecalli 14 // 'value_transferred'\n 13137: fallthrough\n      : @446 (gas: 10)\n 13138: a4 = s1 + 0x3158\n 13142: a5 = a4 + 0x200\n 13146: a0 = u64 [a5 + 0x78]\n 13149: a1 = u64 [a5 + 0x80]\n 13153: a2 = u64 [a5 + 0x70]\n 13156: a3 = u64 [a5 + 0x68]\n 13159: a1 = a1 | a2\n 13162: a0 = a0 | a3\n 13165: a0 = a0 | a1\n 13168: jump @448 if a0 == 0\n      : @447 (gas: 1)\n 13171: jump @1064\n      : @448 (gas: 3)\n 13174: a0 = u64 [s1 + 0x1b8]\n 13178: a0 = i32 [a0]\n 13180: jump @450 if a0 >u 3\n      : @449 (gas: 1)\n 13184: jump @1065\n      : @450 (gas: 8)\n 13187: u64 [a4 + 672] = 0\n 13191: u64 [a4 + 664] = 0\n 13195: u64 [a4 + 656] = 0\n 13199: u64 [a4 + 648] = 0\n 13203: a0 = s1 + 0x7ff\n 13207: a0 = a0 + 0x141\n 13211: a1 = s1 + 0x33e0\n 13215: ra = 418, jump @6\n      : @451 [@dyn 209] (gas: 16)\n 13221: a0 = s1 + 0x7ff\n 13225: a0 = a0 + 0x139\n 13229: a1 = u64 [a0 + 0x10]\n 13232: u64 [s1 + 0x1b8] = a1\n 13236: a1 = u64 [a0 + 0x8]\n 13239: u64 [s1 + 0x1b0] = a1\n 13243: a0 = u32 [a0 + 0x18]\n 13246: u64 [s1 + 0x1a8] = a0\n 13250: a0 = 0x30160\n 13255: u64 [s1 + 0x160] = a0\n 13259: i32 a0 = a0 + 0\n 13261: ra = 0x1a4\n 13265: ecalli 4 // 'caller'\n 13267: a2 = u64 [s1 + 0x160]\n 13271: t0 = 0x1a6\n 13275: jump @1423\n      : @452 [@dyn 210] (gas: 2)\n 13278: a2 = u64 [s1 + 0x160]\n 13282: t0 = 422, jump @1423\n      : @453 [@dyn 211] (gas: 20)\n 13288: a2 = u64 [s1 + 0x1a8]\n 13292: a1 = a1 ^ a2\n 13295: a2 = u64 [s1 + 0x1b0]\n 13299: a0 = a0 ^ a2\n 13302: a0 = a0 | a1\n 13305: a1 = u64 [s1 + 0x1b8]\n 13309: a1 = a1 ^ a3\n 13312: a0 = a0 | a1\n 13315: a1 = a0 <u 0x1\n 13318: a0 = s1 + 0x7ff\n 13322: a0 = a0 + 0x139\n 13326: u64 [a0 + 0] = 0\n 13328: u64 [a0 + 4294967288] = 0\n 13331: a0 = s1 + 0x1000\n 13335: u64 [a0 + 4294965544] = 0\n 13339: a0 = s1 + 0x7ff\n 13343: a0 = a0 + 0x121\n 13347: a2 = s1 + 0x1000\n 13351: u64 [a2 + 0xfffffffffffff920] = a1\n 13355: ra = 424, jump @1245\n      : @454 [@dyn 212] (gas: 11)\n 13361: u64 [s1 + 384] = 0\n 13365: u64 [s1 + 376] = 0\n 13369: u64 [s1 + 368] = 0\n 13373: u64 [s1 + 360] = 0\n 13377: u64 [s1 + 424] = 0\n 13381: u64 [s1 + 432] = 0\n 13385: u64 [s1 + 440] = 0\n 13389: a0 = 0x20154\n 13394: u64 [s1 + 0x198] = a0\n 13398: a0 = 0x1\n 13401: fallthrough\n      : @455 (gas: 10)\n 13402: u64 [s1 + 0x1a0] = a0\n 13406: a0 = s1 + 0x3158\n 13410: u64 [a0 + 704] = 0\n 13414: u64 [a0 + 696] = 0\n 13418: u64 [a0 + 688] = 0\n 13422: u64 [a0 + 680] = 0x1\n 13427: a0 = s1 + 0x7ff\n 13431: a0 = a0 + 0x101\n 13435: a1 = s1 + 0x3400\n 13439: ra = 426, jump @6\n      : @456 [@dyn 213] (gas: 26)\n 13445: a0 = s1 + 0x1000\n 13449: a0 = u64 [a0 + 0xfffffffffffff918]\n 13453: a1 = s1 + 0x1000\n 13457: a1 = u64 [a1 + 0xfffffffffffff900]\n 13461: u64 [s1 + 0x190] = a1\n 13465: a1 = s1 + 0x1000\n 13469: t2 = u64 [a1 + 0xfffffffffffff910]\n 13473: a1 = s1 + 0x1000\n 13477: a1 = u64 [a1 + 0xfffffffffffff908]\n 13481: a4 = u64 [s1 + 0x1b8]\n 13485: ra = a4 ^ a0\n 13488: a0 = a0 <u a4\n 13491: a2 = u64 [s1 + 0x1b0]\n 13495: a5 = t2 <u a2\n 13498: a5 = a0 if ra != 0\n 13501: a3 = u64 [s1 + 0x1a8]\n 13505: t1 = a3 ^ a1\n 13508: a0 = a1 <u a3\n 13511: t0 = u64 [s1 + 0x1a0]\n 13515: a1 = u64 [s1 + 0x190]\n 13519: a1 = a1 <u t0\n 13522: a1 = a0 if t1 != 0\n 13525: a0 = a2 ^ t2\n 13528: a0 = a0 | ra\n 13531: a1 = a5 if a0 != 0\n 13534: jump @556 if a1 != 0\n      : @457 (gas: 12)\n 13538: a1 = s1 + 0x1000\n 13542: u64 [a1 + 0xfffffffffffff8e0] = t0\n 13546: a1 = s1 + 0x1000\n 13550: u64 [a1 + 0xfffffffffffff8e8] = a3\n 13554: a1 = s1 + 0x1000\n 13558: u64 [a1 + 0xfffffffffffff8f0] = a2\n 13562: a1 = s1 + 0x7ff\n 13566: a1 = a1 + 0xe1\n 13570: a2 = s1 + 0x1000\n 13574: u64 [a2 + 0xfffffffffffff8f8] = a4\n 13578: a0 = 0\n 13580: ra = 428, jump @4\n      : @458 [@dyn 214] (gas: 12)\n 13586: a0 = s1 + 0x1000\n 13590: u64 [a0 + 4294965464] = 0\n 13594: a0 = s1 + 0x1000\n 13598: u64 [a0 + 4294965456] = 0\n 13602: a0 = s1 + 0x1000\n 13606: u64 [a0 + 4294965448] = 0\n 13610: a0 = 0x20\n 13613: a1 = s1 + 0x7ff\n 13617: a1 = a1 + 0xc1\n 13621: a3 = s1 + 0x1000\n 13625: u64 [a3 + 4294965440] = 0x2\n 13630: ra = 430, jump @4\n      : @459 [@dyn 215] (gas: 3)\n 13636: a1 = u64 [s1 + 0x198]\n 13640: a0 = i32 [a1]\n 13642: jump @461 if a0 >u 63\n      : @460 (gas: 2)\n 13646: u32 [a1 + 0] = 0x40\n 13649: fallthrough\n      : @461 (gas: 12)\n 13650: a0 = sp + 0xffffffffffffffe0\n 13653: a2 = a0 & 0xffffffffffffffe0\n 13656: u64 [s1 + 0x188] = a2\n 13660: sp = a2\n 13662: a0 = 0x20160\n 13667: i32 a0 = a0 + 0\n 13669: i32 a2 = a2 + 0\n 13671: a1 = 0x40\n 13674: u64 [s1 + 0x190] = a0\n 13678: ra = 0x1b0\n 13682: ecalli 7 // 'hash_keccak_256'\n 13684: fallthrough\n      : @462 [@dyn 216] (gas: 6)\n 13685: a3 = u64 [s1 + 0x188]\n 13689: a0 = u64 [a3]\n 13691: a1 = u64 [a3 + 0x8]\n 13694: a2 = u64 [a3 + 0x10]\n 13697: a3 = u64 [a3 + 0x18]\n 13700: t0 = 434, jump @1447\n      : @463 [@dyn 217] (gas: 18)\n 13706: a4 = a3 + 0x8\n 13709: a3 = a4 <u a3\n 13712: a5 = a2 + a3\n 13715: a2 = a5 <u a2\n 13718: a2 = a3 if a3 == 0\n 13721: a2 = a2 + a1\n 13724: a1 = a2 <u a1\n 13727: a0 = a0 + a1\n 13730: a1 = s1 + 0x3158\n 13734: a3 = a1 + 0x200\n 13738: u64 [a3 + 0xc8] = a4\n 13742: u64 [a3 + 0xd0] = a5\n 13746: u64 [a3 + 0xd8] = a2\n 13750: u64 [a3 + 0xe0] = a0\n 13754: a0 = s1 + 0x7ff\n 13758: a0 = a0 + 0xa1\n 13762: a1 = s1 + 0x3420\n 13766: ra = 436, jump @6\n      : @464 [@dyn 218] (gas: 3)\n 13772: a0 = s1 + 0x1000\n 13776: a0 = u8 [a0 + 0xfffffffffffff8a0]\n 13780: jump @482 if a0 == 0\n      : @465 (gas: 16)\n 13784: a0 = u64 [s1 + 0x1a0]\n 13788: a1 = s1 + 0x1000\n 13792: u64 [a1 + 0xfffffffffffff880] = a0\n 13796: a0 = u64 [s1 + 0x1a8]\n 13800: a1 = s1 + 0x1000\n 13804: u64 [a1 + 0xfffffffffffff888] = a0\n 13808: a0 = u64 [s1 + 0x1b0]\n 13812: a1 = s1 + 0x1000\n 13816: u64 [a1 + 0xfffffffffffff890] = a0\n 13820: a1 = s1 + 0x7ff\n 13824: a1 = a1 + 0x81\n 13828: a0 = u64 [s1 + 0x1b8]\n 13832: a2 = s1 + 0x1000\n 13836: u64 [a2 + 0xfffffffffffff898] = a0\n 13840: a0 = 0\n 13842: ra = 438, jump @4\n      : @466 [@dyn 219] (gas: 12)\n 13848: a0 = s1 + 0x1000\n 13852: u64 [a0 + 4294965368] = 0\n 13856: a0 = s1 + 0x1000\n 13860: u64 [a0 + 4294965360] = 0\n 13864: a0 = s1 + 0x1000\n 13868: u64 [a0 + 4294965352] = 0\n 13872: a0 = 0x20\n 13875: a1 = s1 + 0x7ff\n 13879: a1 = a1 + 0x61\n 13882: a3 = s1 + 0x1000\n 13886: u64 [a3 + 4294965344] = 0x2\n 13891: ra = 440, jump @4\n      : @467 [@dyn 220] (gas: 3)\n 13897: a1 = u64 [s1 + 0x198]\n 13901: a0 = i32 [a1]\n 13903: jump @469 if a0 >u 63\n      : @468 (gas: 3)\n 13907: u32 [a1 + 0] = 0x40\n 13910: t0 = 0x1ba\n 13914: jump @1466\n      : @469 (gas: 1)\n 13917: t0 = 442, jump @1466\n      : @470 [@dyn 221] (gas: 4)\n 13923: ra = 0x1bc\n 13927: ecalli 7 // 'hash_keccak_256'\n 13929: t0 = 0x1be\n 13933: jump @1422\n      : @471 [@dyn 222] (gas: 1)\n 13936: t0 = 446, jump @1422\n      : @472 [@dyn 223] (gas: 9)\n 13942: a3 = a1 + 0x200\n 13946: u64 [a3 + 0xe8] = a4\n 13950: u64 [a3 + 0xf0] = a5\n 13954: u64 [a3 + 0xf8] = a2\n 13958: u64 [a1 + 0x300] = a0\n 13962: a0 = s1 + 0x7ff\n 13966: a0 = a0 + 0x41\n 13969: a1 = s1 + 0x3440\n 13973: ra = 448, jump @6\n      : @473 [@dyn 224] (gas: 30)\n 13979: a0 = s1 + 0x1000\n 13983: a0 = u64 [a0 + 0xfffffffffffff840]\n 13987: a1 = s1 + 0x1000\n 13991: a1 = u64 [a1 + 0xfffffffffffff848]\n 13995: a2 = s1 + 0x1000\n 13999: a2 = u64 [a2 + 0xfffffffffffff850]\n 14003: a3 = s1 + 0x1000\n 14007: a3 = u64 [a3 + 0xfffffffffffff858]\n 14011: u64 [s1 + 0x7f8] = a3\n 14015: u64 [s1 + 0x7f0] = a2\n 14019: u64 [s1 + 0x7e8] = a1\n 14023: u64 [s1 + 0x7e0] = a0\n 14027: a0 = u64 [s1 + 0x168]\n 14031: a1 = s1 + 0x1000\n 14035: u64 [a1 + 0xfffffffffffff818] = a0\n 14039: a0 = u64 [s1 + 0x170]\n 14043: a1 = s1 + 0x1000\n 14047: u64 [a1 + 0xfffffffffffff810] = a0\n 14051: a0 = u64 [s1 + 0x178]\n 14055: a1 = s1 + 0x1000\n 14059: u64 [a1 + 0xfffffffffffff808] = a0\n 14063: a0 = s1 + 0x7ff\n 14067: a0 = a0 + 0x21\n 14070: a1 = s1 + 0x7ff\n 14074: a1 = a1 + 0x1\n 14077: a2 = s1 + 0x7e0\n 14081: a3 = u64 [s1 + 0x180]\n 14085: a4 = s1 + 0x1000\n 14089: u64 [a4 + 0xfffffffffffff800] = a3\n 14093: ra = 450, jump @1275\n      : @474 [@dyn 225] (gas: 23)\n 14099: a0 = s1 + 0x1000\n 14103: a0 = u64 [a0 + 0xfffffffffffff838]\n 14107: u64 [s1 + 0x168] = a0\n 14111: a0 = s1 + 0x1000\n 14115: a0 = u64 [a0 + 0xfffffffffffff830]\n 14119: u64 [s1 + 0x170] = a0\n 14123: a0 = s1 + 0x1000\n 14127: a0 = u64 [a0 + 0xfffffffffffff828]\n 14131: u64 [s1 + 0x178] = a0\n 14135: a0 = s1 + 0x1000\n 14139: a0 = u64 [a0 + 0xfffffffffffff820]\n 14143: u64 [s1 + 0x180] = a0\n 14147: a0 = u64 [s1 + 0x1b8]\n 14151: u64 [s1 + 0x7d8] = a0\n 14155: a0 = u64 [s1 + 0x1b0]\n 14159: u64 [s1 + 0x7d0] = a0\n 14163: a0 = u64 [s1 + 0x1a8]\n 14167: u64 [s1 + 0x7c8] = a0\n 14171: a1 = s1 + 0x7c0\n 14175: a0 = u64 [s1 + 0x1a0]\n 14179: u64 [s1 + 0x7c0] = a0\n 14183: a0 = 0\n 14185: ra = 452, jump @4\n      : @475 [@dyn 226] (gas: 7)\n 14191: u64 [s1 + 1976] = 0\n 14195: u64 [s1 + 1968] = 0\n 14199: u64 [s1 + 1960] = 0\n 14203: a0 = 0x20\n 14206: a1 = s1 + 0x7a0\n 14210: u64 [s1 + 1952] = 0x2\n 14215: ra = 454, jump @4\n      : @476 [@dyn 227] (gas: 3)\n 14221: a1 = u64 [s1 + 0x198]\n 14225: a0 = i32 [a1]\n 14227: jump @478 if a0 >u 63\n      : @477 (gas: 3)\n 14231: u32 [a1 + 0] = 0x40\n 14234: t0 = 0x1c8\n 14238: jump @1466\n      : @478 (gas: 1)\n 14241: t0 = 456, jump @1466\n      : @479 [@dyn 228] (gas: 4)\n 14247: ra = 0x1ca\n 14251: ecalli 7 // 'hash_keccak_256'\n 14253: t0 = 0x1cc\n 14257: jump @1422\n      : @480 [@dyn 229] (gas: 1)\n 14260: t0 = 460, jump @1422\n      : @481 [@dyn 230] (gas: 12)\n 14266: a3 = a1 + 0x300\n 14270: u64 [a3 + 0x8] = a4\n 14273: u64 [a3 + 0x10] = a5\n 14276: u64 [a3 + 0x18] = a2\n 14279: u64 [a3 + 0x20] = a0\n 14282: u64 [a1 + 832] = 0\n 14286: u64 [a1 + 824] = 0\n 14290: u64 [a1 + 816] = 0\n 14294: u64 [a1 + 808] = 0\n 14298: a0 = s1 + 0x3460\n 14302: a1 = s1 + 0x3480\n 14306: ra = 462, jump @9\n      : @482 [@dyn 231] (gas: 11)\n 14312: a2 = u64 [s1 + 0x1b8]\n 14316: a0 = u64 [s1 + 0x1b0]\n 14320: a1 = u64 [s1 + 0x1a8]\n 14324: a3 = u64 [s1 + 0x1a0]\n 14328: u64 [s1 + 0x760] = a3\n 14332: u64 [s1 + 0x768] = a1\n 14336: u64 [s1 + 0x770] = a0\n 14340: a0 = s1 + 0x780\n 14344: a1 = s1 + 0x760\n 14348: u64 [s1 + 0x778] = a2\n 14352: ra = 464, jump @1267\n      : @483 [@dyn 232] (gas: 10)\n 14358: a1 = s1 + 0x700\n 14362: a0 = u64 [a1 + 0x98]\n 14366: a2 = s1 + 0x100\n 14370: u64 [a2 + 0xb8] = a0\n 14374: a0 = u64 [a1 + 0x90]\n 14378: u64 [a2 + 0xb0] = a0\n 14382: a0 = u64 [a1 + 0x88]\n 14386: u64 [a2 + 0xa8] = a0\n 14390: a0 = u64 [a1 + 0x80]\n 14394: jump @455\n      : @484 (gas: 9)\n 14397: u64 [a4 + 192] = 0\n 14401: u64 [a4 + 184] = 0\n 14405: u64 [a4 + 176] = 0\n 14409: u64 [a4 + 168] = 0\n 14413: a0 = s1 + 0x4000\n 14417: i32 a0 = a0 + 0x200\n 14421: ra = 0x1d2\n 14425: ecalli 14 // 'value_transferred'\n 14427: fallthrough\n      : @485 [@dyn 233] (gas: 9)\n 14428: a3 = s1 + 0x4158\n 14432: a0 = u64 [a3 + 0xb8]\n 14436: a1 = u64 [a3 + 0xc0]\n 14440: a2 = u64 [a3 + 0xb0]\n 14444: a3 = u64 [a3 + 0xa8]\n 14448: a1 = a1 | a2\n 14451: a0 = a0 | a3\n 14454: a0 = a0 | a1\n 14457: jump @487 if a0 == 0\n      : @486 (gas: 1)\n 14460: jump @1066\n      : @487 (gas: 1)\n 14463: t0 = 468, jump @1471\n      : @488 [@dyn 234] (gas: 1)\n 14469: jump @490 if a1 <u a0\n      : @489 (gas: 1)\n 14472: jump @1067\n      : @490 (gas: 17)\n 14475: a0 = s1 + 0x4000\n 14479: i32 a0 = a0 + 0x220\n 14483: a1 = 0x4\n 14486: ecalli 2 // 'call_data_load'\n 14488: a3 = s1 + 0x4158\n 14492: a2 = u64 [a3 + 0xc8]\n 14496: a0 = u64 [a3 + 0xd0]\n 14500: a1 = u64 [a3 + 0xd8]\n 14504: a3 = u64 [a3 + 0xe0]\n 14508: a4 = s1 + 0x3158\n 14512: u64 [a4 + 0x80] = a3\n 14516: u64 [a4 + 0x78] = a1\n 14519: u64 [a4 + 0x70] = a0\n 14522: a0 = s1 + 0x31e0\n 14526: a1 = s1 + 0x31c0\n 14530: u64 [a4 + 0x68] = a2\n 14533: ra = 470, jump @1333\n      : @491 [@dyn 235] (gas: 12)\n 14539: a1 = s1 + 0x3158\n 14543: a0 = u64 [a1 + 0x88]\n 14547: u64 [s1 + 0x1b8] = a0\n 14551: a0 = u64 [a1 + 0x90]\n 14555: u64 [s1 + 0x1b0] = a0\n 14559: a0 = u64 [a1 + 0x98]\n 14563: u64 [s1 + 0x1a8] = a0\n 14567: a0 = u64 [a1 + 0xa0]\n 14571: u64 [s1 + 0x1a0] = a0\n 14575: a0 = s1 + 0x31a0\n 14579: a1 = 0x40\n 14582: ra = 472, jump @2\n      : @492 [@dyn 236] (gas: 25)\n 14588: a0 = s1 + 0x3158\n 14592: a1 = u64 [a0 + 0x60]\n 14595: u64 [s1 + 0x198] = a1\n 14599: a2 = u64 [a0 + 0x58]\n 14602: u64 [s1 + 0x190] = a2\n 14606: a3 = u64 [a0 + 0x50]\n 14609: u64 [s1 + 0x188] = a3\n 14613: a4 = u64 [a0 + 0x48]\n 14616: u64 [s1 + 0x180] = a4\n 14620: u64 [a0 + 0x20] = a1\n 14623: u64 [a0 + 0x18] = a2\n 14626: u64 [a0 + 0x10] = a3\n 14629: u64 [a0 + 0x8] = a4\n 14632: a1 = u64 [s1 + 0x1a0]\n 14636: u64 [a0 + 0x40] = a1\n 14639: a1 = u64 [s1 + 0x1a8]\n 14643: u64 [a0 + 0x38] = a1\n 14646: a1 = u64 [s1 + 0x1b0]\n 14650: u64 [a0 + 0x30] = a1\n 14653: a2 = a0\n 14655: a0 = s1 + 0x3180\n 14659: a1 = s1 + 0x3160\n 14663: a3 = u64 [s1 + 0x1b8]\n 14667: u64 [a2 + 0x28] = a3\n 14670: ra = 474, jump @1174\n      : @493 [@dyn 237] (gas: 7)\n 14676: a4 = s1 + 0x100\n 14680: a0 = u64 [a4 + 0x80]\n 14684: a1 = u64 [a4 + 0x98]\n 14688: a2 = u64 [a4 + 0x88]\n 14692: a2 = a2 | a1\n 14695: a3 = u64 [a4 + 0x90]\n 14699: t0 = 476, jump @1461\n      : @494 [@dyn 238] (gas: 1)\n 14705: jump @496 if a1 == 0\n      : @495 (gas: 1)\n 14708: jump @912\n      : @496 (gas: 3)\n 14711: a1 = 0x20\n 14714: ra = 0x21a\n 14718: jump @15\n      : @497 (gas: 9)\n 14721: a0 = s1 + 0x3958\n 14725: u64 [a0 + 896] = 0\n 14729: u64 [a0 + 888] = 0\n 14733: u64 [a0 + 880] = 0\n 14737: u64 [a0 + 872] = 0\n 14741: a0 = s1 + 0x4000\n 14745: i32 a0 = a0 + 0xfffffffffffffcc0\n 14749: ecalli 14 // 'value_transferred'\n 14751: fallthrough\n      : @498 (gas: 10)\n 14752: a3 = s1 + 0x3958\n 14756: a4 = a3 + 0x300\n 14760: a0 = u64 [a4 + 0x78]\n 14763: a1 = u64 [a4 + 0x80]\n 14767: a2 = u64 [a4 + 0x70]\n 14770: a3 = u64 [a4 + 0x68]\n 14773: a1 = a1 | a2\n 14776: a0 = a0 | a3\n 14779: a0 = a0 | a1\n 14782: jump @500 if a0 == 0\n      : @499 (gas: 1)\n 14785: jump @1068\n      : @500 (gas: 10)\n 14788: a0 = u64 [s1 + 0x1b8]\n 14792: a0 = u32 [a0]\n 14794: a2 = s1 + 0x1958\n 14798: u64 [a2 + 1632] = 0\n 14802: u64 [a2 + 1624] = 0\n 14806: u64 [a2 + 0x648] = a0\n 14810: a0 = s1 + 0x1fc0\n 14814: a1 = s1 + 0x1fa0\n 14818: u64 [a2 + 1616] = 0\n 14822: ra = 478, jump @1185\n      : @501 [@dyn 239] (gas: 20)\n 14828: a4 = s1 + 0x1958\n 14832: a5 = a4 + 0x600\n 14836: a0 = u64 [a5 + 0x98]\n 14840: a1 = s1 + 0x100\n 14844: u64 [a1 + 0xa0] = a0\n 14848: a0 = u64 [a5 + 0x90]\n 14852: u64 [a1 + 0xa8] = a0\n 14856: a0 = u64 [a5 + 0x88]\n 14860: u64 [a1 + 0xb8] = a0\n 14864: a0 = u64 [a5 + 0x68]\n 14867: a1 = u64 [a5 + 0x70]\n 14870: a2 = u64 [a5 + 0x78]\n 14873: a3 = u64 [a5 + 0x80]\n 14877: u64 [a5 + 0x40] = a3\n 14880: u64 [a5 + 0x38] = a2\n 14883: u64 [a5 + 0x30] = a1\n 14886: a1 = s1 + 0x1f80\n 14890: u64 [a5 + 0x28] = a0\n 14893: a0 = 0\n 14895: ra = 480, jump @4\n      : @502 [@dyn 240] (gas: 3)\n 14901: t0 = 0x1e2\n 14905: a1 = s1 + 0x1958\n 14909: fallthrough\n      : @503 [@dyn 241] (gas: 8)\n 14910: u64 [a1 + 1568] = 0\n 14914: u64 [a1 + 1560] = 0\n 14918: u64 [a1 + 1544] = 0x3\n 14923: a2 = a1\n 14925: a0 = 0x20\n 14928: a1 = s1 + 0x1f60\n 14932: u64 [a2 + 1552] = 0\n 14936: ra = 484, jump @4\n      : @504 [@dyn 242] (gas: 3)\n 14942: a1 = 0x20154\n 14947: a0 = i32 [0x20154]\n 14952: jump @506 if a0 >u 63\n      : @505 (gas: 2)\n 14956: u32 [0x20154] = 0x40\n 14962: fallthrough\n      : @506 (gas: 15)\n 14963: a0 = sp + 0xffffffffffffffe0\n 14966: a2 = a0 & 0xffffffffffffffe0\n 14969: u64 [s1 + 0x1b0] = a2\n 14973: sp = a2\n 14975: a0 = 0x20160\n 14980: i32 a0 = a0 + 0\n 14982: i32 a2 = a2 + 0\n 14984: u64 [s1 + 0x198] = a1\n 14988: a1 = 0x40\n 14991: u64 [s1 + 0x190] = a0\n 14995: ra = 0x1e6\n 14999: ecalli 7 // 'hash_keccak_256'\n 15001: a3 = u64 [s1 + 0x1b0]\n 15005: t0 = 0x1e8\n 15009: jump @1434\n      : @507 [@dyn 243] (gas: 2)\n 15012: a3 = u64 [s1 + 0x1b0]\n 15016: t0 = 488, jump @1434\n      : @508 [@dyn 244] (gas: 16)\n 15022: u64 [s1 + 0x1b0] = a0\n 15026: sp = a0\n 15028: a0 = u64 [s1 + 0x1a0]\n 15032: a0 = a0 << 0x20\n 15035: a0 = a0 >> 0x20\n 15038: a2 = s1 + 0x1958\n 15042: u64 [a2 + 1536] = 0\n 15046: a3 = a2 + 0x500\n 15050: u64 [a3 + 0xf8] = a0\n 15054: a0 = u64 [s1 + 0x1a8]\n 15058: u64 [a3 + 0xf0] = a0\n 15062: a1 = s1 + 0x1f40\n 15066: a0 = u64 [s1 + 0x1b8]\n 15070: u64 [a3 + 0xe8] = a0\n 15074: a0 = 0\n 15076: ra = 490, jump @4\n      : @509 [@dyn 245] (gas: 14)\n 15082: a0 = u64 [s1 + 0x170]\n 15086: a1 = s1 + 0x1958\n 15090: a2 = a1 + 0x500\n 15094: u64 [a2 + 0xe0] = a0\n 15098: a0 = u64 [s1 + 0x178]\n 15102: u64 [a2 + 0xd8] = a0\n 15106: a0 = u64 [s1 + 0x180]\n 15110: u64 [a2 + 0xd0] = a0\n 15114: a3 = a1\n 15116: a0 = 0x20\n 15119: a1 = s1 + 0x1f20\n 15123: a2 = u64 [s1 + 0x188]\n 15127: u64 [a3 + 0x5c8] = a2\n 15131: ra = 492, jump @4\n      : @510 [@dyn 246] (gas: 3)\n 15137: a1 = u64 [s1 + 0x198]\n 15141: a0 = i32 [a1]\n 15143: jump @512 if a0 >u 63\n      : @511 (gas: 3)\n 15147: u32 [a1 + 0] = 0x40\n 15150: t0 = 0x1ee\n 15154: jump @1444\n      : @512 (gas: 1)\n 15157: t0 = 494, jump @1444\n      : @513 [@dyn 247] (gas: 6)\n 15163: a0 = u64 [s1 + 0x190]\n 15167: ra = 0x1f0\n 15171: ecalli 7 // 'hash_keccak_256'\n 15173: a3 = u64 [s1 + 0x1b8]\n 15177: t0 = 0x1f2\n 15181: jump @1437\n      : @514 [@dyn 248] (gas: 2)\n 15184: a3 = u64 [s1 + 0x1b8]\n 15188: t0 = 498, jump @1437\n      : @515 [@dyn 249] (gas: 12)\n 15194: u64 [s1 + 0x188] = a1\n 15198: a2 = u64 [s1 + 0x1b0]\n 15202: u64 [a2 + 0x18] = a1\n 15205: u64 [s1 + 0x190] = a0\n 15209: u64 [a2 + 0x10] = a0\n 15212: u64 [s1 + 0x180] = a4\n 15216: u64 [a2 + 0x8] = a4\n 15219: u64 [s1 + 0x178] = a5\n 15223: u64 [a2] = a5\n 15225: a0 = s1 + 0x1f00\n 15229: a1 = 0x40\n 15232: ra = 500, jump @2\n      : @516 [@dyn 250] (gas: 18)\n 15238: a1 = s1 + 0x1958\n 15242: a5 = a1 + 0x500\n 15246: a0 = u64 [a5 + 0xc0]\n 15250: u64 [s1 + 0x1a0] = a0\n 15254: a2 = u64 [a5 + 0xb8]\n 15258: u64 [s1 + 0x198] = a2\n 15262: a4 = u64 [a5 + 0xb0]\n 15266: u64 [s1 + 0x1a8] = a4\n 15270: a3 = u64 [a5 + 0xa8]\n 15274: u64 [s1 + 0x1b8] = a3\n 15278: u64 [a5 + 0xa0] = a0\n 15282: u64 [a5 + 0x98] = a2\n 15286: u64 [a5 + 0x90] = a4\n 15290: a0 = s1 + 0x1ee0\n 15294: u64 [a5 + 0x88] = a3\n 15298: ra = 0x1f6\n 15302: t0 = 0x506\n 15306: jump @1443\n      : @517 [@dyn 251] (gas: 3)\n 15309: a0 = s1 + 0x1ec0\n 15313: a1 = u64 [s1 + 0x1b0]\n 15317: ra = 504, jump @6\n      : @518 [@dyn 252] (gas: 7)\n 15323: a3 = s1 + 0x100\n 15327: a0 = u64 [a3 + 0xa0]\n 15331: a1 = u64 [a3 + 0xa8]\n 15335: a0 = a0 | a1\n 15338: a2 = u64 [a3 + 0x98]\n 15342: a1 = u64 [a3 + 0xb8]\n 15346: t0 = 506, jump @1472\n      : @519 [@dyn 253] (gas: 1)\n 15352: jump @521 if a0 == 0\n      : @520 (gas: 1)\n 15355: jump @912\n      : @521 (gas: 17)\n 15358: a0 = s1 + 0x1958\n 15362: a5 = a0 + 0x500\n 15366: a4 = u64 [a5 + 0x80]\n 15370: a3 = u64 [a5 + 0x78]\n 15373: a2 = u64 [a5 + 0x70]\n 15376: a1 = u64 [a5 + 0x68]\n 15379: u64 [s1 + 0x170] = a1\n 15383: u64 [a5 + 0x48] = a1\n 15386: u64 [s1 + 0x168] = a2\n 15390: u64 [a5 + 0x50] = a2\n 15393: u64 [s1 + 0x160] = a3\n 15397: u64 [a5 + 0x58] = a3\n 15400: a1 = s1 + 0x1ea0\n 15404: u64 [s1 + 0x158] = a4\n 15408: u64 [a5 + 0x60] = a4\n 15411: a0 = u64 [s1 + 0x1b8]\n 15415: ra = 508, jump @4\n      : @522 [@dyn 254] (gas: 21)\n 15421: a0 = u64 [s1 + 0x178]\n 15425: a0 = a0 + 0x1\n 15428: a1 = a0 <u 0x1\n 15431: a2 = u64 [s1 + 0x180]\n 15435: a1 = a1 + a2\n 15438: a2 = a0 | a1\n 15441: a2 = a2 <u 0x1\n 15444: a3 = u64 [s1 + 0x190]\n 15448: a2 = a2 + a3\n 15451: a3 = a2 <u a3\n 15454: a4 = u64 [s1 + 0x188]\n 15458: a3 = a3 + a4\n 15461: a4 = s1 + 0x3958\n 15465: a5 = a4 + 0x300\n 15469: u64 [a5 + 0x90] = a1\n 15473: u64 [a5 + 0x88] = a0\n 15477: u64 [a5 + 0x98] = a2\n 15481: u64 [a5 + 0xa0] = a3\n 15485: a0 = s1 + 0x1e80\n 15489: a1 = s1 + 0x3ce0\n 15493: ra = 510, jump @6\n      : @523 [@dyn 255] (gas: 12)\n 15499: a4 = s1 + 0x100\n 15503: a0 = u64 [a4 + 0xa0]\n 15507: a2 = u64 [a4 + 0x98]\n 15511: a2 = a2 | a0\n 15514: a3 = 0x100000000\n 15524: a0 = 0xffffffe0\n 15534: a1 = u64 [a4 + 0xb8]\n 15538: a0 = a1 <u a0\n 15541: a1 = u64 [a4 + 0xa8]\n 15545: a0 = 0 if a1 != 0\n 15547: a0 = 0 if a2 != 0\n 15549: jump @525 if a0 != 0\n      : @524 (gas: 1)\n 15552: jump @912\n      : @525 (gas: 22)\n 15555: a0 = s1 + 0x1958\n 15559: u64 [s1 + 0x1b0] = a2\n 15563: a2 = a0\n 15565: t0 = u64 [a0 + 0x540]\n 15569: a5 = a0 + 0x500\n 15573: a4 = u64 [a5 + 0x38]\n 15576: u64 [s1 + 0x1a0] = a3\n 15580: a3 = u64 [a5 + 0x30]\n 15583: a1 = u64 [a5 + 0x28]\n 15586: a0 = u64 [s1 + 0x1b8]\n 15590: i32 a0 = a0 + 0x20\n 15593: u64 [s1 + 0x198] = a1\n 15597: a5 = a2 + 0x500\n 15601: u64 [a5 + 0x8] = a1\n 15604: u64 [s1 + 0x150] = a3\n 15608: u64 [a5 + 0x10] = a3\n 15611: u64 [s1 + 0x148] = a4\n 15615: u64 [a5 + 0x18] = a4\n 15618: a1 = s1 + 0x1e60\n 15622: u64 [s1 + 0x140] = t0\n 15626: u64 [a2 + 0x520] = t0\n 15630: ra = 512, jump @4\n      : @526 [@dyn 256] (gas: 3)\n 15636: a1 = u64 [s1 + 0x178]\n 15640: a0 = a1 + 0x2\n 15643: t0 = 514, jump @1433\n      : @527 [@dyn 257] (gas: 7)\n 15649: u64 [a5 + 0xb0] = a2\n 15653: u64 [a5 + 0xa8] = a0\n 15657: u64 [a5 + 0xb8] = a3\n 15661: u64 [a5 + 0xc0] = a1\n 15665: a0 = s1 + 0x1e40\n 15669: a1 = s1 + 0x3d00\n 15673: ra = 516, jump @6\n      : @528 [@dyn 258] (gas: 10)\n 15679: a3 = s1 + 0x100\n 15683: a2 = u64 [a3 + 0xb0]\n 15687: a0 = u64 [a3 + 0xa0]\n 15691: a0 = a0 + 0xffffffffffffffc0\n 15694: a1 = u64 [a3 + 0xb8]\n 15698: a0 = a1 <u a0\n 15701: a1 = u64 [a3 + 0xa8]\n 15705: a0 = 0 if a1 != 0\n 15707: a0 = 0 if a2 != 0\n 15709: jump @530 if a0 != 0\n      : @529 (gas: 1)\n 15712: jump @912\n      : @530 (gas: 18)\n 15715: a2 = s1 + 0x1958\n 15719: t0 = u64 [a2 + 0x500]\n 15723: a5 = a2 + 0x400\n 15727: a4 = u64 [a5 + 0xf8]\n 15731: a3 = u64 [a5 + 0xf0]\n 15735: a1 = u64 [a5 + 0xe8]\n 15739: a0 = u64 [s1 + 0x1b8]\n 15743: i32 a0 = a0 + 0x40\n 15746: u64 [s1 + 0x1a0] = a1\n 15750: u64 [a5 + 0xc8] = a1\n 15754: u64 [s1 + 0x138] = a3\n 15758: u64 [a5 + 0xd0] = a3\n 15762: u64 [s1 + 0x130] = a4\n 15766: u64 [a5 + 0xd8] = a4\n 15770: a1 = s1 + 0x1e20\n 15774: u64 [s1 + 0x128] = t0\n 15778: u64 [a2 + 0x4e0] = t0\n 15782: ra = 518, jump @4\n      : @531 [@dyn 259] (gas: 3)\n 15788: a1 = u64 [s1 + 0x178]\n 15792: a0 = a1 + 0x3\n 15795: t0 = 520, jump @1433\n      : @532 [@dyn 260] (gas: 7)\n 15801: u64 [a5 + 0xd0] = a2\n 15805: u64 [a5 + 0xc8] = a0\n 15809: u64 [a5 + 0xd8] = a3\n 15813: u64 [a5 + 0xe0] = a1\n 15817: a0 = s1 + 0x1e00\n 15821: a1 = s1 + 0x3d20\n 15825: ra = 522, jump @6\n      : @533 [@dyn 261] (gas: 9)\n 15831: a0 = 0xffffffa0\n 15841: a2 = s1 + 0x100\n 15845: a1 = u64 [a2 + 0xb8]\n 15849: a0 = a1 <u a0\n 15852: a1 = u64 [a2 + 0xa8]\n 15856: a0 = 0 if a1 != 0\n 15858: a1 = u64 [a2 + 0xb0]\n 15862: a0 = 0 if a1 != 0\n 15864: jump @535 if a0 != 0\n      : @534 (gas: 1)\n 15867: jump @912\n      : @535 (gas: 3)\n 15870: t0 = 0x20c\n 15874: a2 = s1 + 0x1958\n 15878: fallthrough\n      : @536 [@dyn 262] (gas: 11)\n 15879: a0 = u64 [a2 + 0x4a8]\n 15883: a0 = a0 & 0xff\n 15887: a1 = a0 >u 0\n 15889: a0 = u64 [s1 + 0x1b8]\n 15893: i32 a0 = a0 + 0x60\n 15896: u64 [a2 + 1184] = 0\n 15900: u64 [a2 + 1176] = 0\n 15904: u64 [a2 + 0x488] = a1\n 15908: a1 = s1 + 0x1de0\n 15912: u64 [a2 + 1168] = 0\n 15916: ra = 526, jump @4\n      : @537 [@dyn 263] (gas: 3)\n 15922: a0 = s1 + 0x1dc0\n 15926: a1 = 0x40\n 15929: ra = 528, jump @2\n      : @538 [@dyn 264] (gas: 45)\n 15935: a1 = s1 + 0x1958\n 15939: a3 = u64 [a1 + 0x480]\n 15943: u64 [s1 + 0x1b8] = a3\n 15947: a2 = u64 [a1 + 0x478]\n 15951: u64 [s1 + 0x1b0] = a2\n 15955: a4 = u64 [a1 + 0x470]\n 15959: u64 [s1 + 0x1a8] = a4\n 15963: a5 = u64 [a1 + 0x468]\n 15967: u64 [s1 + 0x190] = a5\n 15971: a0 = u64 [s1 + 0x128]\n 15975: u64 [a1 + 0x3e0] = a0\n 15979: a0 = u64 [s1 + 0x130]\n 15983: u64 [a1 + 0x3d8] = a0\n 15987: a0 = u64 [s1 + 0x138]\n 15991: u64 [a1 + 0x3d0] = a0\n 15995: a0 = u64 [s1 + 0x1a0]\n 15999: u64 [a1 + 0x3c8] = a0\n 16003: a0 = u64 [s1 + 0x140]\n 16007: u64 [a1 + 0x400] = a0\n 16011: a0 = u64 [s1 + 0x148]\n 16015: u64 [a1 + 0x3f8] = a0\n 16019: a0 = u64 [s1 + 0x150]\n 16023: u64 [a1 + 0x3f0] = a0\n 16027: a0 = u64 [s1 + 0x198]\n 16031: u64 [a1 + 0x3e8] = a0\n 16035: a0 = u64 [s1 + 0x158]\n 16039: u64 [a1 + 0x420] = a0\n 16043: a0 = u64 [s1 + 0x160]\n 16047: u64 [a1 + 0x418] = a0\n 16051: a0 = u64 [s1 + 0x168]\n 16055: u64 [a1 + 0x410] = a0\n 16059: a0 = u64 [s1 + 0x170]\n 16063: u64 [a1 + 0x408] = a0\n 16067: a0 = a1 + 0x400\n 16071: u64 [a0 + 0x40] = a3\n 16074: u64 [a0 + 0x38] = a2\n 16077: u64 [a0 + 0x30] = a4\n 16080: t0 = a1\n 16082: a0 = s1 + 0x1da0\n 16086: a1 = s1 + 0x1d80\n 16090: a2 = s1 + 0x1d60\n 16094: a3 = s1 + 0x1d40\n 16098: a4 = s1 + 0x1d20\n 16102: u64 [t0 + 0x428] = a5\n 16106: ra = 530, jump @1192\n      : @539 [@dyn 265] (gas: 13)\n 16112: a1 = s1 + 0x100\n 16116: a4 = u64 [a1 + 0xa8]\n 16120: a2 = u64 [a1 + 0x90]\n 16124: a0 = u64 [a1 + 0xb8]\n 16128: a0 = a0 | a4\n 16131: a3 = u64 [a1 + 0xb0]\n 16135: a1 = a2 | a3\n 16138: a1 = a1 | a0\n 16141: a1 = a1 >> 0x20\n 16144: a0 = a0 | a3\n 16147: a0 = a0 << 0x20\n 16150: a0 = a0 | a1\n 16153: jump @541 if a0 == 0\n      : @540 (gas: 1)\n 16156: jump @912\n      : @541 (gas: 34)\n 16159: t0 = a3\n 16161: a1 = s1 + 0x1958\n 16165: a5 = a1 + 0x400\n 16169: a0 = u64 [a5 + 0x50]\n 16172: a3 = u64 [a5 + 0x60]\n 16175: u64 [s1 + 0x1a0] = a3\n 16179: t1 = u64 [a1 + 0x448]\n 16183: a3 = u64 [a5 + 0x58]\n 16186: t2 = a0 ^ a4\n 16189: a5 = a0 <u a4\n 16192: ra = t1 <u a2\n 16195: a5 = ra if t2 == 0\n 16198: a1 = a3 - t0\n 16201: t2 = a1 - a5\n 16204: a1 = a1 <u a5\n 16207: u64 [s1 + 0x198] = a1\n 16211: a3 = a3 <u t0\n 16214: a5 = u64 [s1 + 0x1b8]\n 16218: a1 = u64 [s1 + 0x1a0]\n 16222: a5 = a1 - a5\n 16225: a5 = a5 - a3\n 16228: a1 = u64 [s1 + 0x198]\n 16232: a5 = a5 - a1\n 16235: a0 = a0 - a4\n 16238: a0 = a0 - ra\n 16241: a1 = t1 - a2\n 16244: a0 = a0 | a5\n 16247: a3 = a1 | t2\n 16250: a3 = a3 | a0\n 16253: a0 = a0 | t2\n 16256: a3 = a3 >> 0x20\n 16259: a0 = a0 << 0x20\n 16262: a0 = a0 | a3\n 16265: jump @543 if a0 == 0\n      : @542 (gas: 1)\n 16268: jump @912\n      : @543 (gas: 4)\n 16271: a0 = a2\n 16273: u64 [s1 + 0x1b8] = a1\n 16277: ra = 0x48c\n 16281: jump @15\n      : @544 (gas: 8)\n 16284: u64 [a4 + 64] = 0\n 16287: u64 [a4 + 56] = 0\n 16290: u64 [a4 + 48] = 0\n 16293: u64 [a4 + 40] = 0\n 16296: a0 = s1 + 0x4000\n 16300: i32 a0 = a0 + 0x180\n 16304: ecalli 14 // 'value_transferred'\n 16306: fallthrough\n      : @545 (gas: 9)\n 16307: a3 = s1 + 0x4158\n 16311: a0 = u64 [a3 + 0x38]\n 16314: a1 = u64 [a3 + 0x40]\n 16317: a2 = u64 [a3 + 0x30]\n 16320: a3 = u64 [a3 + 0x28]\n 16323: a1 = a1 | a2\n 16326: a0 = a0 | a3\n 16329: a0 = a0 | a1\n 16332: jump @547 if a0 == 0\n      : @546 (gas: 1)\n 16335: jump @1069\n      : @547 (gas: 3)\n 16338: a0 = u64 [s1 + 0x1b8]\n 16342: a0 = i32 [a0]\n 16344: jump @549 if a0 >u 3\n      : @548 (gas: 1)\n 16348: jump @1070\n      : @549 (gas: 3)\n 16351: a0 = s1 + 0x30a0\n 16355: a1 = 0x40\n 16358: ra = 532, jump @2\n      : @550 [@dyn 266] (gas: 7)\n 16364: a3 = s1 + 0x2958\n 16368: a5 = a3 + 0x700\n 16372: a4 = u64 [a5 + 0x60]\n 16375: a1 = u64 [a5 + 0x58]\n 16378: a2 = u64 [a5 + 0x50]\n 16381: a0 = u64 [a5 + 0x48]\n 16384: t0 = 534, jump @1438\n      : @551 [@dyn 267] (gas: 1)\n 16390: jump @553 if a1 == 0\n      : @552 (gas: 1)\n 16393: jump @912\n      : @553 (gas: 7)\n 16396: u64 [a3 + 1856] = 0\n 16400: u64 [a3 + 1848] = 0\n 16404: u64 [a3 + 1832] = 0x69780\n 16411: a1 = s1 + 0x3080\n 16415: u64 [a3 + 1840] = 0\n 16419: u64 [s1 + 0x1b8] = a0\n 16423: ra = 536, jump @4\n      : @554 [@dyn 268] (gas: 3)\n 16429: a1 = 0x20\n 16432: a0 = u64 [s1 + 0x1b8]\n 16436: ra = 538, jump @15\n      : @555 [@dyn 269] (gas: 5)\n 16442: i32 a1 = a0 + 0\n 16444: a2 = 0x20\n 16447: a0 = 0\n 16449: ecalli 11 // 'seal_return'\n 16451: fallthrough\n      : @556 (gas: 9)\n 16452: a1 = s1 + 0x100\n 16456: a2 = u64 [a1 + 0x80]\n 16460: a4 = u64 [a1 + 0x70]\n 16463: a0 = a2 | a4\n 16466: a3 = u64 [a1 + 0x78]\n 16469: a5 = u64 [a1 + 0x68]\n 16472: a1 = a3 | a5\n 16475: a0 = a0 | a1\n 16478: jump @558 if a0 == 0\n      : @557 (gas: 1)\n 16481: jump @692\n      : @558 (gas: 3)\n 16484: a0 = s1 + 0x700\n 16488: a1 = 0x40\n 16491: ra = 540, jump @2\n      : @559 [@dyn 270] (gas: 13)\n 16497: a1 = s1 + 0x700\n 16501: a4 = u64 [a1 + 0x18]\n 16504: a5 = u64 [a1 + 0x10]\n 16507: a3 = u64 [a1 + 0x8]\n 16510: a0 = u64 [a1]\n 16512: a2 = a3 | a4\n 16515: a1 = a0 | a5\n 16518: a1 = a1 | a2\n 16521: a1 = a1 >> 0x20\n 16524: a2 = a2 | a5\n 16527: a2 = a2 << 0x20\n 16530: a1 = a1 | a2\n 16533: jump @561 if a1 == 0\n      : @560 (gas: 1)\n 16536: jump @912\n      : @561 (gas: 11)\n 16539: u64 [s1 + 1776] = 0\n 16543: u64 [s1 + 1768] = 0\n 16547: u64 [s1 + 1760] = 0\n 16551: a2 = 0x8c379a000000000\n 16561: a1 = s1 + 0x6e0\n 16565: u64 [s1 + 0x6f8] = a2\n 16569: u64 [s1 + 0x1b8] = a0\n 16573: u64 [s1 + 0x1b0] = a3\n 16577: u64 [s1 + 0x1a8] = a4\n 16581: u64 [s1 + 0x1a0] = a5\n 16585: ra = 542, jump @4\n      : @562 [@dyn 271] (gas: 6)\n 16591: a5 = s1 + 0x100\n 16595: a1 = u64 [a5 + 0xb8]\n 16599: a0 = u64 [a5 + 0xa8]\n 16603: a3 = u64 [a5 + 0xa0]\n 16607: a3 = a3 | a0\n 16610: t0 = 544, jump @1416\n      : @563 [@dyn 272] (gas: 1)\n 16616: jump @565 if a0 != 0\n      : @564 (gas: 1)\n 16619: jump @912\n      : @565 (gas: 9)\n 16622: i32 a0 = a1 + 0x4\n 16625: u64 [s1 + 1752] = 0\n 16629: u64 [s1 + 1744] = 0\n 16633: u64 [s1 + 1728] = 0x20\n 16638: a1 = s1 + 0x6c0\n 16642: u64 [s1 + 1736] = 0\n 16646: u64 [s1 + 0x1a8] = a3\n 16650: u64 [s1 + 0x1a0] = a4\n 16654: ra = 546, jump @4\n      : @566 [@dyn 273] (gas: 1)\n 16660: t0 = 548, jump @1417\n      : @567 [@dyn 274] (gas: 1)\n 16666: jump @569 if a0 != 0\n      : @568 (gas: 1)\n 16669: jump @912\n      : @569 (gas: 7)\n 16672: i32 a0 = a1 + 0x24\n 16675: u64 [s1 + 1720] = 0\n 16679: u64 [s1 + 1712] = 0\n 16683: u64 [s1 + 1696] = 0x1d\n 16688: a1 = s1 + 0x6a0\n 16692: u64 [s1 + 1704] = 0\n 16696: ra = 550, jump @4\n      : @570 [@dyn 275] (gas: 1)\n 16702: t0 = 552, jump @1453\n      : @571 [@dyn 276] (gas: 1)\n 16708: jump @573 if a0 != 0\n      : @572 (gas: 1)\n 16711: jump @912\n      : @573 (gas: 13)\n 16714: i32 a0 = a2 + 0x44\n 16717: a1 = u64 [0x200f8]\n 16722: a2 = u64 [0x20100]\n 16727: a3 = u64 [0x20108]\n 16732: a4 = s1 + 0x600\n 16736: u64 [a4 + 0x98] = a1\n 16740: u64 [a4 + 0x90] = a2\n 16744: u64 [a4 + 0x88] = a3\n 16748: a2 = 0x6864726177000000\n 16758: a1 = s1 + 0x680\n 16762: u64 [a4 + 0x80] = a2\n 16766: ra = 0x3a8\n 16770: jump @4\n      : @574 (gas: 11)\n 16773: u64 [a2 + 2016] = 0\n 16777: u64 [a2 + 2008] = 0\n 16781: u64 [a2 + 2000] = 0\n 16785: u64 [a2 + 1992] = 0\n 16789: a0 = s1 + 0x4000\n 16793: i32 a0 = a0 + 0x120\n 16797: ra = 0x22a\n 16801: ecalli 14 // 'value_transferred'\n 16803: a0 = 0x3958\n 16807: t0 = 0x22c\n 16811: jump @1469\n      : @575 [@dyn 277] (gas: 2)\n 16814: a0 = 0x3958\n 16818: t0 = 556, jump @1469\n      : @576 [@dyn 278] (gas: 1)\n 16824: jump @578 if a0 == 0\n      : @577 (gas: 1)\n 16827: jump @1071\n      : @578 (gas: 3)\n 16830: a0 = u64 [s1 + 0x1b8]\n 16834: a0 = i32 [a0]\n 16836: jump @580 if a0 >u 67\n      : @579 (gas: 1)\n 16840: jump @1072\n      : @580 (gas: 32)\n 16843: a0 = s1 + 0x4000\n 16847: i32 a0 = a0 + 0x140\n 16851: a1 = 0x24\n 16854: ecalli 2 // 'call_data_load'\n 16856: a1 = s1 + 0x4158\n 16860: a0 = u64 [a1]\n 16862: u64 [s1 + 0x1a0] = a0\n 16866: a2 = a1 + 0xffffffffffffff00\n 16870: a0 = u64 [a2 + 0xf8]\n 16874: u64 [s1 + 0x1a8] = a0\n 16878: a0 = u64 [a2 + 0xf0]\n 16882: u64 [s1 + 0x1b0] = a0\n 16886: a0 = u64 [a2 + 0xe8]\n 16890: u64 [s1 + 0x1b8] = a0\n 16894: a0 = s1 + 0x4000\n 16898: i32 a0 = a0 + 0x160\n 16902: a1 = 0x4\n 16905: ecalli 2 // 'call_data_load'\n 16907: a3 = s1 + 0x4158\n 16911: a0 = u64 [a3 + 0x8]\n 16914: a1 = u64 [a3 + 0x10]\n 16917: a2 = u64 [a3 + 0x18]\n 16920: a3 = u64 [a3 + 0x20]\n 16923: a4 = s1 + 0x2958\n 16927: a5 = a4 + 0x700\n 16931: u64 [a5 + 0x20] = a3\n 16934: u64 [a5 + 0x18] = a2\n 16937: u64 [a5 + 0x10] = a1\n 16940: a1 = s1 + 0x3060\n 16944: u64 [a5 + 0x8] = a0\n 16947: a0 = 0\n 16949: ra = 558, jump @4\n      : @581 [@dyn 279] (gas: 3)\n 16955: t0 = 0x230\n 16959: a1 = s1 + 0x2958\n 16963: fallthrough\n      : @582 [@dyn 280] (gas: 8)\n 16964: u64 [a1 + 1792] = 0\n 16968: u64 [a1 + 1784] = 0\n 16972: u64 [a1 + 1768] = 0x4\n 16977: a2 = a1\n 16979: a0 = 0x20\n 16982: a1 = s1 + 0x3040\n 16986: u64 [a2 + 1776] = 0\n 16990: ra = 562, jump @4\n      : @583 [@dyn 281] (gas: 6)\n 16996: a0 = sp + 0xffffffffffffffe0\n 16999: a0 = a0 & 0xffffffffffffffe0\n 17002: u64 [s1 + 0x180] = a0\n 17006: sp = a0\n 17008: a1 = i32 [0x20154]\n 17013: jump @585 if a1 >u 63\n      : @584 (gas: 2)\n 17017: u32 [0x20154] = 0x40\n 17023: fallthrough\n      : @585 (gas: 14)\n 17024: a0 = sp + 0xffffffffffffffe0\n 17027: a2 = a0 & 0xffffffffffffffe0\n 17030: u64 [s1 + 0x198] = a2\n 17034: sp = a2\n 17036: a0 = 0x20160\n 17041: i32 a0 = a0 + 0\n 17043: i32 a2 = a2 + 0\n 17045: a1 = 0x40\n 17048: u64 [s1 + 0x170] = a0\n 17052: ra = 0x234\n 17056: ecalli 7 // 'hash_keccak_256'\n 17058: a3 = u64 [s1 + 0x198]\n 17062: t0 = 0x236\n 17066: jump @1454\n      : @586 [@dyn 282] (gas: 2)\n 17069: a3 = u64 [s1 + 0x198]\n 17073: t0 = 566, jump @1454\n      : @587 [@dyn 283] (gas: 10)\n 17079: u64 [s1 + 0x178] = a3\n 17083: u64 [a1 + 0x18] = a3\n 17086: u64 [s1 + 0x188] = a2\n 17090: u64 [a1 + 0x10] = a2\n 17093: u64 [s1 + 0x190] = a4\n 17097: u64 [a1 + 0x8] = a4\n 17100: u64 [s1 + 0x198] = a0\n 17104: u64 [a1] = a0\n 17106: a0 = s1 + 0x3020\n 17110: ra = 568, jump @6\n      : @588 [@dyn 284] (gas: 22)\n 17116: ra = s1 + 0x2958\n 17120: a2 = ra + 0x600\n 17124: a0 = u64 [a2 + 0xd0]\n 17128: a1 = u64 [a2 + 0xc8]\n 17132: t2 = u64 [ra + 0x6d8]\n 17136: a3 = u64 [a2 + 0xe0]\n 17140: t1 = u64 [s1 + 0x1b0]\n 17144: a4 = t1 ^ a0\n 17147: a0 = t1 <u a0\n 17150: t0 = u64 [s1 + 0x1b8]\n 17154: a1 = t0 <u a1\n 17157: a1 = a0 if a4 != 0\n 17160: a5 = u64 [s1 + 0x1a0]\n 17164: a0 = a5 ^ a3\n 17167: a2 = a5 <u a3\n 17170: a3 = u64 [s1 + 0x1a8]\n 17174: a4 = a3 <u t2\n 17177: a4 = a2 if a0 != 0\n 17180: a2 = a3 ^ t2\n 17183: a0 = a0 | a2\n 17186: a1 = a4 if a0 != 0\n 17189: jump @590 if a1 != 0\n      : @589 (gas: 1)\n 17192: jump @1073\n      : @590 (gas: 21)\n 17195: a0 = sp + 0xffffffffffffffe0\n 17198: a0 = a0 & 0xffffffffffffffe0\n 17201: u64 [s1 + 0x180] = a0\n 17205: sp = a0\n 17207: a4 = ra + 0x600\n 17211: u64 [a4 + 0x60] = a5\n 17214: u64 [a4 + 0x58] = a3\n 17217: u64 [ra + 0x650] = t1\n 17221: u64 [ra + 0x648] = t0\n 17225: a0 = u64 [s1 + 0x178]\n 17229: u64 [a4 + 0x80] = a0\n 17233: a0 = u64 [s1 + 0x188]\n 17237: u64 [a4 + 0x78] = a0\n 17240: a0 = u64 [s1 + 0x190]\n 17244: u64 [a4 + 0x70] = a0\n 17247: a0 = s1 + 0x2fe0\n 17251: a1 = s1 + 0x2fc0\n 17255: a2 = s1 + 0x2fa0\n 17259: a3 = u64 [s1 + 0x198]\n 17263: u64 [a4 + 0x68] = a3\n 17266: ra = 570, jump @1200\n      : @591 [@dyn 285] (gas: 28)\n 17272: a0 = s1 + 0x2958\n 17276: a0 = u64 [a0 + 0x6c0]\n 17280: u64 [s1 + 0x178] = a0\n 17284: a0 = s1 + 0x2958\n 17288: a0 = u64 [a0 + 0x6b8]\n 17292: u64 [s1 + 0x190] = a0\n 17296: a0 = s1 + 0x2958\n 17300: a0 = u64 [a0 + 0x6b0]\n 17304: u64 [s1 + 0x188] = a0\n 17308: a0 = s1 + 0x2958\n 17312: a0 = u64 [a0 + 0x6a8]\n 17316: u64 [s1 + 0x198] = a0\n 17320: a0 = s1 + 0x2958\n 17324: a0 = u64 [a0 + 0x698]\n 17328: a1 = s1 + 0x2958\n 17332: a1 = u64 [a1 + 0x6a0]\n 17336: a2 = s1 + 0x2958\n 17340: a2 = u64 [a2 + 0x688]\n 17344: a3 = s1 + 0x2958\n 17348: a3 = u64 [a3 + 0x690]\n 17352: a4 = u64 [s1 + 0x180]\n 17356: u64 [a4 + 0x10] = a0\n 17359: u64 [a4 + 0x18] = a1\n 17362: u64 [a4] = a2\n 17364: u64 [a4 + 0x8] = a3\n 17367: a1 = a4\n 17369: a0 = s1 + 0x2f80\n 17373: ra = 572, jump @6\n      : @592 [@dyn 286] (gas: 16)\n 17379: a0 = s1 + 0x2958\n 17383: a0 = u64 [a0 + 0x640]\n 17387: a1 = s1 + 0x100\n 17391: u64 [a1 + 0xb8] = a0\n 17395: a0 = s1 + 0x2958\n 17399: a0 = u64 [a0 + 0x638]\n 17403: u64 [a1 + 0xb0] = a0\n 17407: a0 = s1 + 0x2958\n 17411: a0 = u64 [a0 + 0x630]\n 17415: u64 [a1 + 0xa0] = a0\n 17419: a0 = s1 + 0x2958\n 17423: a0 = u64 [a0 + 0x628]\n 17427: u64 [a1 + 0xa8] = a0\n 17431: a0 = s1 + 0x2f60\n 17435: a1 = 0x40\n 17438: ra = 574, jump @2\n      : @593 [@dyn 287] (gas: 14)\n 17444: a3 = s1 + 0x2958\n 17448: a4 = a3 + 0x600\n 17452: a0 = u64 [a4 + 0x20]\n 17455: a1 = u64 [a4 + 0x18]\n 17458: a2 = u64 [a4 + 0x10]\n 17461: a3 = u64 [a4 + 0x8]\n 17464: a0 = a0 | a2\n 17467: a2 = a3 | a1\n 17470: a2 = a2 | a0\n 17473: a2 = a2 >> 0x20\n 17476: a0 = a0 | a1\n 17479: a0 = a0 << 0x20\n 17482: a0 = a0 | a2\n 17485: jump @595 if a0 == 0\n      : @594 (gas: 1)\n 17488: jump @912\n      : @595 (gas: 30)\n 17491: a0 = u64 [s1 + 0x198]\n 17495: a2 = a0 >> 0x3d\n 17498: a5 = u64 [s1 + 0x188]\n 17502: a1 = a5 << 0x3\n 17505: t1 = a1 | a2\n 17508: a4 = u64 [s1 + 0x190]\n 17512: a1 = a4 >> 0x3d\n 17515: a2 = u64 [s1 + 0x178]\n 17519: a2 = a2 << 0x3\n 17522: a1 = a1 | a2\n 17525: a2 = a5 >> 0x3d\n 17528: u64 [s1 + 0x188] = a3\n 17532: a3 = a4 << 0x3\n 17535: a2 = a2 | a3\n 17538: a3 = a0 << 0x3\n 17541: u64 [s1 + 0x190] = a3\n 17545: a5 = a2 >u 0\n 17547: a4 = a1 >u 0\n 17549: a4 = a5 if a1 == 0\n 17552: t0 = t1 >u 0\n 17554: a5 = a3 <u 0x100\n 17558: a5 = a5 ^ 0x1\n 17561: a5 = t0 if t1 != 0\n 17564: a1 = a1 | a2\n 17567: a5 = a4 if a1 != 0\n 17570: u64 [s1 + 0x180] = a5\n 17574: i32 a2 = a3 + 0xffffffffffffff80\n 17577: a0 = u64 [s1 + 0x1b0]\n 17581: a1 = u64 [s1 + 0x1b8]\n 17585: ra = 576, jump @1474\n      : @596 [@dyn 288] (gas: 8)\n 17591: u64 [s1 + 0x178] = a0\n 17595: u64 [s1 + 0x170] = a1\n 17599: a0 = u64 [s1 + 0x198]\n 17603: i32 a2 = a0 << 0x3\n 17606: u64 [s1 + 0x198] = a2\n 17610: a0 = u64 [s1 + 0x1a8]\n 17614: a1 = u64 [s1 + 0x1a0]\n 17618: ra = 578, jump @1474\n      : @597 [@dyn 289] (gas: 7)\n 17624: u64 [s1 + 0x160] = a0\n 17628: u64 [s1 + 0x168] = a1\n 17632: a1 = u64 [s1 + 0x190]\n 17636: i32 a2 = 0x80 - a1\n 17640: a0 = u64 [s1 + 0x1b0]\n 17644: a1 = u64 [s1 + 0x1b8]\n 17648: ra = 580, jump @1479\n      : @598 [@dyn 290] (gas: 21)\n 17654: a2 = u64 [s1 + 0x168]\n 17658: a2 = a2 | a1\n 17661: a1 = u64 [s1 + 0x190]\n 17665: a3 = a1 <u 0x80\n 17669: u64 [s1 + 0x168] = a3\n 17673: a4 = u64 [s1 + 0x170]\n 17677: a2 = a4 if a3 == 0\n 17680: a4 = u64 [s1 + 0x1a0]\n 17684: a2 = a4 if a1 == 0\n 17687: u64 [s1 + 0x1a0] = a2\n 17691: a2 = u64 [s1 + 0x160]\n 17695: a0 = a0 | a2\n 17698: a2 = u64 [s1 + 0x178]\n 17702: a0 = a2 if a3 == 0\n 17705: a2 = u64 [s1 + 0x1a8]\n 17709: a0 = a2 if a1 == 0\n 17712: u64 [s1 + 0x1a8] = a0\n 17716: a0 = u64 [s1 + 0x1b0]\n 17720: a1 = u64 [s1 + 0x1b8]\n 17724: a2 = u64 [s1 + 0x198]\n 17728: ra = 582, jump @1474\n      : @599 [@dyn 291] (gas: 21)\n 17734: a1 = 0\n 17736: a2 = u64 [s1 + 0x168]\n 17740: a0 = 0 if a2 == 0\n 17742: a0 = a0 << 0x20\n 17745: a0 = a0 >> 0x20\n 17748: a2 = u64 [s1 + 0x180]\n 17752: a4 = u64 [s1 + 0x1a8]\n 17756: a4 = 0 if a2 != 0\n 17758: a3 = u64 [s1 + 0x1a0]\n 17762: a3 = 0 if a2 != 0\n 17764: a0 = 0 if a2 != 0\n 17766: a1 = 0 if a2 == 0\n 17768: a2 = s1 + 0x2958\n 17772: u64 [a2 + 0x600] = a1\n 17776: a5 = a2 + 0x500\n 17780: u64 [a5 + 0xf8] = a0\n 17784: u64 [a5 + 0xf0] = a3\n 17788: a1 = s1 + 0x2f40\n 17792: u64 [a5 + 0xe8] = a4\n 17796: a0 = u64 [s1 + 0x188]\n 17800: ra = 584, jump @4\n      : @600 [@dyn 292] (gas: 4)\n 17806: a1 = 0x20\n 17809: a0 = u64 [s1 + 0x188]\n 17813: ra = 0x21a\n 17817: jump @15\n      : @601 (gas: 1)\n 17820: jump @603 if a0 == 1659016731\n      : @602 (gas: 1)\n 17827: jump @1074\n      : @603 (gas: 11)\n 17830: u64 [a3 + 2016] = 0\n 17834: u64 [a3 + 2008] = 0\n 17838: u64 [a3 + 2000] = 0\n 17842: u64 [a3 + 1992] = 0\n 17846: a0 = s1 + 0x4000\n 17850: i32 a0 = a0 + 0xfffffffffffff920\n 17854: ra = 0x24a\n 17858: ecalli 14 // 'value_transferred'\n 17860: a0 = 0x3158\n 17864: t0 = 0x24c\n 17868: jump @1469\n      : @604 [@dyn 293] (gas: 2)\n 17871: a0 = 0x3158\n 17875: t0 = 588, jump @1469\n      : @605 [@dyn 294] (gas: 1)\n 17881: jump @607 if a0 == 0\n      : @606 (gas: 1)\n 17884: jump @1081\n      : @607 (gas: 10)\n 17887: a0 = u64 [s1 + 0x1b8]\n 17891: a0 = u32 [a0]\n 17893: a2 = s1 + 0x1140\n 17897: u64 [a2 + 536] = 0\n 17901: u64 [a2 + 528] = 0\n 17905: u64 [a2 + 0x200] = a0\n 17909: a0 = s1 + 0x1360\n 17913: a1 = s1 + 0x1340\n 17917: u64 [a2 + 520] = 0\n 17921: ra = 590, jump @1185\n      : @608 [@dyn 295] (gas: 22)\n 17927: a4 = s1 + 0x1140\n 17931: a5 = a4 + 0x200\n 17935: a0 = u64 [a5 + 0x50]\n 17938: a1 = s1 + 0x100\n 17942: u64 [a1 + 0xa8] = a0\n 17946: a0 = u64 [a5 + 0x48]\n 17949: u64 [a1 + 0xb0] = a0\n 17953: a0 = u64 [a5 + 0x40]\n 17956: u64 [a1 + 0xb8] = a0\n 17960: a0 = u64 [a5 + 0x20]\n 17963: a1 = u64 [a5 + 0x28]\n 17966: a2 = u64 [a5 + 0x30]\n 17969: a3 = u64 [a5 + 0x38]\n 17972: a5 = a4 + 0x100\n 17976: u64 [a5 + 0xf8] = a3\n 17980: u64 [a5 + 0xf0] = a2\n 17984: u64 [a5 + 0xe8] = a1\n 17988: a2 = s1 + 0x1140\n 17992: a1 = s1 + 0x1320\n 17996: u64 [a2 + 0x1e0] = a0\n 18000: a0 = 0\n 18002: ra = 592, jump @4\n      : @609 [@dyn 296] (gas: 3)\n 18008: t0 = 0x252\n 18012: a1 = s1 + 0x1140\n 18016: fallthrough\n      : @610 [@dyn 297] (gas: 8)\n 18017: u64 [a1 + 472] = 0\n 18021: u64 [a1 + 464] = 0\n 18025: u64 [a1 + 448] = 0x3\n 18030: a2 = s1 + 0x1140\n 18034: a0 = 0x20\n 18037: a1 = s1 + 0x1300\n 18041: u64 [a2 + 456] = 0\n 18045: ra = 596, jump @4\n      : @611 [@dyn 298] (gas: 3)\n 18051: a1 = 0x20154\n 18056: a0 = i32 [0x20154]\n 18061: jump @613 if a0 >u 63\n      : @612 (gas: 2)\n 18065: u32 [0x20154] = 0x40\n 18071: fallthrough\n      : @613 (gas: 15)\n 18072: a0 = sp + 0xffffffffffffffe0\n 18075: a2 = a0 & 0xffffffffffffffe0\n 18078: u64 [s1 + 0x190] = a2\n 18082: sp = a2\n 18084: a0 = 0x20160\n 18089: i32 a0 = a0 + 0\n 18091: i32 a2 = a2 + 0\n 18093: u64 [s1 + 0x1a0] = a1\n 18097: a1 = 0x40\n 18100: u64 [s1 + 0x198] = a0\n 18104: ra = 0x256\n 18108: ecalli 7 // 'hash_keccak_256'\n 18110: a3 = u64 [s1 + 0x190]\n 18114: t0 = 0x258\n 18118: jump @1434\n      : @614 [@dyn 299] (gas: 2)\n 18121: a3 = u64 [s1 + 0x190]\n 18125: t0 = 600, jump @1434\n      : @615 [@dyn 300] (gas: 16)\n 18131: u64 [s1 + 0x190] = a0\n 18135: sp = a0\n 18137: a0 = u64 [s1 + 0x1a8]\n 18141: a0 = a0 << 0x20\n 18144: a0 = a0 >> 0x20\n 18147: a2 = s1 + 0x1140\n 18151: u64 [a2 + 440] = 0\n 18155: a3 = a2 + 0x100\n 18159: u64 [a3 + 0xb0] = a0\n 18163: a0 = u64 [s1 + 0x1b0]\n 18167: u64 [a3 + 0xa8] = a0\n 18171: a1 = s1 + 0x12e0\n 18175: a0 = u64 [s1 + 0x1b8]\n 18179: u64 [a3 + 0xa0] = a0\n 18183: a0 = 0\n 18185: ra = 602, jump @4\n      : @616 [@dyn 301] (gas: 11)\n 18191: a0 = u64 [s1 + 0x170]\n 18195: a1 = s1 + 0x1140\n 18199: a2 = a1 + 0x100\n 18203: u64 [a2 + 0x98] = a0\n 18207: a0 = u64 [s1 + 0x178]\n 18211: u64 [a2 + 0x90] = a0\n 18215: a0 = u64 [s1 + 0x180]\n 18219: u64 [a2 + 0x88] = a0\n 18223: t0 = 0x25c\n 18227: a3 = s1 + 0x1140\n 18231: fallthrough\n      : @617 [@dyn 302] (gas: 5)\n 18232: a0 = 0x20\n 18235: a1 = s1 + 0x12c0\n 18239: a2 = u64 [s1 + 0x188]\n 18243: u64 [a3 + 0x180] = a2\n 18247: ra = 606, jump @4\n      : @618 [@dyn 303] (gas: 3)\n 18253: a1 = u64 [s1 + 0x1a0]\n 18257: a0 = i32 [a1]\n 18259: jump @620 if a0 >u 63\n      : @619 (gas: 2)\n 18263: u32 [a1 + 0] = 0x40\n 18266: fallthrough\n      : @620 (gas: 4)\n 18267: a0 = sp + 0xffffffffffffffe0\n 18270: a0 = a0 & 0xffffffffffffffe0\n 18273: u64 [s1 + 0x1b8] = a0\n 18277: t0 = 608, jump @1430\n      : @621 [@dyn 304] (gas: 4)\n 18283: ra = 0x262\n 18287: ecalli 7 // 'hash_keccak_256'\n 18289: t0 = 0x264\n 18293: jump @1425\n      : @622 [@dyn 305] (gas: 1)\n 18296: t0 = 612, jump @1425\n      : @623 [@dyn 306] (gas: 2)\n 18302: a0 = s1 + 0x12a0\n 18306: ra = 614, jump @6\n      : @624 [@dyn 307] (gas: 11)\n 18312: a1 = s1 + 0x1140\n 18316: a2 = a1 + 0x100\n 18320: a0 = u64 [a2 + 0x78]\n 18323: u64 [s1 + 0x198] = a0\n 18327: a0 = u64 [a2 + 0x70]\n 18330: u64 [s1 + 0x190] = a0\n 18334: a0 = u64 [a2 + 0x68]\n 18337: u64 [s1 + 0x188] = a0\n 18341: a0 = u64 [a2 + 0x60]\n 18344: u64 [s1 + 0x180] = a0\n 18348: t0 = 616, jump @1462\n      : @625 [@dyn 308] (gas: 16)\n 18354: a3 = a2 + 0x700\n 18358: u64 [a3 + 0xf0] = a1\n 18362: a1 = a1 | a0\n 18365: u64 [a3 + 0xe8] = a0\n 18369: a0 = a1 <u 0x1\n 18372: a1 = u64 [s1 + 0x1a0]\n 18376: a0 = a0 + a1\n 18379: u64 [a3 + 0xf8] = a0\n 18383: a0 = a0 <u a1\n 18386: a1 = u64 [s1 + 0x1b8]\n 18390: a0 = a0 + a1\n 18393: a1 = s1 + 0x3958\n 18397: u64 [a1] = a0\n 18399: a0 = s1 + 0x1280\n 18403: a1 = s1 + 0x3940\n 18407: ra = 618, jump @6\n      : @626 [@dyn 309] (gas: 18)\n 18413: a1 = s1 + 0x1140\n 18417: a2 = a1 + 0x100\n 18421: a0 = u64 [a2 + 0x58]\n 18424: u64 [s1 + 0x178] = a0\n 18428: a0 = u64 [a2 + 0x50]\n 18431: u64 [s1 + 0x170] = a0\n 18435: a0 = u64 [a2 + 0x48]\n 18438: u64 [s1 + 0x168] = a0\n 18442: a0 = u64 [a2 + 0x40]\n 18445: u64 [s1 + 0x160] = a0\n 18449: a1 = u64 [s1 + 0x1a8]\n 18453: a0 = a1 + 0x2\n 18456: a1 = a0 <u a1\n 18459: a3 = u64 [s1 + 0x1b0]\n 18463: a2 = a3 + a1\n 18466: a3 = a2 <u a3\n 18469: a3 = a1 if a1 == 0\n 18472: t0 = 620, jump @1465\n      : @627 [@dyn 310] (gas: 8)\n 18478: a4 = s1 + 0x3958\n 18482: u64 [a4 + 0x20] = a1\n 18485: u64 [a4 + 0x18] = a3\n 18488: u64 [a4 + 0x10] = a2\n 18491: u64 [a4 + 0x8] = a0\n 18494: a0 = s1 + 0x1260\n 18498: a1 = s1 + 0x3960\n 18502: ra = 622, jump @6\n      : @628 [@dyn 311] (gas: 10)\n 18508: a5 = s1 + 0x1140\n 18512: a0 = u64 [a5 + 0x138]\n 18516: u64 [s1 + 0x158] = a0\n 18520: a0 = u64 [a5 + 0x130]\n 18524: u64 [s1 + 0x150] = a0\n 18528: a1 = u64 [s1 + 0x1a8]\n 18532: a0 = a1 + 0x3\n 18535: a1 = a0 <u a1\n 18538: a3 = u64 [s1 + 0x1b0]\n 18542: t0 = 624, jump @1463\n      : @629 [@dyn 312] (gas: 3)\n 18548: a1 = u64 [a5 + 0x128]\n 18552: u64 [s1 + 0x1a8] = a1\n 18556: t0 = 626, jump @1465\n      : @630 [@dyn 313] (gas: 10)\n 18562: a4 = u64 [a5 + 0x120]\n 18566: u64 [s1 + 0x1a0] = a4\n 18570: a4 = s1 + 0x3958\n 18574: u64 [a4 + 0x40] = a1\n 18577: u64 [a4 + 0x38] = a3\n 18580: u64 [a4 + 0x30] = a2\n 18583: u64 [a4 + 0x28] = a0\n 18586: a0 = s1 + 0x1240\n 18590: a1 = s1 + 0x3980\n 18594: ra = 628, jump @6\n      : @631 [@dyn 314] (gas: 6)\n 18600: a0 = s1 + 0x1140\n 18604: a0 = u64 [a0 + 0x100]\n 18608: u64 [s1 + 0x148] = a0\n 18612: a0 = s1 + 0x1220\n 18616: a1 = 0x40\n 18619: ra = 630, jump @2\n      : @632 [@dyn 315] (gas: 13)\n 18625: a2 = s1 + 0x1140\n 18629: t0 = u64 [a2 + 0xf8]\n 18633: a5 = u64 [a2 + 0xf0]\n 18637: a4 = u64 [a2 + 0xe8]\n 18641: a3 = u64 [a2 + 0xe0]\n 18645: a0 = a4 | t0\n 18648: a1 = a3 | a5\n 18651: a1 = a1 | a0\n 18654: a1 = a1 >> 0x20\n 18657: a0 = a0 | a5\n 18660: a0 = a0 << 0x20\n 18663: a0 = a0 | a1\n 18666: jump @634 if a0 == 0\n      : @633 (gas: 1)\n 18669: jump @912\n      : @634 (gas: 15)\n 18672: a0 = u64 [s1 + 0x180]\n 18676: u64 [a2 + 0xc0] = a0\n 18680: a0 = u64 [s1 + 0x188]\n 18684: u64 [a2 + 0xc8] = a0\n 18688: a0 = u64 [s1 + 0x190]\n 18692: u64 [a2 + 0xd0] = a0\n 18696: a1 = s1 + 0x1200\n 18700: a0 = u64 [s1 + 0x198]\n 18704: u64 [a2 + 0xd8] = a0\n 18708: a0 = a3\n 18710: u64 [s1 + 0x1b8] = a3\n 18714: u64 [s1 + 0x1b0] = a4\n 18718: u64 [s1 + 0x190] = t0\n 18722: u64 [s1 + 0x198] = a5\n 18726: ra = 632, jump @4\n      : @635 [@dyn 316] (gas: 12)\n 18732: a5 = s1 + 0x100\n 18736: a1 = u64 [a5 + 0xb8]\n 18740: a0 = u64 [a5 + 0x98]\n 18744: a4 = u64 [a5 + 0x90]\n 18748: a4 = a4 | a0\n 18751: a3 = 0x100000000\n 18761: a0 = 0xffffffe0\n 18771: a0 = a1 <u a0\n 18774: a2 = u64 [a5 + 0xb0]\n 18778: a0 = 0 if a2 != 0\n 18780: a0 = 0 if a4 != 0\n 18782: jump @637 if a0 != 0\n      : @636 (gas: 1)\n 18785: jump @912\n      : @637 (gas: 14)\n 18788: i32 a0 = a1 + 0x20\n 18791: a1 = u64 [s1 + 0x160]\n 18795: u64 [s1 + 0x190] = a3\n 18799: a3 = s1 + 0x1140\n 18803: u64 [a3 + 0xa0] = a1\n 18807: a1 = u64 [s1 + 0x168]\n 18811: u64 [a3 + 0xa8] = a1\n 18815: a1 = u64 [s1 + 0x170]\n 18819: u64 [a3 + 0xb0] = a1\n 18823: a1 = s1 + 0x11e0\n 18827: a2 = u64 [s1 + 0x178]\n 18831: u64 [a3 + 0xb8] = a2\n 18835: u64 [s1 + 0x198] = a4\n 18839: ra = 634, jump @4\n      : @638 [@dyn 317] (gas: 10)\n 18845: a4 = s1 + 0x100\n 18849: a2 = u64 [a4 + 0x98]\n 18853: a3 = u64 [a4 + 0xb0]\n 18857: a1 = u64 [a4 + 0xb8]\n 18861: a0 = u64 [a4 + 0x90]\n 18865: a0 = a0 + 0xffffffffffffffc0\n 18868: a0 = a1 <u a0\n 18871: a0 = 0 if a3 != 0\n 18873: a0 = 0 if a2 != 0\n 18875: jump @640 if a0 != 0\n      : @639 (gas: 1)\n 18878: jump @912\n      : @640 (gas: 12)\n 18881: i32 a0 = a1 + 0x40\n 18884: a1 = u64 [s1 + 0x1a0]\n 18888: a4 = s1 + 0x1140\n 18892: u64 [a4 + 0x80] = a1\n 18896: a1 = u64 [s1 + 0x1a8]\n 18900: u64 [a4 + 0x88] = a1\n 18904: a1 = u64 [s1 + 0x150]\n 18908: u64 [a4 + 0x90] = a1\n 18912: a1 = s1 + 0x11c0\n 18916: a2 = u64 [s1 + 0x158]\n 18920: u64 [a4 + 0x98] = a2\n 18924: ra = 636, jump @4\n      : @641 [@dyn 318] (gas: 9)\n 18930: a3 = s1 + 0x100\n 18934: a2 = u64 [a3 + 0xb8]\n 18938: a0 = 0xffffffa0\n 18948: a0 = a2 <u a0\n 18951: a1 = u64 [a3 + 0xb0]\n 18955: a0 = 0 if a1 != 0\n 18957: a1 = u64 [a3 + 0x98]\n 18961: a0 = 0 if a1 != 0\n 18963: jump @643 if a0 != 0\n      : @642 (gas: 1)\n 18966: jump @912\n      : @643 (gas: 10)\n 18969: a0 = u8 [s1 + 0x148]\n 18973: a1 = a0 >u 0\n 18975: i32 a0 = a2 + 0x60\n 18978: a3 = s1 + 0x1140\n 18982: u64 [a3 + 120] = 0\n 18985: u64 [a3 + 112] = 0\n 18988: u64 [a3 + 0x60] = a1\n 18991: a1 = s1 + 0x11a0\n 18995: u64 [a3 + 104] = 0\n 18998: ra = 638, jump @4\n      : @644 [@dyn 319] (gas: 3)\n 19004: a1 = 0x80\n 19008: a0 = u64 [s1 + 0x1b8]\n 19012: ra = 640, jump @15\n      : @645 [@dyn 320] (gas: 5)\n 19018: i32 a1 = a0 + 0\n 19020: a2 = 0x80\n 19024: a0 = 0\n 19026: ecalli 11 // 'seal_return'\n 19028: jump @556\n      : @646 (gas: 6)\n 19031: a0 = sp + 0xffffffffffffffe0\n 19034: a1 = a0 & 0xffffffffffffffe0\n 19037: sp = a1\n 19039: a2 = u64 [s1 + 0x28]\n 19042: a0 = a2 + 0x6\n 19045: t0 = 642, jump @1452\n      : @647 [@dyn 321] (gas: 7)\n 19051: u64 [a1 + 0x8] = a2\n 19054: u64 [a1] = a0\n 19056: u64 [a1 + 0x10] = a3\n 19059: u64 [a1 + 0x18] = a4\n 19062: a0 = s1 + 0x2e00\n 19066: u64 [s1 + 0x18] = a1\n 19069: ra = 644, jump @6\n      : @648 [@dyn 322] (gas: 3)\n 19075: a2 = s1 + 0x2958\n 19079: a0 = u8 [a2 + 0x4bc]\n 19083: jump @650 if a0 <=u 3\n      : @649 (gas: 1)\n 19087: jump @1105\n      : @650 (gas: 8)\n 19090: a0 = a0 + 0xfffffffffffffffd\n 19093: a0 = a0 >u 0\n 19095: u64 [a2 + 1184] = 0\n 19099: u64 [a2 + 1176] = 0\n 19103: u64 [a2 + 0x488] = a0\n 19107: a0 = s1 + 0x2de0\n 19111: u64 [a2 + 1168] = 0\n 19115: ra = 646, jump @1303\n      : @651 [@dyn 323] (gas: 6)\n 19121: a0 = sp + 0xffffffffffffffe0\n 19124: a1 = a0 & 0xffffffffffffffe0\n 19127: sp = a1\n 19129: a2 = u64 [s1 + 0x28]\n 19132: a0 = a2 + 0x8\n 19135: t0 = 648, jump @1452\n      : @652 [@dyn 324] (gas: 7)\n 19141: u64 [a1 + 0x18] = a4\n 19144: u64 [a1 + 0x10] = a3\n 19147: u64 [a1 + 0x8] = a2\n 19150: u64 [a1] = a0\n 19152: a0 = s1 + 0x2dc0\n 19156: u64 [s1 + 0x10] = a1\n 19159: ra = 650, jump @6\n      : @653 [@dyn 325] (gas: 3)\n 19165: a0 = s1 + 0x2958\n 19169: a0 = u8 [a0 + 0x468]\n 19173: jump @655 if a0 == 0\n      : @654 (gas: 1)\n 19176: jump @858\n      : @655 (gas: 3)\n 19179: a1 = u64 [s1 + 0x28]\n 19182: a0 = a1 + 0x2\n 19185: t0 = 652, jump @1439\n      : @656 [@dyn 326] (gas: 8)\n 19191: a5 = a4 + 0x500\n 19195: u64 [a5 + 0xc8] = a0\n 19199: u64 [a5 + 0xd0] = a2\n 19203: u64 [a5 + 0xd8] = a3\n 19207: u64 [a5 + 0xe0] = a1\n 19211: a0 = s1 + 0x2d00\n 19215: a1 = s1 + 0x3f20\n 19219: ra = 654, jump @6\n      : @657 [@dyn 327] (gas: 3)\n 19225: t0 = 0x290\n 19229: a1 = s1 + 0x2958\n 19233: fallthrough\n      : @658 [@dyn 328] (gas: 12)\n 19234: a2 = a1 + 0x300\n 19238: a0 = u64 [a2 + 0xc0]\n 19242: u64 [s1 + 0x128] = a0\n 19246: a0 = u64 [a2 + 0xb8]\n 19250: u64 [s1 + 0x120] = a0\n 19254: a0 = u64 [a2 + 0xb0]\n 19258: u64 [s1 + 0x118] = a0\n 19262: a0 = u64 [a2 + 0xa8]\n 19266: u64 [s1 + 0x110] = a0\n 19270: a0 = s1 + 0x2ce0\n 19274: a1 = 0x40\n 19277: ra = 658, jump @2\n      : @659 [@dyn 329] (gas: 26)\n 19283: a3 = s1 + 0x2958\n 19287: a4 = a3 + 0x300\n 19291: a0 = u64 [a4 + 0x88]\n 19295: a2 = u64 [a4 + 0xa0]\n 19299: a1 = u64 [a4 + 0x90]\n 19303: a3 = u64 [a4 + 0x98]\n 19307: a4 = a0 + 0x20\n 19310: u64 [s1 + 0x1b0] = a4\n 19314: u64 [s1 + 0x1b8] = a0\n 19318: a0 = a4 <u a0\n 19321: a4 = a1 + a0\n 19324: u64 [s1 + 0x1a8] = a4\n 19328: u64 [s1 + 0x190] = a1\n 19332: a1 = a4 <u a1\n 19335: a1 = a0 if a0 == 0\n 19338: a1 = a1 + a3\n 19341: u64 [s1 + 0x198] = a1\n 19345: u64 [s1 + 0x180] = a3\n 19349: a0 = a1 <u a3\n 19352: u64 [s1 + 0x188] = a2\n 19356: a0 = a0 + a2\n 19359: u64 [s1 + 0x1a0] = a0\n 19363: a0 = s1 + 0x4000\n 19367: i32 a0 = a0 + 0xffffffffffffff40\n 19371: ecalli 8 // 'now'\n 19373: fallthrough\n      : @660 (gas: 13)\n 19374: a5 = s1 + 0x100\n 19378: a0 = u64 [a5 + 0xb0]\n 19382: a3 = u64 [a5 + 0x98]\n 19386: a2 = a0 | a3\n 19389: a1 = u64 [a5 + 0xa8]\n 19393: a4 = u64 [a5 + 0xa0]\n 19397: a1 = a1 | a4\n 19400: a2 = a2 | a1\n 19403: a2 = a2 >> 0x20\n 19406: a1 = a1 | a3\n 19409: a1 = a1 << 0x20\n 19412: a1 = a1 | a2\n 19415: jump @662 if a1 == 0\n      : @661 (gas: 1)\n 19418: jump @912\n      : @662 (gas: 14)\n 19421: a3 = s1 + 0x3958\n 19425: a4 = a3 + 0x500\n 19429: a5 = u64 [a4 + 0xe8]\n 19433: a1 = u64 [a4 + 0xf0]\n 19437: a2 = u64 [a4 + 0xf8]\n 19441: a3 = u64 [a3 + 0x600]\n 19445: a4 = s1 + 0x2958\n 19449: u64 [a4 + 0x380] = a3\n 19453: a3 = a4 + 0x300\n 19457: u64 [a3 + 0x78] = a2\n 19460: u64 [a3 + 0x70] = a1\n 19463: a1 = s1 + 0x2cc0\n 19467: u64 [a3 + 0x68] = a5\n 19470: ra = 660, jump @4\n      : @663 [@dyn 330] (gas: 4)\n 19476: a5 = s1 + 0x100\n 19480: a1 = u64 [a5 + 0xb8]\n 19484: a0 = a1 + 0x40\n 19487: t0 = 662, jump @1435\n      : @664 [@dyn 331] (gas: 1)\n 19493: jump @666 if a1 == 0\n      : @665 (gas: 1)\n 19496: jump @912\n      : @666 (gas: 8)\n 19499: a2 = s1 + 0x2958\n 19503: u64 [a2 + 864] = 0\n 19507: u64 [a2 + 856] = 0\n 19511: a1 = 0x8e1bc9bf04000\n 19521: u64 [a2 + 0x348] = a1\n 19525: a1 = s1 + 0x2ca0\n 19529: u64 [a2 + 848] = 0\n 19533: ra = 664, jump @4\n      : @667 [@dyn 332] (gas: 4)\n 19539: a5 = s1 + 0x100\n 19543: a1 = u64 [a5 + 0xb8]\n 19547: a0 = a1 + 0x60\n 19550: t0 = 666, jump @1435\n      : @668 [@dyn 333] (gas: 1)\n 19556: jump @670 if a1 == 0\n      : @669 (gas: 1)\n 19559: jump @912\n      : @670 (gas: 12)\n 19562: a1 = u64 [s1 + 0xa0]\n 19566: a3 = s1 + 0x2958\n 19570: a4 = a3 + 0x300\n 19574: u64 [a4 + 0x28] = a1\n 19577: a1 = u64 [s1 + 0x98]\n 19581: u64 [a4 + 0x30] = a1\n 19584: a1 = u64 [s1 + 0x90]\n 19588: u64 [a4 + 0x38] = a1\n 19591: a1 = s1 + 0x2c80\n 19595: a2 = u64 [s1 + 0x88]\n 19599: u64 [a4 + 0x40] = a2\n 19602: ra = 668, jump @4\n      : @671 [@dyn 334] (gas: 13)\n 19608: a4 = s1 + 0x100\n 19612: a0 = u64 [a4 + 0xb8]\n 19616: a3 = u64 [a4 + 0x80]\n 19620: a0 = a0 | a3\n 19623: a1 = u64 [a4 + 0x90]\n 19627: a2 = u64 [a4 + 0x88]\n 19631: a1 = a1 | a2\n 19634: a0 = a0 | a1\n 19637: a0 = a0 >> 0x20\n 19640: a1 = a1 | a3\n 19643: a1 = a1 << 0x20\n 19646: a0 = a0 | a1\n 19649: jump @673 if a0 == 0\n      : @672 (gas: 1)\n 19652: jump @912\n      : @673 (gas: 8)\n 19655: a2 = s1 + 0x2958\n 19659: u64 [a2 + 800] = 0\n 19663: u64 [a2 + 792] = 0\n 19667: u64 [a2 + 784] = 0\n 19671: a1 = s1 + 0x2c60\n 19675: u64 [a2 + 776] = 0x60\n 19680: a0 = u64 [s1 + 0x1b8]\n 19684: ra = 670, jump @4\n      : @674 [@dyn 335] (gas: 18)\n 19690: a1 = s1 + 0x2958\n 19694: u64 [a1 + 736] = 0\n 19698: u64 [a1 + 728] = 0\n 19702: u64 [a1 + 720] = 0\n 19706: a2 = a1 + 0x200\n 19710: u64 [a2 + 200] = 0x80\n 19716: a0 = u64 [s1 + 0x188]\n 19720: u64 [a1 + 0x300] = a0\n 19724: a0 = u64 [s1 + 0x180]\n 19728: u64 [a2 + 0xf8] = a0\n 19732: a0 = u64 [s1 + 0x190]\n 19736: u64 [a2 + 0xf0] = a0\n 19740: a3 = a1\n 19742: a0 = s1 + 0x2c40\n 19746: a1 = s1 + 0x2c20\n 19750: a2 = u64 [s1 + 0x1b8]\n 19754: u64 [a3 + 0x2e8] = a2\n 19758: ra = 672, jump @1235\n      : @675 [@dyn 336] (gas: 7)\n 19764: a0 = sp + 0xffffffffffffffe0\n 19767: a0 = a0 & 0xffffffffffffffe0\n 19770: u64 [s1 + 0xd8] = a0\n 19774: sp = a0\n 19776: a0 = s1 + 0x2c00\n 19780: a1 = u64 [s1 + 0x1b8]\n 19784: ra = 674, jump @2\n      : @676 [@dyn 337] (gas: 3)\n 19790: t0 = 0x2a4\n 19794: a1 = s1 + 0x2958\n 19798: fallthrough\n      : @677 [@dyn 338] (gas: 13)\n 19799: a4 = a1 + 0x200\n 19803: a0 = u64 [a4 + 0xc0]\n 19807: a3 = u64 [a4 + 0xb8]\n 19811: a2 = u64 [a4 + 0xb0]\n 19815: a1 = u64 [a4 + 0xa8]\n 19819: a0 = a0 | a2\n 19822: a2 = a1 | a3\n 19825: a2 = a2 | a0\n 19828: a2 = a2 >> 0x20\n 19831: a0 = a0 | a3\n 19834: a0 = a0 << 0x20\n 19837: a0 = a0 | a2\n 19840: jump @679 if a0 == 0\n      : @678 (gas: 1)\n 19843: jump @912\n      : @679 (gas: 3)\n 19846: a0 = u64 [s1 + 0x1b0]\n 19850: u64 [s1 + 0x1b8] = a1\n 19854: ra = 678, jump @15\n      : @680 [@dyn 339] (gas: 9)\n 19860: a1 = sp + 0xffffffffffffffe0\n 19863: a2 = a1 & 0xffffffffffffffe0\n 19866: u64 [s1 + 0x1b0] = a2\n 19870: sp = a2\n 19872: i32 a0 = a0 + 0\n 19874: a1 = i32 [s1 + 0x1b8]\n 19878: i32 a2 = a2 + 0\n 19880: ecalli 7 // 'hash_keccak_256'\n 19882: fallthrough\n      : @681 (gas: 61)\n 19883: a3 = u64 [s1 + 0x1b0]\n 19887: a0 = u64 [a3 + 0x8]\n 19890: a1 = u64 [a3 + 0x18]\n 19893: a2 = u64 [a3]\n 19895: a3 = u64 [a3 + 0x10]\n 19898: t1 = reverse a0\n 19900: a4 = reverse a1\n 19902: u64 [s1 + 0x108] = a4\n 19906: t2 = reverse a2\n 19908: t0 = reverse a3\n 19910: a1 = clz t2\n 19912: a0 = clz t1\n 19914: a0 = a0 + 0x40\n 19917: a0 = a1 if t2 != 0\n 19920: a1 = clz t0\n 19922: a2 = clz a4\n 19924: a2 = a2 + 0x40\n 19927: a2 = a1 if t0 != 0\n 19930: a1 = a2 + 0x80\n 19934: a3 = t1 | t2\n 19937: a0 = a1 if a3 == 0\n 19940: a1 = a1 <u a2\n 19943: a1 = 0 if a3 != 0\n 19945: a3 = a1 >u 0\n 19947: a2 = a0 <u 0xee\n 19951: a4 = a2 ^ 0x1\n 19954: a3 = a4 if a1 == 0\n 19957: a2 = a3 <u 0x1\n 19960: a2 = a2 + 0xffffffffffffffff\n 19963: a5 = -a3\n 19965: a1 = -a1\n 19967: ra = a1 - a4\n 19970: a1 = 0xed - a0\n 19974: u64 [s1 + 0x190] = a5\n 19978: a0 = a5 >u 0\n 19980: a4 = a2 >u 0\n 19982: u64 [s1 + 0x1a8] = a2\n 19986: a4 = a0 if a2 == 0\n 19989: u64 [s1 + 0x198] = a1\n 19993: a0 = a1 <u 0x100\n 19997: a0 = a0 ^ 0x1\n 20000: a5 = ra >u 0\n 20002: a0 = a5 if ra != 0\n 20005: a0 = a4 if a3 != 0\n 20008: a3 = t0 | t2\n 20011: a1 = u64 [s1 + 0x108]\n 20015: a4 = a1 | t1\n 20018: a3 = a3 | a4\n 20021: a3 = a3 <u 0x1\n 20024: a0 = a0 | a3\n 20027: a4 = 0x69780\n 20032: u64 [s1 + 0xe0] = t2\n 20036: t2 = 0 if a0 != 0\n 20038: u64 [s1 + 0xe8] = t1\n 20042: t1 = 0 if a0 != 0\n 20044: u64 [s1 + 0xf0] = t0\n 20048: a2 = t0\n 20050: a2 = 0 if a0 != 0\n 20052: a3 = a1\n 20054: a3 = 0 if a0 != 0\n 20056: jump @683 if a0 == 0\n      : @682 (gas: 1)\n 20059: jump @920\n      : @683 (gas: 8)\n 20062: a0 = u64 [s1 + 0x198]\n 20066: a0 = a0 ^ 0xff\n 20070: a5 = u64 [s1 + 0x190]\n 20074: a1 = a0 | a5\n 20077: t0 = u64 [s1 + 0x1a8]\n 20081: a0 = ra | t0\n 20084: a0 = a0 | a1\n 20087: jump @685 if a0 != 0\n      : @684 (gas: 1)\n 20090: jump @920\n      : @685 (gas: 20)\n 20093: u64 [s1 + 328] = 0x69780\n 20100: a1 = u64 [s1 + 0x198]\n 20104: a2 = a1 + 0x1\n 20107: u64 [s1 + 0x1b8] = a2\n 20111: a0 = a2 <u 0x1\n 20114: a0 = a0 + ra\n 20117: u64 [s1 + 0x1b0] = a0\n 20121: a0 = a0 | a2\n 20124: a0 = a0 <u 0x1\n 20127: a0 = a0 + a5\n 20130: u64 [s1 + 0x1a0] = a0\n 20134: a0 = a0 <u a5\n 20137: a0 = a0 + t0\n 20140: u64 [s1 + 0x1a8] = a0\n 20144: a1 = 0xff - a1\n 20148: u64 [s1 + 0x198] = a1\n 20152: a2 = 0x80 - a1\n 20156: a0 = u64 [s1 + 0x108]\n 20160: a1 = u64 [s1 + 0xf0]\n 20164: ra = 680, jump @1474\n      : @686 [@dyn 340] (gas: 6)\n 20170: u64 [s1 + 0x190] = a0\n 20174: u64 [s1 + 0x180] = a1\n 20178: a0 = u64 [s1 + 0xe8]\n 20182: a1 = u64 [s1 + 0xe0]\n 20186: a2 = u64 [s1 + 0x198]\n 20190: ra = 682, jump @1479\n      : @687 [@dyn 341] (gas: 9)\n 20196: u64 [s1 + 0x188] = a0\n 20200: a0 = u64 [s1 + 0x180]\n 20204: a0 = a0 | a1\n 20207: u64 [s1 + 0x178] = a0\n 20211: a0 = u64 [s1 + 0x198]\n 20215: a2 = a0 + 0xffffffffffffff80\n 20218: a0 = u64 [s1 + 0x108]\n 20222: a1 = u64 [s1 + 0xf0]\n 20226: ra = 684, jump @1479\n      : @688 [@dyn 342] (gas: 18)\n 20232: a2 = u64 [s1 + 0x198]\n 20236: a3 = a2 <u 0x80\n 20240: u64 [s1 + 0x180] = a3\n 20244: a4 = u64 [s1 + 0x178]\n 20248: a1 = a4 if a3 != 0\n 20251: a4 = u64 [s1 + 0xe0]\n 20255: a1 = a4 if a2 == 0\n 20258: u64 [s1 + 0x158] = a1\n 20262: a1 = u64 [s1 + 0x190]\n 20266: a4 = u64 [s1 + 0x188]\n 20270: a1 = a1 | a4\n 20273: a1 = a0 if a3 == 0\n 20276: a0 = u64 [s1 + 0xe8]\n 20280: a1 = a0 if a2 == 0\n 20283: u64 [s1 + 0x190] = a1\n 20287: a0 = u64 [s1 + 0x108]\n 20291: a1 = u64 [s1 + 0xf0]\n 20295: ra = 686, jump @1479\n      : @689 [@dyn 343] (gas: 14)\n 20301: a5 = s1 + 0x100\n 20305: a2 = u64 [a5 + 0xb0]\n 20309: a3 = u64 [a5 + 0xa8]\n 20313: a2 = a2 | a3\n 20316: a3 = u64 [a5 + 0xb8]\n 20320: a4 = u64 [a5 + 0xa0]\n 20324: a3 = a3 | a4\n 20327: a2 = a2 | a3\n 20330: a3 = u64 [a5 + 0x80]\n 20334: a1 = 0 if a3 == 0\n 20336: u64 [a5 + 0x88] = a1\n 20340: a0 = 0 if a3 == 0\n 20342: u64 [a5 + 0x98] = a0\n 20346: jump @691 if a2 == 0\n      : @690 (gas: 1)\n 20349: jump @913\n      : @691 (gas: 4)\n 20352: a5 = 0\n 20354: u64 [s1 + 320] = 0\n 20358: ra = u64 [s1 + 0x158]\n 20362: jump @919\n      : @692 (gas: 12)\n 20365: a0 = s1 + 0x3158\n 20369: u64 [a0 + 864] = 0\n 20373: u64 [a0 + 856] = 0\n 20377: u64 [a0 + 848] = 0\n 20381: u64 [a0 + 840] = 0\n 20385: a0 = s1 + 0x740\n 20389: a1 = s1 + 0x34a0\n 20393: u64 [s1 + 0x180] = a2\n 20397: u64 [s1 + 0x178] = a3\n 20401: u64 [s1 + 0x170] = a4\n 20405: u64 [s1 + 0x168] = a5\n 20409: ra = 688, jump @6\n      : @693 [@dyn 344] (gas: 53)\n 20415: a3 = s1 + 0x700\n 20419: a0 = u64 [a3 + 0x48]\n 20422: a1 = u64 [a3 + 0x50]\n 20425: a2 = u64 [a3 + 0x40]\n 20428: a0 = reverse a0\n 20430: a3 = a0 << 0x20\n 20433: a1 = reverse a1\n 20435: a1 = a1 >> 0x20\n 20438: a1 = a1 | a3\n 20441: a0 = a0 >> 0x20\n 20444: a2 = reverse a2\n 20446: a3 = a2 << 0x20\n 20449: a0 = a0 | a3\n 20452: a2 = a2 >> 0x20\n 20455: a5 = s1 + 0x100\n 20459: a3 = u64 [a5 + 0x60]\n 20462: u32 [a3 + 0x10] = a2\n 20465: u64 [a3 + 0x8] = a0\n 20468: u64 [a3] = a1\n 20470: a0 = s1 + 0x3158\n 20474: a1 = u64 [a5 + 0x68]\n 20477: a2 = a0 + 0x300\n 20481: u64 [a2 + 0x80] = a1\n 20485: a1 = u64 [a5 + 0x70]\n 20488: u64 [a2 + 0x78] = a1\n 20491: a1 = u64 [a5 + 0x78]\n 20494: u64 [a2 + 0x70] = a1\n 20497: a1 = u64 [a5 + 0x80]\n 20501: u64 [a2 + 0x68] = a1\n 20504: u32 [a0 + 904] = 0\n 20508: u64 [a0 + 960] = 0\n 20512: u64 [a0 + 952] = 0\n 20516: u64 [a0 + 944] = 0\n 20520: u64 [a0 + 936] = 0\n 20524: a0 = a3 << 0x20\n 20527: a0 = a0 >> 0x20\n 20530: a1 = s1 + 0x34c0\n 20534: a1 = a1 << 0x20\n 20537: a1 = a1 >> 0x20\n 20540: a4 = 0x20160\n 20545: a2 = s1 + 0x3500\n 20549: a2 = a2 << 0x20\n 20552: a3 = a2 | a1\n 20555: u64 [a5 + 0xb8] = a4\n 20559: a4 = a4 << 0x20\n 20562: a4 = a4 >> 0x20\n 20565: a1 = s1 + 0x34e0\n 20569: a1 = a1 << 0x20\n 20572: a5 = a1 | a4\n 20575: a1 = 0xffffffffffffffff\n 20578: a2 = 0xffffffffffffffff\n 20581: ecalli 0 // 'call'\n 20582: fallthrough\n      : @694 (gas: 1)\n 20583: jump @696 if a0 != 0\n      : @695 (gas: 1)\n 20586: jump @1109\n      : @696 (gas: 3)\n 20589: a0 = s1 + 0x720\n 20593: a1 = 0x40\n 20596: ra = 690, jump @2\n      : @697 [@dyn 345] (gas: 13)\n 20602: a1 = s1 + 0x700\n 20606: a0 = u64 [a1 + 0x38]\n 20609: u64 [s1 + 0x1b0] = a0\n 20613: a0 = u64 [a1 + 0x30]\n 20616: u64 [s1 + 0x1a8] = a0\n 20620: a0 = u64 [a1 + 0x28]\n 20623: u64 [s1 + 0x1a0] = a0\n 20627: a0 = u64 [a1 + 0x20]\n 20630: u64 [s1 + 0x1b8] = a0\n 20634: ra = 0x2b4\n 20638: ecalli 10 // 'return_data_size'\n 20640: t0 = 0x2b6\n 20644: jump @1460\n      : @698 [@dyn 346] (gas: 1)\n 20647: t0 = 694, jump @1460\n      : @699 [@dyn 347] (gas: 1)\n 20653: jump @701 if a1 == 0\n      : @700 (gas: 1)\n 20656: jump @912\n      : @701 (gas: 3)\n 20659: a2 = a0\n 20661: a0 = a0 >> 0x20\n 20664: jump @703 if a0 == 0\n      : @702 (gas: 1)\n 20667: jump @912\n      : @703 (gas: 6)\n 20670: i32 a0 = a2 + 0\n 20672: u64 [s1 + 0x1b0] = a0\n 20676: a0 = u64 [s1 + 0x1b8]\n 20680: a1 = a2\n 20682: u64 [s1 + 0x1a8] = a2\n 20686: ra = 696, jump @15\n      : @704 [@dyn 348] (gas: 11)\n 20692: a1 = s1 + 0x3158\n 20696: a2 = u64 [s1 + 0x1a8]\n 20700: u32 [a1 + 0x3c8] = a2\n 20704: i32 a0 = a0 + 0\n 20706: a1 = s1 + 0x3000\n 20710: i32 a1 = a1 + 0x520\n 20714: a2 = 0\n 20716: ecalli 9 // 'return_data_copy'\n 20718: a0 = s1 + 0x3158\n 20722: a0 = i32 [a0 + 0x3c8]\n 20726: fallthrough\n      : @705 (gas: 2)\n 20727: a1 = u64 [s1 + 0x1b0]\n 20731: jump @707 if a0 >=u a1\n      : @706 (gas: 1)\n 20734: jump @912\n      : @707 (gas: 2)\n 20737: ecalli 10 // 'return_data_size'\n 20739: fallthrough\n      : @708 (gas: 3)\n 20740: a1 = a0\n 20742: a0 = a0 >> 0x20\n 20745: jump @710 if a0 == 0\n      : @709 (gas: 1)\n 20748: jump @912\n      : @710 (gas: 3)\n 20751: a0 = u64 [s1 + 0x1b8]\n 20755: u64 [s1 + 0x1b0] = a1\n 20759: ra = 698, jump @15\n      : @711 [@dyn 349] (gas: 7)\n 20765: i32 a1 = a0 + 0\n 20767: a2 = i32 [s1 + 0x1b0]\n 20771: a0 = 0x1\n 20774: ecalli 11 // 'seal_return'\n 20776: t0 = 0x2bc\n 20780: a2 = s1 + 0x1958\n 20784: jump @713\n      : @712 (gas: 3)\n 20786: t0 = 0x2bc\n 20790: a2 = s1 + 0x1958\n 20794: fallthrough\n      : @713 [@dyn 350] (gas: 12)\n 20795: a0 = u64 [s1 + 0x1b8]\n 20799: a3 = a2 + 0x100\n 20803: u64 [a3 + 0x88] = a0\n 20807: a0 = u64 [s1 + 0x1b0]\n 20811: u64 [a3 + 0x90] = a0\n 20815: a0 = u64 [s1 + 0x1a8]\n 20819: u64 [a3 + 0x98] = a0\n 20823: a1 = s1 + 0x1ae0\n 20827: a0 = u64 [s1 + 0x1a0]\n 20831: u64 [a3 + 0xa0] = a0\n 20835: a0 = 0\n 20837: ra = 702, jump @4\n      : @714 [@dyn 351] (gas: 3)\n 20843: t0 = 0x2c0\n 20847: a1 = s1 + 0x1958\n 20851: fallthrough\n      : @715 [@dyn 352] (gas: 8)\n 20852: u64 [a1 + 384] = 0\n 20856: u64 [a1 + 376] = 0\n 20860: u64 [a1 + 360] = 0x2\n 20865: a2 = a1\n 20867: a0 = 0x20\n 20870: a1 = s1 + 0x1ac0\n 20874: u64 [a2 + 368] = 0\n 20878: ra = 706, jump @4\n      : @716 [@dyn 353] (gas: 3)\n 20884: a2 = u64 [s1 + 0x190]\n 20888: a0 = i32 [a2]\n 20890: jump @718 if a0 >u 63\n      : @717 (gas: 3)\n 20894: u32 [a2 + 0] = 0x40\n 20897: t0 = 0x2c4\n 20901: jump @1427\n      : @718 (gas: 1)\n 20904: t0 = 708, jump @1427\n      : @719 [@dyn 354] (gas: 3)\n 20910: ra = 0x2c6\n 20914: ecalli 7 // 'hash_keccak_256'\n 20916: fallthrough\n      : @720 [@dyn 355] (gas: 6)\n 20917: a3 = u64 [s1 + 0x188]\n 20921: a0 = u64 [a3]\n 20923: a1 = u64 [a3 + 0x8]\n 20926: a2 = u64 [a3 + 0x10]\n 20929: a3 = u64 [a3 + 0x18]\n 20932: t0 = 712, jump @1447\n      : @721 [@dyn 356] (gas: 17)\n 20938: a4 = a3 + 0x3\n 20941: a3 = a4 <u a3\n 20944: a5 = a2 + a3\n 20947: a2 = a5 <u a2\n 20950: a2 = a3 if a3 == 0\n 20953: a2 = a2 + a1\n 20956: a1 = a2 <u a1\n 20959: a0 = a0 + a1\n 20962: a1 = s1 + 0x3958\n 20966: a3 = a1 + 0x100\n 20970: u64 [a3 + 0x28] = a4\n 20973: u64 [a3 + 0x30] = a5\n 20976: u64 [a3 + 0x38] = a2\n 20979: u64 [a3 + 0x40] = a0\n 20982: a0 = s1 + 0x1aa0\n 20986: a1 = s1 + 0x3a80\n 20990: ra = 714, jump @6\n      : @722 [@dyn 357] (gas: 15)\n 20996: a0 = s1 + 0x1958\n 21000: a2 = a0 + 0x100\n 21004: a1 = u64 [a2 + 0x48]\n 21007: u64 [s1 + 0x188] = a1\n 21011: a1 = u64 [a2 + 0x50]\n 21014: u64 [s1 + 0x180] = a1\n 21018: a1 = u64 [a2 + 0x58]\n 21021: u64 [s1 + 0x178] = a1\n 21025: a0 = u64 [a2 + 0x60]\n 21028: u64 [s1 + 0x170] = a0\n 21032: a0 = s1 + 0x4000\n 21036: i32 a0 = a0 + 0xfffffffffffffaa0\n 21040: ra = 0x2cc\n 21044: ecalli 8 // 'now'\n 21046: fallthrough\n      : @723 [@dyn 358] (gas: 18)\n 21047: a1 = s1 + 0x3958\n 21051: a4 = a1 + 0x100\n 21055: a0 = u64 [a4 + 0x60]\n 21058: t0 = u64 [a1 + 0x148]\n 21062: a2 = u64 [a4 + 0x58]\n 21065: a3 = u64 [a4 + 0x50]\n 21068: a1 = u64 [s1 + 0x170]\n 21072: a4 = a0 ^ a1\n 21075: a1 = a0 <u a1\n 21078: a0 = u64 [s1 + 0x178]\n 21082: a5 = a2 <u a0\n 21085: a5 = a1 if a4 != 0\n 21088: a1 = u64 [s1 + 0x180]\n 21092: t1 = a3 ^ a1\n 21095: a3 = a3 <u a1\n 21098: a1 = u64 [s1 + 0x188]\n 21102: a1 = t0 <u a1\n 21105: t0 = 718, jump @1456\n      : @724 [@dyn 359] (gas: 1)\n 21111: jump @726 if a1 != 0\n      : @725 (gas: 1)\n 21114: jump @882\n      : @726 (gas: 12)\n 21117: a0 = u64 [s1 + 0x1b8]\n 21121: a2 = s1 + 0x1958\n 21125: u64 [a2 + 0x88] = a0\n 21129: a0 = u64 [s1 + 0x1b0]\n 21133: u64 [a2 + 0x90] = a0\n 21137: a0 = u64 [s1 + 0x1a8]\n 21141: u64 [a2 + 0x98] = a0\n 21145: a1 = s1 + 0x19e0\n 21149: a0 = u64 [s1 + 0x1a0]\n 21153: u64 [a2 + 0xa0] = a0\n 21157: a0 = 0\n 21159: ra = 720, jump @4\n      : @727 [@dyn 360] (gas: 9)\n 21165: a1 = s1 + 0x1958\n 21169: u64 [a1 + 128] = 0\n 21173: u64 [a1 + 120] = 0\n 21176: u64 [a1 + 104] = 0x2\n 21180: a2 = a1\n 21182: a0 = 0x20\n 21185: a1 = s1 + 0x19c0\n 21189: u64 [a2 + 112] = 0\n 21192: ra = 722, jump @4\n      : @728 [@dyn 361] (gas: 3)\n 21198: a1 = u64 [s1 + 0x190]\n 21202: a0 = i32 [a1]\n 21204: jump @730 if a0 >u 63\n      : @729 (gas: 2)\n 21208: u32 [a1 + 0] = 0x40\n 21211: fallthrough\n      : @730 (gas: 4)\n 21212: a0 = sp + 0xffffffffffffffe0\n 21215: a0 = a0 & 0xffffffffffffffe0\n 21218: u64 [s1 + 0x170] = a0\n 21222: t0 = 724, jump @1430\n      : @731 [@dyn 362] (gas: 13)\n 21228: ecalli 7 // 'hash_keccak_256'\n 21230: a1 = u64 [s1 + 0x170]\n 21234: a0 = u64 [a1 + 0x18]\n 21237: u64 [s1 + 0x188] = a0\n 21241: a0 = u64 [a1 + 0x10]\n 21244: u64 [s1 + 0x180] = a0\n 21248: a0 = u64 [a1 + 0x8]\n 21251: u64 [s1 + 0x178] = a0\n 21255: a0 = u64 [a1]\n 21257: u64 [s1 + 0x170] = a0\n 21261: t0 = 0x2d6\n 21265: a2 = s1 + 0x1958\n 21269: fallthrough\n      : @732 [@dyn 363] (gas: 11)\n 21270: a0 = u64 [s1 + 0x1a0]\n 21274: u64 [a2 + 0x60] = a0\n 21277: a0 = u64 [s1 + 0x1a8]\n 21281: u64 [a2 + 0x58] = a0\n 21284: a0 = u64 [s1 + 0x1b0]\n 21288: u64 [a2 + 0x50] = a0\n 21291: a1 = s1 + 0x19a0\n 21295: a0 = u64 [s1 + 0x1b8]\n 21299: u64 [a2 + 0x48] = a0\n 21302: a0 = 0\n 21304: ra = 728, jump @4\n      : @733 [@dyn 364] (gas: 9)\n 21310: a1 = s1 + 0x1958\n 21314: u64 [a1 + 64] = 0\n 21317: u64 [a1 + 56] = 0\n 21320: u64 [a1 + 40] = 0x3\n 21324: a2 = a1\n 21326: a0 = 0x20\n 21329: a1 = s1 + 0x1980\n 21333: u64 [a2 + 48] = 0\n 21336: ra = 730, jump @4\n      : @734 [@dyn 365] (gas: 3)\n 21342: a1 = u64 [s1 + 0x190]\n 21346: a0 = i32 [a1]\n 21348: jump @736 if a0 >u 63\n      : @735 (gas: 2)\n 21352: u32 [a1 + 0] = 0x40\n 21355: fallthrough\n      : @736 (gas: 13)\n 21356: a0 = u64 [s1 + 0x170]\n 21360: a0 = reverse a0\n 21362: u64 [s1 + 0x160] = a0\n 21366: a0 = u64 [s1 + 0x178]\n 21370: a0 = reverse a0\n 21372: u64 [s1 + 0x158] = a0\n 21376: a0 = u64 [s1 + 0x180]\n 21380: a0 = reverse a0\n 21382: u64 [s1 + 0x150] = a0\n 21386: a0 = u64 [s1 + 0x188]\n 21390: a0 = reverse a0\n 21392: u64 [s1 + 0x148] = a0\n 21396: t0 = 732, jump @1427\n      : @737 [@dyn 366] (gas: 45)\n 21402: ecalli 7 // 'hash_keccak_256'\n 21404: a3 = u64 [s1 + 0x188]\n 21408: a0 = u64 [a3 + 0x18]\n 21411: a1 = u64 [a3 + 0x10]\n 21414: a2 = u64 [a3 + 0x8]\n 21417: a3 = u64 [a3]\n 21419: a0 = reverse a0\n 21421: u64 [s1 + 0x180] = a0\n 21425: a0 = reverse a1\n 21427: u64 [s1 + 0x178] = a0\n 21431: a0 = reverse a2\n 21433: u64 [s1 + 0x170] = a0\n 21437: a0 = reverse a3\n 21439: u64 [s1 + 0x168] = a0\n 21443: a0 = sp + 0xffffffffffffffe0\n 21446: a0 = a0 & 0xffffffffffffffe0\n 21449: u64 [s1 + 0x188] = a0\n 21453: sp = a0\n 21455: a0 = 0x30160\n 21460: u64 [s1 + 0x140] = a0\n 21464: i32 a0 = a0 + 0\n 21466: u64 [s1 + 0x118] = a0\n 21470: ecalli 4 // 'caller'\n 21472: a2 = u64 [s1 + 0x140]\n 21476: a0 = u64 [a2 + 0x8]\n 21479: a1 = i32 [a2 + 0x10]\n 21482: a2 = u64 [a2]\n 21484: a0 = reverse a0\n 21486: a3 = a0 << 0x20\n 21489: a1 = reverse a1\n 21491: a1 = a1 >> 0x20\n 21494: a3 = a3 | a1\n 21497: a0 = a0 >> 0x20\n 21500: a1 = reverse a2\n 21502: a2 = a1 << 0x20\n 21505: a0 = a0 | a2\n 21508: a1 = a1 >> 0x20\n 21511: a2 = s1 + 0x1958\n 21515: u64 [a2 + 32] = 0\n 21518: u64 [a2 + 0x18] = a1\n 21521: u64 [a2 + 0x10] = a0\n 21524: a1 = s1 + 0x1960\n 21528: u64 [a2 + 0x8] = a3\n 21531: a0 = 0\n 21533: ra = 734, jump @4\n      : @738 [@dyn 367] (gas: 13)\n 21539: a0 = u64 [s1 + 0x168]\n 21543: a1 = s1 + 0x1958\n 21547: u64 [a1] = a0\n 21549: a0 = u64 [s1 + 0x170]\n 21553: u64 [a1 + 0xfffffffffffffff8] = a0\n 21556: a0 = u64 [s1 + 0x178]\n 21560: u64 [a1 + 0xfffffffffffffff0] = a0\n 21563: a3 = a1\n 21565: a0 = 0x20\n 21568: a1 = s1 + 0x1940\n 21572: a2 = u64 [s1 + 0x180]\n 21576: u64 [a3 + 0xffffffffffffffe8] = a2\n 21579: ra = 736, jump @4\n      : @739 [@dyn 368] (gas: 3)\n 21585: a1 = u64 [s1 + 0x190]\n 21589: a0 = i32 [a1]\n 21591: jump @741 if a0 >=u 64\n      : @740 (gas: 2)\n 21595: u32 [a1 + 0] = 0x40\n 21598: fallthrough\n      : @741 (gas: 4)\n 21599: a0 = sp + 0xffffffffffffffe0\n 21602: a0 = a0 & 0xffffffffffffffe0\n 21605: u64 [s1 + 0x180] = a0\n 21609: t0 = 738, jump @1430\n      : @742 [@dyn 369] (gas: 3)\n 21615: ra = 0x2e4\n 21619: ecalli 7 // 'hash_keccak_256'\n 21621: fallthrough\n      : @743 [@dyn 370] (gas: 5)\n 21622: a1 = u64 [s1 + 0x148]\n 21626: a0 = a1 + 0x2\n 21629: a1 = a0 <u a1\n 21632: a3 = u64 [s1 + 0x150]\n 21636: t0 = 742, jump @1463\n      : @744 [@dyn 371] (gas: 31)\n 21642: a5 = s1 + 0x3958\n 21646: u64 [a5 + 0x170] = a2\n 21650: a4 = u64 [s1 + 0x180]\n 21654: a1 = u64 [a4 + 0x10]\n 21657: u64 [a5 + 0x168] = a0\n 21661: a0 = u64 [a4 + 0x18]\n 21664: a2 = u64 [s1 + 0x158]\n 21668: a3 = a3 + a2\n 21671: u64 [a5 + 0x178] = a3\n 21675: a2 = a3 <u a2\n 21678: a3 = u64 [s1 + 0x160]\n 21682: a2 = a2 + a3\n 21685: u64 [a5 + 0x180] = a2\n 21689: a2 = u64 [a4 + 0x8]\n 21692: a3 = u64 [a4]\n 21694: a5 = reverse a0\n 21696: a4 = reverse a1\n 21698: a1 = reverse a2\n 21700: a2 = reverse a3\n 21702: a0 = u64 [s1 + 0x188]\n 21706: u64 [s1 + 0x178] = a2\n 21710: u64 [a0 + 0x18] = a2\n 21713: u64 [s1 + 0x180] = a1\n 21717: u64 [a0 + 0x10] = a1\n 21720: u64 [s1 + 0x170] = a4\n 21724: u64 [a0 + 0x8] = a4\n 21727: u64 [s1 + 0x168] = a5\n 21731: u64 [a0] = a5\n 21733: a0 = s1 + 0x1920\n 21737: a1 = s1 + 0x3ac0\n 21741: ra = 744, jump @6\n      : @745 [@dyn 372] (gas: 15)\n 21747: a0 = s1 + 0x1140\n 21751: a2 = a0 + 0x700\n 21755: a1 = u64 [a2 + 0xe0]\n 21759: u64 [s1 + 0x138] = a1\n 21763: a1 = u64 [a2 + 0xe8]\n 21767: u64 [s1 + 0x130] = a1\n 21771: a1 = u64 [a2 + 0xf0]\n 21775: u64 [s1 + 0x128] = a1\n 21779: a0 = u64 [a2 + 0xf8]\n 21783: u64 [s1 + 0x120] = a0\n 21787: a0 = s1 + 0x4000\n 21791: i32 a0 = a0 + 0xfffffffffffffae0\n 21795: ra = 0x2ea\n 21799: ecalli 8 // 'now'\n 21801: fallthrough\n      : @746 [@dyn 373] (gas: 18)\n 21802: a3 = s1 + 0x3958\n 21806: a1 = a3 + 0x100\n 21810: a0 = u64 [a1 + 0xa0]\n 21814: t0 = u64 [a3 + 0x188]\n 21818: a2 = u64 [a1 + 0x98]\n 21822: a3 = u64 [a1 + 0x90]\n 21826: a1 = u64 [s1 + 0x120]\n 21830: a4 = a0 ^ a1\n 21833: a1 = a0 <u a1\n 21836: a0 = u64 [s1 + 0x128]\n 21840: a5 = a2 <u a0\n 21843: a5 = a1 if a4 != 0\n 21846: a1 = u64 [s1 + 0x130]\n 21850: t1 = a3 ^ a1\n 21853: a3 = a3 <u a1\n 21856: a1 = u64 [s1 + 0x138]\n 21860: a1 = t0 <u a1\n 21863: t0 = 748, jump @1456\n      : @747 [@dyn 374] (gas: 1)\n 21869: jump @754 if a1 != 0\n      : @748 (gas: 26)\n 21873: a5 = s1 + 0x100\n 21877: a0 = u64 [a5 + 0x48]\n 21880: a2 = a0 + 0x6\n 21883: a0 = a2 <u a0\n 21886: a1 = u64 [a5 + 0x50]\n 21889: a3 = a1 + a0\n 21892: a1 = a3 <u a1\n 21895: a1 = a0 if a0 == 0\n 21898: a0 = u64 [a5 + 0x58]\n 21901: a4 = a0 + a1\n 21904: a0 = a4 <u a0\n 21907: a1 = u64 [a5 + 0x60]\n 21910: a1 = a1 + a0\n 21913: a0 = s1 + 0x3958\n 21917: u64 [a5 + 0x38] = a2\n 21920: u64 [a0 + 0x1a8] = a2\n 21924: u64 [a5 + 0x30] = a3\n 21927: a2 = a0 + 0x100\n 21931: u64 [a2 + 0xb0] = a3\n 21935: u64 [a5 + 0x28] = a4\n 21938: u64 [a2 + 0xb8] = a4\n 21942: u64 [a5 + 0x20] = a1\n 21945: u64 [a2 + 0xc0] = a1\n 21949: a0 = s1 + 0x1900\n 21953: a1 = s1 + 0x3b00\n 21957: ra = 750, jump @6\n      : @749 [@dyn 375] (gas: 3)\n 21963: a0 = s1 + 0x1140\n 21967: a0 = u8 [a0 + 0x7d4]\n 21971: jump @751 if a0 <=u 3\n      : @750 (gas: 1)\n 21975: jump @1116\n      : @751 (gas: 1)\n 21978: jump @754 if a0 != 1\n      : @752 (gas: 14)\n 21983: a0 = sp + 0xffffffffffffffe0\n 21986: a1 = a0 & 0xffffffffffffffe0\n 21989: u64 [s1 + 0x110] = a1\n 21993: sp = a1\n 21995: a0 = u64 [s1 + 0x120]\n 21999: u64 [a1 + 0x18] = a0\n 22002: a0 = u64 [s1 + 0x128]\n 22006: u64 [a1 + 0x10] = a0\n 22009: a0 = u64 [s1 + 0x130]\n 22013: u64 [a1 + 0x8] = a0\n 22016: a0 = u64 [s1 + 0x138]\n 22020: u64 [a1] = a0\n 22022: a0 = s1 + 0x18e0\n 22026: ra = 752, jump @6\n      : @753 [@dyn 376] (gas: 19)\n 22032: a3 = s1 + 0x1140\n 22036: a4 = a3 + 0x700\n 22040: a0 = u64 [a4 + 0xa0]\n 22044: a1 = u64 [a4 + 0xa8]\n 22048: a2 = u64 [a4 + 0xb0]\n 22052: a3 = u64 [a4 + 0xb8]\n 22056: a4 = 0xffffff00ffffffff\n 22066: a2 = a2 & a4\n 22069: a4 = 0x200000000\n 22079: a2 = a2 | a4\n 22082: a4 = s1 + 0x3958\n 22086: a5 = a4 + 0x100\n 22090: u64 [a5 + 0xe0] = a3\n 22094: u64 [a5 + 0xd0] = a1\n 22098: u64 [a5 + 0xc8] = a0\n 22102: u64 [a5 + 0xd8] = a2\n 22106: a1 = s1 + 0x3b20\n 22110: a0 = u64 [s1 + 0x110]\n 22114: ra = 754, jump @9\n      : @754 [@dyn 377] (gas: 22)\n 22120: a0 = sp + 0xffffffffffffffe0\n 22123: a1 = a0 & 0xffffffffffffffe0\n 22126: sp = a1\n 22128: a2 = u64 [s1 + 0x168]\n 22132: a0 = a2 + 0x3\n 22135: a4 = a0 <u a2\n 22138: a3 = u64 [s1 + 0x170]\n 22142: a2 = a3 + a4\n 22145: a3 = a2 <u a3\n 22148: a3 = a4 if a4 == 0\n 22151: a4 = u64 [s1 + 0x180]\n 22155: a3 = a3 + a4\n 22158: a5 = a3 <u a4\n 22161: a4 = u64 [s1 + 0x178]\n 22165: a4 = a4 + a5\n 22168: u64 [a1 + 0x8] = a2\n 22171: u64 [a1] = a0\n 22173: u64 [a1 + 0x10] = a3\n 22176: u64 [a1 + 0x18] = a4\n 22179: a0 = s1 + 0x1880\n 22183: u64 [s1 + 0x138] = a1\n 22187: ra = 756, jump @6\n      : @755 [@dyn 378] (gas: 4)\n 22193: a0 = s1 + 0x1140\n 22197: a0 = u64 [a0 + 0x740]\n 22201: a1 = a0 & 0xff\n 22205: jump @779 if a1 != 0\n      : @756 (gas: 15)\n 22209: a3 = s1 + 0x1140\n 22213: a4 = a3 + 0x700\n 22217: a1 = u64 [a4 + 0x48]\n 22220: a2 = u64 [a4 + 0x58]\n 22223: a3 = u64 [a4 + 0x50]\n 22226: a0 = a0 | 0x1\n 22229: a4 = s1 + 0x3958\n 22233: a5 = a4 + 0x100\n 22237: u64 [a5 + 0xf0] = a1\n 22241: u64 [a5 + 0xe8] = a0\n 22245: u64 [a5 + 0xf8] = a3\n 22249: u64 [a4 + 0x200] = a2\n 22253: a1 = s1 + 0x3b40\n 22257: a0 = u64 [s1 + 0x138]\n 22261: ra = 758, jump @9\n      : @757 [@dyn 379] (gas: 13)\n 22267: a0 = u64 [s1 + 0x1a0]\n 22271: a2 = s1 + 0x1140\n 22275: a3 = a2 + 0x700\n 22279: u64 [a3 + 0x38] = a0\n 22282: a0 = u64 [s1 + 0x1a8]\n 22286: u64 [a3 + 0x30] = a0\n 22289: a0 = u64 [s1 + 0x1b0]\n 22293: u64 [a3 + 0x28] = a0\n 22296: a1 = s1 + 0x1860\n 22300: a0 = u64 [s1 + 0x1b8]\n 22304: u64 [a3 + 0x20] = a0\n 22307: a0 = 0\n 22309: ra = 760, jump @4\n      : @758 [@dyn 380] (gas: 3)\n 22315: t0 = 0x2fa\n 22319: a1 = s1 + 0x1140\n 22323: fallthrough\n      : @759 [@dyn 381] (gas: 8)\n 22324: u64 [a1 + 1816] = 0\n 22328: u64 [a1 + 1808] = 0\n 22332: u64 [a1 + 1792] = 0x4\n 22337: a2 = s1 + 0x1140\n 22341: a0 = 0x20\n 22344: a1 = s1 + 0x1840\n 22348: u64 [a2 + 1800] = 0\n 22352: ra = 764, jump @4\n      : @760 [@dyn 382] (gas: 7)\n 22358: a0 = sp + 0xffffffffffffffe0\n 22361: a0 = a0 & 0xffffffffffffffe0\n 22364: u64 [s1 + 0x138] = a0\n 22368: sp = a0\n 22370: a2 = u64 [s1 + 0x190]\n 22374: a0 = i32 [a2]\n 22376: jump @762 if a0 >u 63\n      : @761 (gas: 2)\n 22380: u32 [a2 + 0] = 0x40\n 22383: fallthrough\n      : @762 (gas: 4)\n 22384: a0 = sp + 0xffffffffffffffe0\n 22387: a0 = a0 & 0xffffffffffffffe0\n 22390: u64 [s1 + 0x130] = a0\n 22394: t0 = 766, jump @1430\n      : @763 [@dyn 383] (gas: 22)\n 22400: ecalli 7 // 'hash_keccak_256'\n 22402: a5 = s1 + 0x100\n 22406: a3 = u64 [a5 + 0x30]\n 22409: a0 = u64 [a3 + 0x18]\n 22412: a1 = u64 [a3 + 0x10]\n 22415: a2 = u64 [a3 + 0x8]\n 22418: a3 = u64 [a3]\n 22420: a0 = reverse a0\n 22422: a4 = reverse a1\n 22424: a2 = reverse a2\n 22426: a3 = reverse a3\n 22428: a1 = u64 [a5 + 0x38]\n 22431: u64 [a5 + 0x8] = a3\n 22434: u64 [a1 + 0x18] = a3\n 22437: u64 [a5 + 0x20] = a2\n 22440: u64 [a1 + 0x10] = a2\n 22443: u64 [a5 + 0x28] = a4\n 22446: u64 [a1 + 0x8] = a4\n 22449: u64 [a5 + 0x30] = a0\n 22452: u64 [a1] = a0\n 22454: a0 = s1 + 0x1820\n 22458: ra = 768, jump @6\n      : @764 [@dyn 384] (gas: 2)\n 22464: a3 = s1 + 0x1140\n 22468: fallthrough\n      : @765 (gas: 10)\n 22469: t0 = u64 [a3 + 0x6f8]\n 22473: a5 = u64 [a3 + 0x6f0]\n 22477: a4 = u64 [a3 + 0x6e8]\n 22481: a0 = t0 >u 0\n 22483: a1 = a5 >u 0\n 22485: a1 = a0 if t0 != 0\n 22488: a0 = a5 | t0\n 22491: a2 = a4 >u 0\n 22493: a2 = a1 if a0 != 0\n 22496: jump @767 if a2 == 0\n      : @766 (gas: 1)\n 22499: jump @1120\n      : @767 (gas: 22)\n 22502: a0 = u64 [a3 + 0x6e0]\n 22506: u64 [s1 + 0x190] = a0\n 22510: a0 = a0 + 0x1\n 22513: a1 = a0 <u 0x1\n 22516: a1 = a1 + a4\n 22519: a2 = a0 | a1\n 22522: a2 = a2 <u 0x1\n 22525: a2 = a2 + a5\n 22528: a3 = a2 <u a5\n 22531: a3 = a3 + t0\n 22534: u64 [s1 + 0x100] = a4\n 22538: a4 = s1 + 0x3958\n 22542: u64 [a4 + 0x208] = a0\n 22546: a0 = a4 + 0x200\n 22550: u64 [a0 + 0x10] = a1\n 22553: u64 [a0 + 0x18] = a2\n 22556: u64 [a0 + 0x20] = a3\n 22559: a1 = s1 + 0x3b60\n 22563: a0 = u64 [s1 + 0x138]\n 22567: u64 [s1 + 0x138] = a5\n 22571: u64 [s1 + 0xf8] = t0\n 22575: ra = 770, jump @9\n      : @768 [@dyn 385] (gas: 27)\n 22581: a0 = sp + 0xffffffffffffffe0\n 22584: a0 = a0 & 0xffffffffffffffe0\n 22587: u64 [s1 + 0x110] = a0\n 22591: sp = a0\n 22593: a1 = s1 + 0x1140\n 22597: a0 = u64 [s1 + 0xf8]\n 22601: a2 = a1 + 0x600\n 22605: u64 [a2 + 0x78] = a0\n 22608: a0 = u64 [s1 + 0x138]\n 22612: u64 [a2 + 0x70] = a0\n 22615: a0 = u64 [s1 + 0x100]\n 22619: u64 [a2 + 0x68] = a0\n 22622: a0 = u64 [s1 + 0x190]\n 22626: u64 [a2 + 0x60] = a0\n 22629: a0 = u64 [s1 + 0x108]\n 22633: u64 [a2 + 0x98] = a0\n 22637: a0 = u64 [s1 + 0x120]\n 22641: u64 [a2 + 0x90] = a0\n 22645: a0 = u64 [s1 + 0x128]\n 22649: u64 [a2 + 0x88] = a0\n 22653: a4 = s1 + 0x1140\n 22657: a0 = s1 + 0x17e0\n 22661: a1 = s1 + 0x17c0\n 22665: a2 = s1 + 0x17a0\n 22669: a3 = u64 [s1 + 0x130]\n 22673: u64 [a4 + 0x680] = a3\n 22677: ra = 772, jump @1200\n      : @769 [@dyn 386] (gas: 21)\n 22683: a1 = s1 + 0x1140\n 22687: a5 = a1 + 0x600\n 22691: a0 = u64 [a5 + 0xd8]\n 22695: u64 [s1 + 0x190] = a0\n 22699: a0 = u64 [a5 + 0xd0]\n 22703: u64 [s1 + 0x120] = a0\n 22707: a0 = u64 [a5 + 0xc8]\n 22711: u64 [s1 + 0x130] = a0\n 22715: a0 = u64 [a5 + 0xc0]\n 22719: u64 [s1 + 0x138] = a0\n 22723: a0 = u64 [a5 + 0xb0]\n 22727: a4 = u64 [a5 + 0xb8]\n 22731: a2 = u64 [a5 + 0xa0]\n 22735: a3 = u64 [a5 + 0xa8]\n 22739: a1 = u64 [s1 + 0x110]\n 22743: u64 [a1 + 0x10] = a0\n 22746: u64 [a1 + 0x18] = a4\n 22749: u64 [a1] = a2\n 22751: u64 [a1 + 0x8] = a3\n 22754: a0 = s1 + 0x1780\n 22758: ra = 774, jump @6\n      : @770 [@dyn 387] (gas: 67)\n 22764: a1 = s1 + 0x1140\n 22768: a2 = a1 + 0x600\n 22772: a0 = u64 [a2 + 0x50]\n 22775: u64 [s1 + 0xf0] = a0\n 22779: a0 = u64 [a2 + 0x58]\n 22782: u64 [s1 + 0xe8] = a0\n 22786: a0 = u64 [a2 + 0x40]\n 22789: a4 = s1 + 0x1140\n 22793: u64 [s1 + 0xe0] = a0\n 22797: a2 = u64 [s1 + 0x138]\n 22801: a0 = a2 >> 0x3d\n 22804: a3 = u64 [s1 + 0x130]\n 22808: a1 = a3 << 0x3\n 22811: a0 = a0 | a1\n 22814: u64 [s1 + 0x128] = a0\n 22818: a0 = a3 >> 0x3d\n 22821: a3 = u64 [s1 + 0x120]\n 22825: a1 = a3 << 0x3\n 22828: a0 = a0 | a1\n 22831: u64 [s1 + 0x130] = a0\n 22835: a0 = u64 [a4 + 0x648]\n 22839: u64 [s1 + 0xd8] = a0\n 22843: a0 = a3 >> 0x3d\n 22846: a1 = u64 [s1 + 0x190]\n 22850: a1 = a1 << 0x3\n 22853: a0 = a0 | a1\n 22856: u64 [s1 + 0x120] = a0\n 22860: a2 = a2 << 0x3\n 22863: u64 [s1 + 0x190] = a2\n 22867: a0 = u64 [s1 + 0x118]\n 22871: ecalli 4 // 'caller'\n 22873: a2 = u64 [s1 + 0x128]\n 22877: a0 = a2 >u 0\n 22879: a5 = u64 [s1 + 0x190]\n 22883: a1 = a5 <u 0x100\n 22887: a3 = a1 ^ 0x1\n 22890: a3 = a0 if a2 != 0\n 22893: a4 = u64 [s1 + 0x120]\n 22897: a0 = a4 >u 0\n 22899: a2 = u64 [s1 + 0x130]\n 22903: a1 = a2 >u 0\n 22905: a1 = a0 if a4 != 0\n 22908: a0 = a4\n 22910: a4 = u64 [s1 + 0x140]\n 22914: t1 = u64 [a4 + 0x8]\n 22917: a2 = a2 | a0\n 22920: t0 = i32 [a4 + 0x10]\n 22923: a3 = a1 if a2 != 0\n 22926: u64 [s1 + 0x108] = a3\n 22930: a1 = u64 [a4]\n 22932: a0 = reverse t1\n 22934: a2 = a0 << 0x20\n 22937: a3 = reverse t0\n 22939: a3 = a3 >> 0x20\n 22942: a3 = a3 | a2\n 22945: u64 [s1 + 0x100] = a3\n 22949: a0 = a0 >> 0x20\n 22952: a4 = reverse a1\n 22954: a2 = a4 << 0x20\n 22957: a1 = a2 | a0\n 22960: u64 [s1 + 0xf8] = a1\n 22964: a4 = a4 >> 0x20\n 22967: u64 [s1 + 0x130] = a4\n 22971: i32 a2 = 0x80 - a5\n 22975: u64 [s1 + 0xd0] = a2\n 22979: a0 = a3\n 22981: ra = 776, jump @1474\n      : @771 [@dyn 388] (gas: 8)\n 22987: u64 [s1 + 0x120] = a0\n 22991: u64 [s1 + 0xc0] = a1\n 22995: a0 = u64 [s1 + 0x138]\n 22999: i32 a2 = a0 << 0x3\n 23002: u64 [s1 + 0x128] = a2\n 23006: a0 = u64 [s1 + 0x130]\n 23010: a1 = 0\n 23012: ra = 778, jump @1479\n      : @772 [@dyn 389] (gas: 10)\n 23018: u64 [s1 + 0xb8] = a1\n 23022: a1 = u64 [s1 + 0x120]\n 23026: a0 = a0 | a1\n 23029: u64 [s1 + 0x138] = a0\n 23033: a0 = u64 [s1 + 0x190]\n 23037: i32 a2 = a0 + 0xffffffffffffff80\n 23040: u64 [s1 + 0xc8] = a2\n 23044: a0 = u64 [s1 + 0x100]\n 23048: a1 = u64 [s1 + 0xf8]\n 23052: ra = 780, jump @1479\n      : @773 [@dyn 390] (gas: 18)\n 23058: a2 = u64 [s1 + 0x190]\n 23062: a4 = a2 <u 0x80\n 23066: u64 [s1 + 0x120] = a4\n 23070: a3 = u64 [s1 + 0x138]\n 23074: a0 = a3 if a4 != 0\n 23077: a3 = u64 [s1 + 0x130]\n 23081: a0 = a3 if a2 == 0\n 23084: u64 [s1 + 0x138] = a0\n 23088: a0 = u64 [s1 + 0xc0]\n 23092: a3 = u64 [s1 + 0xb8]\n 23096: a0 = a0 | a3\n 23099: a0 = a1 if a4 == 0\n 23102: a0 = 0 if a2 == 0\n 23104: u64 [s1 + 0x130] = a0\n 23108: a0 = u64 [s1 + 0x100]\n 23112: a1 = u64 [s1 + 0xf8]\n 23116: a2 = u64 [s1 + 0x128]\n 23120: ra = 782, jump @1479\n      : @774 [@dyn 391] (gas: 20)\n 23126: a2 = a1\n 23128: a1 = u64 [s1 + 0x120]\n 23132: a0 = 0 if a1 == 0\n 23134: a2 = 0 if a1 == 0\n 23136: a3 = u64 [s1 + 0x108]\n 23140: a1 = u64 [s1 + 0x130]\n 23144: a1 = 0 if a3 != 0\n 23146: u64 [s1 + 0x130] = a1\n 23150: a1 = u64 [s1 + 0x138]\n 23154: a1 = 0 if a3 != 0\n 23156: u64 [s1 + 0x138] = a1\n 23160: a2 = 0 if a3 != 0\n 23162: u64 [s1 + 0x100] = a2\n 23166: a0 = 0 if a3 != 0\n 23168: u64 [s1 + 0xf8] = a0\n 23172: a0 = 0xffffffff\n 23182: u64 [s1 + 0xc0] = a0\n 23186: a1 = 0\n 23188: a2 = u64 [s1 + 0x128]\n 23192: ra = 784, jump @1479\n      : @775 [@dyn 392] (gas: 6)\n 23198: u64 [s1 + 0xa8] = a0\n 23202: u64 [s1 + 0xb8] = a1\n 23206: a0 = 0xffffffffffffffff\n 23209: a1 = 0xffffffffffffffff\n 23212: a2 = u64 [s1 + 0xd0]\n 23216: ra = 786, jump @1474\n      : @776 [@dyn 393] (gas: 8)\n 23222: u64 [s1 + 0xb0] = a1\n 23226: a1 = u64 [s1 + 0xa8]\n 23230: a0 = a0 | a1\n 23233: u64 [s1 + 0xd0] = a0\n 23237: a0 = 0xffffffffffffffff\n 23240: a1 = 0xffffffffffffffff\n 23243: a2 = u64 [s1 + 0xc8]\n 23247: ra = 788, jump @1479\n      : @777 [@dyn 394] (gas: 17)\n 23253: a2 = u64 [s1 + 0x120]\n 23257: a3 = u64 [s1 + 0xd0]\n 23261: a0 = a3 if a2 != 0\n 23264: a4 = u64 [s1 + 0x190]\n 23268: a3 = u64 [s1 + 0xc0]\n 23272: a0 = a3 if a4 == 0\n 23275: u64 [s1 + 0xd0] = a0\n 23279: a0 = u64 [s1 + 0xb8]\n 23283: a3 = u64 [s1 + 0xb0]\n 23287: a0 = a0 | a3\n 23290: a0 = a1 if a2 == 0\n 23293: a0 = 0 if a4 == 0\n 23295: u64 [s1 + 0x190] = a0\n 23299: a0 = 0xffffffffffffffff\n 23302: a1 = 0xffffffffffffffff\n 23305: a2 = u64 [s1 + 0x128]\n 23309: ra = 790, jump @1479\n      : @778 [@dyn 395] (gas: 40)\n 23315: a2 = u64 [s1 + 0x120]\n 23319: a0 = 0 if a2 == 0\n 23321: a1 = 0 if a2 == 0\n 23323: a2 = u64 [s1 + 0x190]\n 23327: a2 = a2 ^ 0xffffffffffffffff\n 23330: a3 = u64 [s1 + 0xd0]\n 23334: a3 = a3 ^ 0xffffffffffffffff\n 23337: a1 = a1 ^ 0xffffffffffffffff\n 23340: a0 = a0 ^ 0xffffffffffffffff\n 23343: a4 = u64 [s1 + 0x108]\n 23347: a3 = 0xffffffffffffffff if a4 != 0\n 23350: a2 = 0xffffffffffffffff if a4 != 0\n 23353: a0 = 0xffffffffffffffff if a4 != 0\n 23356: a1 = 0xffffffffffffffff if a4 != 0\n 23359: a4 = u64 [s1 + 0xd8]\n 23363: a1 = a1 & a4\n 23366: a4 = u64 [s1 + 0xe0]\n 23370: a0 = a0 & a4\n 23373: a4 = u64 [s1 + 0xe8]\n 23377: a2 = a2 & a4\n 23380: a4 = u64 [s1 + 0xf0]\n 23384: a3 = a3 & a4\n 23387: a5 = s1 + 0x100\n 23391: a4 = u64 [a5 + 0x38]\n 23394: a3 = a3 | a4\n 23397: a4 = u64 [a5 + 0x30]\n 23400: a2 = a2 | a4\n 23403: a4 = u64 [s1 + 0xf8]\n 23407: a0 = a0 | a4\n 23410: a4 = u64 [a5]\n 23412: a1 = a1 | a4\n 23415: a4 = s1 + 0x3958\n 23419: u64 [a4 + 0x230] = a1\n 23423: a1 = a4 + 0x200\n 23427: u64 [a1 + 0x28] = a0\n 23430: u64 [a1 + 0x40] = a2\n 23433: u64 [a1 + 0x38] = a3\n 23436: a1 = s1 + 0x3b80\n 23440: a0 = u64 [a5 + 0x10]\n 23443: ra = 792, jump @9\n      : @779 [@dyn 396] (gas: 21)\n 23449: a0 = s1 + 0x3958\n 23453: u64 [a0 + 608] = 0\n 23457: u64 [a0 + 600] = 0\n 23461: u64 [a0 + 592] = 0\n 23465: u64 [a0 + 584] = 0\n 23469: a0 = s1 + 0x4000\n 23473: i32 a0 = a0 + 0xfffffffffffffba0\n 23477: ecalli 14 // 'value_transferred'\n 23479: a0 = s1 + 0x3958\n 23483: a2 = a0 + 0x200\n 23487: a1 = u64 [a2 + 0x48]\n 23490: u64 [s1 + 0x190] = a1\n 23494: a1 = u64 [a2 + 0x50]\n 23497: u64 [s1 + 0x138] = a1\n 23501: a1 = u64 [a2 + 0x58]\n 23504: u64 [s1 + 0x130] = a1\n 23508: a0 = u64 [a2 + 0x60]\n 23511: u64 [s1 + 0x128] = a0\n 23515: a0 = s1 + 0x1760\n 23519: a1 = u64 [s1 + 0x188]\n 23523: ra = 794, jump @6\n      : @780 [@dyn 397] (gas: 24)\n 23529: a4 = s1 + 0x1140\n 23533: a5 = a4 + 0x600\n 23537: a3 = u64 [a5 + 0x20]\n 23540: a0 = u64 [a5 + 0x28]\n 23543: a1 = u64 [a5 + 0x30]\n 23546: a2 = u64 [a5 + 0x38]\n 23549: a5 = u64 [s1 + 0x128]\n 23553: u64 [a4 + 0x5d8] = a5\n 23557: a5 = u64 [s1 + 0x130]\n 23561: u64 [a4 + 0x5d0] = a5\n 23565: a5 = u64 [s1 + 0x138]\n 23569: u64 [a4 + 0x5c8] = a5\n 23573: a5 = u64 [s1 + 0x190]\n 23577: u64 [a4 + 0x5c0] = a5\n 23581: a5 = a4 + 0x500\n 23585: u64 [a5 + 0xf8] = a2\n 23589: u64 [a5 + 0xf0] = a1\n 23593: u64 [a5 + 0xe8] = a0\n 23597: a4 = s1 + 0x1140\n 23601: a0 = s1 + 0x1740\n 23605: a1 = s1 + 0x1720\n 23609: a2 = s1 + 0x1700\n 23613: u64 [a4 + 0x5e0] = a3\n 23617: ra = 796, jump @1275\n      : @781 [@dyn 398] (gas: 15)\n 23623: a3 = s1 + 0x1140\n 23627: a4 = a3 + 0x600\n 23631: a0 = u64 [a4 + 0x18]\n 23634: a1 = u64 [a4 + 0x10]\n 23637: a2 = u64 [a4 + 0x8]\n 23640: a3 = u64 [a4]\n 23642: a4 = s1 + 0x3958\n 23646: a5 = a4 + 0x200\n 23650: u64 [a5 + 0x80] = a0\n 23654: u64 [a5 + 0x78] = a1\n 23657: u64 [a5 + 0x70] = a2\n 23660: u64 [a5 + 0x68] = a3\n 23663: a1 = s1 + 0x3bc0\n 23667: a0 = u64 [s1 + 0x188]\n 23671: ra = 798, jump @9\n      : @782 [@dyn 399] (gas: 24)\n 23677: a0 = sp + 0xffffffffffffffe0\n 23680: t0 = a0 & 0xffffffffffffffe0\n 23683: sp = t0\n 23685: a0 = u64 [s1 + 0x168]\n 23689: a0 = a0 + 0x1\n 23692: a1 = a0 <u 0x1\n 23695: a2 = u64 [s1 + 0x170]\n 23699: a5 = a2 + a1\n 23702: a2 = a0 | a5\n 23705: a2 = a2 <u 0x1\n 23708: a3 = u64 [s1 + 0x180]\n 23712: a2 = a2 + a3\n 23715: a3 = a2 <u a3\n 23718: a4 = u64 [s1 + 0x178]\n 23722: a3 = a3 + a4\n 23725: a1 = t0\n 23727: u64 [s1 + 0x190] = t0\n 23731: a4 = t0\n 23733: u64 [a4 + 0x18] = a3\n 23736: u64 [a4 + 0x10] = a2\n 23739: u64 [a4 + 0x8] = a5\n 23742: u64 [a4] = a0\n 23744: a0 = s1 + 0x16e0\n 23748: ra = 800, jump @6\n      : @783 [@dyn 400] (gas: 14)\n 23754: a4 = s1 + 0x1140\n 23758: a5 = a4 + 0x500\n 23762: a2 = u64 [a5 + 0xa0]\n 23766: a0 = u64 [a5 + 0xa8]\n 23770: a1 = u64 [a5 + 0xb0]\n 23774: a3 = u64 [a5 + 0xb8]\n 23778: u64 [a5 + 0x78] = a3\n 23781: u64 [a5 + 0x70] = a1\n 23784: u64 [a5 + 0x68] = a0\n 23787: a3 = s1 + 0x1140\n 23791: a0 = s1 + 0x16c0\n 23795: a1 = s1 + 0x16a0\n 23799: u64 [a3 + 0x560] = a2\n 23803: ra = 802, jump @1267\n      : @784 [@dyn 401] (gas: 15)\n 23809: a3 = s1 + 0x1140\n 23813: a4 = a3 + 0x500\n 23817: a0 = u64 [a4 + 0x98]\n 23821: a1 = u64 [a4 + 0x90]\n 23825: a2 = u64 [a4 + 0x88]\n 23829: a3 = u64 [a4 + 0x80]\n 23833: a4 = s1 + 0x3958\n 23837: a5 = a4 + 0x200\n 23841: u64 [a5 + 0xa0] = a0\n 23845: u64 [a5 + 0x98] = a1\n 23849: u64 [a5 + 0x90] = a2\n 23853: u64 [a5 + 0x88] = a3\n 23857: a1 = s1 + 0x3be0\n 23861: a0 = u64 [s1 + 0x190]\n 23865: ra = 804, jump @9\n      : @785 [@dyn 402] (gas: 5)\n 23871: a0 = s1 + 0x4000\n 23875: i32 a0 = a0 + 0xfffffffffffffc00\n 23879: ra = 0x326\n 23883: ecalli 8 // 'now'\n 23885: fallthrough\n      : @786 [@dyn 403] (gas: 5)\n 23886: a1 = u64 [s1 + 0x168]\n 23890: a0 = a1 + 0x2\n 23893: a1 = a0 <u a1\n 23896: a3 = u64 [s1 + 0x170]\n 23900: t0 = 808, jump @1463\n      : @787 [@dyn 404] (gas: 22)\n 23906: a1 = u64 [s1 + 0x180]\n 23910: a3 = a3 + a1\n 23913: a1 = a3 <u a1\n 23916: a4 = u64 [s1 + 0x178]\n 23920: a1 = a1 + a4\n 23923: a4 = s1 + 0x3958\n 23927: a5 = a4 + 0x200\n 23931: u64 [a5 + 0xe0] = a1\n 23935: a1 = u64 [a5 + 0xb0]\n 23939: u64 [a5 + 0xd8] = a3\n 23943: a3 = u64 [a5 + 0xc0]\n 23947: u64 [a5 + 0xd0] = a2\n 23951: a2 = u64 [a5 + 0xb8]\n 23955: u64 [a5 + 0xc8] = a0\n 23959: a0 = u64 [a5 + 0xa8]\n 23963: u64 [a4 + 0x300] = a3\n 23967: u64 [a5 + 0xf8] = a2\n 23971: u64 [a5 + 0xf0] = a1\n 23975: u64 [a5 + 0xe8] = a0\n 23979: a0 = s1 + 0x3c20\n 23983: a1 = s1 + 0x3c40\n 23987: ra = 810, jump @9\n      : @788 [@dyn 405] (gas: 8)\n 23993: a0 = sp + 0xffffffffffffffe0\n 23996: a5 = a0 & 0xffffffffffffffe0\n 23999: sp = a5\n 24001: a1 = u64 [s1 + 0x148]\n 24005: a0 = a1 + 0x4\n 24008: a1 = a0 <u a1\n 24011: a3 = u64 [s1 + 0x150]\n 24015: t0 = 812, jump @1463\n      : @789 [@dyn 406] (gas: 31)\n 24021: a1 = u64 [s1 + 0x158]\n 24025: a3 = a3 + a1\n 24028: a1 = a3 <u a1\n 24031: a4 = u64 [s1 + 0x160]\n 24035: a1 = a1 + a4\n 24038: u64 [s1 + 0x190] = a5\n 24042: u64 [a5 + 0x18] = a1\n 24045: u64 [a5 + 0x10] = a3\n 24048: u64 [a5 + 0x8] = a2\n 24051: u64 [a5] = a0\n 24053: a0 = s1 + 0x3958\n 24057: u64 [a0 + 800] = 0\n 24061: u64 [a0 + 792] = 0\n 24065: u64 [a0 + 784] = 0\n 24069: u64 [a0 + 776] = 0\n 24073: a0 = s1 + 0x4000\n 24077: i32 a0 = a0 + 0xfffffffffffffc60\n 24081: ecalli 14 // 'value_transferred'\n 24083: a0 = s1 + 0x3958\n 24087: a2 = a0 + 0x300\n 24091: a1 = u64 [a2 + 0x8]\n 24094: u64 [s1 + 0x180] = a1\n 24098: a1 = u64 [a2 + 0x10]\n 24101: u64 [s1 + 0x178] = a1\n 24105: a1 = u64 [a2 + 0x18]\n 24108: u64 [s1 + 0x170] = a1\n 24112: a0 = u64 [a2 + 0x20]\n 24115: u64 [s1 + 0x168] = a0\n 24119: a0 = s1 + 0x1680\n 24123: a1 = u64 [s1 + 0x190]\n 24127: ra = 814, jump @6\n      : @790 [@dyn 407] (gas: 23)\n 24133: a4 = s1 + 0x1140\n 24137: a3 = u64 [a4 + 0x540]\n 24141: a0 = u64 [a4 + 0x548]\n 24145: a1 = u64 [a4 + 0x550]\n 24149: a2 = u64 [a4 + 0x558]\n 24153: a5 = u64 [s1 + 0x168]\n 24157: u64 [a4 + 0x4f8] = a5\n 24161: a5 = u64 [s1 + 0x170]\n 24165: u64 [a4 + 0x4f0] = a5\n 24169: a5 = u64 [s1 + 0x178]\n 24173: u64 [a4 + 0x4e8] = a5\n 24177: a5 = u64 [s1 + 0x180]\n 24181: u64 [a4 + 0x4e0] = a5\n 24185: a5 = a4 + 0x500\n 24189: u64 [a5 + 0x18] = a2\n 24192: u64 [a5 + 0x10] = a1\n 24195: u64 [a5 + 0x8] = a0\n 24198: a4 = s1 + 0x1140\n 24202: a0 = s1 + 0x1660\n 24206: a1 = s1 + 0x1640\n 24210: a2 = s1 + 0x1620\n 24214: u64 [a4 + 0x500] = a3\n 24218: ra = 816, jump @1275\n      : @791 [@dyn 408] (gas: 15)\n 24224: a3 = s1 + 0x1140\n 24228: a4 = a3 + 0x500\n 24232: a0 = u64 [a4 + 0x38]\n 24235: a1 = u64 [a4 + 0x30]\n 24238: a2 = u64 [a4 + 0x28]\n 24241: a3 = u64 [a4 + 0x20]\n 24244: a4 = s1 + 0x3958\n 24248: a5 = a4 + 0x300\n 24252: u64 [a5 + 0x40] = a0\n 24255: u64 [a5 + 0x38] = a1\n 24258: u64 [a5 + 0x30] = a2\n 24261: u64 [a5 + 0x28] = a3\n 24264: a1 = s1 + 0x3c80\n 24268: a0 = u64 [s1 + 0x190]\n 24272: ra = 818, jump @9\n      : @792 [@dyn 409] (gas: 3)\n 24278: a0 = s1 + 0x1600\n 24282: a1 = u64 [s1 + 0x188]\n 24286: ra = 820, jump @6\n      : @793 [@dyn 410] (gas: 13)\n 24292: a1 = s1 + 0x1140\n 24296: a2 = a1 + 0x400\n 24300: a0 = u64 [a2 + 0xd8]\n 24304: u64 [s1 + 0x170] = a0\n 24308: a0 = u64 [a2 + 0xd0]\n 24312: u64 [s1 + 0x168] = a0\n 24316: a0 = u64 [a2 + 0xc8]\n 24320: u64 [s1 + 0x160] = a0\n 24324: a0 = u64 [a2 + 0xc0]\n 24328: u64 [s1 + 0x158] = a0\n 24332: a0 = s1 + 0x15e0\n 24336: a1 = 0x40\n 24339: ra = 822, jump @2\n      : @794 [@dyn 411] (gas: 20)\n 24345: a1 = s1 + 0x1140\n 24349: a2 = a1 + 0x400\n 24353: a0 = u64 [a2 + 0xb8]\n 24357: u64 [s1 + 0x180] = a0\n 24361: a0 = u64 [a2 + 0xb0]\n 24365: u64 [s1 + 0x178] = a0\n 24369: a0 = u64 [a2 + 0xa8]\n 24373: u64 [s1 + 0x188] = a0\n 24377: a0 = u64 [a2 + 0xa0]\n 24381: u64 [s1 + 0x190] = a0\n 24385: a0 = s1 + 0x3958\n 24389: u64 [a0 + 864] = 0\n 24393: u64 [a0 + 856] = 0\n 24397: u64 [a0 + 848] = 0\n 24401: u64 [a0 + 840] = 0\n 24405: a0 = s1 + 0x4000\n 24409: i32 a0 = a0 + 0xfffffffffffffca0\n 24413: ra = 0x338\n 24417: ecalli 14 // 'value_transferred'\n 24419: fallthrough\n      : @795 [@dyn 412] (gas: 7)\n 24420: a3 = s1 + 0x100\n 24424: a0 = u64 [a3 + 0x80]\n 24428: a1 = u64 [a3 + 0x88]\n 24432: a0 = a0 | a1\n 24435: a2 = u64 [a3 + 0x78]\n 24438: a1 = u64 [a3 + 0x90]\n 24442: t0 = 826, jump @1472\n      : @796 [@dyn 413] (gas: 1)\n 24448: jump @798 if a0 == 0\n      : @797 (gas: 1)\n 24451: jump @912\n      : @798 (gas: 15)\n 24454: a3 = s1 + 0x3958\n 24458: a4 = a3 + 0x300\n 24462: a0 = u64 [a4 + 0x48]\n 24465: a1 = u64 [a4 + 0x50]\n 24468: a2 = u64 [a4 + 0x58]\n 24471: a3 = u64 [a4 + 0x60]\n 24474: a4 = s1 + 0x1140\n 24478: a5 = a4 + 0x400\n 24482: u64 [a5 + 0x98] = a3\n 24486: u64 [a5 + 0x90] = a2\n 24490: u64 [a5 + 0x88] = a1\n 24494: a1 = s1 + 0x15c0\n 24498: u64 [a5 + 0x80] = a0\n 24502: a0 = u64 [s1 + 0x190]\n 24506: ra = 828, jump @4\n      : @799 [@dyn 414] (gas: 11)\n 24512: a3 = s1 + 0x100\n 24516: a0 = u64 [a3 + 0x80]\n 24520: a1 = u64 [a3 + 0x78]\n 24523: a0 = a0 | a1\n 24526: a1 = 0xffffffe0\n 24536: a2 = u64 [a3 + 0x90]\n 24540: a1 = a2 <u a1\n 24543: a2 = u64 [a3 + 0x88]\n 24547: a1 = 0 if a2 != 0\n 24549: a1 = 0 if a0 != 0\n 24551: jump @801 if a1 != 0\n      : @800 (gas: 1)\n 24554: jump @912\n      : @801 (gas: 14)\n 24557: a0 = u64 [s1 + 0x190]\n 24561: i32 a0 = a0 + 0x20\n 24564: a3 = s1 + 0x1140\n 24568: a1 = u64 [s1 + 0x158]\n 24572: a4 = a3 + 0x400\n 24576: u64 [a4 + 0x60] = a1\n 24579: a1 = u64 [s1 + 0x160]\n 24583: u64 [a4 + 0x68] = a1\n 24586: a1 = u64 [s1 + 0x168]\n 24590: u64 [a4 + 0x70] = a1\n 24593: a1 = s1 + 0x15a0\n 24597: a2 = u64 [s1 + 0x170]\n 24601: u64 [a4 + 0x78] = a2\n 24604: ra = 830, jump @4\n      : @802 [@dyn 415] (gas: 45)\n 24610: a0 = u64 [s1 + 0x118]\n 24614: ecalli 4 // 'caller'\n 24616: a2 = u64 [s1 + 0x140]\n 24620: a0 = u64 [a2 + 0x8]\n 24623: a1 = i32 [a2 + 0x10]\n 24626: a2 = u64 [a2]\n 24628: a3 = reverse a0\n 24630: a0 = a3 << 0x20\n 24633: a1 = reverse a1\n 24635: a1 = a1 >> 0x20\n 24638: t0 = a1 | a0\n 24641: a3 = a3 >> 0x20\n 24644: a2 = reverse a2\n 24646: a1 = a2 << 0x20\n 24649: t1 = a1 | a3\n 24652: a2 = a2 >> 0x20\n 24655: a1 = s1 + 0x1140\n 24659: u64 [a1 + 1048] = 0\n 24663: a0 = u64 [s1 + 0x1a0]\n 24667: u64 [a1 + 0x438] = a0\n 24671: a0 = u64 [s1 + 0x1a8]\n 24675: u64 [a1 + 0x430] = a0\n 24679: a0 = u64 [s1 + 0x1b0]\n 24683: u64 [a1 + 0x428] = a0\n 24687: a0 = u64 [s1 + 0x1b8]\n 24691: u64 [a1 + 0x420] = a0\n 24695: a3 = u64 [0x20080]\n 24700: a4 = u64 [0x20088]\n 24705: a5 = u64 [0x20090]\n 24710: a0 = u64 [0x20098]\n 24715: u64 [a1 + 0x458] = a3\n 24719: a3 = a1 + 0x400\n 24723: u64 [a3 + 0x50] = a4\n 24726: u64 [a3 + 0x48] = a5\n 24729: u64 [a3 + 0x40] = a0\n 24732: u64 [a3 + 0x10] = a2\n 24735: u64 [a1 + 0x408] = t1\n 24739: a0 = s1 + 0x1140\n 24743: a1 = 0x40\n 24746: a2 = s1 + 0x1580\n 24750: a3 = s1 + 0x1560\n 24754: a4 = s1 + 0x1540\n 24758: u64 [a0 + 0x400] = t0\n 24762: a0 = u64 [s1 + 0x190]\n 24766: ra = 832, jump @12\n      : @803 [@dyn 416] (gas: 6)\n 24772: a0 = 0\n 24774: a1 = u64 [s1 + 0x198]\n 24778: a2 = 0\n 24780: ecalli 11 // 'seal_return'\n 24782: a1 = 0x20160\n 24787: jump @1079\n      : @804 (gas: 40)\n 24790: a1 = u64 [s1 + 0xf0]\n 24794: a0 = u64 [s1 + 0x180]\n 24798: t2 = a0 <u a1\n 24801: a5 = u64 [s1 + 0xb8]\n 24805: a0 = t0 ^ a5\n 24808: a2 = t0 <u a5\n 24811: a2 = t2 if a0 == 0\n 24814: a0 = u64 [s1 + 0xc0]\n 24818: a3 = a4 - a0\n 24821: t1 = a3 <u a2\n 24824: a4 = a4 <u a0\n 24827: a4 = a4 + t1\n 24830: u64 [s1 + 0x1b8] = a4\n 24834: t1 = u64 [s1 + 0xc8]\n 24838: a4 = u64 [s1 + 0x178]\n 24842: a4 = a4 - t1\n 24845: ra = u64 [s1 + 0x1b8]\n 24849: a4 = a4 - ra\n 24852: u64 [s1 + 0x1b8] = a4\n 24856: a3 = a3 - a2\n 24859: u64 [s1 + 0x1b0] = a3\n 24863: a2 = t0 - a5\n 24866: a2 = a2 - t2\n 24869: a4 = u64 [s1 + 0x180]\n 24873: a4 = a4 - a1\n 24876: a3 = s1 + 0x2158\n 24880: u64 [a3 + 0x168] = a1\n 24884: u64 [a3 + 0x148] = a4\n 24888: a4 = a3 + 0x100\n 24892: u64 [a4 + 0x70] = a5\n 24895: u64 [a4 + 0x78] = a0\n 24898: u64 [a4 + 0x50] = a2\n 24901: u64 [a3 + 0x180] = t1\n 24905: a0 = u64 [s1 + 0x1b0]\n 24909: u64 [a4 + 0x58] = a0\n 24912: a0 = s1 + 0x22c0\n 24916: a1 = s1 + 0x22a0\n 24920: a2 = u64 [s1 + 0x1b8]\n 24924: u64 [a4 + 0x60] = a2\n 24927: ra = 834, jump @1235\n      : @805 [@dyn 417] (gas: 25)\n 24933: u64 [s1 + 440] = 0\n 24937: u64 [s1 + 432] = 0\n 24941: u64 [s1 + 416] = 0\n 24945: u64 [s1 + 424] = 0\n 24949: a0 = u64 [s1 + 0xb0]\n 24953: a0 = a0 << 0x20\n 24956: a0 = a0 >> 0x20\n 24959: a2 = s1 + 0x100\n 24963: u64 [a2 + 0x40] = a0\n 24966: a0 = s1 + 0x3e00\n 24970: a0 = a0 << 0x20\n 24973: a0 = a0 >> 0x20\n 24976: a1 = s1 + 0x3e40\n 24980: a1 = a1 << 0x20\n 24983: a0 = a0 | a1\n 24986: u64 [a2 + 0x30] = a0\n 24989: a0 = u64 [s1 + 0xa8]\n 24993: a0 = a0 << 0x20\n 24996: a1 = a0 >> 0x20\n 24999: a0 = s1 + 0x3e20\n 25003: a0 = a0 << 0x20\n 25006: u64 [a2 + 0x28] = a1\n 25009: a0 = a0 | a1\n 25012: u64 [a2 + 0x20] = a0\n 25015: fallthrough\n      : @806 (gas: 3)\n 25016: a0 = s1 + 0x2280\n 25020: a1 = u64 [s1 + 0xf0]\n 25024: ra = 836, jump @2\n      : @807 [@dyn 418] (gas: 22)\n 25030: a5 = s1 + 0x2158\n 25034: a3 = a5 + 0x100\n 25038: a0 = u64 [a3 + 0x30]\n 25041: a1 = u64 [a3 + 0x40]\n 25044: a2 = u64 [a3 + 0x28]\n 25047: t2 = u64 [a5 + 0x138]\n 25051: ra = u64 [s1 + 0x1b0]\n 25055: t1 = ra ^ a0\n 25058: a0 = ra <u a0\n 25061: t0 = u64 [s1 + 0x1b8]\n 25065: a2 = t0 <u a2\n 25068: a2 = a0 if t1 != 0\n 25071: a4 = u64 [s1 + 0x1a0]\n 25075: a0 = a4 <u t2\n 25078: a3 = u64 [s1 + 0x1a8]\n 25082: t1 = a3 ^ a1\n 25085: a1 = a3 <u a1\n 25088: a1 = a0 if t1 == 0\n 25091: a0 = a4 ^ t2\n 25094: a0 = a0 | t1\n 25097: a1 = a2 if a0 == 0\n 25100: jump @896 if a1 == 0\n      : @808 (gas: 16)\n 25104: u64 [a5 + 0x8] = t0\n 25107: a0 = u64 [s1 + 0xf0]\n 25111: u64 [a5 + 0x28] = a0\n 25114: u64 [a5 + 0x10] = ra\n 25117: a0 = u64 [s1 + 0xb8]\n 25121: u64 [a5 + 0x30] = a0\n 25124: u64 [a5 + 0x18] = a4\n 25127: a0 = u64 [s1 + 0xc0]\n 25131: u64 [a5 + 0x38] = a0\n 25134: u64 [a5 + 0x20] = a3\n 25137: a0 = s1 + 0x21a0\n 25141: a1 = s1 + 0x2180\n 25145: a2 = s1 + 0x2160\n 25149: a3 = u64 [s1 + 0xc8]\n 25153: u64 [a5 + 0x40] = a3\n 25156: ra = 838, jump @1323\n      : @809 [@dyn 419] (gas: 3)\n 25162: t0 = 0x348\n 25166: a1 = s1 + 0x2158\n 25170: fallthrough\n      : @810 [@dyn 420] (gas: 12)\n 25171: a0 = u64 [a1 + 0x60]\n 25174: a2 = u64 [a1 + 0x58]\n 25177: a3 = u64 [a1 + 0x50]\n 25180: a1 = u64 [a1 + 0x48]\n 25183: a0 = a0 | a3\n 25186: a3 = a1 | a2\n 25189: a3 = a3 | a0\n 25192: a3 = a3 >> 0x20\n 25195: a0 = a0 | a2\n 25198: a0 = a0 << 0x20\n 25201: a0 = a0 | a3\n 25204: jump @912 if a0 != 0\n      : @811 (gas: 2)\n 25208: a0 = s1 + 0x2140\n 25212: ra = 842, jump @2\n      : @812 [@dyn 421] (gas: 12)\n 25218: a1 = s1 + 0x2158\n 25222: a2 = a1 + 0xffffffffffffff00\n 25226: a0 = u64 [a2 + 0xf8]\n 25230: a1 = s1 + 0x100\n 25234: u64 [a1 + 0x90] = a0\n 25238: a0 = u64 [a2 + 0xf0]\n 25242: u64 [a1 + 0x88] = a0\n 25246: a0 = u64 [a2 + 0xe8]\n 25250: u64 [a1 + 0x98] = a0\n 25254: t0 = 0x34c\n 25258: a2 = s1 + 0x1958\n 25262: fallthrough\n      : @813 [@dyn 422] (gas: 12)\n 25263: a0 = u64 [s1 + 0xd0]\n 25267: a3 = a2 + 0x700\n 25271: u64 [a3 + 0xe0] = a0\n 25275: a0 = u64 [s1 + 0xd8]\n 25279: u64 [a3 + 0xd8] = a0\n 25283: a0 = u64 [s1 + 0xe0]\n 25287: u64 [a3 + 0xd0] = a0\n 25291: a1 = s1 + 0x2120\n 25295: a0 = u64 [s1 + 0xe8]\n 25299: u64 [a3 + 0xc8] = a0\n 25303: a0 = 0\n 25305: ra = 846, jump @4\n      : @814 [@dyn 423] (gas: 9)\n 25311: a0 = s1 + 0x1958\n 25315: u64 [a0 + 1984] = 0\n 25319: u64 [a0 + 1976] = 0\n 25323: u64 [a0 + 1968] = 0\n 25327: a3 = a0\n 25329: a0 = 0x20\n 25332: a1 = s1 + 0x2100\n 25336: u64 [a3 + 1960] = 0x3\n 25341: ra = 848, jump @4\n      : @815 [@dyn 424] (gas: 3)\n 25347: a1 = u64 [s1 + 0xf8]\n 25351: a0 = i32 [a1]\n 25353: jump @817 if a0 >u 63\n      : @816 (gas: 2)\n 25357: u32 [a1 + 0] = 0x40\n 25360: fallthrough\n      : @817 (gas: 14)\n 25361: a0 = u64 [s1 + 0x138]\n 25365: a1 = u64 [s1 + 0x190]\n 25369: a0 = a0 & a1\n 25372: u64 [s1 + 0x168] = a0\n 25376: a1 = u64 [s1 + 0x188]\n 25380: a1 = a1 & 0xffffffffffffffff\n 25383: u64 [s1 + 0x170] = a1\n 25387: a1 = u64 [s1 + 0x198]\n 25391: a0 = a1 & 0xffffffffffffffff\n 25394: u64 [s1 + 0x178] = a0\n 25398: a0 = sp + 0xffffffffffffffe0\n 25401: a0 = a0 & 0xffffffffffffffe0\n 25404: u64 [s1 + 0x180] = a0\n 25408: t0 = 850, jump @1458\n      : @818 [@dyn 425] (gas: 21)\n 25414: ecalli 7 // 'hash_keccak_256'\n 25416: a3 = u64 [s1 + 0x180]\n 25420: a0 = u64 [a3 + 0x18]\n 25423: a1 = u64 [a3 + 0x10]\n 25426: a2 = u64 [a3 + 0x8]\n 25429: a3 = u64 [a3]\n 25431: a0 = reverse a0\n 25433: u64 [s1 + 0x160] = a0\n 25437: a0 = reverse a1\n 25439: u64 [s1 + 0x158] = a0\n 25443: a0 = reverse a2\n 25445: u64 [s1 + 0x150] = a0\n 25449: a0 = reverse a3\n 25451: u64 [s1 + 0x148] = a0\n 25455: a0 = sp + 0xffffffffffffffe0\n 25458: a0 = a0 & 0xffffffffffffffe0\n 25461: u64 [s1 + 0x180] = a0\n 25465: sp = a0\n 25467: t0 = 0x354\n 25471: a2 = s1 + 0x1958\n 25475: fallthrough\n      : @819 [@dyn 426] (gas: 11)\n 25476: u64 [a2 + 1952] = 0\n 25480: a0 = u64 [s1 + 0x168]\n 25484: a3 = a2 + 0x700\n 25488: u64 [a3 + 0x98] = a0\n 25492: a0 = u64 [s1 + 0x170]\n 25496: u64 [a3 + 0x90] = a0\n 25500: a1 = s1 + 0x20e0\n 25504: a0 = u64 [s1 + 0x178]\n 25508: u64 [a3 + 0x88] = a0\n 25512: a0 = 0\n 25514: ra = 854, jump @4\n      : @820 [@dyn 427] (gas: 15)\n 25520: a4 = s1 + 0x100\n 25524: a0 = u64 [a4 + 0x48]\n 25527: a1 = s1 + 0x1958\n 25531: a2 = a1 + 0x700\n 25535: u64 [a2 + 0x80] = a0\n 25539: a0 = u64 [a4 + 0x50]\n 25542: u64 [a2 + 0x78] = a0\n 25545: a0 = u64 [a4 + 0x58]\n 25548: u64 [a2 + 0x70] = a0\n 25551: a3 = a1\n 25553: a0 = 0x20\n 25556: a1 = s1 + 0x20c0\n 25560: a2 = u64 [a4 + 0x60]\n 25563: u64 [a3 + 0x768] = a2\n 25567: ra = 856, jump @4\n      : @821 [@dyn 428] (gas: 3)\n 25573: a1 = u64 [s1 + 0xf8]\n 25577: a0 = i32 [a1]\n 25579: jump @823 if a0 >u 63\n      : @822 (gas: 2)\n 25583: u32 [a1 + 0] = 0x40\n 25586: fallthrough\n      : @823 (gas: 4)\n 25587: a0 = sp + 0xffffffffffffffe0\n 25590: a0 = a0 & 0xffffffffffffffe0\n 25593: u64 [s1 + 0x178] = a0\n 25597: t0 = 858, jump @1458\n      : @824 [@dyn 429] (gas: 5)\n 25603: ra = 0x35c\n 25607: ecalli 7 // 'hash_keccak_256'\n 25609: a3 = u64 [s1 + 0x178]\n 25613: t0 = 0x35e\n 25617: jump @1454\n      : @825 [@dyn 430] (gas: 2)\n 25620: a3 = u64 [s1 + 0x178]\n 25624: t0 = 862, jump @1454\n      : @826 [@dyn 431] (gas: 6)\n 25630: u64 [a1 + 0x18] = a3\n 25633: u64 [a1 + 0x10] = a2\n 25636: u64 [a1 + 0x8] = a4\n 25639: u64 [a1] = a0\n 25641: a0 = s1 + 0x20a0\n 25645: ra = 864, jump @6\n      : @827 [@dyn 432] (gas: 10)\n 25651: a3 = s1 + 0x1958\n 25655: a4 = a3 + 0x700\n 25659: a0 = u64 [a4 + 0x60]\n 25662: a1 = u64 [a4 + 0x58]\n 25665: a2 = u64 [a4 + 0x50]\n 25668: a3 = u64 [a4 + 0x48]\n 25671: a4 = a2 | a0\n 25674: a5 = a3 | a1\n 25677: a4 = a4 | a5\n 25680: jump @830 if a4 == 0\n      : @828 (gas: 36)\n 25683: a4 = u64 [s1 + 0x188]\n 25687: a4 = reverse a4\n 25689: t0 = a4 << 0x20\n 25692: a5 = u64 [s1 + 0x190]\n 25696: a5 = reverse a5\n 25698: a5 = a5 >> 0x20\n 25701: t0 = a5 | t0\n 25704: a5 = u64 [s1 + 0x198]\n 25708: a5 = reverse a5\n 25710: t1 = a5 << 0x20\n 25713: a4 = a4 >> 0x20\n 25716: t1 = t1 | a4\n 25719: a5 = a5 >> 0x20\n 25722: a4 = u64 [s1 + 0xb0]\n 25726: u32 [a4 + 0x10] = a5\n 25729: u64 [a4 + 0x8] = t1\n 25732: u64 [a4] = t0\n 25734: a4 = s1 + 0x3958\n 25738: a5 = a4 + 0x400\n 25742: u64 [a5 + 0xa8] = a3\n 25746: u64 [a5 + 0xb0] = a2\n 25750: u64 [a5 + 0xb8] = a1\n 25754: u64 [a5 + 0xc0] = a0\n 25758: u32 [a4 + 1224] = 0\n 25762: u64 [a4 + 1280] = 0\n 25766: u64 [a4 + 1272] = 0\n 25770: u64 [a4 + 1264] = 0\n 25774: u64 [a4 + 1256] = 0\n 25778: a1 = 0xffffffffffffffff\n 25781: a2 = 0xffffffffffffffff\n 25784: a0 = u64 [s1 + 0x140]\n 25788: a3 = u64 [s1 + 0x130]\n 25792: a4 = u64 [s1 + 0x128]\n 25796: a5 = u64 [s1 + 0x120]\n 25800: ecalli 0 // 'call'\n 25801: fallthrough\n      : @829 (gas: 1)\n 25802: jump @903 if a0 != 0\n      : @830 (gas: 18)\n 25806: a3 = s1 + 0x100\n 25810: a1 = u64 [a3 + 0xb8]\n 25814: a1 = a1 + 0x1\n 25817: a0 = a1 <u 0x1\n 25820: a2 = u64 [a3 + 0xb0]\n 25824: a2 = a2 + a0\n 25827: u64 [a3 + 0xb8] = a1\n 25831: u64 [a3 + 0xb0] = a2\n 25835: a0 = a1 | a2\n 25838: a0 = a0 <u 0x1\n 25841: a1 = u64 [a3 + 0xa0]\n 25845: a0 = a0 + a1\n 25848: a1 = a0 <u a1\n 25851: a2 = u64 [a3 + 0xa8]\n 25855: a2 = a2 + a1\n 25858: u64 [a3 + 0xa8] = a2\n 25862: u64 [a3 + 0xa0] = a0\n 25866: jump @806\n      : @831 (gas: 34)\n 25869: a0 = u64 [s1 + 0xf8]\n 25873: a1 = u64 [s1 + 0x1b8]\n 25877: t1 = a1 <u a0\n 25880: a1 = u64 [s1 + 0xe0]\n 25884: a5 = u64 [s1 + 0x1a8]\n 25888: a3 = a5 ^ a1\n 25891: a2 = a5 <u a1\n 25894: a2 = t1 if a3 == 0\n 25897: t0 = u64 [s1 + 0xe8]\n 25901: a3 = u64 [s1 + 0x1a0]\n 25905: ra = a3 - t0\n 25908: a3 = a3 <u t0\n 25911: t2 = u64 [s1 + 0xf0]\n 25915: a4 = u64 [s1 + 0x1b0]\n 25919: a4 = a4 - t2\n 25922: a4 = a4 - a3\n 25925: a3 = ra <u a2\n 25928: a4 = a4 - a3\n 25931: ra = ra - a2\n 25934: a2 = a5 - a1\n 25937: a2 = a2 - t1\n 25940: a3 = u64 [s1 + 0x1b8]\n 25944: a3 = a3 - a0\n 25947: u64 [s1 + 0x5a0] = a0\n 25951: u64 [s1 + 0x580] = a3\n 25955: u64 [s1 + 0x5a8] = a1\n 25959: u64 [s1 + 0x5b0] = t0\n 25963: u64 [s1 + 0x588] = a2\n 25967: u64 [s1 + 0x5b8] = t2\n 25971: u64 [s1 + 0x590] = ra\n 25975: a0 = s1 + 0x5a0\n 25979: a1 = s1 + 0x580\n 25983: u64 [s1 + 0x598] = a4\n 25987: ra = 866, jump @1235\n      : @832 [@dyn 433] (gas: 3)\n 25993: a0 = s1 + 0x560\n 25997: a1 = 0x40\n 26000: ra = 868, jump @2\n      : @833 [@dyn 434] (gas: 13)\n 26006: t0 = u64 [s1 + 0x578]\n 26010: a1 = s1 + 0x500\n 26014: a5 = u64 [a1 + 0x70]\n 26017: a3 = u64 [a1 + 0x68]\n 26020: a0 = u64 [a1 + 0x60]\n 26023: a2 = a3 | t0\n 26026: a1 = a0 | a5\n 26029: a1 = a1 | a2\n 26032: a1 = a1 >> 0x20\n 26035: a2 = a2 | a5\n 26038: a2 = a2 << 0x20\n 26041: a1 = a1 | a2\n 26044: jump @912 if a1 != 0\n      : @834 (gas: 22)\n 26048: a1 = a0 + 0x20\n 26051: u64 [s1 + 0x1b0] = a1\n 26055: a4 = a1 <u a0\n 26058: a1 = a3 + a4\n 26061: u64 [s1 + 0x1b8] = a1\n 26065: a1 = a1 <u a3\n 26068: a1 = a4 if a4 == 0\n 26071: a1 = a1 + a5\n 26074: u64 [s1 + 0x1a0] = a1\n 26078: a1 = a1 <u a5\n 26081: a1 = a1 + t0\n 26084: u64 [s1 + 0x1a8] = a1\n 26088: u64 [s1 + 1368] = 0\n 26092: u64 [s1 + 1360] = 0\n 26096: u64 [s1 + 1352] = 0\n 26100: a1 = s1 + 0x540\n 26104: u64 [s1 + 1344] = 0x20\n 26109: u64 [s1 + 0x150] = a0\n 26113: u64 [s1 + 0x140] = a3\n 26117: u64 [s1 + 0x138] = t0\n 26121: u64 [s1 + 0x130] = a5\n 26125: ra = 870, jump @4\n      : @835 [@dyn 435] (gas: 3)\n 26131: a0 = s1 + 0x520\n 26135: a1 = u64 [s1 + 0xf8]\n 26139: ra = 872, jump @2\n      : @836 [@dyn 436] (gas: 13)\n 26145: a5 = s1 + 0x100\n 26149: a0 = u64 [a5 + 0xb0]\n 26153: a3 = u64 [a5 + 0xa0]\n 26157: a2 = a0 | a3\n 26160: a1 = u64 [a5 + 0xb8]\n 26164: a4 = u64 [a5 + 0xa8]\n 26168: a1 = a1 | a4\n 26171: a2 = a2 | a1\n 26174: a2 = a2 >> 0x20\n 26177: a1 = a1 | a3\n 26180: a1 = a1 << 0x20\n 26183: a1 = a1 | a2\n 26186: jump @912 if a1 != 0\n      : @837 (gas: 15)\n 26190: a5 = s1 + 0x500\n 26194: a4 = u64 [a5 + 0x38]\n 26197: a1 = u64 [a5 + 0x30]\n 26200: a2 = u64 [a5 + 0x28]\n 26203: a3 = u64 [a5 + 0x20]\n 26206: u64 [s1 + 0x158] = a3\n 26210: u64 [a5] = a3\n 26212: u64 [s1 + 0x160] = a2\n 26216: u64 [a5 + 0x8] = a2\n 26219: u64 [s1 + 0x168] = a1\n 26223: u64 [a5 + 0x10] = a1\n 26226: a1 = s1 + 0x500\n 26230: u64 [s1 + 0x170] = a4\n 26234: u64 [a5 + 0x18] = a4\n 26237: ra = 874, jump @4\n      : @838 [@dyn 437] (gas: 24)\n 26243: t0 = 0\n 26245: a4 = 0\n 26247: ra = 0\n 26249: t2 = 0\n 26251: a3 = s1 + 0x100\n 26255: a1 = u64 [a3 + 0x50]\n 26258: a0 = a1 + 0x40\n 26261: u64 [a3 + 0xb0] = a0\n 26265: a0 = a0 <u a1\n 26268: a2 = u64 [a3 + 0x40]\n 26271: a1 = a2 + a0\n 26274: u64 [a3 + 0xa8] = a1\n 26278: a1 = a1 <u a2\n 26281: a1 = a0 if a0 == 0\n 26284: a0 = u64 [a3 + 0x30]\n 26287: a1 = a1 + a0\n 26290: u64 [a3 + 0xa0] = a1\n 26294: a0 = a1 <u a0\n 26297: a1 = u64 [a3 + 0x38]\n 26300: a0 = a0 + a1\n 26303: u64 [a3 + 0xb8] = a0\n 26307: a1 = u64 [a3 + 0x8]\n 26310: t1 = u64 [s1 + 0x100]\n 26314: fallthrough\n      : @839 (gas: 17)\n 26315: a0 = u64 [s1 + 0x158]\n 26319: a0 = t0 <u a0\n 26322: a2 = u64 [s1 + 0x160]\n 26326: a3 = a4 ^ a2\n 26329: u64 [s1 + 0x198] = a4\n 26333: a2 = a4 <u a2\n 26336: a2 = a0 if a3 == 0\n 26339: a5 = u64 [s1 + 0x168]\n 26343: a0 = ra <u a5\n 26346: a3 = u64 [s1 + 0x170]\n 26350: a4 = t2 ^ a3\n 26353: a3 = t2 <u a3\n 26356: a3 = a0 if a4 == 0\n 26359: a0 = ra ^ a5\n 26362: a0 = a0 | a4\n 26365: a3 = a2 if a0 == 0\n 26368: jump @910 if a3 == 0\n      : @840 (gas: 10)\n 26372: a0 = a1 | t1\n 26375: a2 = u64 [s1 + 0x110]\n 26379: a3 = u64 [s1 + 0x118]\n 26383: a2 = a2 | a3\n 26386: a0 = a0 | a2\n 26389: a0 = a0 >> 0x20\n 26392: a2 = a2 | t1\n 26395: a2 = a2 << 0x20\n 26398: a0 = a0 | a2\n 26401: jump @912 if a0 != 0\n      : @841 (gas: 7)\n 26405: u64 [s1 + 0x180] = ra\n 26409: u64 [s1 + 0x188] = t2\n 26413: u64 [s1 + 0x190] = t0\n 26417: u64 [s1 + 0x100] = t1\n 26421: a0 = s1 + 0x4e0\n 26425: u64 [s1 + 0x108] = a1\n 26429: ra = 876, jump @2\n      : @842 [@dyn 438] (gas: 13)\n 26435: a1 = s1 + 0x100\n 26439: a0 = u64 [a1 + 0xb0]\n 26443: a4 = u64 [a1 + 0xa0]\n 26447: a2 = a0 | a4\n 26450: a3 = u64 [a1 + 0xb8]\n 26454: a5 = u64 [a1 + 0xa8]\n 26458: a1 = a5 | a3\n 26461: a2 = a2 | a1\n 26464: a2 = a2 >> 0x20\n 26467: a1 = a1 | a4\n 26470: a1 = a1 << 0x20\n 26473: a1 = a1 | a2\n 26476: jump @912 if a1 != 0\n      : @843 (gas: 18)\n 26480: u64 [s1 + 0x1a0] = a4\n 26484: a4 = u64 [s1 + 0x4f0]\n 26488: a1 = u64 [s1 + 0x4e8]\n 26492: a2 = u64 [s1 + 0x4e0]\n 26496: u64 [s1 + 0x1b8] = a3\n 26500: a3 = u64 [s1 + 0x148]\n 26504: a4 = a4 & a3\n 26507: a1 = a1 & 0xffffffffffffffff\n 26510: a2 = a2 & 0xffffffffffffffff\n 26513: u64 [s1 + 1240] = 0\n 26517: a3 = s1 + 0x400\n 26521: u64 [a3 + 0xc0] = a2\n 26525: u64 [a3 + 0xc8] = a1\n 26529: a1 = s1 + 0x4c0\n 26533: u64 [a3 + 0xd0] = a4\n 26537: u64 [s1 + 0x1b0] = a0\n 26541: u64 [s1 + 0x1a8] = a5\n 26545: ra = 878, jump @4\n      : @844 [@dyn 439] (gas: 51)\n 26551: a1 = u64 [s1 + 0x1b0]\n 26555: a0 = a1 + 0x20\n 26558: u64 [s1 + 0x178] = a0\n 26562: a2 = a0 <u a1\n 26565: a0 = u64 [s1 + 0x1a8]\n 26569: t1 = a0 + a2\n 26572: a3 = t1 <u a0\n 26575: a3 = a2 if a2 == 0\n 26578: a0 = u64 [s1 + 0x1a0]\n 26582: a2 = a0 + a3\n 26585: a3 = a2 <u a0\n 26588: a0 = u64 [s1 + 0x1b8]\n 26592: a0 = a0 + a3\n 26595: u64 [s1 + 0x1b8] = a0\n 26599: a0 = u64 [s1 + 0x108]\n 26603: a3 = a0 + 0x20\n 26606: a4 = a3 <u a0\n 26609: a0 = u64 [s1 + 0x118]\n 26613: a5 = a0 + a4\n 26616: a0 = a5 <u a0\n 26619: a0 = a4 if a4 == 0\n 26622: a1 = u64 [s1 + 0x100]\n 26626: a0 = a0 + a1\n 26629: a4 = a0 <u a1\n 26632: a1 = u64 [s1 + 0x110]\n 26636: a1 = a1 + a4\n 26639: u64 [s1 + 0x110] = a1\n 26643: t0 = u64 [s1 + 0x190]\n 26647: t0 = t0 + 0x1\n 26650: a4 = t0 <u 0x1\n 26653: t2 = u64 [s1 + 0x198]\n 26657: t2 = t2 + a4\n 26660: a4 = t0 | t2\n 26663: a4 = a4 <u 0x1\n 26666: a1 = u64 [s1 + 0x180]\n 26670: a4 = a4 + a1\n 26673: a1 = a4 <u a1\n 26676: ra = u64 [s1 + 0x188]\n 26680: ra = ra + a1\n 26683: a1 = u64 [s1 + 0x178]\n 26687: u64 [s1 + 0x1b0] = a1\n 26691: u64 [s1 + 0x1a8] = t1\n 26695: u64 [s1 + 0x1a0] = a2\n 26699: a1 = a3\n 26701: u64 [s1 + 0x118] = a5\n 26705: t1 = a0\n 26707: a0 = a4\n 26709: a4 = t2\n 26711: t2 = ra\n 26713: ra = a0\n 26715: jump @839\n      : @845 (gas: 3)\n 26718: a0 = s1 + 0x1bc0\n 26722: a1 = 0x40\n 26725: ra = 880, jump @2\n      : @846 [@dyn 440] (gas: 2)\n 26731: a2 = s1 + 0x1958\n 26735: fallthrough\n      : @847 (gas: 13)\n 26736: t0 = u64 [a2 + 0x280]\n 26740: a1 = a2 + 0x200\n 26744: a5 = u64 [a1 + 0x78]\n 26747: a4 = u64 [a1 + 0x70]\n 26750: a0 = u64 [a1 + 0x68]\n 26753: a3 = a4 | t0\n 26756: a1 = a0 | a5\n 26759: a1 = a1 | a3\n 26762: a1 = a1 >> 0x20\n 26765: a3 = a3 | a5\n 26768: a3 = a3 << 0x20\n 26771: a1 = a1 | a3\n 26774: jump @912 if a1 != 0\n      : @848 (gas: 11)\n 26778: u64 [a2 + 600] = 0\n 26782: u64 [a2 + 592] = 0\n 26786: u64 [a2 + 584] = 0\n 26790: a3 = 0x8c379a000000000\n 26800: a1 = s1 + 0x1ba0\n 26804: u64 [a2 + 0x260] = a3\n 26808: u64 [s1 + 0x1b8] = a0\n 26812: u64 [s1 + 0x1b0] = a4\n 26816: u64 [s1 + 0x1a0] = t0\n 26820: u64 [s1 + 0x1a8] = a5\n 26824: ra = 882, jump @4\n      : @849 [@dyn 441] (gas: 1)\n 26830: t0 = 884, jump @1415\n      : @850 [@dyn 442] (gas: 1)\n 26836: jump @912 if a0 == 0\n      : @851 (gas: 10)\n 26840: i32 a0 = a1 + 0x4\n 26843: a2 = s1 + 0x1958\n 26847: u64 [a2 + 576] = 0\n 26851: u64 [a2 + 568] = 0\n 26855: u64 [a2 + 552] = 0x20\n 26860: a1 = s1 + 0x1b80\n 26864: u64 [a2 + 560] = 0\n 26868: u64 [s1 + 0x1a8] = a3\n 26872: u64 [s1 + 0x1a0] = a4\n 26876: ra = 886, jump @4\n      : @852 [@dyn 443] (gas: 1)\n 26882: t0 = 888, jump @1417\n      : @853 [@dyn 444] (gas: 1)\n 26888: jump @912 if a0 == 0\n      : @854 (gas: 8)\n 26892: i32 a0 = a1 + 0x24\n 26895: a3 = s1 + 0x1958\n 26899: u64 [a3 + 544] = 0\n 26903: u64 [a3 + 536] = 0\n 26907: u64 [a3 + 520] = 0x14\n 26912: a1 = s1 + 0x1b60\n 26916: u64 [a3 + 528] = 0\n 26920: ra = 890, jump @4\n      : @855 [@dyn 445] (gas: 1)\n 26926: t0 = 892, jump @1419\n      : @856 [@dyn 446] (gas: 1)\n 26932: jump @912 if a0 == 0\n      : @857 (gas: 12)\n 26936: i32 a0 = a3 + 0x44\n 26939: a1 = u64 [0x20070]\n 26944: a2 = u64 [0x20078]\n 26949: a4 = s1 + 0x1958\n 26953: u64 [a4 + 0x200] = a1\n 26957: u64 [a4 + 0x1f8] = a2\n 26961: a1 = 0x7265737300000000\n 26971: u64 [a4 + 0x1f0] = a1\n 26975: a1 = s1 + 0x1b40\n 26979: u64 [a4 + 488] = 0\n 26983: ra = 0x3a8\n 26987: jump @4\n      : @858 (gas: 3)\n 26990: a0 = s1 + 0x2da0\n 26994: a1 = 0x40\n 26997: ra = 894, jump @2\n      : @859 [@dyn 447] (gas: 14)\n 27003: a2 = s1 + 0x2958\n 27007: t0 = u64 [a2 + 0x460]\n 27011: a1 = a2 + 0x400\n 27015: a5 = u64 [a1 + 0x58]\n 27018: a4 = u64 [a1 + 0x50]\n 27021: a0 = u64 [a1 + 0x48]\n 27024: a3 = a4 | t0\n 27027: a1 = a0 | a5\n 27030: a1 = a1 | a3\n 27033: a1 = a1 >> 0x20\n 27036: a3 = a3 | a5\n 27039: a3 = a3 << 0x20\n 27042: a1 = a1 | a3\n 27045: jump @912 if a1 != 0\n      : @860 (gas: 11)\n 27049: u64 [a2 + 1080] = 0\n 27053: u64 [a2 + 1072] = 0\n 27057: u64 [a2 + 1064] = 0\n 27061: a3 = 0x8c379a000000000\n 27071: a1 = s1 + 0x2d80\n 27075: u64 [a2 + 0x440] = a3\n 27079: u64 [s1 + 0x1b8] = a0\n 27083: u64 [s1 + 0x1b0] = a4\n 27087: u64 [s1 + 0x1a0] = t0\n 27091: u64 [s1 + 0x1a8] = a5\n 27095: ra = 896, jump @4\n      : @861 [@dyn 448] (gas: 1)\n 27101: t0 = 898, jump @1415\n      : @862 [@dyn 449] (gas: 1)\n 27107: jump @912 if a0 == 0\n      : @863 (gas: 3)\n 27111: i32 a0 = a1 + 0x4\n 27114: a1 = 0x2958\n 27118: t0 = 900, jump @1473\n      : @864 [@dyn 450] (gas: 5)\n 27124: a1 = s1 + 0x2d60\n 27128: u64 [a2 + 1040] = 0\n 27132: u64 [s1 + 0x1a8] = a3\n 27136: u64 [s1 + 0x1a0] = a4\n 27140: ra = 902, jump @4\n      : @865 [@dyn 451] (gas: 1)\n 27146: t0 = 904, jump @1417\n      : @866 [@dyn 452] (gas: 1)\n 27152: jump @912 if a0 == 0\n      : @867 (gas: 8)\n 27156: i32 a0 = a1 + 0x24\n 27159: a3 = s1 + 0x2958\n 27163: u64 [a3 + 1024] = 0\n 27167: u64 [a3 + 1016] = 0\n 27171: u64 [a3 + 1000] = 0x16\n 27176: a1 = s1 + 0x2d40\n 27180: u64 [a3 + 1008] = 0\n 27184: ra = 906, jump @4\n      : @868 [@dyn 453] (gas: 1)\n 27190: t0 = 908, jump @1419\n      : @869 [@dyn 454] (gas: 1)\n 27196: jump @912 if a0 == 0\n      : @870 (gas: 13)\n 27200: i32 a0 = a3 + 0x44\n 27203: a1 = u64 [0x20000]\n 27208: a2 = u64 [0x20008]\n 27213: a3 = u64 [0x20010]\n 27218: a4 = s1 + 0x2958\n 27222: a5 = a4 + 0x300\n 27226: u64 [a5 + 0xe0] = a1\n 27230: u64 [a5 + 0xd8] = a2\n 27234: u64 [a5 + 0xd0] = a3\n 27238: a1 = s1 + 0x2d20\n 27242: u64 [a4 + 968] = 0\n 27246: ra = 0x3a8\n 27250: jump @4\n      : @871 (gas: 3)\n 27253: a0 = s1 + 0x1060\n 27257: a1 = 0x40\n 27260: ra = 910, jump @2\n      : @872 [@dyn 455] (gas: 15)\n 27266: a2 = s1 + 0x7ff\n 27270: a2 = a2 + 0x139\n 27274: t0 = u64 [a2 + 0x740]\n 27278: a1 = a2 + 0x700\n 27282: a5 = u64 [a1 + 0x38]\n 27285: a4 = u64 [a1 + 0x30]\n 27288: a0 = u64 [a1 + 0x28]\n 27291: a3 = a4 | t0\n 27294: a1 = a0 | a5\n 27297: a1 = a1 | a3\n 27300: a1 = a1 >> 0x20\n 27303: a3 = a3 | a5\n 27306: a3 = a3 << 0x20\n 27309: a1 = a1 | a3\n 27312: jump @912 if a1 != 0\n      : @873 (gas: 11)\n 27316: u64 [a2 + 1816] = 0\n 27320: u64 [a2 + 1808] = 0\n 27324: u64 [a2 + 1800] = 0\n 27328: a3 = 0x8c379a000000000\n 27338: a1 = s1 + 0x1040\n 27342: u64 [a2 + 0x720] = a3\n 27346: u64 [s1 + 0x1b8] = a0\n 27350: u64 [s1 + 0x1b0] = a4\n 27354: u64 [s1 + 0x1a0] = t0\n 27358: u64 [s1 + 0x1a8] = a5\n 27362: ra = 912, jump @4\n      : @874 [@dyn 456] (gas: 1)\n 27368: t0 = 914, jump @1415\n      : @875 [@dyn 457] (gas: 1)\n 27374: jump @912 if a0 == 0\n      : @876 (gas: 11)\n 27378: i32 a0 = a1 + 0x4\n 27381: a2 = s1 + 0x7ff\n 27385: a2 = a2 + 0x139\n 27389: u64 [a2 + 1792] = 0\n 27393: u64 [a2 + 1784] = 0\n 27397: u64 [a2 + 1768] = 0x20\n 27402: a1 = s1 + 0x1020\n 27406: u64 [a2 + 1776] = 0\n 27410: u64 [s1 + 0x1a8] = a3\n 27414: u64 [s1 + 0x1a0] = a4\n 27418: ra = 916, jump @4\n      : @877 [@dyn 458] (gas: 10)\n 27424: a2 = s1 + 0x100\n 27428: a4 = u64 [a2 + 0xa8]\n 27432: a3 = u64 [a2 + 0xb0]\n 27436: a1 = u64 [a2 + 0xb8]\n 27440: a0 = u64 [a2 + 0xa0]\n 27444: a0 = a0 + 0xffffffffffffffdc\n 27447: a0 = a1 <u a0\n 27450: a0 = 0 if a3 != 0\n 27452: a0 = 0 if a4 != 0\n 27454: jump @912 if a0 == 0\n      : @878 (gas: 9)\n 27458: i32 a0 = a1 + 0x24\n 27461: a2 = s1 + 0x7ff\n 27465: a2 = a2 + 0x139\n 27469: u64 [a2 + 1760] = 0\n 27473: u64 [a2 + 1752] = 0\n 27477: u64 [a2 + 1736] = 0x1a\n 27482: a1 = s1 + 0x1000\n 27486: u64 [a2 + 1744] = 0\n 27490: ra = 918, jump @4\n      : @879 [@dyn 459] (gas: 1)\n 27496: t0 = 920, jump @1419\n      : @880 [@dyn 460] (gas: 1)\n 27502: jump @912 if a0 == 0\n      : @881 (gas: 16)\n 27506: i32 a0 = a3 + 0x44\n 27509: a1 = u64 [0x200c0]\n 27514: a2 = u64 [0x200c8]\n 27519: a3 = u64 [0x200d0]\n 27524: a4 = s1 + 0x7ff\n 27528: a4 = a4 + 0x139\n 27532: a5 = a4 + 0x600\n 27536: u64 [a5 + 0xc0] = a1\n 27540: u64 [a5 + 0xb8] = a2\n 27544: u64 [a5 + 0xb0] = a3\n 27548: a2 = 0x6564000000000000\n 27558: a1 = s1 + 0x7ff\n 27562: a1 = a1 + 0x7e1\n 27566: u64 [a5 + 0xa8] = a2\n 27570: ra = 0x3a8\n 27574: jump @4\n      : @882 (gas: 3)\n 27577: a0 = s1 + 0x1a80\n 27581: a1 = 0x40\n 27584: ra = 922, jump @2\n      : @883 [@dyn 461] (gas: 14)\n 27590: a4 = s1 + 0x1958\n 27594: t0 = u64 [a4 + 0x140]\n 27598: a1 = a4 + 0x100\n 27602: a5 = u64 [a1 + 0x38]\n 27605: a3 = u64 [a1 + 0x30]\n 27608: a0 = u64 [a1 + 0x28]\n 27611: a2 = a3 | t0\n 27614: a1 = a0 | a5\n 27617: a1 = a1 | a2\n 27620: a1 = a1 >> 0x20\n 27623: a2 = a2 | a5\n 27626: a2 = a2 << 0x20\n 27629: a1 = a1 | a2\n 27632: jump @912 if a1 != 0\n      : @884 (gas: 11)\n 27636: u64 [a4 + 280] = 0\n 27640: u64 [a4 + 272] = 0\n 27644: u64 [a4 + 264] = 0\n 27648: u64 [s1 + 0x1b0] = a3\n 27652: a3 = 0x8c379a000000000\n 27662: a1 = s1 + 0x1a60\n 27666: u64 [a4 + 0x120] = a3\n 27670: u64 [s1 + 0x1b8] = a0\n 27674: u64 [s1 + 0x1a8] = t0\n 27678: u64 [s1 + 0x1a0] = a5\n 27682: ra = 924, jump @4\n      : @885 [@dyn 462] (gas: 6)\n 27688: a5 = s1 + 0x100\n 27692: a1 = u64 [a5 + 0xb8]\n 27696: a0 = u64 [a5 + 0xa8]\n 27700: a3 = u64 [a5 + 0xa0]\n 27704: a3 = a3 | a0\n 27707: t0 = 926, jump @1416\n      : @886 [@dyn 463] (gas: 1)\n 27713: jump @912 if a0 == 0\n      : @887 (gas: 11)\n 27717: i32 a0 = a1 + 0x4\n 27720: a2 = s1 + 0x1958\n 27724: u64 [a2 + 256] = 0\n 27728: a5 = 0\n 27730: u64 [a2 + 248] = 0\n 27734: u64 [a2 + 232] = 0x20\n 27739: a1 = s1 + 0x1a40\n 27743: u64 [a2 + 240] = 0\n 27747: u64 [s1 + 0x1a8] = a3\n 27751: u64 [s1 + 0x1a0] = a4\n 27755: ra = 928, jump @4\n      : @888 [@dyn 464] (gas: 1)\n 27761: t0 = 930, jump @1417\n      : @889 [@dyn 465] (gas: 1)\n 27767: jump @912 if a0 == 0\n      : @890 (gas: 8)\n 27771: i32 a0 = a1 + 0x24\n 27774: a3 = s1 + 0x1958\n 27778: u64 [a3 + 224] = 0\n 27782: u64 [a3 + 216] = 0\n 27786: u64 [a3 + 200] = 0xe\n 27791: a1 = s1 + 0x1a20\n 27795: u64 [a3 + 208] = 0\n 27799: ra = 932, jump @4\n      : @891 [@dyn 466] (gas: 1)\n 27805: t0 = 934, jump @1453\n      : @892 [@dyn 467] (gas: 1)\n 27811: jump @912 if a0 == 0\n      : @893 (gas: 10)\n 27815: i32 a0 = a2 + 0x44\n 27818: a1 = u64 [0x20058]\n 27823: a3 = s1 + 0x1958\n 27827: u64 [a3 + 176] = 0\n 27831: u64 [a3 + 0xc0] = a1\n 27835: a1 = 0x20656e6465640000\n 27845: u64 [a3 + 0xb8] = a1\n 27849: a1 = s1 + 0x1a00\n 27853: u64 [a3 + 168] = 0\n 27857: ra = 936, jump @4\n      : @894 [@dyn 468] (gas: 3)\n 27863: a1 = 0x64\n 27866: a0 = u64 [s1 + 0x1b8]\n 27870: ra = 938, jump @15\n      : @895 [@dyn 469] (gas: 5)\n 27876: i32 a1 = a0 + 0\n 27878: a0 = 0x1\n 27881: a2 = 0x64\n 27884: ecalli 11 // 'seal_return'\n 27886: fallthrough\n      : @896 (gas: 3)\n 27887: a0 = s1 + 0x2260\n 27891: a1 = 0x40\n 27894: ra = 940, jump @2\n      : @897 [@dyn 470] (gas: 14)\n 27900: a2 = s1 + 0x2158\n 27904: t0 = u64 [a2 + 0x120]\n 27908: a1 = a2 + 0x100\n 27912: a5 = u64 [a1 + 0x18]\n 27915: a4 = u64 [a1 + 0x10]\n 27918: a0 = u64 [a1 + 0x8]\n 27921: a3 = a4 | t0\n 27924: a1 = a0 | a5\n 27927: a1 = a1 | a3\n 27930: a1 = a1 >> 0x20\n 27933: a3 = a3 | a5\n 27936: a3 = a3 << 0x20\n 27939: a1 = a1 | a3\n 27942: jump @912 if a1 != 0\n      : @898 (gas: 10)\n 27946: u64 [a2 + 256] = 0\n 27950: u64 [a2 + 248] = 0\n 27954: u64 [a2 + 240] = 0\n 27958: a1 = s1 + 0x2240\n 27962: u64 [a2 + 232] = 0\n 27966: u64 [s1 + 0x1b8] = a0\n 27970: u64 [s1 + 0x1b0] = a4\n 27974: u64 [s1 + 0x1a0] = t0\n 27978: u64 [s1 + 0x1a8] = a5\n 27982: ra = 942, jump @4\n      : @899 [@dyn 471] (gas: 11)\n 27988: a4 = s1 + 0x100\n 27992: a2 = u64 [a4 + 0xb8]\n 27996: a0 = u64 [a4 + 0xa8]\n 28000: a1 = u64 [a4 + 0xa0]\n 28004: a0 = a0 | a1\n 28007: a1 = 0xffffffe0\n 28017: a1 = a2 <u a1\n 28020: a3 = u64 [a4 + 0xb0]\n 28024: a1 = 0 if a3 != 0\n 28026: a1 = 0 if a0 != 0\n 28028: jump @912 if a1 == 0\n      : @900 (gas: 8)\n 28032: i32 a0 = a2 + 0x20\n 28035: a3 = s1 + 0x2158\n 28039: u64 [a3 + 224] = 0\n 28043: u64 [a3 + 216] = 0\n 28047: u64 [a3 + 208] = 0\n 28051: a1 = s1 + 0x2220\n 28055: u64 [a3 + 200] = 0\n 28059: ra = 944, jump @4\n      : @901 [@dyn 472] (gas: 28)\n 28065: a4 = s1 + 0x2158\n 28069: u64 [a4 + 128] = 0\n 28073: u64 [a4 + 120] = 0\n 28076: u64 [a4 + 112] = 0\n 28079: a0 = u64 [s1 + 0xd0]\n 28083: u64 [a4 + 0xa0] = a0\n 28087: a0 = u64 [s1 + 0xd8]\n 28091: u64 [a4 + 0x98] = a0\n 28095: a0 = u64 [s1 + 0xe0]\n 28099: u64 [a4 + 0x90] = a0\n 28103: a0 = u64 [s1 + 0xe8]\n 28107: u64 [a4 + 0x88] = a0\n 28111: a0 = u64 [0x20038]\n 28116: a1 = u64 [0x20040]\n 28121: a2 = u64 [0x20048]\n 28126: a3 = u64 [0x20050]\n 28131: u64 [a4 + 0xc0] = a0\n 28135: u64 [a4 + 0xb8] = a1\n 28139: u64 [a4 + 0xb0] = a2\n 28143: u64 [a4 + 0xa8] = a3\n 28147: a0 = a4\n 28149: a1 = 0x40\n 28152: a2 = s1 + 0x2200\n 28156: a3 = s1 + 0x21e0\n 28160: a4 = s1 + 0x21c0\n 28164: u64 [a0 + 104] = 0\n 28167: a0 = u64 [s1 + 0x1b8]\n 28171: ra = 946, jump @12\n      : @902 [@dyn 473] (gas: 6)\n 28177: a0 = 0\n 28179: a1 = u64 [s1 + 0x100]\n 28183: a2 = 0\n 28185: ecalli 11 // 'seal_return'\n 28187: a1 = 0x20160\n 28192: jump @1079\n      : @903 (gas: 3)\n 28195: a0 = s1 + 0x2080\n 28199: a1 = 0x40\n 28202: ra = 948, jump @2\n      : @904 [@dyn 474] (gas: 14)\n 28208: a0 = s1 + 0x1958\n 28212: a2 = a0 + 0x700\n 28216: a1 = u64 [a2 + 0x40]\n 28219: u64 [s1 + 0x1b0] = a1\n 28223: a1 = u64 [a2 + 0x38]\n 28226: u64 [s1 + 0x1a8] = a1\n 28230: a1 = u64 [a2 + 0x30]\n 28233: u64 [s1 + 0x1a0] = a1\n 28237: a0 = u64 [a2 + 0x28]\n 28240: u64 [s1 + 0x1b8] = a0\n 28244: ra = 0x3b6\n 28248: ecalli 10 // 'return_data_size'\n 28250: t0 = 0x3b8\n 28254: jump @1460\n      : @905 [@dyn 475] (gas: 1)\n 28257: t0 = 952, jump @1460\n      : @906 [@dyn 476] (gas: 1)\n 28263: jump @912 if a1 != 0\n      : @907 (gas: 3)\n 28267: a2 = a0\n 28269: a0 = a0 >> 0x20\n 28272: jump @912 if a0 != 0\n      : @908 (gas: 6)\n 28276: i32 a0 = a2 + 0\n 28278: u64 [s1 + 0x1b0] = a0\n 28282: a0 = u64 [s1 + 0x1b8]\n 28286: a1 = a2\n 28288: u64 [s1 + 0x1a8] = a2\n 28292: ra = 954, jump @15\n      : @909 [@dyn 477] (gas: 11)\n 28298: a1 = s1 + 0x3958\n 28302: a2 = u64 [s1 + 0x1a8]\n 28306: u32 [a1 + 0x508] = a2\n 28310: i32 a0 = a0 + 0\n 28312: a1 = s1 + 0x4000\n 28316: i32 a1 = a1 + 0xfffffffffffffe60\n 28320: a2 = 0\n 28322: ecalli 9 // 'return_data_copy'\n 28324: a0 = s1 + 0x3958\n 28328: a0 = i32 [a0 + 0x508]\n 28332: jump @705\n      : @910 (gas: 30)\n 28335: a0 = u64 [s1 + 0x150]\n 28339: t2 = u64 [s1 + 0x1b0]\n 28343: t0 = t2 <u a0\n 28346: a5 = u64 [s1 + 0x140]\n 28350: a1 = u64 [s1 + 0x1a8]\n 28354: a3 = a1 ^ a5\n 28357: a2 = a1 <u a5\n 28360: a2 = t0 if a3 == 0\n 28363: a3 = u64 [s1 + 0x130]\n 28367: a4 = u64 [s1 + 0x1a0]\n 28371: ra = a4 - a3\n 28374: t1 = a4 <u a3\n 28377: a4 = u64 [s1 + 0x138]\n 28381: a3 = u64 [s1 + 0x1b8]\n 28385: a4 = a3 - a4\n 28388: a4 = a4 - t1\n 28391: a3 = ra <u a2\n 28394: a3 = a4 - a3\n 28397: a4 = ra - a2\n 28400: a2 = a1 - a5\n 28403: a2 = a2 - t0\n 28406: a1 = t2 - a0\n 28409: a2 = a2 | a3\n 28412: a3 = a1 | a4\n 28415: a3 = a3 | a2\n 28418: a2 = a2 | a4\n 28421: a3 = a3 >> 0x20\n 28424: a2 = a2 << 0x20\n 28427: a2 = a2 | a3\n 28430: jump @912 if a2 != 0\n      : @911 (gas: 1)\n 28433: jump @1126\n      : @912 (gas: 1)\n 28436: trap\n      : @913 (gas: 5)\n 28437: a0 = u64 [s1 + 0x1b8]\n 28441: a2 = a0 + 0xffffffffffffff80\n 28444: a0 = u64 [s1 + 0xe8]\n 28448: a1 = u64 [s1 + 0xe0]\n 28452: ra = 956, jump @1474\n      : @914 [@dyn 478] (gas: 6)\n 28458: u64 [s1 + 0x178] = a0\n 28462: u64 [s1 + 0x180] = a1\n 28466: a0 = u64 [s1 + 0x108]\n 28470: a1 = u64 [s1 + 0xf0]\n 28474: a2 = u64 [s1 + 0x1b8]\n 28478: ra = 958, jump @1474\n      : @915 [@dyn 479] (gas: 7)\n 28484: u64 [s1 + 0x170] = a0\n 28488: u64 [s1 + 0x168] = a1\n 28492: a1 = u64 [s1 + 0x1b8]\n 28496: a2 = 0x80 - a1\n 28500: a0 = u64 [s1 + 0xe8]\n 28504: a1 = u64 [s1 + 0xe0]\n 28508: ra = 960, jump @1479\n      : @916 [@dyn 480] (gas: 20)\n 28514: a2 = u64 [s1 + 0x168]\n 28518: a1 = a1 | a2\n 28521: a2 = u64 [s1 + 0x1b8]\n 28525: a3 = a2 <u 0x80\n 28529: u64 [s1 + 0x160] = a3\n 28533: a4 = u64 [s1 + 0x180]\n 28537: a1 = a4 if a3 == 0\n 28540: a4 = u64 [s1 + 0xf0]\n 28544: a1 = a4 if a2 == 0\n 28547: u64 [s1 + 0x180] = a1\n 28551: a1 = u64 [s1 + 0x170]\n 28555: a0 = a0 | a1\n 28558: a1 = u64 [s1 + 0x178]\n 28562: a0 = a1 if a3 == 0\n 28565: a1 = u64 [s1 + 0x108]\n 28569: a0 = a1 if a2 == 0\n 28572: u64 [s1 + 0x178] = a0\n 28576: a0 = u64 [s1 + 0xe8]\n 28580: a1 = u64 [s1 + 0xe0]\n 28584: ra = 962, jump @1474\n      : @917 [@dyn 481] (gas: 16)\n 28590: a5 = 0\n 28592: u64 [s1 + 360] = 0\n 28596: a4 = s1 + 0x100\n 28600: a2 = u64 [a4 + 0x60]\n 28603: a1 = 0 if a2 == 0\n 28605: u64 [a4 + 0x70] = a1\n 28608: a0 = 0 if a2 == 0\n 28610: u64 [a4 + 0x60] = a0\n 28613: a2 = u64 [a4 + 0x48]\n 28616: a3 = a2 + 0xffffffffffffffff\n 28619: u64 [a4 + 0x38] = a3\n 28622: a2 = a2 >u 0\n 28624: a2 = a2 + 0xffffffffffffffff\n 28627: u64 [a4 + 0x30] = a2\n 28630: ra = u64 [s1 + 0x158]\n 28634: fallthrough\n      : @918 (gas: 93)\n 28635: u64 [s1 + 0x150] = a5\n 28639: u64 [s1 + 320] = 0\n 28643: a1 = u64 [s1 + 0x178]\n 28647: a2 = a1 >> 0x3f\n 28650: a5 = u64 [s1 + 0x180]\n 28654: a3 = a5 << 0x1\n 28657: t1 = a3 | a2\n 28660: a2 = a1 << 0x1\n 28663: a4 = ra >> 0x3f\n 28666: a4 = a4 | a2\n 28669: u64 [s1 + 0x158] = a4\n 28673: a3 = u64 [s1 + 0x130]\n 28677: a0 = a3 ^ t1\n 28680: t2 = u64 [s1 + 0x188]\n 28684: a1 = a3 <u t1\n 28687: a2 = u64 [s1 + 0x138]\n 28691: t0 = a2 <u a4\n 28694: t0 = a1 if a0 != 0\n 28697: a1 = u64 [s1 + 0x170]\n 28701: a1 = a1 << 0x1\n 28704: a0 = u64 [s1 + 0x160]\n 28708: a4 = a0 >> 0x3f\n 28711: a1 = a1 | a4\n 28714: u64 [s1 + 0x170] = a1\n 28718: a4 = a5 >> 0x3f\n 28721: a0 = a0 << 0x1\n 28724: a4 = a4 | a0\n 28727: a0 = ra << 0x1\n 28730: a1 = u64 [s1 + 0x190]\n 28734: a5 = a1 >> 0x3f\n 28737: a2 = a0 | a5\n 28740: a5 = a1 << 0x1\n 28743: a1 = t2 >> 0x3f\n 28746: a1 = a1 | a5\n 28749: a5 = t2 << 0x1\n 28752: a0 = u64 [s1 + 0x198]\n 28756: ra = a0 >> 0x3f\n 28759: t2 = a5 | ra\n 28762: a0 = a0 << 0x1\n 28765: a5 = u64 [s1 + 0x150]\n 28769: a0 = a0 | a5\n 28772: u64 [s1 + 0x198] = a0\n 28776: a5 = u64 [s1 + 0x168]\n 28780: a0 = a5 | t2\n 28783: u64 [s1 + 0x188] = a0\n 28787: a0 = a5 | a1\n 28790: u64 [s1 + 0x190] = a0\n 28794: ra = a5 | a2\n 28797: a0 = a3 - a4\n 28800: a0 = a0 <u t0\n 28803: a1 = a3 <u a4\n 28806: t2 = u64 [s1 + 0x170]\n 28810: a5 = a3 - t2\n 28813: a5 = a5 - a1\n 28816: a5 = a5 - a0\n 28819: t0 = a5 >>a 0x3f\n 28822: a0 = u64 [s1 + 0x148]\n 28826: a0 = t0 & a0\n 28829: a2 = u64 [s1 + 0x158]\n 28833: a1 = a2 - a0\n 28836: u64 [s1 + 0x178] = a1\n 28840: a1 = a2 <u a0\n 28843: a0 = t1 - a1\n 28846: u64 [s1 + 0x180] = a0\n 28850: a1 = 0 if t1 != 0\n 28852: a0 = a4 - a1\n 28855: u64 [s1 + 0x160] = a0\n 28859: a1 = a4 <u a1\n 28862: a1 = t2 - a1\n 28865: a0 = s1 + 0x100\n 28869: u64 [a0 + 0x70] = a1\n 28872: a3 = u64 [a0 + 0xb8]\n 28876: a1 = u64 [a0 + 0xb0]\n 28880: a2 = a3 | a1\n 28883: a2 = a2 <u 0x1\n 28886: a4 = u64 [a0 + 0xa0]\n 28890: a5 = a4 <u a2\n 28893: a4 = a4 - a2\n 28896: a2 = a3 <u 0x1\n 28899: a1 = a1 - a2\n 28902: a2 = u64 [a0 + 0xa8]\n 28906: a2 = a2 - a5\n 28909: a3 = a3 + 0xffffffffffffffff\n 28912: u64 [a0 + 0xb0] = a1\n 28916: u64 [a0 + 0xa8] = a2\n 28920: a2 = a2 | a1\n 28923: u64 [a0 + 0xb8] = a3\n 28927: a3 = a3 | a4\n 28930: a2 = a2 | a3\n 28933: a5 = t0 & 0x1\n 28936: u64 [a0 + 0xa0] = a4\n 28940: u64 [s1 + 360] = 0\n 28944: jump @918 if a2 != 0\n      : @919 (gas: 20)\n 28948: a2 = u64 [s1 + 0x190]\n 28952: a0 = a2 >> 0x3f\n 28955: a1 = ra << 0x1\n 28958: a0 = a0 | a1\n 28961: a4 = u64 [s1 + 0x188]\n 28965: a1 = a4 >> 0x3f\n 28968: a2 = a2 << 0x1\n 28971: a1 = a1 | a2\n 28974: a3 = u64 [s1 + 0x198]\n 28978: a2 = a3 >> 0x3f\n 28981: a4 = a4 << 0x1\n 28984: a3 = a3 << 0x1\n 28987: a3 = a3 | a5\n 28990: a5 = u64 [s1 + 0x140]\n 28994: a2 = a2 | a5\n 28997: a2 = a2 | a4\n 29000: t1 = a5 | a1\n 29003: t2 = a5 | a0\n 29006: a4 = u64 [s1 + 0x148]\n 29010: fallthrough\n      : @920 (gas: 53)\n 29011: a5 = a4 mulhu a3\n 29014: a0 = a4 * a2\n 29017: a1 = a4\n 29019: a4 = a0 + a5\n 29022: a0 = a4 <u a0\n 29025: a2 = a1 mulhu a2\n 29028: a0 = a0 + a2\n 29031: a2 = t2 * a1\n 29034: a5 = t1 mulhu a1\n 29037: a2 = a2 + a5\n 29040: u64 [s1 + 0x1b8] = a2\n 29044: t1 = t1 * a1\n 29047: t2 = a1 * a3\n 29050: a1 = u64 [s1 + 0xf0]\n 29054: a5 = a1 ^ a4\n 29057: a2 = a1 <u a4\n 29060: ra = u64 [s1 + 0x108]\n 29064: t0 = ra <u t2\n 29067: a2 = t0 if a5 == 0\n 29070: a3 = u64 [s1 + 0xe0]\n 29074: a5 = u64 [s1 + 0x1b8]\n 29078: a5 = a3 - a5\n 29081: t1 = t1 + a0\n 29084: a0 = t1 <u a0\n 29087: a5 = a5 - a0\n 29090: a3 = u64 [s1 + 0xe8]\n 29094: a0 = a3 - t1\n 29097: a3 = a3 <u t1\n 29100: a5 = a5 - a3\n 29103: a3 = a0 <u a2\n 29106: a5 = a5 - a3\n 29109: a0 = a0 - a2\n 29112: a1 = a1 - a4\n 29115: a1 = a1 - t0\n 29118: a2 = ra - t2\n 29121: a4 = s1 + 0x2958\n 29125: a3 = u64 [s1 + 0x110]\n 29129: u64 [a4 + 0x268] = a3\n 29133: a3 = u64 [s1 + 0x118]\n 29137: u64 [a4 + 0x270] = a3\n 29141: a3 = a4 + 0x200\n 29145: u64 [a3 + 0x48] = a2\n 29148: a2 = u64 [s1 + 0x120]\n 29152: u64 [a3 + 0x78] = a2\n 29155: a2 = u64 [s1 + 0x128]\n 29159: u64 [a3 + 0x80] = a2\n 29163: u64 [a3 + 0x50] = a1\n 29166: u64 [a3 + 0x58] = a0\n 29169: a0 = s1 + 0x2be0\n 29173: a1 = s1 + 0x2bc0\n 29177: a2 = s1 + 0x2ba0\n 29181: u64 [a3 + 0x60] = a5\n 29184: ra = 964, jump @1275\n      : @921 [@dyn 482] (gas: 37)\n 29190: a0 = s1 + 0x2958\n 29194: t0 = u64 [a0 + 0x2a0]\n 29198: a5 = u64 [a0 + 0x298]\n 29202: t1 = u64 [a0 + 0x290]\n 29206: t2 = u64 [a0 + 0x288]\n 29210: a1 = u64 [s1 + 0x28]\n 29213: a0 = a1 + 0x7\n 29216: a1 = a0 <u a1\n 29219: a3 = u64 [s1 + 0x30]\n 29222: a2 = a3 + a1\n 29225: a3 = a2 <u a3\n 29228: a3 = a1 if a1 == 0\n 29231: a1 = u64 [s1 + 0x38]\n 29234: a3 = a3 + a1\n 29237: a1 = a3 <u a1\n 29240: a4 = u64 [s1 + 0x40]\n 29243: a1 = a1 + a4\n 29246: a4 = s1 + 0x3958\n 29250: u64 [a4 + 0x620] = a1\n 29254: a1 = a4 + 0x600\n 29258: u64 [a1 + 0x18] = a3\n 29261: u64 [a1 + 0x10] = a2\n 29264: u64 [a1 + 0x8] = a0\n 29267: a1 = u64 [s1 + 0xd8]\n 29271: u64 [s1 + 0x78] = a5\n 29274: u64 [a1 + 0x10] = a5\n 29277: a0 = t0\n 29279: u64 [s1 + 0x80] = a0\n 29283: u64 [a1 + 0x18] = a0\n 29286: a0 = t2\n 29288: u64 [s1 + 0x68] = a0\n 29291: u64 [a1] = a0\n 29293: a0 = t1\n 29295: u64 [s1 + 0x70] = a0\n 29298: u64 [a1 + 0x8] = a0\n 29301: a0 = s1 + 0x3f60\n 29305: ra = 966, jump @9\n      : @922 [@dyn 483] (gas: 3)\n 29311: a0 = s1 + 0x2b80\n 29315: a1 = u64 [s1 + 0x18]\n 29318: ra = 968, jump @6\n      : @923 [@dyn 484] (gas: 7)\n 29324: a3 = s1 + 0x2958\n 29328: a4 = a3 + 0x200\n 29332: a0 = u64 [a4 + 0x28]\n 29335: a1 = u64 [a4 + 0x30]\n 29338: a2 = u64 [a4 + 0x38]\n 29341: a3 = u64 [a4 + 0x40]\n 29344: t0 = 970, jump @1464\n      : @924 [@dyn 485] (gas: 8)\n 29350: a5 = a4 + 0x600\n 29354: u64 [a5 + 0x40] = a3\n 29357: u64 [a5 + 0x30] = a1\n 29360: u64 [a5 + 0x28] = a0\n 29363: u64 [a5 + 0x38] = a2\n 29366: a1 = s1 + 0x3f80\n 29370: a0 = u64 [s1 + 0x18]\n 29373: ra = 972, jump @9\n      : @925 [@dyn 486] (gas: 3)\n 29379: a0 = s1 + 0x2b60\n 29383: a1 = 0x40\n 29386: ra = 974, jump @2\n      : @926 [@dyn 487] (gas: 7)\n 29392: a3 = s1 + 0x2958\n 29396: a5 = a3 + 0x200\n 29400: a0 = u64 [a5 + 0x20]\n 29403: a1 = u64 [a5 + 0x18]\n 29406: a2 = u64 [a5 + 0x10]\n 29409: a4 = u64 [a5 + 0x8]\n 29412: t0 = 976, jump @1449\n      : @927 [@dyn 488] (gas: 1)\n 29418: jump @912 if a0 != 0\n      : @928 (gas: 13)\n 29422: a0 = u64 [s1 + 0x68]\n 29425: a1 = a3 + 0x100\n 29429: u64 [a1 + 0xe8] = a0\n 29433: a0 = u64 [s1 + 0x70]\n 29436: u64 [a1 + 0xf0] = a0\n 29440: a0 = u64 [s1 + 0x78]\n 29443: u64 [a1 + 0xf8] = a0\n 29447: a1 = s1 + 0x2b40\n 29451: a0 = u64 [s1 + 0x80]\n 29455: u64 [a3 + 0x200] = a0\n 29459: a0 = a4\n 29461: u64 [s1 + 0x1b8] = a4\n 29465: ra = 978, jump @4\n      : @929 [@dyn 489] (gas: 24)\n 29471: a0 = u64 [0x20018]\n 29476: a3 = s1 + 0x2958\n 29480: a1 = u64 [s1 + 0x88]\n 29484: a5 = a3 + 0x100\n 29488: u64 [a5 + 0xc0] = a1\n 29492: a1 = u64 [s1 + 0x90]\n 29496: u64 [a5 + 0xb8] = a1\n 29500: u64 [a5 + 0xe0] = a0\n 29504: a0 = u64 [0x20020]\n 29509: a1 = u64 [0x20028]\n 29514: a2 = u64 [0x20030]\n 29519: a4 = u64 [s1 + 0x98]\n 29523: u64 [a5 + 0xb0] = a4\n 29527: u64 [a5 + 0xd8] = a0\n 29531: u64 [a5 + 0xd0] = a1\n 29535: u64 [a5 + 0xc8] = a2\n 29539: a4 = a3\n 29541: a1 = 0x20\n 29544: a2 = s1 + 0x2b20\n 29548: a3 = s1 + 0x2b00\n 29552: a0 = u64 [s1 + 0xa0]\n 29556: u64 [a4 + 0x1a8] = a0\n 29560: a0 = u64 [s1 + 0x1b8]\n 29564: ra = 980, jump @10\n      : @930 [@dyn 490] (gas: 13)\n 29570: a0 = s1 + 0x2958\n 29574: a1 = u64 [s1 + 0x88]\n 29578: a3 = a0 + 0x100\n 29582: u64 [a3 + 0xa0] = a1\n 29586: a1 = u64 [s1 + 0x90]\n 29590: u64 [a3 + 0x98] = a1\n 29594: a1 = u64 [s1 + 0x98]\n 29598: u64 [a3 + 0x90] = a1\n 29602: a1 = s1 + 0x2ae0\n 29606: a2 = u64 [s1 + 0xa0]\n 29610: u64 [a3 + 0x88] = a2\n 29614: a0 = 0\n 29616: ra = 982, jump @4\n      : @931 [@dyn 491] (gas: 3)\n 29622: t0 = 0x3d8\n 29626: a1 = s1 + 0x2958\n 29630: fallthrough\n      : @932 [@dyn 492] (gas: 8)\n 29631: u64 [a1 + 384] = 0\n 29635: u64 [a1 + 376] = 0\n 29639: u64 [a1 + 360] = 0x4\n 29644: a2 = a1\n 29646: a0 = 0x20\n 29649: a1 = s1 + 0x2ac0\n 29653: u64 [a2 + 368] = 0\n 29657: ra = 986, jump @4\n      : @933 [@dyn 493] (gas: 7)\n 29663: a0 = sp + 0xffffffffffffffe0\n 29666: a0 = a0 & 0xffffffffffffffe0\n 29669: u64 [s1 + 0x1b8] = a0\n 29673: sp = a0\n 29675: a2 = u64 [s1 + 0x100]\n 29679: a0 = i32 [a2]\n 29681: jump @935 if a0 >u 63\n      : @934 (gas: 2)\n 29685: u32 [a2 + 0] = 0x40\n 29688: fallthrough\n      : @935 (gas: 11)\n 29689: a0 = sp + 0xffffffffffffffe0\n 29692: a0 = a0 & 0xffffffffffffffe0\n 29695: u64 [s1 + 0x1b0] = a0\n 29699: sp = a0\n 29701: i32 a2 = a0 + 0\n 29703: a1 = 0x40\n 29706: a0 = u64 [s1 + 0xf8]\n 29710: ra = 0x3dc\n 29714: ecalli 7 // 'hash_keccak_256'\n 29716: t0 = 0x3de\n 29720: jump @1428\n      : @936 [@dyn 494] (gas: 1)\n 29723: t0 = 990, jump @1428\n      : @937 [@dyn 495] (gas: 3)\n 29729: a0 = s1 + 0x2aa0\n 29733: a1 = 0x40\n 29736: ra = 992, jump @2\n      : @938 [@dyn 496] (gas: 13)\n 29742: a0 = s1 + 0x2958\n 29746: a2 = a0 + 0x100\n 29750: a1 = u64 [a2 + 0x60]\n 29753: u64 [s1 + 0x60] = a1\n 29756: a1 = u64 [a2 + 0x58]\n 29759: u64 [s1 + 0x58] = a1\n 29762: a1 = u64 [a2 + 0x50]\n 29765: u64 [s1 + 0x50] = a1\n 29768: a0 = u64 [a2 + 0x48]\n 29771: u64 [s1 + 0xf0] = a0\n 29775: a0 = s1 + 0x2a80\n 29779: a1 = u64 [s1 + 0x1b8]\n 29783: ra = 994, jump @6\n      : @939 [@dyn 497] (gas: 6)\n 29789: a0 = u64 [s1 + 0xf0]\n 29793: a1 = u64 [s1 + 0x60]\n 29796: a2 = u64 [s1 + 0x50]\n 29799: a2 = a2 | a1\n 29802: a3 = u64 [s1 + 0x58]\n 29805: t0 = 996, jump @1461\n      : @940 [@dyn 498] (gas: 1)\n 29811: jump @912 if a1 != 0\n      : @941 (gas: 16)\n 29815: a5 = s1 + 0x2958\n 29819: a2 = u64 [a5 + 0x140]\n 29823: a1 = u64 [a5 + 0x138]\n 29827: a3 = u64 [a5 + 0x130]\n 29831: a4 = u64 [a5 + 0x128]\n 29835: u64 [s1 + 0x110] = a4\n 29839: u64 [a5 + 0x108] = a4\n 29843: u64 [s1 + 0x118] = a3\n 29847: a4 = a5 + 0x100\n 29851: u64 [a4 + 0x10] = a3\n 29854: u64 [s1 + 0x120] = a1\n 29858: u64 [a4 + 0x18] = a1\n 29861: a1 = s1 + 0x2a60\n 29865: u64 [s1 + 0x128] = a2\n 29869: u64 [a4 + 0x20] = a2\n 29872: ra = 998, jump @4\n      : @942 [@dyn 499] (gas: 13)\n 29878: a0 = u64 [s1 + 0x198]\n 29882: a1 = s1 + 0x2958\n 29886: u64 [a1 + 0x100] = a0\n 29890: a0 = u64 [s1 + 0x1a0]\n 29894: u64 [a1 + 0xf8] = a0\n 29898: a0 = u64 [s1 + 0x1a8]\n 29902: u64 [a1 + 0xf0] = a0\n 29906: a2 = a1\n 29908: a1 = s1 + 0x2a40\n 29912: a0 = u64 [s1 + 0x1b0]\n 29916: u64 [a2 + 0xe8] = a0\n 29920: a0 = 0\n 29922: ra = 1000, jump @4\n      : @943 [@dyn 500] (gas: 7)\n 29928: a0 = sp + 0xffffffffffffffe0\n 29931: a0 = a0 & 0xffffffffffffffe0\n 29934: u64 [s1 + 0x190] = a0\n 29938: sp = a0\n 29940: a0 = u64 [s1 + 0x100]\n 29944: a0 = i32 [a0]\n 29946: jump @945 if a0 >u 31\n      : @944 (gas: 3)\n 29950: a1 = u64 [s1 + 0x100]\n 29954: u32 [a1 + 0] = 0x20\n 29957: fallthrough\n      : @945 (gas: 3)\n 29958: a0 = 0xffffffff\n 29968: u64 [s1 + 0x130] = a0\n 29972: t0 = 1002, jump @1445\n      : @946 [@dyn 501] (gas: 33)\n 29978: a0 = u64 [s1 + 0xf8]\n 29982: ecalli 7 // 'hash_keccak_256'\n 29984: t1 = 0\n 29986: a5 = 0\n 29988: t0 = 0\n 29990: a3 = u64 [s1 + 0x1b8]\n 29994: a0 = u64 [a3 + 0x18]\n 29997: a1 = u64 [a3 + 0x10]\n 30000: a4 = u64 [a3 + 0x8]\n 30003: t2 = u64 [a3]\n 30005: ra = reverse a0\n 30007: a3 = reverse a1\n 30009: a0 = reverse a4\n 30011: a1 = 0\n 30013: a2 = reverse t2\n 30015: a4 = u64 [s1 + 0x190]\n 30019: u64 [a4 + 0x18] = a2\n 30022: u64 [s1 + 0x138] = a0\n 30026: u64 [a4 + 0x10] = a0\n 30029: u64 [a4 + 0x8] = a3\n 30032: u64 [a4] = ra\n 30034: a0 = 0xffffffe0\n 30044: a4 = s1 + 0x100\n 30048: u64 [a4 + 0x8] = a0\n 30051: a0 = u64 [s1 + 0xf0]\n 30055: u64 [a4 + 0xb8] = a0\n 30059: a0 = u64 [s1 + 0x50]\n 30062: u64 [a4 + 0xb0] = a0\n 30066: a0 = u64 [s1 + 0x58]\n 30069: u64 [a4 + 0xa8] = a0\n 30073: a0 = u64 [s1 + 0x60]\n 30076: u64 [a4 + 0xa0] = a0\n 30080: fallthrough\n      : @947 (gas: 40)\n 30081: u64 [s1 + 0x148] = a2\n 30085: u64 [s1 + 0x150] = a3\n 30089: u64 [s1 + 0x158] = ra\n 30093: ra = u64 [s1 + 0x1b8]\n 30097: t2 = ra + 0x20\n 30100: a0 = u64 [s1 + 0x110]\n 30104: u64 [s1 + 0x170] = t1\n 30108: a0 = t1 <u a0\n 30111: a2 = u64 [s1 + 0x118]\n 30115: a3 = a5 ^ a2\n 30118: u64 [s1 + 0x168] = a5\n 30122: a2 = a5 <u a2\n 30125: a2 = a0 if a3 == 0\n 30128: a4 = u64 [s1 + 0x120]\n 30132: a0 = a1 <u a4\n 30135: a3 = u64 [s1 + 0x128]\n 30139: a5 = t0 ^ a3\n 30142: u64 [s1 + 0x160] = t0\n 30146: a3 = t0 <u a3\n 30149: a3 = a0 if a5 == 0\n 30152: u64 [s1 + 0x140] = a1\n 30156: a0 = a1 ^ a4\n 30159: a0 = a0 | a5\n 30162: u64 [s1 + 0x198] = t2\n 30166: a4 = t2 <u ra\n 30169: a3 = a2 if a0 == 0\n 30172: a1 = s1 + 0x100\n 30176: a2 = u64 [a1 + 0xb0]\n 30180: a0 = a2 + a4\n 30183: u64 [a1 + 0x88] = a0\n 30187: a0 = a0 <u a2\n 30190: a0 = a4 if a4 == 0\n 30193: a2 = u64 [a1 + 0xa8]\n 30197: a0 = a0 + a2\n 30200: u64 [a1 + 0x78] = a0\n 30203: a0 = a0 <u a2\n 30206: a2 = u64 [a1 + 0xa0]\n 30210: a0 = a0 + a2\n 30213: u64 [a1 + 0x80] = a0\n 30217: jump @953 if a3 == 0\n      : @948 (gas: 3)\n 30221: a0 = s1 + 0x2620\n 30225: a1 = u64 [s1 + 0x190]\n 30229: ra = 1004, jump @6\n      : @949 [@dyn 502] (gas: 1)\n 30235: t0 = 1006, jump @1457\n      : @950 [@dyn 503] (gas: 1)\n 30241: jump @912 if a1 == 0\n      : @951 (gas: 17)\n 30245: a3 = s1 + 0x2158\n 30249: a5 = a3 + 0x400\n 30253: a0 = u64 [a5 + 0xd8]\n 30257: a1 = u64 [a5 + 0xd0]\n 30261: a2 = u64 [a5 + 0xc8]\n 30265: a4 = u64 [s1 + 0x130]\n 30269: a0 = a0 & a4\n 30272: a4 = 0xffffffffffffffff\n 30275: a1 = a1 & a4\n 30278: a2 = a2 & a4\n 30281: u64 [a3 + 1216] = 0\n 30285: u64 [a5 + 0xa8] = a2\n 30289: u64 [a5 + 0xb0] = a1\n 30293: a1 = s1 + 0x2600\n 30297: u64 [a5 + 0xb8] = a0\n 30301: a0 = u64 [s1 + 0x198]\n 30305: ra = 1008, jump @4\n      : @952 [@dyn 504] (gas: 41)\n 30311: ra = u64 [s1 + 0x158]\n 30315: ra = ra + 0x1\n 30318: a0 = ra <u 0x1\n 30321: a3 = u64 [s1 + 0x150]\n 30325: a3 = a3 + a0\n 30328: a0 = ra | a3\n 30331: a0 = a0 <u 0x1\n 30334: a1 = u64 [s1 + 0x138]\n 30338: a0 = a0 + a1\n 30341: a1 = a0 <u a1\n 30344: a4 = u64 [s1 + 0x148]\n 30348: a4 = a4 + a1\n 30351: t1 = u64 [s1 + 0x170]\n 30355: t1 = t1 + 0x1\n 30358: a1 = t1 <u 0x1\n 30361: a5 = u64 [s1 + 0x168]\n 30365: a5 = a5 + a1\n 30368: a1 = t1 | a5\n 30371: a1 = a1 <u 0x1\n 30374: a2 = u64 [s1 + 0x140]\n 30378: a1 = a1 + a2\n 30381: a2 = a1 <u a2\n 30384: t0 = u64 [s1 + 0x160]\n 30388: t0 = t0 + a2\n 30391: a2 = u64 [s1 + 0x190]\n 30395: u64 [a2 + 0x8] = a3\n 30398: u64 [a2] = ra\n 30400: u64 [a2 + 0x10] = a0\n 30403: u64 [a2 + 0x18] = a4\n 30406: a2 = s1 + 0x100\n 30410: u64 [a2 + 0x38] = a0\n 30413: a0 = u64 [a2 + 0x98]\n 30417: u64 [a2 + 0xb8] = a0\n 30421: a0 = u64 [a2 + 0x88]\n 30425: u64 [a2 + 0xb0] = a0\n 30429: a0 = u64 [a2 + 0x78]\n 30432: u64 [a2 + 0xa8] = a0\n 30436: a0 = u64 [a2 + 0x80]\n 30440: u64 [a2 + 0xa0] = a0\n 30444: a2 = a4\n 30446: jump @947\n      : @953 (gas: 41)\n 30449: t0 = u64 [s1 + 0xf0]\n 30453: a0 = u64 [s1 + 0x198]\n 30457: t2 = a0 <u t0\n 30460: a5 = u64 [s1 + 0x50]\n 30463: a0 = u64 [s1 + 0x188]\n 30467: a3 = a0 ^ a5\n 30470: a2 = a0 <u a5\n 30473: a2 = t2 if a3 == 0\n 30476: a1 = u64 [s1 + 0x58]\n 30479: a4 = u64 [s1 + 0x178]\n 30483: a3 = a4 - a1\n 30486: t1 = a3 <u a2\n 30489: a4 = a4 <u a1\n 30492: a4 = a4 + t1\n 30495: u64 [s1 + 0x1b8] = a4\n 30499: t1 = u64 [s1 + 0x60]\n 30502: a4 = u64 [s1 + 0x180]\n 30506: a4 = a4 - t1\n 30509: ra = u64 [s1 + 0x1b8]\n 30513: a4 = a4 - ra\n 30516: u64 [s1 + 0x1b8] = a4\n 30520: a3 = a3 - a2\n 30523: u64 [s1 + 0x1b0] = a3\n 30527: a2 = a0 - a5\n 30530: a2 = a2 - t2\n 30533: a0 = u64 [s1 + 0x198]\n 30537: a4 = a0 - t0\n 30540: a3 = s1 + 0x2958\n 30544: u64 [a3 + 0xc8] = t0\n 30548: u64 [a3 + 0xa8] = a4\n 30552: u64 [a3 + 0xd0] = a5\n 30556: u64 [a3 + 0xd8] = a1\n 30560: u64 [a3 + 0xb0] = a2\n 30564: u64 [a3 + 0xe0] = t1\n 30568: a0 = u64 [s1 + 0x1b0]\n 30572: u64 [a3 + 0xb8] = a0\n 30576: a0 = s1 + 0x2a20\n 30580: a1 = s1 + 0x2a00\n 30584: a2 = u64 [s1 + 0x1b8]\n 30588: u64 [a3 + 0xc0] = a2\n 30592: ra = 1010, jump @1235\n      : @954 [@dyn 505] (gas: 17)\n 30598: u64 [s1 + 272] = 0\n 30602: u64 [s1 + 232] = 0\n 30606: u64 [s1 + 264] = 0\n 30610: a2 = 0\n 30612: t0 = 0\n 30614: ra = 0\n 30616: a4 = 0\n 30618: a5 = 0\n 30620: u64 [s1 + 392] = 0\n 30624: u64 [s1 + 384] = 0\n 30628: u64 [s1 + 368] = 0\n 30632: u64 [s1 + 376] = 0\n 30636: a0 = 0x100000000\n 30646: u64 [s1 + 0x118] = a0\n 30650: a0 = 0xffffffe0\n 30660: u64 [s1 + 0x48] = a0\n 30663: fallthrough\n      : @955 (gas: 8)\n 30664: u64 [s1 + 0xc8] = a5\n 30668: u64 [s1 + 0xd0] = a4\n 30672: u64 [s1 + 0xd8] = ra\n 30676: u64 [s1 + 0x138] = t0\n 30680: u64 [s1 + 0xe0] = a2\n 30684: a0 = s1 + 0x29e0\n 30688: a1 = u64 [s1 + 0xf0]\n 30692: ra = 1012, jump @2\n      : @956 [@dyn 506] (gas: 21)\n 30698: a3 = s1 + 0x2958\n 30702: a0 = u64 [a3 + 0x90]\n 30706: a1 = u64 [a3 + 0xa0]\n 30710: a2 = u64 [a3 + 0x88]\n 30714: t1 = u64 [a3 + 0x98]\n 30718: a3 = u64 [s1 + 0x180]\n 30722: a4 = a3 ^ a0\n 30725: a0 = a3 <u a0\n 30728: t0 = u64 [s1 + 0x188]\n 30732: a2 = t0 <u a2\n 30735: a2 = a0 if a4 != 0\n 30738: a5 = u64 [s1 + 0x170]\n 30742: a0 = a5 <u t1\n 30745: a4 = u64 [s1 + 0x178]\n 30749: t2 = a4 ^ a1\n 30752: a1 = a4 <u a1\n 30755: a1 = a0 if t2 == 0\n 30758: a0 = a5 ^ t1\n 30761: a0 = a0 | t2\n 30764: a1 = a2 if a0 == 0\n 30767: jump @991 if a1 == 0\n      : @957 (gas: 19)\n 30771: a1 = s1 + 0x2158\n 30775: u64 [a1 + 0x6c8] = t0\n 30779: a0 = u64 [s1 + 0xf0]\n 30783: a2 = a1 + 0x600\n 30787: u64 [a2 + 0xe8] = a0\n 30791: u64 [a2 + 0xd0] = a3\n 30795: a0 = u64 [s1 + 0x50]\n 30798: u64 [a2 + 0xf0] = a0\n 30802: u64 [a2 + 0xd8] = a5\n 30806: a0 = u64 [s1 + 0x58]\n 30809: u64 [a2 + 0xf8] = a0\n 30813: u64 [a2 + 0xe0] = a4\n 30817: a4 = a1\n 30819: a0 = s1 + 0x2860\n 30823: a1 = s1 + 0x2840\n 30827: a2 = s1 + 0x2820\n 30831: a3 = u64 [s1 + 0x60]\n 30834: u64 [a4 + 0x700] = a3\n 30838: ra = 1014, jump @1323\n      : @958 [@dyn 507] (gas: 3)\n 30844: t0 = 0x3f8\n 30848: a1 = s1 + 0x2158\n 30852: fallthrough\n      : @959 [@dyn 508] (gas: 13)\n 30853: a4 = a1 + 0x700\n 30857: a0 = u64 [a4 + 0x20]\n 30860: a2 = u64 [a4 + 0x18]\n 30863: a3 = u64 [a4 + 0x10]\n 30866: a1 = u64 [a4 + 0x8]\n 30869: a0 = a0 | a3\n 30872: a3 = a1 | a2\n 30875: a3 = a3 | a0\n 30878: a3 = a3 >> 0x20\n 30881: a0 = a0 | a2\n 30884: a0 = a0 << 0x20\n 30887: a0 = a0 | a3\n 30890: jump @912 if a0 != 0\n      : @960 (gas: 2)\n 30894: a0 = s1 + 0x2800\n 30898: ra = 1018, jump @2\n      : @961 [@dyn 509] (gas: 19)\n 30904: a2 = s1 + 0x2158\n 30908: a3 = a2 + 0x600\n 30912: a0 = u64 [a3 + 0xa8]\n 30916: u64 [s1 + 0x1b8] = a0\n 30920: a0 = u64 [a3 + 0xb0]\n 30924: u64 [s1 + 0x1b0] = a0\n 30928: a0 = u64 [a3 + 0xb8]\n 30932: u64 [s1 + 0x1a8] = a0\n 30936: a0 = u64 [s1 + 0x88]\n 30940: u64 [a3 + 0xa0] = a0\n 30944: a0 = u64 [s1 + 0x90]\n 30948: u64 [a3 + 0x98] = a0\n 30952: a0 = u64 [s1 + 0x98]\n 30956: u64 [a3 + 0x90] = a0\n 30960: a1 = s1 + 0x27e0\n 30964: a0 = u64 [s1 + 0xa0]\n 30968: u64 [a3 + 0x88] = a0\n 30972: a0 = 0\n 30974: ra = 1020, jump @4\n      : @962 [@dyn 510] (gas: 9)\n 30980: a0 = s1 + 0x2158\n 30984: u64 [a0 + 1664] = 0\n 30988: u64 [a0 + 1656] = 0\n 30992: u64 [a0 + 1648] = 0\n 30996: a3 = a0\n 30998: a0 = 0x20\n 31001: a1 = s1 + 0x27c0\n 31005: u64 [a3 + 1640] = 0x3\n 31010: ra = 1022, jump @4\n      : @963 [@dyn 511] (gas: 3)\n 31016: a1 = u64 [s1 + 0x100]\n 31020: a0 = i32 [a1]\n 31022: jump @965 if a0 >u 63\n      : @964 (gas: 2)\n 31026: u32 [a1 + 0] = 0x40\n 31029: fallthrough\n      : @965 (gas: 11)\n 31030: a0 = u64 [s1 + 0x130]\n 31034: a1 = u64 [s1 + 0x1a8]\n 31038: a0 = a0 & a1\n 31041: u64 [s1 + 0x140] = a0\n 31045: a1 = u64 [s1 + 0x1b0]\n 31049: a1 = a1 & 0xffffffffffffffff\n 31052: u64 [s1 + 0x148] = a1\n 31056: a1 = u64 [s1 + 0x1b8]\n 31060: a0 = a1 & 0xffffffffffffffff\n 31063: u64 [s1 + 0x150] = a0\n 31067: t0 = 1024, jump @1441\n      : @966 [@dyn 512] (gas: 30)\n 31073: ecalli 7 // 'hash_keccak_256'\n 31075: a3 = u64 [s1 + 0x1b8]\n 31079: a0 = u64 [a3 + 0x18]\n 31082: a1 = u64 [a3 + 0x10]\n 31085: a2 = u64 [a3 + 0x8]\n 31088: a3 = u64 [a3]\n 31090: a0 = reverse a0\n 31092: u64 [s1 + 0x1b8] = a0\n 31096: a0 = reverse a1\n 31098: u64 [s1 + 0x1b0] = a0\n 31102: a0 = reverse a2\n 31104: u64 [s1 + 0x1a8] = a0\n 31108: a0 = reverse a3\n 31110: u64 [s1 + 0x1a0] = a0\n 31114: a0 = sp + 0xffffffffffffffe0\n 31117: a0 = a0 & 0xffffffffffffffe0\n 31120: u64 [s1 + 0x168] = a0\n 31124: sp = a0\n 31126: a2 = s1 + 0x2158\n 31130: u64 [a2 + 1632] = 0\n 31134: a0 = u64 [s1 + 0x140]\n 31138: a3 = a2 + 0x600\n 31142: u64 [a3 + 0x58] = a0\n 31145: a0 = u64 [s1 + 0x148]\n 31149: u64 [a3 + 0x50] = a0\n 31152: a1 = s1 + 0x27a0\n 31156: a0 = u64 [s1 + 0x150]\n 31160: u64 [a3 + 0x48] = a0\n 31163: a0 = 0\n 31165: ra = 1026, jump @4\n      : @967 [@dyn 513] (gas: 14)\n 31171: a0 = u64 [s1 + 0x1a0]\n 31175: a1 = s1 + 0x2158\n 31179: a2 = a1 + 0x600\n 31183: u64 [a2 + 0x40] = a0\n 31186: a0 = u64 [s1 + 0x1a8]\n 31190: u64 [a2 + 0x38] = a0\n 31193: a0 = u64 [s1 + 0x1b0]\n 31197: u64 [a2 + 0x30] = a0\n 31200: a3 = a1\n 31202: a0 = 0x20\n 31205: a1 = s1 + 0x2780\n 31209: a2 = u64 [s1 + 0x1b8]\n 31213: u64 [a3 + 0x628] = a2\n 31217: ra = 1028, jump @4\n      : @968 [@dyn 514] (gas: 3)\n 31223: a1 = u64 [s1 + 0x100]\n 31227: a0 = i32 [a1]\n 31229: jump @970 if a0 >u 63\n      : @969 (gas: 3)\n 31233: u32 [a1 + 0] = 0x40\n 31236: t0 = 0x406\n 31240: jump @1441\n      : @970 (gas: 1)\n 31243: t0 = 1030, jump @1441\n      : @971 [@dyn 515] (gas: 5)\n 31249: ra = 0x408\n 31253: ecalli 7 // 'hash_keccak_256'\n 31255: a3 = u64 [s1 + 0x1b8]\n 31259: t0 = 0x40a\n 31263: jump @1437\n      : @972 [@dyn 516] (gas: 2)\n 31266: a3 = u64 [s1 + 0x1b8]\n 31270: t0 = 1034, jump @1437\n      : @973 [@dyn 517] (gas: 12)\n 31276: u64 [s1 + 0x1a0] = a1\n 31280: a2 = u64 [s1 + 0x168]\n 31284: u64 [a2 + 0x18] = a1\n 31287: u64 [s1 + 0x1a8] = a0\n 31291: u64 [a2 + 0x10] = a0\n 31294: u64 [s1 + 0x198] = a4\n 31298: u64 [a2 + 0x8] = a4\n 31301: u64 [s1 + 0x190] = a5\n 31305: u64 [a2] = a5\n 31307: a0 = s1 + 0x2760\n 31311: a1 = 0x40\n 31314: ra = 1036, jump @2\n      : @974 [@dyn 518] (gas: 19)\n 31320: a1 = s1 + 0x2158\n 31324: a5 = a1 + 0x600\n 31328: a0 = u64 [a5 + 0x20]\n 31331: u64 [s1 + 0x160] = a0\n 31335: a2 = u64 [a5 + 0x18]\n 31338: u64 [s1 + 0x158] = a2\n 31342: a4 = u64 [a5 + 0x10]\n 31345: u64 [s1 + 0x1b0] = a4\n 31349: a3 = u64 [a5 + 0x8]\n 31352: u64 [s1 + 0x1b8] = a3\n 31356: u64 [a5] = a0\n 31358: a5 = a1 + 0x500\n 31362: u64 [a5 + 0xf8] = a2\n 31366: u64 [a5 + 0xf0] = a4\n 31370: a0 = s1 + 0x2740\n 31374: u64 [a5 + 0xe8] = a3\n 31378: ra = 0x40e\n 31382: t0 = 0x506\n 31386: jump @1443\n      : @975 [@dyn 519] (gas: 3)\n 31389: a0 = s1 + 0x2720\n 31393: a1 = u64 [s1 + 0x168]\n 31397: ra = 1040, jump @6\n      : @976 [@dyn 520] (gas: 7)\n 31403: a3 = s1 + 0x100\n 31407: a0 = u64 [a3 + 0x60]\n 31410: a1 = u64 [a3 + 0xb0]\n 31414: a0 = a0 | a1\n 31417: a2 = u64 [a3 + 0x58]\n 31420: a1 = u64 [a3 + 0xb8]\n 31424: t0 = 1042, jump @1472\n      : @977 [@dyn 521] (gas: 1)\n 31430: jump @912 if a0 != 0\n      : @978 (gas: 17)\n 31434: a4 = s1 + 0x2158\n 31438: a5 = a4 + 0x500\n 31442: a3 = u64 [a5 + 0xe0]\n 31446: a2 = u64 [a5 + 0xd8]\n 31450: a1 = u64 [a5 + 0xd0]\n 31454: a0 = u64 [a5 + 0xc8]\n 31458: u64 [s1 + 0x128] = a0\n 31462: u64 [a5 + 0xa8] = a0\n 31466: u64 [s1 + 0x120] = a1\n 31470: u64 [a5 + 0xb0] = a1\n 31474: u64 [s1 + 0xc0] = a2\n 31478: u64 [a5 + 0xb8] = a2\n 31482: a1 = s1 + 0x2700\n 31486: u64 [s1 + 0xb8] = a3\n 31490: u64 [a5 + 0xc0] = a3\n 31494: a0 = u64 [s1 + 0x1b8]\n 31498: ra = 1044, jump @4\n      : @979 [@dyn 522] (gas: 21)\n 31504: a0 = u64 [s1 + 0x190]\n 31508: a0 = a0 + 0x1\n 31511: a1 = a0 <u 0x1\n 31514: a2 = u64 [s1 + 0x198]\n 31518: a1 = a1 + a2\n 31521: a2 = a0 | a1\n 31524: a2 = a2 <u 0x1\n 31527: a3 = u64 [s1 + 0x1a8]\n 31531: a2 = a2 + a3\n 31534: a3 = a2 <u a3\n 31537: a4 = u64 [s1 + 0x1a0]\n 31541: a3 = a3 + a4\n 31544: a4 = s1 + 0x3958\n 31548: a5 = a4 + 0x600\n 31552: u64 [a5 + 0x50] = a1\n 31555: u64 [a5 + 0x48] = a0\n 31558: u64 [a5 + 0x58] = a2\n 31561: u64 [a5 + 0x60] = a3\n 31564: a0 = s1 + 0x26e0\n 31568: a1 = s1 + 0x3fa0\n 31572: ra = 1046, jump @6\n      : @980 [@dyn 523] (gas: 12)\n 31578: a3 = s1 + 0x100\n 31582: a0 = u64 [a3 + 0x60]\n 31585: a2 = u64 [a3 + 0x58]\n 31588: a2 = a2 | a0\n 31591: a0 = u64 [s1 + 0x48]\n 31594: a1 = u64 [a3 + 0xb8]\n 31598: a0 = a1 <u a0\n 31601: a1 = u64 [a3 + 0xb0]\n 31605: a0 = 0 if a1 != 0\n 31607: u64 [a3 + 0x68] = a2\n 31610: a0 = 0 if a2 != 0\n 31612: jump @912 if a0 == 0\n      : @981 (gas: 14)\n 31616: a5 = s1 + 0x2158\n 31620: t0 = u64 [a5 + 0x5a0]\n 31624: a2 = a5 + 0x500\n 31628: a1 = u64 [a2 + 0x98]\n 31632: a3 = u64 [a2 + 0x90]\n 31636: a4 = u64 [a2 + 0x88]\n 31640: a0 = u64 [s1 + 0x1b8]\n 31644: i32 a0 = a0 + 0x20\n 31647: u64 [a2 + 0x68] = a4\n 31650: u64 [a2 + 0x70] = a3\n 31653: u64 [a2 + 0x78] = a1\n 31656: a1 = s1 + 0x26c0\n 31660: u64 [a5 + 0x580] = t0\n 31664: ra = 1048, jump @4\n      : @982 [@dyn 524] (gas: 3)\n 31670: a1 = u64 [s1 + 0x190]\n 31674: a0 = a1 + 0x2\n 31677: t0 = 1050, jump @1432\n      : @983 [@dyn 525] (gas: 7)\n 31683: u64 [a5 + 0x70] = a2\n 31686: u64 [a5 + 0x68] = a0\n 31689: u64 [a5 + 0x78] = a3\n 31692: u64 [a5 + 0x80] = a1\n 31696: a0 = s1 + 0x26a0\n 31700: a1 = s1 + 0x3fc0\n 31704: ra = 1052, jump @6\n      : @984 [@dyn 526] (gas: 10)\n 31710: a2 = s1 + 0x100\n 31714: a0 = u64 [a2 + 0x18]\n 31717: a0 = a0 + 0xffffffffffffffc0\n 31720: a1 = u64 [a2 + 0xb8]\n 31724: a0 = a1 <u a0\n 31727: a1 = u64 [a2 + 0xb0]\n 31731: a0 = 0 if a1 != 0\n 31733: a1 = u64 [a2 + 0x68]\n 31736: a0 = 0 if a1 != 0\n 31738: jump @912 if a0 == 0\n      : @985 (gas: 18)\n 31742: a2 = s1 + 0x2158\n 31746: t0 = u64 [a2 + 0x560]\n 31750: a3 = a2 + 0x500\n 31754: a1 = u64 [a3 + 0x58]\n 31757: a4 = u64 [a3 + 0x50]\n 31760: a5 = u64 [a3 + 0x48]\n 31763: a0 = u64 [s1 + 0x1b8]\n 31767: i32 a0 = a0 + 0x40\n 31770: u64 [s1 + 0xa8] = a5\n 31774: u64 [a3 + 0x28] = a5\n 31777: u64 [s1 + 0xb0] = a4\n 31781: u64 [a3 + 0x30] = a4\n 31784: u64 [s1 + 0x160] = a1\n 31788: u64 [a3 + 0x38] = a1\n 31791: a1 = s1 + 0x2680\n 31795: u64 [s1 + 0x158] = t0\n 31799: u64 [a2 + 0x540] = t0\n 31803: ra = 1054, jump @4\n      : @986 [@dyn 527] (gas: 3)\n 31809: a1 = u64 [s1 + 0x190]\n 31813: a0 = a1 + 0x3\n 31816: t0 = 1056, jump @1432\n      : @987 [@dyn 528] (gas: 7)\n 31822: u64 [a5 + 0x90] = a2\n 31826: u64 [a5 + 0x88] = a0\n 31830: u64 [a5 + 0x98] = a3\n 31834: u64 [a5 + 0xa0] = a1\n 31838: a0 = s1 + 0x2660\n 31842: a1 = s1 + 0x3fe0\n 31846: ra = 1058, jump @6\n      : @988 [@dyn 529] (gas: 10)\n 31852: a2 = s1 + 0x100\n 31856: a0 = u64 [a2 + 0x18]\n 31859: a0 = a0 + 0xffffffffffffffa0\n 31862: a1 = u64 [a2 + 0xb8]\n 31866: a0 = a1 <u a0\n 31869: a1 = u64 [a2 + 0xb0]\n 31873: a0 = 0 if a1 != 0\n 31875: a1 = u64 [a2 + 0x68]\n 31878: a0 = 0 if a1 != 0\n 31880: jump @912 if a0 == 0\n      : @989 (gas: 12)\n 31884: a2 = s1 + 0x2158\n 31888: a0 = u64 [a2 + 0x508]\n 31892: a0 = a0 & 0xff\n 31896: a1 = a0 >u 0\n 31898: a0 = u64 [s1 + 0x1b8]\n 31902: i32 a0 = a0 + 0x60\n 31905: u64 [a2 + 1280] = 0\n 31909: u64 [a2 + 1272] = 0\n 31913: u64 [a2 + 0x4e8] = a1\n 31917: a1 = s1 + 0x2640\n 31921: u64 [a2 + 1264] = 0\n 31925: ra = 1060, jump @4\n      : @990 [@dyn 530] (gas: 78)\n 31931: a0 = u64 [s1 + 0x68]\n 31934: a1 = u64 [s1 + 0xa8]\n 31938: a0 = a0 <u a1\n 31941: a2 = u64 [s1 + 0x70]\n 31944: a3 = u64 [s1 + 0xb0]\n 31948: a1 = a3 ^ a2\n 31951: a2 = a2 <u a3\n 31954: a2 = a0 if a1 == 0\n 31957: a0 = u64 [s1 + 0x80]\n 31961: a3 = u64 [s1 + 0x158]\n 31965: a1 = a3 ^ a0\n 31968: a0 = a0 <u a3\n 31971: a4 = u64 [s1 + 0x78]\n 31974: a5 = u64 [s1 + 0x160]\n 31978: a3 = a4 <u a5\n 31981: a0 = a3 if a1 == 0\n 31984: a3 = a5 ^ a4\n 31987: a1 = a1 | a3\n 31990: a0 = a2 if a1 == 0\n 31993: a1 = u64 [s1 + 0x128]\n 31997: a2 = u64 [s1 + 0x138]\n 32001: a1 = a2 <u a1\n 32004: a3 = u64 [s1 + 0x120]\n 32008: ra = u64 [s1 + 0xd8]\n 32012: a2 = a3 ^ ra\n 32015: a3 = ra <u a3\n 32018: a3 = a1 if a2 == 0\n 32021: t2 = u64 [s1 + 0xc0]\n 32025: a2 = u64 [s1 + 0xd0]\n 32029: a1 = a2 <u t2\n 32032: t1 = u64 [s1 + 0xb8]\n 32036: a5 = u64 [s1 + 0xc8]\n 32040: t0 = t1 ^ a5\n 32043: a4 = a5 <u t1\n 32046: a4 = a1 if t0 == 0\n 32049: a1 = t2 ^ a2\n 32052: a1 = a1 | t0\n 32055: t0 = u64 [s1 + 0x138]\n 32059: a4 = a3 if a1 == 0\n 32062: a0 = a4 & ~a0\n 32065: a4 = a2\n 32067: a1 = u64 [s1 + 0x108]\n 32071: a2 = u64 [s1 + 0x140]\n 32075: a1 = a2 if a0 != 0\n 32078: u64 [s1 + 0x108] = a1\n 32082: a1 = u64 [s1 + 0xe8]\n 32086: a2 = u64 [s1 + 0x148]\n 32090: a1 = a2 if a0 != 0\n 32093: u64 [s1 + 0xe8] = a1\n 32097: a1 = u64 [s1 + 0x110]\n 32101: a2 = u64 [s1 + 0x150]\n 32105: a1 = a2 if a0 != 0\n 32108: u64 [s1 + 0x110] = a1\n 32112: a5 = t1 if a0 != 0\n 32115: a4 = t2 if a0 != 0\n 32118: a1 = u64 [s1 + 0x120]\n 32122: ra = a1 if a0 != 0\n 32125: a1 = u64 [s1 + 0x128]\n 32129: t0 = a1 if a0 != 0\n 32132: a2 = u64 [s1 + 0xe0]\n 32136: a2 = 0 if a0 != 0\n 32138: a1 = u64 [s1 + 0x188]\n 32142: a1 = a1 + 0x1\n 32145: a0 = a1 <u 0x1\n 32148: a3 = u64 [s1 + 0x180]\n 32152: a3 = a3 + a0\n 32155: u64 [s1 + 0x188] = a1\n 32159: u64 [s1 + 0x180] = a3\n 32163: a0 = a1 | a3\n 32166: a0 = a0 <u 0x1\n 32169: a1 = u64 [s1 + 0x170]\n 32173: a0 = a0 + a1\n 32176: a1 = a0 <u a1\n 32179: a3 = u64 [s1 + 0x178]\n 32183: a3 = a3 + a1\n 32186: u64 [s1 + 0x178] = a3\n 32190: u64 [s1 + 0x170] = a0\n 32194: jump @955\n      : @991 (gas: 14)\n 32197: a0 = u64 [s1 + 0xe8]\n 32201: a3 = a0 & 0xffffffffffffffff\n 32204: a4 = s1 + 0x100\n 32208: a0 = u64 [a4 + 0x10]\n 32211: a2 = a0 & 0xffffffffffffffff\n 32214: a0 = u64 [a4 + 0x8]\n 32217: a1 = u64 [a4 + 0x30]\n 32220: a0 = a0 & a1\n 32223: u64 [a4 + 0x30] = a2\n 32226: u64 [a4 + 0x20] = a0\n 32229: a0 = a0 | a2\n 32232: u64 [a4 + 0x28] = a3\n 32235: a0 = a0 | a3\n 32238: jump @1023 if a0 == 0\n      : @992 (gas: 3)\n 32242: a0 = s1 + 0x29c0\n 32246: a1 = u64 [s1 + 0x18]\n 32249: ra = 1062, jump @6\n      : @993 [@dyn 531] (gas: 17)\n 32255: a1 = s1 + 0x2958\n 32259: a0 = u32 [a1 + 0x7c]\n 32262: a0 = a0 << 0x20\n 32265: a1 = u64 [a1 + 0x80]\n 32269: a2 = u64 [s1 + 0x120]\n 32273: a0 = a0 | a2\n 32276: a3 = s1 + 0x3958\n 32280: a2 = u64 [s1 + 0x128]\n 32284: a4 = a3 + 0x600\n 32288: u64 [a4 + 0xb0] = a2\n 32292: a2 = u64 [s1 + 0x130]\n 32296: u64 [a4 + 0xa8] = a2\n 32300: u64 [a4 + 0xc0] = a1\n 32304: u64 [a4 + 0xb8] = a0\n 32308: a1 = s1 + 0x4000\n 32312: a0 = u64 [s1 + 0x18]\n 32315: ra = 1064, jump @9\n      : @994 [@dyn 532] (gas: 3)\n 32321: a1 = u64 [s1 + 0x28]\n 32324: a0 = a1 + 0x4\n 32327: t0 = 1066, jump @1439\n      : @995 [@dyn 533] (gas: 8)\n 32333: a5 = a4 + 0x600\n 32337: u64 [a5 + 0xd8] = a3\n 32341: u64 [a5 + 0xd0] = a2\n 32345: u64 [a5 + 0xc8] = a0\n 32349: u64 [a5 + 0xe0] = a1\n 32353: a0 = s1 + 0x29a0\n 32357: a1 = s1 + 0x4020\n 32361: ra = 1068, jump @6\n      : @996 [@dyn 534] (gas: 30)\n 32367: a0 = s1 + 0x2958\n 32371: a5 = u64 [a0 + 0x60]\n 32374: a3 = u64 [a0 + 0x48]\n 32377: a4 = u64 [a0 + 0x50]\n 32380: a0 = u64 [a0 + 0x58]\n 32383: t0 = 0x5a\n 32386: a1 = a3 mulhu t0\n 32389: a2 = a4 * t0\n 32392: a1 = a1 + a2\n 32395: u64 [s1 + 0x1b8] = a1\n 32399: a1 = a1 <u a2\n 32402: a2 = a4 mulhu t0\n 32405: a1 = a1 + a2\n 32408: a2 = a0 * t0\n 32411: a2 = a2 + a1\n 32414: u64 [s1 + 0x168] = a2\n 32418: a1 = a2 <u a1\n 32421: u64 [s1 + 0x118] = a4\n 32425: a2 = a4 | a5\n 32428: u64 [s1 + 0x140] = a3\n 32432: a3 = a3 | a0\n 32435: a4 = a3 | a2\n 32438: u64 [s1 + 0x138] = a5\n 32442: a3 = a5 * t0\n 32445: u64 [s1 + 0xf0] = a0\n 32449: a2 = a0 mulhu t0\n 32452: a3 = a3 + a2\n 32455: a0 = a3 + a1\n 32458: u64 [s1 + 0x170] = a0\n 32462: jump @998 if a4 == 0\n      : @997 (gas: 9)\n 32465: a0 = u64 [s1 + 0x170]\n 32469: a1 = 0 if a0 != 0\n 32471: a2 = a3 <u a2\n 32474: a3 = u64 [s1 + 0x138]\n 32478: a3 = a3 mulhu t0\n 32481: a3 = a3 >u 0\n 32483: a2 = a2 | a3\n 32486: a1 = a1 | a2\n 32489: jump @1128 if a1 != 0\n      : @998 (gas: 55)\n 32493: a1 = u64 [s1 + 0x140]\n 32497: t0 = a1 * 0x5a\n 32500: t1 = u64 [s1 + 0x168]\n 32504: a0 = t0 | t1\n 32507: ra = u64 [s1 + 0x1b8]\n 32511: t2 = u64 [s1 + 0x170]\n 32515: a1 = ra | t2\n 32518: a0 = a0 | a1\n 32521: a0 = a0 <u 0x1\n 32524: u64 [s1 + 0x1b0] = a0\n 32528: a0 = clz t1\n 32530: a0 = a0 + 0x40\n 32533: a2 = clz t2\n 32535: a2 = a0 if t2 == 0\n 32538: a0 = clz t0\n 32540: a0 = a0 + 0x40\n 32543: a1 = clz ra\n 32545: a1 = a0 if ra == 0\n 32548: a0 = a1 + 0x80\n 32552: a3 = t1 | t2\n 32555: a2 = a0 if a3 == 0\n 32558: a4 = a0 <u a1\n 32561: a4 = 0 if a3 != 0\n 32563: a5 = a4 >u 0\n 32565: a0 = a2 <u 0xfa\n 32569: a3 = a0 ^ 0x1\n 32572: a5 = a3 if a4 == 0\n 32575: a0 = a5 <u 0x1\n 32578: a0 = a0 + 0xffffffffffffffff\n 32581: a1 = -a5\n 32583: a4 = -a4\n 32585: a3 = a4 - a3\n 32588: a2 = 0xf9 - a2\n 32592: u64 [s1 + 0x190] = a1\n 32596: a4 = a1 >u 0\n 32598: a1 = a0 >u 0\n 32600: a1 = a4 if a0 == 0\n 32603: a4 = a3 >u 0\n 32605: u64 [s1 + 0x188] = a2\n 32609: a2 = a2 <u 0x100\n 32613: a2 = a2 ^ 0x1\n 32616: a2 = a4 if a3 != 0\n 32619: a2 = a1 if a5 != 0\n 32622: a1 = u64 [s1 + 0x1b0]\n 32626: a1 = a1 | a2\n 32629: t2 = 0 if a1 != 0\n 32631: u64 [s1 + 0x198] = t2\n 32635: t1 = 0 if a1 != 0\n 32637: u64 [s1 + 0x1b0] = t1\n 32641: ra = 0 if a1 != 0\n 32643: u64 [s1 + 0x1a8] = ra\n 32647: u64 [s1 + 0x158] = t0\n 32651: t0 = 0 if a1 != 0\n 32653: u64 [s1 + 0x1a0] = t0\n 32657: jump @1013 if a1 != 0\n      : @999 (gas: 7)\n 32661: a1 = u64 [s1 + 0x188]\n 32665: a1 = a1 ^ 0xff\n 32669: a2 = u64 [s1 + 0x190]\n 32673: a1 = a1 | a2\n 32676: a2 = a3 | a0\n 32679: a1 = a1 | a2\n 32682: jump @1013 if a1 == 0\n      : @1000 (gas: 20)\n 32686: a4 = u64 [s1 + 0x188]\n 32690: a2 = a4 + 0x1\n 32693: u64 [s1 + 0x1b0] = a2\n 32697: a1 = a2 <u 0x1\n 32700: a1 = a1 + a3\n 32703: u64 [s1 + 0x1a8] = a1\n 32707: a1 = a1 | a2\n 32710: a1 = a1 <u 0x1\n 32713: a2 = u64 [s1 + 0x190]\n 32717: a1 = a1 + a2\n 32720: u64 [s1 + 0x198] = a1\n 32724: a1 = a1 <u a2\n 32727: a0 = a0 + a1\n 32730: u64 [s1 + 0x1a0] = a0\n 32734: a1 = 0xff - a4\n 32738: u64 [s1 + 0x190] = a1\n 32742: a2 = 0x80 - a1\n 32746: a0 = u64 [s1 + 0x158]\n 32750: a1 = u64 [s1 + 0x1b8]\n 32754: ra = 1070, jump @1474\n      : @1001 [@dyn 535] (gas: 6)\n 32760: u64 [s1 + 0x188] = a0\n 32764: u64 [s1 + 0x180] = a1\n 32768: a0 = u64 [s1 + 0x168]\n 32772: a1 = u64 [s1 + 0x170]\n 32776: a2 = u64 [s1 + 0x190]\n 32780: ra = 1072, jump @1479\n      : @1002 [@dyn 536] (gas: 9)\n 32786: u64 [s1 + 0x178] = a0\n 32790: a0 = u64 [s1 + 0x180]\n 32794: a0 = a0 | a1\n 32797: u64 [s1 + 0x180] = a0\n 32801: a0 = u64 [s1 + 0x190]\n 32805: a2 = a0 + 0xffffffffffffff80\n 32808: a0 = u64 [s1 + 0x158]\n 32812: a1 = u64 [s1 + 0x1b8]\n 32816: ra = 1074, jump @1479\n      : @1003 [@dyn 537] (gas: 18)\n 32822: a2 = u64 [s1 + 0x190]\n 32826: a3 = a2 <u 0x80\n 32830: u64 [s1 + 0x160] = a3\n 32834: a4 = u64 [s1 + 0x180]\n 32838: a1 = a4 if a3 != 0\n 32841: a4 = u64 [s1 + 0x170]\n 32845: a1 = a4 if a2 == 0\n 32848: u64 [s1 + 0x180] = a1\n 32852: a1 = u64 [s1 + 0x188]\n 32856: a4 = u64 [s1 + 0x178]\n 32860: a1 = a1 | a4\n 32863: a1 = a0 if a3 == 0\n 32866: a0 = u64 [s1 + 0x168]\n 32870: a1 = a0 if a2 == 0\n 32873: u64 [s1 + 0x188] = a1\n 32877: a0 = u64 [s1 + 0x158]\n 32881: a1 = u64 [s1 + 0x1b8]\n 32885: ra = 1076, jump @1479\n      : @1004 [@dyn 538] (gas: 14)\n 32891: a5 = s1 + 0x100\n 32895: a2 = u64 [a5 + 0xa8]\n 32899: a3 = u64 [a5 + 0xa0]\n 32903: a2 = a2 | a3\n 32906: a3 = u64 [a5 + 0xb0]\n 32910: a4 = u64 [a5 + 0x98]\n 32914: a3 = a3 | a4\n 32917: a2 = a2 | a3\n 32920: a3 = u64 [a5 + 0x60]\n 32923: a1 = 0 if a3 == 0\n 32925: u64 [a5 + 0x78] = a1\n 32928: a0 = 0 if a3 == 0\n 32930: u64 [a5 + 0x90] = a0\n 32934: jump @1006 if a2 != 0\n      : @1005 (gas: 3)\n 32937: u64 [s1 + 368] = 0\n 32941: u64 [s1 + 344] = 0\n 32945: jump @1012\n      : @1006 (gas: 5)\n 32948: a0 = u64 [s1 + 0x1b0]\n 32952: a2 = a0 + 0xffffffffffffff80\n 32955: a0 = u64 [s1 + 0x168]\n 32959: a1 = u64 [s1 + 0x170]\n 32963: ra = 1078, jump @1474\n      : @1007 [@dyn 539] (gas: 6)\n 32969: u64 [s1 + 0x160] = a0\n 32973: u64 [s1 + 0x148] = a1\n 32977: a0 = u64 [s1 + 0x158]\n 32981: a1 = u64 [s1 + 0x1b8]\n 32985: a2 = u64 [s1 + 0x1b0]\n 32989: ra = 1080, jump @1474\n      : @1008 [@dyn 540] (gas: 7)\n 32995: u64 [s1 + 0x100] = a0\n 32999: u64 [s1 + 0x150] = a1\n 33003: a1 = u64 [s1 + 0x1b0]\n 33007: a2 = 0x80 - a1\n 33011: a0 = u64 [s1 + 0x168]\n 33015: a1 = u64 [s1 + 0x170]\n 33019: ra = 1082, jump @1479\n      : @1009 [@dyn 541] (gas: 20)\n 33025: a2 = u64 [s1 + 0x150]\n 33029: a1 = a1 | a2\n 33032: a2 = u64 [s1 + 0x1b0]\n 33036: a4 = a2 <u 0x80\n 33040: u64 [s1 + 0x150] = a4\n 33044: a3 = u64 [s1 + 0x148]\n 33048: a1 = a3 if a4 == 0\n 33051: a3 = u64 [s1 + 0x1b8]\n 33055: a3 = a1 if a2 != 0\n 33058: u64 [s1 + 0x1b8] = a3\n 33062: a1 = u64 [s1 + 0x100]\n 33066: a0 = a0 | a1\n 33069: a1 = u64 [s1 + 0x160]\n 33073: a0 = a1 if a4 == 0\n 33076: a1 = u64 [s1 + 0x158]\n 33080: a1 = a0 if a2 != 0\n 33083: u64 [s1 + 0x158] = a1\n 33087: a0 = u64 [s1 + 0x168]\n 33091: a1 = u64 [s1 + 0x170]\n 33095: ra = 1084, jump @1474\n      : @1010 [@dyn 542] (gas: 11)\n 33101: t0 = u64 [s1 + 0x158]\n 33105: u64 [s1 + 368] = 0\n 33109: u64 [s1 + 352] = 0\n 33113: a3 = s1 + 0x100\n 33117: a2 = u64 [a3 + 0x50]\n 33120: a1 = 0 if a2 == 0\n 33122: u64 [a3 + 0x68] = a1\n 33125: a0 = 0 if a2 == 0\n 33127: u64 [a3 + 80] = 0x63\n 33131: u64 [a3 + 72] = 0\n 33134: fallthrough\n      : @1011 (gas: 90)\n 33135: u64 [s1 + 344] = 0\n 33139: a2 = t0 >> 0x3f\n 33142: ra = u64 [s1 + 0x1b8]\n 33146: a3 = ra << 0x1\n 33149: a3 = a3 | a2\n 33152: a2 = t0 << 0x1\n 33155: a1 = u64 [s1 + 0x180]\n 33159: a4 = a1 >> 0x3f\n 33162: t2 = a2 | a4\n 33165: a2 = u64 [s1 + 0x148]\n 33169: a4 = a2 ^ a3\n 33172: t1 = a2 <u a3\n 33175: a5 = u64 [s1 + 0x150]\n 33179: t0 = a5 <u t2\n 33182: t0 = t1 if a4 != 0\n 33185: a5 = u64 [s1 + 0x168]\n 33189: a5 = a5 << 0x1\n 33192: a4 = a0 >> 0x3f\n 33195: a4 = a4 | a5\n 33198: u64 [s1 + 0x168] = a4\n 33202: a4 = ra >> 0x3f\n 33205: a0 = a0 << 0x1\n 33208: a4 = a4 | a0\n 33211: a0 = a1 << 0x1\n 33214: a1 = u64 [s1 + 0x188]\n 33218: a5 = a1 >> 0x3f\n 33221: a0 = a0 | a5\n 33224: u64 [s1 + 0x1b8] = a0\n 33228: a5 = a1 << 0x1\n 33231: a0 = u64 [s1 + 0x178]\n 33235: a1 = a0 >> 0x3f\n 33238: t1 = a5 | a1\n 33241: a5 = a0 << 0x1\n 33244: a0 = u64 [s1 + 0x190]\n 33248: ra = a0 >> 0x3f\n 33251: a5 = a5 | ra\n 33254: a0 = a0 << 0x1\n 33257: a1 = u64 [s1 + 0x170]\n 33261: a0 = a0 | a1\n 33264: u64 [s1 + 0x190] = a0\n 33268: a1 = u64 [s1 + 0x160]\n 33272: a0 = a1 | a5\n 33275: u64 [s1 + 0x178] = a0\n 33279: a0 = a1 | t1\n 33282: u64 [s1 + 0x188] = a0\n 33286: a0 = u64 [s1 + 0x1b8]\n 33290: a0 = a0 | a1\n 33293: u64 [s1 + 0x180] = a0\n 33297: a0 = a2 - a4\n 33300: a0 = a0 <u t0\n 33303: a1 = a2 <u a4\n 33306: t1 = u64 [s1 + 0x168]\n 33310: a5 = a2 - t1\n 33313: a5 = a5 - a1\n 33316: a5 = a5 - a0\n 33319: ra = a5 >>a 0x3f\n 33322: a0 = ra & 0x64\n 33325: t0 = t2 - a0\n 33328: a1 = t2 <u a0\n 33331: a0 = a3 - a1\n 33334: u64 [s1 + 0x1b8] = a0\n 33338: a1 = 0 if a3 != 0\n 33340: a0 = a4 - a1\n 33343: a1 = a4 <u a1\n 33346: a1 = t1 - a1\n 33349: u64 [s1 + 0x168] = a1\n 33353: a1 = s1 + 0x100\n 33357: a3 = u64 [a1 + 0xb0]\n 33361: a5 = u64 [a1 + 0xa8]\n 33365: a2 = a3 | a5\n 33368: a2 = a2 <u 0x1\n 33371: a4 = u64 [a1 + 0x98]\n 33375: t2 = a4 <u a2\n 33378: a4 = a4 - a2\n 33381: a2 = a3 <u 0x1\n 33384: a5 = a5 - a2\n 33387: a2 = u64 [a1 + 0xa0]\n 33391: a2 = a2 - t2\n 33394: a3 = a3 + 0xffffffffffffffff\n 33397: u64 [a1 + 0xa8] = a5\n 33401: u64 [a1 + 0xa0] = a2\n 33405: a2 = a2 | a5\n 33408: u64 [a1 + 0xb0] = a3\n 33412: a3 = a3 | a4\n 33415: a2 = a2 | a3\n 33418: a3 = ra & 0x1\n 33421: u64 [a1 + 0x70] = a3\n 33424: u64 [a1 + 0x98] = a4\n 33428: u64 [s1 + 352] = 0\n 33432: jump @1011 if a2 != 0\n      : @1012 (gas: 26)\n 33436: a2 = u64 [s1 + 0x188]\n 33440: a0 = a2 >> 0x3f\n 33443: a1 = u64 [s1 + 0x180]\n 33447: a1 = a1 << 0x1\n 33450: a0 = a0 | a1\n 33453: a3 = u64 [s1 + 0x178]\n 33457: a1 = a3 >> 0x3f\n 33460: a2 = a2 << 0x1\n 33463: a1 = a1 | a2\n 33466: a4 = u64 [s1 + 0x190]\n 33470: a2 = a4 >> 0x3f\n 33473: a3 = a3 << 0x1\n 33476: a4 = a4 << 0x1\n 33479: a5 = u64 [s1 + 0x170]\n 33483: a4 = a4 | a5\n 33486: a5 = s1 + 0x100\n 33490: u64 [a5 + 0xa0] = a4\n 33494: a4 = u64 [a5 + 0x58]\n 33497: a2 = a2 | a4\n 33500: a2 = a2 | a3\n 33503: u64 [a5 + 0xa8] = a2\n 33507: a1 = a1 | a4\n 33510: u64 [a5 + 0xb0] = a1\n 33514: a0 = a0 | a4\n 33517: u64 [a5 + 0x98] = a0\n 33521: fallthrough\n      : @1013 (gas: 55)\n 33522: a1 = sp + 0xffffffffffffffe0\n 33525: a1 = a1 & 0xffffffffffffffe0\n 33528: sp = a1\n 33530: a0 = u64 [s1 + 0x1a0]\n 33534: a2 = u64 [s1 + 0x140]\n 33538: t1 = a2 <u a0\n 33541: a0 = u64 [s1 + 0x118]\n 33545: t0 = u64 [s1 + 0x1a8]\n 33549: a2 = a0 ^ t0\n 33552: a3 = a0 <u t0\n 33555: u64 [s1 + 0x1a8] = t0\n 33559: a3 = t1 if a2 == 0\n 33562: a2 = u64 [s1 + 0x138]\n 33566: a4 = u64 [s1 + 0x198]\n 33570: t2 = a2 - a4\n 33573: a5 = u64 [s1 + 0xf0]\n 33577: a2 = u64 [s1 + 0x1b0]\n 33581: a4 = a5 <u a2\n 33584: t2 = t2 - a4\n 33587: a4 = a5 - a2\n 33590: a5 = a4 <u a3\n 33593: t2 = t2 - a5\n 33596: ra = a4 - a3\n 33599: a2 = a0 - t0\n 33602: t1 = a2 - t1\n 33605: a2 = u64 [s1 + 0x28]\n 33608: a0 = a2 + 0x5\n 33611: a2 = a0 <u a2\n 33614: a4 = u64 [s1 + 0x30]\n 33617: a3 = a4 + a2\n 33620: a4 = a3 <u a4\n 33623: a4 = a2 if a2 == 0\n 33626: a2 = u64 [s1 + 0x38]\n 33629: a4 = a4 + a2\n 33632: a2 = a4 <u a2\n 33635: a5 = u64 [s1 + 0x40]\n 33638: a2 = a2 + a5\n 33641: a5 = s1 + 0x3958\n 33645: u64 [a5 + 0x6f0] = a3\n 33649: u64 [a5 + 0x6e8] = a0\n 33653: u64 [a5 + 0x6f8] = a4\n 33657: u64 [a5 + 0x700] = a2\n 33661: a0 = u64 [s1 + 0x1a0]\n 33665: a2 = u64 [s1 + 0x140]\n 33669: a0 = a2 - a0\n 33672: u64 [s1 + 0x168] = ra\n 33676: u64 [a1 + 0x10] = ra\n 33679: u64 [s1 + 0x160] = t1\n 33683: u64 [a1 + 0x8] = t1\n 33686: u64 [s1 + 0x158] = a0\n 33690: u64 [a1] = a0\n 33692: u64 [s1 + 0x170] = t2\n 33696: u64 [a1 + 0x18] = t2\n 33699: a0 = s1 + 0x4040\n 33703: ra = 1086, jump @9\n      : @1014 [@dyn 543] (gas: 53)\n 33710: a0 = u64 [s1 + 0xe8]\n 33714: a0 = reverse a0\n 33716: a1 = a0 << 0x20\n 33719: a2 = u64 [s1 + 0x108]\n 33723: a2 = reverse a2\n 33725: a2 = a2 >> 0x20\n 33728: a1 = a1 | a2\n 33731: a2 = u64 [s1 + 0x110]\n 33735: a2 = reverse a2\n 33737: a3 = a2 << 0x20\n 33740: a4 = 0x30160\n 33745: a0 = a0 >> 0x20\n 33748: a0 = a0 | a3\n 33751: a2 = a2 >> 0x20\n 33754: u64 [0x30168] = a0\n 33759: u64 [0x30160] = a1\n 33764: u32 [0x30170] = a2\n 33769: a0 = u64 [s1 + 0x198]\n 33773: a1 = s1 + 0x3958\n 33777: a2 = a1 + 0x700\n 33781: u64 [a2 + 0x20] = a0\n 33784: a0 = u64 [s1 + 0x1b0]\n 33788: u64 [a2 + 0x18] = a0\n 33791: a0 = u64 [s1 + 0x1a8]\n 33795: u64 [a2 + 0x10] = a0\n 33798: a0 = u64 [s1 + 0x1a0]\n 33802: u64 [a2 + 0x8] = a0\n 33805: u32 [a1 + 1832] = 0\n 33809: u64 [a1 + 1888] = 0\n 33813: u64 [a1 + 1880] = 0\n 33817: u64 [a1 + 1872] = 0\n 33821: u64 [a1 + 1864] = 0\n 33825: a0 = a4 << 0x20\n 33828: a0 = a0 >> 0x20\n 33831: a1 = s1 + 0x4060\n 33835: a1 = a1 << 0x20\n 33838: a1 = a1 >> 0x20\n 33841: a2 = s1 + 0x40a0\n 33845: a2 = a2 << 0x20\n 33848: a3 = a2 | a1\n 33851: a4 = u64 [s1 + 0x20]\n 33854: a4 = a4 << 0x20\n 33857: a4 = a4 >> 0x20\n 33860: a1 = s1 + 0x4080\n 33864: a1 = a1 << 0x20\n 33867: a5 = a1 | a4\n 33870: a1 = 0xffffffffffffffff\n 33873: a2 = 0xffffffffffffffff\n 33876: ecalli 0 // 'call'\n 33877: u64 [s1 + 0x178] = a0\n 33881: a0 = s1 + 0x2940\n 33885: a1 = 0x40\n 33888: ra = 1088, jump @2\n      : @1015 [@dyn 544] (gas: 13)\n 33895: a0 = s1 + 0x2958\n 33899: a1 = u64 [a0]\n 33901: a2 = s1 + 0x100\n 33905: u64 [a2 + 0x80] = a1\n 33909: a3 = a0 + 0xffffffffffffff00\n 33913: a1 = u64 [a3 + 0xf8]\n 33917: u64 [a2 + 0x88] = a1\n 33921: a1 = u64 [a3 + 0xf0]\n 33925: u64 [a2 + 0x90] = a1\n 33929: a0 = u64 [a3 + 0xe8]\n 33933: u64 [a2 + 0xb8] = a0\n 33937: a0 = u64 [a2 + 0x78]\n 33940: jump @1026 if a0 != 0\n      : @1016 (gas: 13)\n 33944: a4 = s1 + 0x100\n 33948: a0 = u64 [a4 + 0xb8]\n 33952: a2 = u64 [a4 + 0x88]\n 33956: a0 = a0 | a2\n 33959: a1 = u64 [a4 + 0x90]\n 33963: a3 = u64 [a4 + 0x80]\n 33967: a1 = a1 | a3\n 33970: a0 = a0 | a1\n 33973: a0 = a0 >> 0x20\n 33976: a1 = a1 | a2\n 33979: a1 = a1 << 0x20\n 33982: a0 = a0 | a1\n 33985: jump @1018 if a0 == 0\n      : @1017 (gas: 1)\n 33988: jump @912\n      : @1018 (gas: 13)\n 33991: a0 = s1 + 0x2158\n 33995: a1 = u64 [s1 + 0x1a0]\n 33999: a3 = a0 + 0x700\n 34003: u64 [a3 + 0xc8] = a1\n 34007: a1 = u64 [s1 + 0x1a8]\n 34011: u64 [a3 + 0xd0] = a1\n 34015: a1 = u64 [s1 + 0x1b0]\n 34019: u64 [a3 + 0xd8] = a1\n 34023: a1 = s1 + 0x2920\n 34027: a2 = u64 [s1 + 0x198]\n 34031: u64 [a3 + 0xe0] = a2\n 34035: a0 = u64 [s1 + 0x1b8]\n 34039: ra = 1090, jump @4\n      : @1019 [@dyn 545] (gas: 11)\n 34046: a3 = s1 + 0x100\n 34050: a0 = u64 [a3 + 0x88]\n 34054: a1 = u64 [a3 + 0x80]\n 34058: a0 = a0 | a1\n 34061: a1 = 0xffffffe0\n 34071: a2 = u64 [a3 + 0xb8]\n 34075: a1 = a2 <u a1\n 34078: a2 = u64 [a3 + 0x90]\n 34082: a1 = 0 if a2 != 0\n 34084: a1 = 0 if a0 != 0\n 34086: jump @1021 if a1 != 0\n      : @1020 (gas: 1)\n 34089: jump @912\n      : @1021 (gas: 14)\n 34092: a0 = u64 [s1 + 0x1b8]\n 34096: i32 a0 = a0 + 0x20\n 34099: a3 = s1 + 0x2158\n 34103: a1 = u64 [s1 + 0x158]\n 34107: a4 = a3 + 0x700\n 34111: u64 [a4 + 0xa8] = a1\n 34115: a1 = u64 [s1 + 0x160]\n 34119: u64 [a4 + 0xb0] = a1\n 34123: a1 = u64 [s1 + 0x168]\n 34127: u64 [a4 + 0xb8] = a1\n 34131: a1 = s1 + 0x2900\n 34135: a2 = u64 [s1 + 0x170]\n 34139: u64 [a4 + 0xc0] = a2\n 34143: ra = 1092, jump @4\n      : @1022 [@dyn 546] (gas: 32)\n 34150: a4 = s1 + 0x2158\n 34154: u64 [a4 + 1888] = 0\n 34158: a0 = u64 [s1 + 0x120]\n 34162: a5 = a4 + 0x700\n 34166: u64 [a5 + 0x58] = a0\n 34169: a0 = u64 [s1 + 0x128]\n 34173: u64 [a5 + 0x50] = a0\n 34176: a0 = u64 [s1 + 0x130]\n 34180: u64 [a5 + 0x48] = a0\n 34183: a0 = u64 [s1 + 0x88]\n 34187: u64 [a5 + 0x80] = a0\n 34191: a0 = u64 [s1 + 0x90]\n 34195: u64 [a5 + 0x78] = a0\n 34198: a0 = u64 [s1 + 0x98]\n 34202: u64 [a5 + 0x70] = a0\n 34205: a0 = u64 [0x20038]\n 34210: a1 = u64 [0x20040]\n 34215: a2 = u64 [0x20048]\n 34220: a3 = u64 [s1 + 0xa0]\n 34224: u64 [a5 + 0x68] = a3\n 34227: u64 [a5 + 0xa0] = a0\n 34231: u64 [a5 + 0x98] = a1\n 34235: u64 [a5 + 0x90] = a2\n 34239: a5 = a4\n 34241: a0 = u64 [0x20050]\n 34246: a1 = 0x40\n 34249: a2 = s1 + 0x28e0\n 34253: a3 = s1 + 0x28c0\n 34257: a4 = s1 + 0x28a0\n 34261: u64 [a5 + 0x788] = a0\n 34265: a0 = u64 [s1 + 0x1b8]\n 34269: ra = 1094, jump @12\n      : @1023 [@dyn 547] (gas: 3)\n 34276: a0 = s1 + 0x2880\n 34280: a1 = u64 [s1 + 0x10]\n 34283: ra = 1096, jump @6\n      : @1024 [@dyn 548] (gas: 17)\n 34290: a3 = s1 + 0x2158\n 34294: a4 = a3 + 0x700\n 34298: a0 = u64 [a4 + 0x28]\n 34301: a1 = u64 [a4 + 0x30]\n 34304: a2 = u64 [a4 + 0x40]\n 34307: a3 = u64 [a4 + 0x38]\n 34310: a0 = a0 & 0xffffffffffffff00\n 34314: a0 = a0 | 0x1\n 34317: a4 = s1 + 0x3958\n 34321: a5 = a4 + 0x700\n 34325: u64 [a5 + 0xa0] = a2\n 34329: u64 [a5 + 0x98] = a3\n 34333: u64 [a5 + 0x90] = a1\n 34337: u64 [a5 + 0x88] = a0\n 34341: a1 = s1 + 0x40e0\n 34345: a0 = u64 [s1 + 0x10]\n 34348: ra = 1098, jump @9\n      : @1025 [@dyn 549] (gas: 6)\n 34355: a0 = 0\n 34357: a1 = u64 [s1 + 0xf8]\n 34361: a2 = 0\n 34363: ecalli 11 // 'seal_return'\n 34365: a1 = 0x20160\n 34370: jump @1079\n      : @1026 (gas: 2)\n 34373: ecalli 10 // 'return_data_size'\n 34375: fallthrough\n      : @1027 (gas: 13)\n 34376: a5 = s1 + 0x100\n 34380: a1 = u64 [a5 + 0xb8]\n 34384: a3 = u64 [a5 + 0x88]\n 34388: a1 = a1 | a3\n 34391: a2 = u64 [a5 + 0x90]\n 34395: a4 = u64 [a5 + 0x80]\n 34399: a2 = a2 | a4\n 34402: a1 = a1 | a2\n 34405: a1 = a1 >> 0x20\n 34408: a2 = a2 | a3\n 34411: a2 = a2 << 0x20\n 34414: a1 = a1 | a2\n 34417: jump @1029 if a1 == 0\n      : @1028 (gas: 1)\n 34420: jump @912\n      : @1029 (gas: 2)\n 34423: a1 = a0 >> 0x20\n 34426: jump @1031 if a1 == 0\n      : @1030 (gas: 1)\n 34429: jump @912\n      : @1031 (gas: 6)\n 34432: a1 = a0\n 34434: u64 [s1 + 0x1a8] = a0\n 34438: i32 a0 = a0 + 0\n 34440: u64 [s1 + 0x1b0] = a0\n 34444: a0 = u64 [s1 + 0x1b8]\n 34448: ra = 1100, jump @15\n      : @1032 [@dyn 550] (gas: 11)\n 34455: a1 = s1 + 0x3958\n 34459: a2 = u64 [s1 + 0x1a8]\n 34463: u32 [a1 + 0x768] = a2\n 34467: i32 a0 = a0 + 0\n 34469: a1 = s1 + 0x4000\n 34473: i32 a1 = a1 + 0xc0\n 34477: a2 = 0\n 34479: ecalli 9 // 'return_data_copy'\n 34481: a0 = s1 + 0x3958\n 34485: a0 = i32 [a0 + 0x768]\n 34489: jump @705\n      : @1033 (gas: 4)\n 34492: a1 = 0x20160\n 34497: i32 a1 = a1 + 0\n 34499: a0 = 0x1\n 34502: jump @1080\n      : @1034 (gas: 4)\n 34505: a1 = 0x20160\n 34510: i32 a1 = a1 + 0\n 34512: a0 = 0x1\n 34515: jump @1080\n      : @1035 (gas: 4)\n 34518: a1 = 0x20160\n 34523: i32 a1 = a1 + 0\n 34525: a0 = 0x1\n 34528: jump @1080\n      : @1036 (gas: 10)\n 34531: a0 = s1 + 0x1140\n 34535: u64 [a0 + 752] = 0\n 34539: u64 [a0 + 744] = 0\n 34543: u64 [a0 + 736] = 0\n 34547: a2 = s1 + 0x1140\n 34551: a0 = 0x4e487b7100000000\n 34561: a1 = s1 + 0x1420\n 34565: u64 [a2 + 0x2f8] = a0\n 34569: a0 = 0\n 34571: ra = 1102, jump @4\n      : @1037 [@dyn 551] (gas: 3)\n 34578: t0 = 0x450\n 34582: a1 = s1 + 0x1140\n 34586: fallthrough\n      : @1038 [@dyn 552] (gas: 9)\n 34587: u64 [a1 + 728] = 0\n 34591: u64 [a1 + 720] = 0\n 34595: u64 [a1 + 704] = 0x21\n 34600: a2 = s1 + 0x1140\n 34604: a0 = 0x4\n 34607: a1 = s1 + 0x1400\n 34611: u64 [a2 + 712] = 0\n 34615: ra = 0x48a\n 34619: jump @4\n      : @1039 (gas: 4)\n 34623: a1 = 0x20160\n 34628: i32 a1 = a1 + 0\n 34630: a0 = 0x1\n 34633: jump @1080\n      : @1040 (gas: 4)\n 34636: a1 = 0x20160\n 34641: i32 a1 = a1 + 0\n 34643: a0 = 0x1\n 34646: jump @1080\n      : @1041 (gas: 4)\n 34649: a1 = 0x20160\n 34654: i32 a1 = a1 + 0\n 34656: a0 = 0x1\n 34659: jump @1080\n      : @1042 (gas: 4)\n 34662: a1 = 0x20160\n 34667: i32 a1 = a1 + 0\n 34669: a0 = 0x1\n 34672: jump @1080\n      : @1043 (gas: 4)\n 34675: a1 = 0x20160\n 34680: i32 a1 = a1 + 0\n 34682: a0 = 0x1\n 34685: jump @1080\n      : @1044 (gas: 4)\n 34688: a1 = 0x20160\n 34693: i32 a1 = a1 + 0\n 34695: a0 = 0x1\n 34698: jump @1080\n      : @1045 (gas: 9)\n 34701: a0 = s1 + 0x1958\n 34705: u64 [a0 + 1752] = 0\n 34709: u64 [a0 + 1744] = 0\n 34713: u64 [a0 + 1736] = 0\n 34717: a2 = a0\n 34719: t0 = 0x452\n 34723: a0 = 0x4e487b7100000000\n 34733: a1 = 0x2000\n 34737: fallthrough\n      : @1046 [@dyn 553] (gas: 5)\n 34738: i32 a1 = a1 + 0x20\n 34741: a1 = a1 + s1\n 34744: u64 [a2 + 0x6e0] = a0\n 34748: a0 = 0\n 34750: ra = 1108, jump @4\n      : @1047 [@dyn 554] (gas: 3)\n 34757: t0 = 0x456\n 34761: a1 = s1 + 0x1958\n 34765: fallthrough\n      : @1048 [@dyn 555] (gas: 8)\n 34766: u64 [a1 + 1728] = 0\n 34770: u64 [a1 + 1720] = 0\n 34774: u64 [a1 + 1704] = 0x21\n 34779: a2 = a1\n 34781: a0 = 0x4\n 34784: a1 = s1 + 0x2000\n 34788: u64 [a2 + 1712] = 0\n 34792: ra = 1112, jump @4\n      : @1049 [@dyn 556] (gas: 3)\n 34799: a0 = u64 [s1 + 0xf8]\n 34803: a0 = i32 [a0]\n 34805: jump @1051 if a0 >u 63\n      : @1050 (gas: 3)\n 34809: a1 = u64 [s1 + 0xf8]\n 34813: u32 [a1 + 0] = 0x40\n 34816: fallthrough\n      : @1051 (gas: 5)\n 34817: a0 = 0x1\n 34820: a2 = 0x24\n 34823: a1 = u64 [s1 + 0x100]\n 34827: ecalli 11 // 'seal_return'\n 34829: fallthrough\n      : @1052 (gas: 4)\n 34830: a1 = 0x20160\n 34835: i32 a1 = a1 + 0\n 34837: a0 = 0x1\n 34840: jump @1080\n      : @1053 (gas: 4)\n 34843: a1 = 0x20160\n 34848: i32 a1 = a1 + 0\n 34850: a0 = 0x1\n 34853: jump @1080\n      : @1054 (gas: 4)\n 34856: a1 = 0x20160\n 34861: i32 a1 = a1 + 0\n 34863: a0 = 0x1\n 34866: jump @1080\n      : @1055 (gas: 4)\n 34869: a1 = 0x20160\n 34874: i32 a1 = a1 + 0\n 34876: a0 = 0x1\n 34879: jump @1080\n      : @1056 (gas: 4)\n 34882: a1 = 0x20160\n 34887: i32 a1 = a1 + 0\n 34889: a0 = 0x1\n 34892: jump @1080\n      : @1057 (gas: 4)\n 34895: a1 = 0x20160\n 34900: i32 a1 = a1 + 0\n 34902: a0 = 0x1\n 34905: jump @1080\n      : @1058 (gas: 4)\n 34908: a1 = 0x20160\n 34913: i32 a1 = a1 + 0\n 34915: a0 = 0x1\n 34918: jump @1080\n      : @1059 (gas: 4)\n 34921: a1 = 0x20160\n 34926: i32 a1 = a1 + 0\n 34928: a0 = 0x1\n 34931: jump @1080\n      : @1060 (gas: 4)\n 34934: a1 = 0x20160\n 34939: i32 a1 = a1 + 0\n 34941: a0 = 0x1\n 34944: jump @1080\n      : @1061 (gas: 4)\n 34947: a1 = 0x20160\n 34952: i32 a1 = a1 + 0\n 34954: a0 = 0x1\n 34957: jump @1080\n      : @1062 (gas: 4)\n 34960: a1 = 0x20160\n 34965: i32 a1 = a1 + 0\n 34967: a0 = 0x1\n 34970: jump @1080\n      : @1063 (gas: 4)\n 34973: a1 = 0x20160\n 34978: i32 a1 = a1 + 0\n 34980: a0 = 0x1\n 34983: jump @1080\n      : @1064 (gas: 4)\n 34986: a1 = 0x20160\n 34991: i32 a1 = a1 + 0\n 34993: a0 = 0x1\n 34996: jump @1080\n      : @1065 (gas: 4)\n 34999: a1 = 0x20160\n 35004: i32 a1 = a1 + 0\n 35006: a0 = 0x1\n 35009: jump @1080\n      : @1066 (gas: 4)\n 35012: a1 = 0x20160\n 35017: i32 a1 = a1 + 0\n 35019: a0 = 0x1\n 35022: jump @1080\n      : @1067 (gas: 4)\n 35025: a1 = 0x20160\n 35030: i32 a1 = a1 + 0\n 35032: a0 = 0x1\n 35035: jump @1080\n      : @1068 (gas: 4)\n 35038: a1 = 0x20160\n 35043: i32 a1 = a1 + 0\n 35045: a0 = 0x1\n 35048: jump @1080\n      : @1069 (gas: 4)\n 35051: a1 = 0x20160\n 35056: i32 a1 = a1 + 0\n 35058: a0 = 0x1\n 35061: jump @1080\n      : @1070 (gas: 4)\n 35064: a1 = 0x20160\n 35069: i32 a1 = a1 + 0\n 35071: a0 = 0x1\n 35074: jump @1080\n      : @1071 (gas: 4)\n 35077: a1 = 0x20160\n 35082: i32 a1 = a1 + 0\n 35084: a0 = 0x1\n 35087: jump @1080\n      : @1072 (gas: 4)\n 35090: a1 = 0x20160\n 35095: i32 a1 = a1 + 0\n 35097: a0 = 0x1\n 35100: jump @1080\n      : @1073 (gas: 6)\n 35103: a0 = 0x1\n 35106: a1 = u64 [s1 + 0x170]\n 35110: a2 = 0\n 35112: ecalli 11 // 'seal_return'\n 35114: a1 = 0x20160\n 35119: jump @1079\n      : @1074 (gas: 1)\n 35121: jump @1078 if a0 != 293231504\n      : @1075 (gas: 9)\n 35128: u64 [a3 + 256] = 0\n 35132: u64 [a3 + 248] = 0\n 35136: u64 [a3 + 240] = 0\n 35140: u64 [a3 + 232] = 0\n 35144: a0 = s1 + 0x3000\n 35148: i32 a0 = a0 + 0x240\n 35152: ra = 0x45a\n 35156: ecalli 14 // 'value_transferred'\n 35158: fallthrough\n      : @1076 [@dyn 557] (gas: 9)\n 35159: a3 = s1 + 0x3158\n 35163: a0 = u64 [a3 + 0xf8]\n 35167: a1 = u64 [a3 + 0x100]\n 35171: a2 = u64 [a3 + 0xf0]\n 35175: a3 = u64 [a3 + 0xe8]\n 35179: a1 = a1 | a2\n 35182: a0 = a0 | a3\n 35185: a0 = a0 | a1\n 35188: jump @1134 if a0 == 0\n      : @1077 (gas: 4)\n 35192: a1 = 0x20160\n 35197: i32 a1 = a1 + 0\n 35199: a0 = 0x1\n 35202: jump @1080\n      : @1078 (gas: 4)\n 35204: a1 = 0x20160\n 35209: i32 a1 = a1 + 0\n 35211: a0 = 0x1\n 35214: jump @1080\n      : @1079 (gas: 6)\n 35216: i32 a1 = a1 + 0\n 35218: a0 = 0x1\n 35221: a2 = 0\n 35223: ecalli 11 // 'seal_return'\n 35225: a1 = 0x20160\n 35230: jump @1079\n      : @1080 (gas: 4)\n 35232: a2 = 0\n 35234: ecalli 11 // 'seal_return'\n 35236: a1 = 0x20160\n 35241: jump @1079\n      : @1081 (gas: 2)\n 35243: a1 = 0x20160\n 35248: jump @1079\n      : @1082 (gas: 10)\n 35250: a0 = s1 + 0x7ff\n 35254: a0 = a0 + 0x139\n 35258: u64 [a0 + 216] = 0\n 35262: u64 [a0 + 208] = 0\n 35266: u64 [a0 + 200] = 0\n 35270: a2 = a0\n 35272: t0 = 0x45c\n 35276: a0 = 0x4e487b7100000000\n 35286: a1 = s1 + 0x7ff\n 35290: fallthrough\n      : @1083 [@dyn 558] (gas: 4)\n 35291: a1 = a1 + 0x201\n 35295: u64 [a2 + 0xe0] = a0\n 35299: a0 = 0\n 35301: ra = 1118, jump @4\n      : @1084 [@dyn 559] (gas: 11)\n 35308: a1 = s1 + 0x7ff\n 35312: a1 = a1 + 0x139\n 35316: u64 [a1 + 192] = 0\n 35320: u64 [a1 + 184] = 0\n 35324: u64 [a1 + 168] = 0x11\n 35329: a2 = a1\n 35331: a0 = 0x4\n 35334: a1 = s1 + 0x7ff\n 35338: a1 = a1 + 0x1e1\n 35342: u64 [a2 + 176] = 0\n 35346: ra = 1120, jump @4\n      : @1085 [@dyn 560] (gas: 2)\n 35353: a1 = i32 [0x20154]\n 35358: jump @1087 if a1 >u 63\n      : @1086 (gas: 3)\n 35362: u32 [0x20154] = 0x40\n 35368: a1 = 0x20160\n 35373: jump @1094\n      : @1087 (gas: 2)\n 35376: a1 = 0x20160\n 35381: jump @1094\n      : @1088 (gas: 10)\n 35384: a0 = s1 + 0x7ff\n 35388: a0 = a0 + 0x139\n 35392: u64 [a0 + 280] = 0\n 35396: u64 [a0 + 272] = 0\n 35400: u64 [a0 + 264] = 0\n 35404: a2 = a0\n 35406: t0 = 0x462\n 35410: a0 = 0x4e487b7100000000\n 35420: a1 = s1 + 0x7ff\n 35424: fallthrough\n      : @1089 [@dyn 561] (gas: 4)\n 35425: a1 = a1 + 0x241\n 35429: u64 [a2 + 0x120] = a0\n 35433: a0 = 0\n 35435: ra = 1124, jump @4\n      : @1090 [@dyn 562] (gas: 11)\n 35442: a1 = s1 + 0x7ff\n 35446: a1 = a1 + 0x139\n 35450: u64 [a1 + 256] = 0\n 35454: u64 [a1 + 248] = 0\n 35458: u64 [a1 + 232] = 0x11\n 35463: a2 = a1\n 35465: a0 = 0x4\n 35468: a1 = s1 + 0x7ff\n 35472: a1 = a1 + 0x221\n 35476: u64 [a2 + 240] = 0\n 35480: ra = 1126, jump @4\n      : @1091 [@dyn 563] (gas: 2)\n 35487: a1 = i32 [0x20154]\n 35492: jump @1093 if a1 >u 63\n      : @1092 (gas: 3)\n 35496: u32 [0x20154] = 0x40\n 35502: a1 = 0x20160\n 35507: jump @1094\n      : @1093 (gas: 2)\n 35509: a1 = 0x20160\n 35514: fallthrough\n      : @1094 (gas: 5)\n 35515: i32 a1 = a1 + 0\n 35517: a0 = 0x1\n 35520: a2 = 0x24\n 35523: ecalli 11 // 'seal_return'\n 35525: fallthrough\n      : @1095 (gas: 7)\n 35526: u64 [a2 + 472] = 0\n 35530: u64 [a2 + 464] = 0\n 35534: u64 [a2 + 456] = 0\n 35538: t0 = 0x468\n 35542: a0 = 0x4e487b7100000000\n 35552: a1 = 0x2000\n 35556: fallthrough\n      : @1096 [@dyn 564] (gas: 5)\n 35557: i32 a1 = a1 + 0xfffffffffffffb20\n 35561: a1 = a1 + s1\n 35564: u64 [a2 + 0x1e0] = a0\n 35568: a0 = 0\n 35570: ra = 1130, jump @4\n      : @1097 [@dyn 565] (gas: 3)\n 35577: t0 = 0x46c\n 35581: a1 = s1 + 0x1958\n 35585: fallthrough\n      : @1098 [@dyn 566] (gas: 9)\n 35586: u64 [a1 + 448] = 0\n 35590: u64 [a1 + 440] = 0\n 35594: u64 [a1 + 424] = 0x21\n 35599: a2 = a1\n 35601: a0 = 0x4\n 35604: a1 = s1 + 0x1b00\n 35608: u64 [a2 + 432] = 0\n 35612: ra = 0x48a\n 35616: jump @4\n      : @1099 (gas: 7)\n 35620: u64 [a2 + 1688] = 0\n 35624: u64 [a2 + 1680] = 0\n 35628: u64 [a2 + 1672] = 0\n 35632: t0 = 0x46e\n 35636: a0 = 0x4e487b7100000000\n 35646: a1 = s1 + 0x7ff\n 35650: fallthrough\n      : @1100 [@dyn 567] (gas: 4)\n 35651: a1 = a1 + 0x7c1\n 35655: u64 [a2 + 0x6a0] = a0\n 35659: a0 = 0\n 35661: ra = 1136, jump @4\n      : @1101 [@dyn 568] (gas: 11)\n 35668: a1 = s1 + 0x7ff\n 35672: a1 = a1 + 0x139\n 35676: u64 [a1 + 1664] = 0\n 35680: u64 [a1 + 1656] = 0\n 35684: u64 [a1 + 1640] = 0x21\n 35689: a2 = a1\n 35691: a0 = 0x4\n 35694: a1 = s1 + 0x7ff\n 35698: a1 = a1 + 0x7a1\n 35702: u64 [a2 + 1648] = 0\n 35706: ra = 1138, jump @4\n      : @1102 [@dyn 569] (gas: 3)\n 35713: a0 = u64 [s1 + 0x190]\n 35717: a0 = i32 [a0]\n 35719: jump @1104 if a0 >u 63\n      : @1103 (gas: 3)\n 35723: a1 = u64 [s1 + 0x190]\n 35727: u32 [a1 + 0] = 0x40\n 35730: fallthrough\n      : @1104 (gas: 5)\n 35731: a0 = 0x1\n 35734: a2 = 0x24\n 35737: a1 = u64 [s1 + 0x188]\n 35741: ecalli 11 // 'seal_return'\n 35743: fallthrough\n      : @1105 (gas: 9)\n 35744: a0 = s1 + 0x2158\n 35748: u64 [a0 + 1176] = 0\n 35752: u64 [a0 + 1168] = 0\n 35756: u64 [a0 + 1160] = 0\n 35760: a2 = a0\n 35762: t0 = 0x474\n 35766: a0 = 0x4e487b7100000000\n 35776: a1 = 0x2000\n 35780: fallthrough\n      : @1106 [@dyn 570] (gas: 5)\n 35781: i32 a1 = a1 + 0x5e0\n 35785: a1 = a1 + s1\n 35788: u64 [a2 + 0x4a0] = a0\n 35792: a0 = 0\n 35794: ra = 1142, jump @4\n      : @1107 [@dyn 571] (gas: 3)\n 35801: t0 = 0x478\n 35805: a1 = s1 + 0x2158\n 35809: fallthrough\n      : @1108 [@dyn 572] (gas: 9)\n 35810: u64 [a1 + 1152] = 0\n 35814: u64 [a1 + 1144] = 0\n 35818: u64 [a1 + 1128] = 0x21\n 35823: a2 = a1\n 35825: a0 = 0x4\n 35828: a1 = s1 + 0x25c0\n 35832: u64 [a2 + 1136] = 0\n 35836: ra = 0x492\n 35840: jump @4\n      : @1109 (gas: 2)\n 35844: a1 = i32 [s1 + 0x1b8]\n 35848: jump @1080\n      : @1110 (gas: 10)\n 35851: a0 = s1 + 0x7ff\n 35855: a0 = a0 + 0x139\n 35859: u64 [a0 + 344] = 0\n 35863: u64 [a0 + 336] = 0\n 35867: u64 [a0 + 328] = 0\n 35871: a2 = a0\n 35873: t0 = 0x47a\n 35877: a0 = 0x4e487b7100000000\n 35887: a1 = s1 + 0x7ff\n 35891: fallthrough\n      : @1111 [@dyn 573] (gas: 4)\n 35892: a1 = a1 + 0x281\n 35896: u64 [a2 + 0x160] = a0\n 35900: a0 = 0\n 35902: ra = 1148, jump @4\n      : @1112 [@dyn 574] (gas: 11)\n 35909: a1 = s1 + 0x7ff\n 35913: a1 = a1 + 0x139\n 35917: u64 [a1 + 320] = 0\n 35921: u64 [a1 + 312] = 0\n 35925: u64 [a1 + 296] = 0x21\n 35930: a2 = a1\n 35932: a0 = 0x4\n 35935: a1 = s1 + 0x7ff\n 35939: a1 = a1 + 0x261\n 35943: u64 [a2 + 304] = 0\n 35947: ra = 1150, jump @4\n      : @1113 [@dyn 575] (gas: 3)\n 35954: a0 = u64 [s1 + 0xf8]\n 35958: a0 = i32 [a0]\n 35960: jump @1115 if a0 >u 63\n      : @1114 (gas: 3)\n 35964: a1 = u64 [s1 + 0xf8]\n 35968: u32 [a1 + 0] = 0x40\n 35971: fallthrough\n      : @1115 (gas: 5)\n 35972: a0 = 0x1\n 35975: a2 = 0x24\n 35978: a1 = u64 [s1 + 0xf0]\n 35982: ecalli 11 // 'seal_return'\n 35984: fallthrough\n      : @1116 (gas: 9)\n 35985: a0 = s1 + 0x1140\n 35989: u64 [a0 + 1936] = 0\n 35993: u64 [a0 + 1928] = 0\n 35997: u64 [a0 + 1920] = 0\n 36001: a2 = s1 + 0x1140\n 36005: t0 = 0x480\n 36009: a0 = 0x4e487b7100000000\n 36019: a1 = 0x2000\n 36023: fallthrough\n      : @1117 [@dyn 576] (gas: 5)\n 36024: i32 a1 = a1 + 0xfffffffffffff8c0\n 36028: a1 = a1 + s1\n 36031: u64 [a2 + 0x798] = a0\n 36035: a0 = 0\n 36037: ra = 1154, jump @4\n      : @1118 [@dyn 577] (gas: 3)\n 36044: t0 = 0x484\n 36048: a1 = s1 + 0x1140\n 36052: fallthrough\n      : @1119 [@dyn 578] (gas: 9)\n 36053: u64 [a1 + 1912] = 0\n 36057: u64 [a1 + 1904] = 0\n 36061: u64 [a1 + 1888] = 0x21\n 36066: a2 = s1 + 0x1140\n 36070: a0 = 0x4\n 36073: a1 = s1 + 0x18a0\n 36077: u64 [a2 + 1896] = 0\n 36081: ra = 0x48a\n 36085: jump @4\n      : @1120 (gas: 8)\n 36089: u64 [a3 + 1008] = 0\n 36093: u64 [a3 + 1000] = 0\n 36097: u64 [a3 + 992] = 0\n 36101: a0 = 0x4e487b7100000000\n 36111: a1 = s1 + 0x1520\n 36115: u64 [a3 + 0x3f8] = a0\n 36119: a0 = 0\n 36121: ra = 1158, jump @4\n      : @1121 [@dyn 579] (gas: 3)\n 36128: t0 = 0x488\n 36132: a1 = s1 + 0x1140\n 36136: fallthrough\n      : @1122 [@dyn 580] (gas: 8)\n 36137: u64 [a1 + 984] = 0\n 36141: u64 [a1 + 976] = 0\n 36145: u64 [a1 + 960] = 0x41\n 36150: a2 = s1 + 0x1140\n 36154: a0 = 0x4\n 36157: a1 = s1 + 0x1500\n 36161: u64 [a2 + 968] = 0\n 36165: ra = 1162, jump @4\n      : @1123 [@dyn 581] (gas: 3)\n 36172: a0 = u64 [s1 + 0x190]\n 36176: a0 = i32 [a0]\n 36178: jump @1125 if a0 >u 63\n      : @1124 (gas: 3)\n 36182: a1 = u64 [s1 + 0x190]\n 36186: u32 [a1 + 0] = 0x40\n 36189: fallthrough\n      : @1125 (gas: 7)\n 36190: a0 = 0x1\n 36193: a2 = 0x24\n 36196: a1 = u64 [s1 + 0x198]\n 36200: ecalli 11 // 'seal_return'\n 36202: u64 [s1 + 0x1b8] = a1\n 36206: ra = 0x48c\n 36210: jump @15\n      : @1126 (gas: 2)\n 36214: u64 [s1 + 0x1b8] = a1\n 36218: ra = 1164, jump @15\n      : @1127 [@dyn 582] (gas: 5)\n 36225: i32 a1 = a0 + 0\n 36227: a2 = i32 [s1 + 0x1b8]\n 36231: a0 = 0\n 36233: ecalli 11 // 'seal_return'\n 36235: jump @556\n      : @1128 (gas: 10)\n 36238: a0 = s1 + 0x2958\n 36242: u64 [a0 + 56] = 0\n 36245: u64 [a0 + 48] = 0\n 36248: u64 [a0 + 40] = 0\n 36251: a2 = a0\n 36253: a0 = 0x4e487b7100000000\n 36263: a1 = s1 + 0x2980\n 36267: u64 [a2 + 0x40] = a0\n 36270: a0 = 0\n 36272: ra = 1166, jump @4\n      : @1129 [@dyn 583] (gas: 3)\n 36279: t0 = 0x490\n 36283: a1 = s1 + 0x2958\n 36287: fallthrough\n      : @1130 [@dyn 584] (gas: 8)\n 36288: u64 [a1 + 32] = 0\n 36291: u64 [a1 + 24] = 0\n 36294: u64 [a1 + 8] = 0x11\n 36298: a2 = a1\n 36300: a0 = 0x4\n 36303: a1 = s1 + 0x2960\n 36307: u64 [a2 + 16] = 0\n 36310: ra = 1170, jump @4\n      : @1131 [@dyn 585] (gas: 3)\n 36317: a0 = u64 [s1 + 0x100]\n 36321: a0 = i32 [a0]\n 36323: jump @1133 if a0 >u 63\n      : @1132 (gas: 3)\n 36327: a1 = u64 [s1 + 0x100]\n 36331: u32 [a1 + 0] = 0x40\n 36334: fallthrough\n      : @1133 (gas: 7)\n 36335: a0 = 0x1\n 36338: a2 = 0x24\n 36341: a1 = u64 [s1 + 0xf8]\n 36345: ra = 0x494\n 36349: ecalli 11 // 'seal_return'\n 36351: t0 = 0x496\n 36355: jump @1471\n      : @1134 [@dyn 586] (gas: 1)\n 36358: t0 = 1174, jump @1471\n      : @1135 [@dyn 587] (gas: 1)\n 36364: jump @1137 if a1 <u a0\n      : @1136 (gas: 2)\n 36367: a1 = 0x20160\n 36372: jump @1079\n      : @1137 (gas: 17)\n 36375: a0 = s1 + 0x3000\n 36379: i32 a0 = a0 + 0x260\n 36383: a1 = 0x4\n 36386: ecalli 2 // 'call_data_load'\n 36388: a3 = s1 + 0x3158\n 36392: a4 = a3 + 0x100\n 36396: a0 = u64 [a4 + 0x8]\n 36399: a1 = u64 [a4 + 0x10]\n 36402: a2 = u64 [a4 + 0x18]\n 36405: a3 = u64 [a4 + 0x20]\n 36408: u64 [s1 + 0x478] = a3\n 36412: u64 [s1 + 0x470] = a2\n 36416: u64 [s1 + 0x468] = a1\n 36420: a1 = s1 + 0x460\n 36424: u64 [s1 + 0x460] = a0\n 36428: a0 = 0\n 36430: ra = 1176, jump @4\n      : @1138 [@dyn 588] (gas: 7)\n 36437: u64 [s1 + 1112] = 0\n 36441: u64 [s1 + 1104] = 0\n 36445: u64 [s1 + 1088] = 0x2\n 36450: a0 = 0x20\n 36453: a1 = s1 + 0x440\n 36457: u64 [s1 + 1096] = 0\n 36461: ra = 1178, jump @4\n      : @1139 [@dyn 589] (gas: 9)\n 36468: a0 = sp + 0xffffffffffffffe0\n 36471: a0 = a0 & 0xffffffffffffffe0\n 36474: u64 [s1 + 0x190] = a0\n 36478: sp = a0\n 36480: a0 = 0x20154\n 36485: u64 [s1 + 0x198] = a0\n 36489: a0 = i32 [0x20154]\n 36494: a1 = 0x3f\n 36497: jump @1141 if a1 <u a0\n      : @1140 (gas: 4)\n 36500: a1 = u64 [s1 + 0x198]\n 36504: u32 [a1 + 0] = 0x40\n 36507: t0 = 0x49c\n 36511: jump @1459\n      : @1141 (gas: 1)\n 36514: t0 = 1180, jump @1459\n      : @1142 [@dyn 590] (gas: 9)\n 36520: a0 = 0x20160\n 36525: u64 [s1 + 0x188] = a0\n 36529: i32 a0 = a0 + 0\n 36531: i32 a2 = a2 + 0\n 36533: a1 = 0x40\n 36536: ra = 0x49e\n 36540: ecalli 7 // 'hash_keccak_256'\n 36542: t0 = 0x4a0\n 36546: jump @1425\n      : @1143 [@dyn 591] (gas: 1)\n 36549: t0 = 1184, jump @1425\n      : @1144 [@dyn 592] (gas: 2)\n 36555: a0 = s1 + 0x420\n 36559: ra = 1186, jump @6\n      : @1145 [@dyn 593] (gas: 9)\n 36566: a0 = u64 [s1 + 0x420]\n 36570: u64 [s1 + 0x180] = a0\n 36574: a0 = u64 [s1 + 0x428]\n 36578: u64 [s1 + 0x178] = a0\n 36582: a0 = u64 [s1 + 0x430]\n 36586: u64 [s1 + 0x170] = a0\n 36590: a0 = u64 [s1 + 0x438]\n 36594: u64 [s1 + 0x168] = a0\n 36598: t0 = 1188, jump @1462\n      : @1146 [@dyn 594] (gas: 15)\n 36604: a3 = a2 + 0x100\n 36608: u64 [a3 + 0x30] = a1\n 36611: a1 = a1 | a0\n 36614: u64 [a3 + 0x28] = a0\n 36617: a0 = a1 <u 0x1\n 36620: a1 = u64 [s1 + 0x1a0]\n 36624: a0 = a0 + a1\n 36627: u64 [a3 + 0x38] = a0\n 36630: a0 = a0 <u a1\n 36633: a1 = u64 [s1 + 0x1b8]\n 36637: a0 = a0 + a1\n 36640: u64 [a3 + 0x40] = a0\n 36643: a0 = s1 + 0x400\n 36647: a1 = s1 + 0x3280\n 36651: ra = 1190, jump @6\n      : @1147 [@dyn 595] (gas: 12)\n 36658: a1 = s1 + 0x400\n 36662: a0 = u64 [a1]\n 36664: u64 [s1 + 0x160] = a0\n 36668: a0 = u64 [a1 + 0x8]\n 36671: u64 [s1 + 0x158] = a0\n 36675: a0 = u64 [a1 + 0x10]\n 36678: u64 [s1 + 0x150] = a0\n 36682: a0 = u64 [a1 + 0x18]\n 36685: u64 [s1 + 0x148] = a0\n 36689: a1 = u64 [s1 + 0x1a8]\n 36693: a0 = a1 + 0x2\n 36696: t0 = 1192, jump @1414\n      : @1148 [@dyn 596] (gas: 7)\n 36702: u64 [a5 + 0x60] = a1\n 36705: u64 [a5 + 0x58] = a3\n 36708: u64 [a5 + 0x50] = a2\n 36711: u64 [a5 + 0x48] = a0\n 36714: a0 = s1 + 0x3e0\n 36718: a1 = s1 + 0x32a0\n 36722: ra = 1194, jump @6\n      : @1149 [@dyn 597] (gas: 11)\n 36729: a0 = u64 [s1 + 0x3e0]\n 36733: u64 [s1 + 0x140] = a0\n 36737: a0 = u64 [s1 + 0x3e8]\n 36741: u64 [s1 + 0x138] = a0\n 36745: a0 = u64 [s1 + 0x3f0]\n 36749: u64 [s1 + 0x130] = a0\n 36753: a0 = u64 [s1 + 0x3f8]\n 36757: u64 [s1 + 0x128] = a0\n 36761: a1 = u64 [s1 + 0x1a8]\n 36765: a0 = a1 + 0x3\n 36768: t0 = 1196, jump @1414\n      : @1150 [@dyn 598] (gas: 7)\n 36774: u64 [a5 + 0x80] = a1\n 36778: u64 [a5 + 0x78] = a3\n 36781: u64 [a5 + 0x70] = a2\n 36784: u64 [a5 + 0x68] = a0\n 36787: a0 = s1 + 0x3c0\n 36791: a1 = s1 + 0x32c0\n 36795: ra = 1198, jump @6\n      : @1151 [@dyn 599] (gas: 11)\n 36802: a0 = u64 [s1 + 0x3c0]\n 36806: u64 [s1 + 0x120] = a0\n 36810: a0 = u64 [s1 + 0x3c8]\n 36814: u64 [s1 + 0x118] = a0\n 36818: a0 = u64 [s1 + 0x3d0]\n 36822: u64 [s1 + 0x110] = a0\n 36826: a0 = u64 [s1 + 0x3d8]\n 36830: u64 [s1 + 0x108] = a0\n 36834: a1 = u64 [s1 + 0x1a8]\n 36838: a0 = a1 + 0x4\n 36841: t0 = 1200, jump @1414\n      : @1152 [@dyn 600] (gas: 7)\n 36847: u64 [a5 + 0xa0] = a1\n 36851: u64 [a5 + 0x98] = a3\n 36855: u64 [a5 + 0x90] = a2\n 36859: u64 [a5 + 0x88] = a0\n 36863: a0 = s1 + 0x3a0\n 36867: a1 = s1 + 0x32e0\n 36871: ra = 1202, jump @6\n      : @1153 [@dyn 601] (gas: 11)\n 36878: a0 = u64 [s1 + 0x3a0]\n 36882: u64 [s1 + 0x100] = a0\n 36886: a0 = u64 [s1 + 0x3a8]\n 36890: u64 [s1 + 0xf8] = a0\n 36894: a0 = u64 [s1 + 0x3b0]\n 36898: u64 [s1 + 0xf0] = a0\n 36902: a0 = u64 [s1 + 0x3b8]\n 36906: u64 [s1 + 0xe8] = a0\n 36910: a1 = u64 [s1 + 0x1a8]\n 36914: a0 = a1 + 0x5\n 36917: t0 = 1204, jump @1414\n      : @1154 [@dyn 602] (gas: 7)\n 36923: u64 [a5 + 0xc0] = a1\n 36927: u64 [a5 + 0xb8] = a3\n 36931: u64 [a5 + 0xb0] = a2\n 36935: u64 [a5 + 0xa8] = a0\n 36939: a0 = s1 + 0x380\n 36943: a1 = s1 + 0x3300\n 36947: ra = 1206, jump @6\n      : @1155 [@dyn 603] (gas: 11)\n 36954: a0 = u64 [s1 + 0x380]\n 36958: u64 [s1 + 0xe0] = a0\n 36962: a0 = u64 [s1 + 0x388]\n 36966: u64 [s1 + 0xd0] = a0\n 36970: a0 = u64 [s1 + 0x390]\n 36974: u64 [s1 + 0xc0] = a0\n 36978: a0 = u64 [s1 + 0x398]\n 36982: u64 [s1 + 0xb0] = a0\n 36986: a1 = u64 [s1 + 0x1a8]\n 36990: a0 = a1 + 0x6\n 36993: t0 = 1208, jump @1414\n      : @1156 [@dyn 604] (gas: 7)\n 36999: u64 [a5 + 0xe0] = a1\n 37003: u64 [a5 + 0xd8] = a3\n 37007: u64 [a5 + 0xd0] = a2\n 37011: u64 [a5 + 0xc8] = a0\n 37015: a0 = s1 + 0x360\n 37019: a1 = s1 + 0x3320\n 37023: ra = 1210, jump @6\n      : @1157 [@dyn 605] (gas: 27)\n 37030: a0 = u64 [s1 + 0x360]\n 37034: u64 [s1 + 0xb8] = a0\n 37038: a0 = u64 [s1 + 0x368]\n 37042: u64 [s1 + 0xa8] = a0\n 37046: a0 = u64 [s1 + 0x370]\n 37050: u64 [s1 + 0x190] = a0\n 37054: a1 = u64 [s1 + 0x1a8]\n 37058: a0 = a1 + 0x7\n 37061: a1 = a0 <u a1\n 37064: a3 = u64 [s1 + 0x1b0]\n 37068: a2 = a3 + a1\n 37071: a3 = a2 <u a3\n 37074: a3 = a1 if a1 == 0\n 37077: a1 = u64 [s1 + 0x1a0]\n 37081: a3 = a3 + a1\n 37084: a1 = a3 <u a1\n 37087: a4 = u64 [s1 + 0x1b8]\n 37091: a1 = a1 + a4\n 37094: a4 = s1 + 0x3158\n 37098: u64 [a4 + 0x200] = a1\n 37102: a1 = a4 + 0x100\n 37106: u64 [a1 + 0xf8] = a3\n 37110: u64 [a1 + 0xf0] = a2\n 37114: u64 [a1 + 0xe8] = a0\n 37118: a0 = s1 + 0x340\n 37122: a1 = s1 + 0x3340\n 37126: ra = 1212, jump @6\n      : @1158 [@dyn 606] (gas: 9)\n 37133: a0 = u64 [s1 + 0x340]\n 37137: u64 [s1 + 0xd8] = a0\n 37141: a0 = u64 [s1 + 0x348]\n 37145: u64 [s1 + 0xc8] = a0\n 37149: a1 = u64 [s1 + 0x1a8]\n 37153: a0 = a1 + 0x8\n 37156: a1 = a0 <u a1\n 37159: a3 = u64 [s1 + 0x1b0]\n 37163: t0 = 1214, jump @1463\n      : @1159 [@dyn 607] (gas: 3)\n 37169: a1 = u64 [s1 + 0x350]\n 37173: u64 [s1 + 0x1b0] = a1\n 37177: t0 = 1216, jump @1465\n      : @1160 [@dyn 608] (gas: 11)\n 37183: a4 = u64 [s1 + 0x358]\n 37187: u64 [s1 + 0x1b8] = a4\n 37191: a4 = s1 + 0x3158\n 37195: a5 = a4 + 0x200\n 37199: u64 [a5 + 0x20] = a1\n 37202: u64 [a5 + 0x18] = a3\n 37205: u64 [a5 + 0x10] = a2\n 37208: u64 [a5 + 0x8] = a0\n 37211: a0 = s1 + 0x320\n 37215: a1 = s1 + 0x3360\n 37219: ra = 1218, jump @6\n      : @1161 [@dyn 609] (gas: 14)\n 37226: a0 = u8 [s1 + 0x320]\n 37230: u64 [s1 + 0x1a8] = a0\n 37234: a0 = u64 [s1 + 0x168]\n 37238: a3 = s1 + 0x300\n 37242: u64 [a3 + 0x18] = a0\n 37245: a0 = u64 [s1 + 0x170]\n 37249: u64 [a3 + 0x10] = a0\n 37252: a0 = u64 [s1 + 0x178]\n 37256: u64 [a3 + 0x8] = a0\n 37259: a0 = 0x80\n 37263: a1 = s1 + 0x300\n 37267: a2 = u64 [s1 + 0x180]\n 37271: u64 [a3] = a2\n 37273: ra = 1220, jump @4\n      : @1162 [@dyn 610] (gas: 11)\n 37280: a0 = u64 [s1 + 0x148]\n 37284: u64 [s1 + 0x2f8] = a0\n 37288: a0 = u64 [s1 + 0x150]\n 37292: u64 [s1 + 0x2f0] = a0\n 37296: a0 = u64 [s1 + 0x158]\n 37300: u64 [s1 + 0x2e8] = a0\n 37304: a0 = 0xa0\n 37308: a1 = s1 + 0x2e0\n 37312: a2 = u64 [s1 + 0x160]\n 37316: u64 [s1 + 0x2e0] = a2\n 37320: ra = 1222, jump @4\n      : @1163 [@dyn 611] (gas: 11)\n 37327: a0 = u64 [s1 + 0x128]\n 37331: u64 [s1 + 0x2d8] = a0\n 37335: a0 = u64 [s1 + 0x130]\n 37339: u64 [s1 + 0x2d0] = a0\n 37343: a0 = u64 [s1 + 0x138]\n 37347: u64 [s1 + 0x2c8] = a0\n 37351: a0 = 0xc0\n 37355: a1 = s1 + 0x2c0\n 37359: a2 = u64 [s1 + 0x140]\n 37363: u64 [s1 + 0x2c0] = a2\n 37367: ra = 1224, jump @4\n      : @1164 [@dyn 612] (gas: 11)\n 37374: a0 = u64 [s1 + 0x108]\n 37378: u64 [s1 + 0x2b8] = a0\n 37382: a0 = u64 [s1 + 0x110]\n 37386: u64 [s1 + 0x2b0] = a0\n 37390: a0 = u64 [s1 + 0x118]\n 37394: u64 [s1 + 0x2a8] = a0\n 37398: a0 = 0xe0\n 37402: a1 = s1 + 0x2a0\n 37406: a2 = u64 [s1 + 0x120]\n 37410: u64 [s1 + 0x2a0] = a2\n 37414: ra = 1226, jump @4\n      : @1165 [@dyn 613] (gas: 11)\n 37421: a0 = u64 [s1 + 0xe8]\n 37425: u64 [s1 + 0x298] = a0\n 37429: a0 = u64 [s1 + 0xf0]\n 37433: u64 [s1 + 0x290] = a0\n 37437: a0 = u64 [s1 + 0xf8]\n 37441: u64 [s1 + 0x288] = a0\n 37445: a0 = 0x100\n 37449: a1 = s1 + 0x280\n 37453: a2 = u64 [s1 + 0x100]\n 37457: u64 [s1 + 0x280] = a2\n 37461: ra = 1228, jump @4\n      : @1166 [@dyn 614] (gas: 11)\n 37468: a0 = u64 [s1 + 0xb0]\n 37472: u64 [s1 + 0x278] = a0\n 37476: a0 = u64 [s1 + 0xc0]\n 37480: u64 [s1 + 0x270] = a0\n 37484: a0 = u64 [s1 + 0xd0]\n 37488: u64 [s1 + 0x268] = a0\n 37492: a0 = 0x120\n 37496: a1 = s1 + 0x260\n 37500: a2 = u64 [s1 + 0xe0]\n 37504: u64 [s1 + 0x260] = a2\n 37508: ra = 1230, jump @4\n      : @1167 [@dyn 615] (gas: 12)\n 37515: a0 = u64 [s1 + 0x190]\n 37519: a0 = a0 << 0x20\n 37522: a0 = a0 >> 0x20\n 37525: u64 [s1 + 600] = 0\n 37529: u64 [s1 + 0x250] = a0\n 37533: a0 = u64 [s1 + 0xa8]\n 37537: u64 [s1 + 0x248] = a0\n 37541: a0 = 0x140\n 37545: a1 = s1 + 0x240\n 37549: a2 = u64 [s1 + 0xb8]\n 37553: u64 [s1 + 0x240] = a2\n 37557: ra = 1232, jump @4\n      : @1168 [@dyn 616] (gas: 14)\n 37564: a0 = u64 [s1 + 0x190]\n 37568: a0 = a0 << 0x18\n 37571: a0 = a0 >> 0x38\n 37574: u64 [s1 + 536] = 0\n 37578: u64 [s1 + 528] = 0\n 37582: u64 [s1 + 520] = 0\n 37586: u64 [s1 + 512] = 0x160\n 37592: u64 [s1 + 568] = 0\n 37596: u64 [s1 + 560] = 0\n 37600: u64 [s1 + 0x220] = a0\n 37604: a0 = s1 + 0x220\n 37608: a1 = s1 + 0x200\n 37612: u64 [s1 + 552] = 0\n 37616: ra = 1234, jump @1174\n      : @1169 [@dyn 617] (gas: 11)\n 37622: a0 = u64 [s1 + 0x1b8]\n 37626: u64 [s1 + 0x1f8] = a0\n 37630: a0 = u64 [s1 + 0x1b0]\n 37634: u64 [s1 + 0x1f0] = a0\n 37638: a0 = u64 [s1 + 0xc8]\n 37642: u64 [s1 + 0x1e8] = a0\n 37646: a0 = 0x180\n 37650: a1 = s1 + 0x1e0\n 37654: a2 = u64 [s1 + 0xd8]\n 37658: u64 [s1 + 0x1e0] = a2\n 37662: ra = 1236, jump @4\n      : @1170 [@dyn 618] (gas: 9)\n 37669: a0 = u64 [s1 + 0x1a8]\n 37673: a0 = a0 >u 0\n 37675: u64 [s1 + 472] = 0\n 37679: u64 [s1 + 464] = 0\n 37683: u64 [s1 + 0x1c0] = a0\n 37687: a0 = 0x1a0\n 37691: a1 = s1 + 0x1c0\n 37695: u64 [s1 + 456] = 0\n 37699: ra = 1238, jump @4\n      : @1171 [@dyn 619] (gas: 3)\n 37706: a0 = u64 [s1 + 0x198]\n 37710: a0 = i32 [a0]\n 37712: jump @1173 if a0 >u 447\n      : @1172 (gas: 3)\n 37717: a1 = u64 [s1 + 0x198]\n 37721: u32 [a1 + 0] = 0x1c0\n 37725: fallthrough\n      : @1173 (gas: 6)\n 37726: a0 = u64 [s1 + 0x188]\n 37730: i32 a1 = a0 + 0x80\n 37734: a2 = 0x140\n 37738: a0 = 0\n 37740: ecalli 11 // 'seal_return'\n 37742: jump @556\n      : @1174 (gas: 19)\n 37745: sp = sp + 0xffffffffffffff90\n 37748: u64 [sp + 0x68] = ra\n 37751: u64 [sp + 0x60] = s0\n 37754: s0 = sp + 0x70\n 37757: sp = sp & 0xfffffffffffffff0\n 37760: a2 = u64 [a0 + 0x18]\n 37763: t1 = u64 [a0 + 0x10]\n 37766: t0 = u64 [a0]\n 37768: a5 = u64 [a0 + 0x8]\n 37771: a0 = a2 >u 0\n 37773: a4 = t1 >u 0\n 37775: a4 = a0 if a2 != 0\n 37778: a0 = a5 >u 0\n 37780: a3 = t0 <u 0x4\n 37783: a3 = a3 ^ 0x1\n 37786: a3 = a0 if a5 != 0\n 37789: a0 = t1 | a2\n 37792: a3 = a4 if a0 != 0\n 37795: jump @1179 if a3 != 0\n      : @1175 (gas: 12)\n 37798: t2 = u64 [a1 + 0x18]\n 37801: a4 = u64 [a1 + 0x10]\n 37804: a0 = u64 [a1]\n 37806: a1 = u64 [a1 + 0x8]\n 37809: a3 = a0 | a4\n 37812: a1 = a1 | t2\n 37815: a3 = a3 | a1\n 37818: a3 = a3 >> 0x20\n 37821: a1 = a1 | a4\n 37824: a1 = a1 << 0x20\n 37827: a1 = a1 | a3\n 37830: jump @1178 if a1 != 0\n      : @1176 (gas: 6)\n 37833: u64 [sp + 0x40] = t0\n 37836: u64 [sp + 0x48] = a5\n 37839: u64 [sp + 0x50] = t1\n 37842: a1 = sp + 0x40\n 37845: u64 [sp + 0x58] = a2\n 37848: ra = 1240, jump @4\n      : @1177 [@dyn 620] (gas: 5)\n 37855: sp = s0 + 0xffffffffffffff90\n 37858: ra = u64 [sp + 0x68]\n 37861: s0 = u64 [sp + 0x60]\n 37864: sp = sp + 0x70\n 37867: ret\n      : @1178 (gas: 1)\n 37869: trap\n      : @1179 (gas: 1)\n 37870: t0 = 1242, jump @1431\n      : @1180 [@dyn 621] (gas: 1)\n 37876: ra = 1244, jump @4\n      : @1181 [@dyn 622] (gas: 7)\n 37883: u64 [sp + 24] = 0\n 37886: u64 [sp + 16] = 0\n 37889: u64 [sp + 0] = 0x21\n 37892: a0 = 0x4\n 37895: a1 = sp\n 37897: u64 [sp + 8] = 0\n 37900: ra = 1246, jump @4\n      : @1182 [@dyn 623] (gas: 2)\n 37907: a1 = i32 [0x20154]\n 37912: jump @1184 if a1 >u 63\n      : @1183 (gas: 2)\n 37916: u32 [0x20154] = 0x40\n 37922: fallthrough\n      : @1184 (gas: 7)\n 37923: a1 = 0x20160\n 37928: i32 a1 = a1 + 0\n 37930: a0 = 0x1\n 37933: a2 = 0x24\n 37936: ra = 0x4e0\n 37940: ecalli 11 // 'seal_return'\n 37942: fallthrough\n      : @1185 [@dyn 624] (gas: 33)\n 37943: sp = sp + 0xffffffffffffff80\n 37946: u64 [sp + 0x78] = ra\n 37949: u64 [sp + 0x70] = s0\n 37952: u64 [sp + 0x68] = s1\n 37955: s0 = sp + 0x80\n 37959: sp = sp & 0xffffffffffffffe0\n 37962: a2 = u64 [a1]\n 37964: t0 = u64 [a1 + 0x18]\n 37967: a4 = u64 [a1 + 0x8]\n 37970: a1 = u64 [a1 + 0x10]\n 37973: a5 = a2 + 0xfffffffffffffffc\n 37976: s1 = a5 <u a2\n 37979: a2 = a4 + s1\n 37982: a2 = a2 + 0xffffffffffffffff\n 37985: a3 = a2 ^ a4\n 37988: a4 = a2 <u a4\n 37991: a4 = s1 if a3 == 0\n 37994: a3 = a1 + 0xffffffffffffffff\n 37997: a4 = a4 + a3\n 38000: a3 = a4 <u a3\n 38003: a1 = a1 <u 0x1\n 38006: a1 = t0 - a1\n 38009: a1 = a1 + a3\n 38012: a3 = a1 >s 0\n 38014: s1 = a4 >u 0\n 38016: s1 = a3 if a1 != 0\n 38019: a1 = a1 | a4\n 38022: a3 = a2 >u 0\n 38024: a4 = a5 <u 0x40\n 38027: a4 = a4 ^ 0x1\n 38030: a4 = a3 if a2 != 0\n 38033: a4 = s1 if a1 != 0\n 38036: jump @1189 if a4 == 0\n      : @1186 (gas: 16)\n 38040: s1 = a0\n 38042: i32 a0 = sp + 0x20\n 38045: a1 = 0x4\n 38048: ecalli 2 // 'call_data_load'\n 38050: a0 = u64 [sp + 0x38]\n 38053: u64 [sp + 0x18] = a0\n 38056: a0 = u64 [sp + 0x30]\n 38059: u64 [sp + 0x10] = a0\n 38062: a0 = u64 [sp + 0x28]\n 38065: u64 [sp + 0x8] = a0\n 38068: a0 = u64 [sp + 0x20]\n 38071: u64 [sp] = a0\n 38073: i32 a0 = sp + 0x40\n 38076: a1 = 0x24\n 38079: ecalli 2 // 'call_data_load'\n 38081: fallthrough\n      : @1187 (gas: 10)\n 38082: a1 = u64 [sp + 0x50]\n 38085: a0 = u64 [sp + 0x58]\n 38088: a2 = 0x100000000\n 38098: a2 = a2 ^ a1\n 38101: a2 = a2 | a0\n 38104: a3 = a1 >> 0x20\n 38107: a3 = a3 <u 0x1\n 38110: a3 = 0 if a0 != 0\n 38112: a3 = 0 if a2 == 0\n 38114: jump @1190 if a3 == 0\n      : @1188 (gas: 20)\n 38117: a2 = u64 [sp + 0x40]\n 38120: a3 = u64 [sp + 0x48]\n 38123: u64 [s1 + 0x20] = a2\n 38126: a2 = u64 [sp]\n 38128: u64 [s1] = a2\n 38130: u64 [s1 + 0x28] = a3\n 38133: a2 = u64 [sp + 0x8]\n 38136: u64 [s1 + 0x8] = a2\n 38139: u64 [s1 + 0x30] = a1\n 38142: a1 = u64 [sp + 0x10]\n 38145: u64 [s1 + 0x10] = a1\n 38148: u64 [s1 + 0x38] = a0\n 38151: a0 = u64 [sp + 0x18]\n 38154: u64 [s1 + 0x18] = a0\n 38157: sp = s0 + 0xffffffffffffff80\n 38160: ra = u64 [sp + 0x78]\n 38163: s0 = u64 [sp + 0x70]\n 38166: s1 = u64 [sp + 0x68]\n 38169: sp = sp + 0x80\n 38173: ret\n      : @1189 (gas: 2)\n 38175: a1 = 0x20160\n 38180: jump @1191\n      : @1190 (gas: 2)\n 38182: a1 = 0x20160\n 38187: fallthrough\n      : @1191 (gas: 6)\n 38188: i32 a1 = a1 + 0\n 38190: a0 = 0x1\n 38193: a2 = 0\n 38195: ra = 0x4e2\n 38199: ecalli 11 // 'seal_return'\n 38201: fallthrough\n      : @1192 [@dyn 625] (gas: 23)\n 38202: sp = sp + 0xffffffffffffff10\n 38206: u64 [sp + 0xe8] = ra\n 38210: u64 [sp + 0xe0] = s0\n 38214: u64 [sp + 0xd8] = s1\n 38218: s0 = sp + 0xf0\n 38222: sp = sp & 0xfffffffffffffff0\n 38225: s1 = u64 [a1 + 0x10]\n 38228: t0 = u64 [a1 + 0x18]\n 38231: a5 = u64 [a1 + 0x8]\n 38234: a1 = u64 [a1]\n 38236: u64 [sp + 0x68] = a5\n 38239: u64 [sp + 0x58] = t0\n 38242: t1 = a5 | t0\n 38245: t0 = a1\n 38247: a5 = a1 | s1\n 38250: a5 = a5 | t1\n 38253: a5 = a5 >> 0x20\n 38256: u64 [sp + 0x60] = s1\n 38259: a1 = t1 | s1\n 38262: a1 = a1 << 0x20\n 38265: a1 = a1 | a5\n 38268: u64 [sp + 0x50] = a0\n 38271: jump @1199 if a1 != 0\n      : @1193 (gas: 28)\n 38275: a0 = u64 [a4 + 0x18]\n 38278: u64 [sp + 0x18] = a0\n 38281: a0 = u64 [a4 + 0x10]\n 38284: u64 [sp + 0x10] = a0\n 38287: a0 = u64 [a4 + 0x8]\n 38290: u64 [sp + 0x8] = a0\n 38293: a0 = u64 [a4]\n 38295: u64 [sp] = a0\n 38297: a0 = u64 [a3 + 0x18]\n 38300: u64 [sp + 0x48] = a0\n 38303: a0 = u64 [a3 + 0x10]\n 38306: u64 [sp + 0x40] = a0\n 38309: a0 = u64 [a3 + 0x8]\n 38312: u64 [sp + 0x38] = a0\n 38315: a0 = u64 [a3]\n 38317: u64 [sp + 0x30] = a0\n 38320: a0 = u64 [a2 + 0x18]\n 38323: a1 = u64 [a2 + 0x10]\n 38326: a3 = u64 [a2 + 0x8]\n 38329: a2 = u64 [a2]\n 38331: u64 [sp + 0xb0] = a2\n 38335: u64 [sp + 0xb8] = a3\n 38339: u64 [sp + 0xc0] = a1\n 38343: a1 = sp + 0xb0\n 38347: u64 [sp + 0xc8] = a0\n 38351: s1 = t0\n 38353: a0 = t0\n 38355: ra = 1252, jump @4\n      : @1194 [@dyn 626] (gas: 12)\n 38362: a0 = u64 [sp + 0x60]\n 38365: a1 = u64 [sp + 0x58]\n 38368: a2 = a0 | a1\n 38371: a0 = 0x100000000\n 38381: u64 [sp + 0x20] = a0\n 38384: a0 = 0xffffffe0\n 38394: a0 = s1 <u a0\n 38397: a1 = u64 [sp + 0x68]\n 38400: a0 = 0 if a1 != 0\n 38402: u64 [sp + 0x28] = a2\n 38405: a0 = 0 if a2 != 0\n 38407: jump @1199 if a0 == 0\n      : @1195 (gas: 11)\n 38411: i32 a0 = s1 + 0x20\n 38414: a1 = u64 [sp + 0x30]\n 38417: u64 [sp + 0x90] = a1\n 38421: a1 = u64 [sp + 0x38]\n 38424: u64 [sp + 0x98] = a1\n 38428: a1 = u64 [sp + 0x40]\n 38431: u64 [sp + 0xa0] = a1\n 38435: a1 = sp + 0x90\n 38439: a2 = u64 [sp + 0x48]\n 38442: u64 [sp + 0xa8] = a2\n 38446: ra = 1254, jump @4\n      : @1196 [@dyn 627] (gas: 8)\n 38453: a0 = u64 [sp + 0x20]\n 38456: a0 = a0 + 0xffffffffffffffc0\n 38459: a0 = s1 <u a0\n 38462: a1 = u64 [sp + 0x68]\n 38465: a0 = 0 if a1 != 0\n 38467: a1 = u64 [sp + 0x28]\n 38470: a0 = 0 if a1 != 0\n 38472: jump @1199 if a0 == 0\n      : @1197 (gas: 26)\n 38476: a0 = s1 + 0x60\n 38479: u64 [sp + 0x48] = a0\n 38482: a0 = a0 <u s1\n 38485: a1 = u64 [sp + 0x68]\n 38488: a2 = a1 + a0\n 38491: u64 [sp + 0x40] = a2\n 38494: a1 = a2 <u a1\n 38497: a1 = a0 if a0 == 0\n 38500: a0 = u64 [sp + 0x60]\n 38503: a1 = a1 + a0\n 38506: u64 [sp + 0x38] = a1\n 38509: a0 = a1 <u a0\n 38512: a1 = u64 [sp + 0x58]\n 38515: a0 = a0 + a1\n 38518: u64 [sp + 0x68] = a0\n 38521: i32 a0 = s1 + 0x40\n 38524: a1 = u64 [sp]\n 38526: u64 [sp + 0x70] = a1\n 38529: a1 = u64 [sp + 0x8]\n 38532: u64 [sp + 0x78] = a1\n 38535: a1 = u64 [sp + 0x10]\n 38538: u64 [sp + 0x80] = a1\n 38542: a1 = sp + 0x70\n 38545: a2 = u64 [sp + 0x18]\n 38548: u64 [sp + 0x88] = a2\n 38552: ra = 1256, jump @4\n      : @1198 [@dyn 628] (gas: 15)\n 38559: a0 = u64 [sp + 0x50]\n 38562: a1 = u64 [sp + 0x38]\n 38565: u64 [a0 + 0x10] = a1\n 38568: a1 = u64 [sp + 0x40]\n 38571: u64 [a0 + 0x8] = a1\n 38574: a1 = u64 [sp + 0x48]\n 38577: u64 [a0] = a1\n 38579: a1 = u64 [sp + 0x68]\n 38582: u64 [a0 + 0x18] = a1\n 38585: sp = s0 + 0xffffffffffffff10\n 38589: ra = u64 [sp + 0xe8]\n 38593: s0 = u64 [sp + 0xe0]\n 38597: s1 = u64 [sp + 0xd8]\n 38601: sp = sp + 0xf0\n 38605: ret\n      : @1199 (gas: 1)\n 38607: trap\n      : @1200 (gas: 31)\n 38608: sp = sp + 0xfffffffffffffee0\n 38612: u64 [sp + 0x118] = ra\n 38616: u64 [sp + 0x110] = s0\n 38620: u64 [sp + 0x108] = s1\n 38624: s0 = sp + 0x120\n 38628: sp = sp & 0xffffffffffffffe0\n 38631: s1 = sp\n 38633: u64 [s1 + 0x38] = a0\n 38636: a0 = u64 [a2]\n 38638: u64 [s1 + 0x48] = a0\n 38641: a0 = u64 [a2 + 0x8]\n 38644: u64 [s1 + 0x40] = a0\n 38647: a0 = u64 [a2 + 0x10]\n 38650: u64 [s1 + 0x50] = a0\n 38653: a0 = u64 [a2 + 0x18]\n 38656: u64 [s1 + 0x58] = a0\n 38659: a0 = u64 [a1 + 0x18]\n 38662: a2 = u64 [a1 + 0x10]\n 38665: a3 = u64 [a1 + 0x8]\n 38668: a1 = u64 [a1]\n 38670: u64 [s1 + 0x30] = a0\n 38673: u64 [s1 + 0xf8] = a0\n 38677: u64 [s1 + 0x28] = a2\n 38680: u64 [s1 + 0xf0] = a2\n 38684: u64 [s1 + 0x20] = a3\n 38687: u64 [s1 + 0xe8] = a3\n 38691: u64 [s1 + 0x18] = a1\n 38694: u64 [s1 + 0xe0] = a1\n 38698: a0 = s1 + 0xc0\n 38702: a1 = s1 + 0xe0\n 38706: ra = 1258, jump @6\n      : @1201 [@dyn 629] (gas: 16)\n 38713: a0 = u64 [s1 + 0xd8]\n 38717: t0 = u64 [s1 + 0xc0]\n 38721: a2 = u64 [s1 + 0xd0]\n 38725: a3 = u64 [s1 + 0xc8]\n 38729: a1 = u64 [s1 + 0x58]\n 38732: a4 = a0 ^ a1\n 38735: a1 = a1 <u a0\n 38738: a0 = u64 [s1 + 0x50]\n 38741: a5 = a0 <u a2\n 38744: a5 = a1 if a4 != 0\n 38747: a1 = u64 [s1 + 0x40]\n 38750: t1 = a3 ^ a1\n 38753: a3 = a1 <u a3\n 38756: a1 = u64 [s1 + 0x48]\n 38759: a1 = a1 <u t0\n 38762: t0 = 1260, jump @1456\n      : @1202 [@dyn 630] (gas: 1)\n 38768: jump @1207 if a1 == 0\n      : @1203 (gas: 11)\n 38772: a0 = u64 [s1 + 0x18]\n 38775: u64 [s1 + 0x60] = a0\n 38778: a0 = u64 [s1 + 0x20]\n 38781: u64 [s1 + 0x68] = a0\n 38784: a0 = u64 [s1 + 0x28]\n 38787: u64 [s1 + 0x70] = a0\n 38790: a1 = s1 + 0x60\n 38793: a0 = u64 [s1 + 0x30]\n 38796: u64 [s1 + 0x78] = a0\n 38799: a0 = 0\n 38801: ra = 1262, jump @4\n      : @1204 [@dyn 631] (gas: 2)\n 38808: a1 = i32 [0x20154]\n 38813: jump @1206 if a1 >u 31\n      : @1205 (gas: 2)\n 38817: u32 [0x20154] = 0x20\n 38823: fallthrough\n      : @1206 (gas: 52)\n 38824: a0 = sp + 0xffffffffffffffe0\n 38827: a2 = a0 & 0xffffffffffffffe0\n 38830: u64 [s1 + 0x30] = a2\n 38833: sp = a2\n 38835: a0 = 0x20160\n 38840: i32 a0 = a0 + 0\n 38842: i32 a2 = a2 + 0\n 38844: a1 = 0x20\n 38847: ecalli 7 // 'hash_keccak_256'\n 38849: a3 = u64 [s1 + 0x30]\n 38852: a0 = u64 [a3]\n 38854: a1 = u64 [a3 + 0x8]\n 38857: a2 = u64 [a3 + 0x18]\n 38860: a3 = u64 [a3 + 0x10]\n 38863: t0 = reverse a0\n 38865: a1 = reverse a1\n 38867: a2 = reverse a2\n 38869: a3 = reverse a3\n 38871: a4 = u64 [s1 + 0x40]\n 38874: a4 = a4 + a3\n 38877: t1 = u64 [s1 + 0x48]\n 38880: t1 = t1 + a2\n 38883: a2 = t1 <u a2\n 38886: a4 = a4 + a2\n 38889: a0 = a4 ^ a3\n 38892: a3 = a4 <u a3\n 38895: a3 = a2 if a0 == 0\n 38898: a0 = u64 [s1 + 0x50]\n 38901: a0 = a0 + a1\n 38904: a3 = a3 + a0\n 38907: a2 = a3 <u a0\n 38910: a5 = u64 [s1 + 0x58]\n 38913: t0 = t0 + a5\n 38916: a0 = a0 <u a1\n 38919: a0 = a0 + t0\n 38922: a0 = a0 + a2\n 38925: a1 = u64 [s1 + 0x38]\n 38928: a2 = 0\n 38930: u64 [a1 + 56] = 0\n 38933: u64 [a1 + 48] = 0\n 38936: u64 [a1 + 40] = 0\n 38939: u64 [a1 + 32] = 0\n 38942: u64 [a1] = t1\n 38944: u64 [a1 + 0x8] = a4\n 38947: u64 [a1 + 0x10] = a3\n 38950: u64 [a1 + 0x18] = a0\n 38953: sp = s0 + 0xfffffffffffffee0\n 38957: ra = u64 [sp + 0x118]\n 38961: s0 = u64 [sp + 0x110]\n 38965: s1 = u64 [sp + 0x108]\n 38969: sp = sp + 0x120\n 38973: ret\n      : @1207 (gas: 1)\n 38975: t0 = 1264, jump @1450\n      : @1208 [@dyn 632] (gas: 1)\n 38981: ra = 1266, jump @4\n      : @1209 [@dyn 633] (gas: 7)\n 38988: u64 [s1 + 152] = 0\n 38992: u64 [s1 + 144] = 0\n 38996: u64 [s1 + 128] = 0x32\n 39001: a0 = 0x4\n 39004: a1 = s1 + 0x80\n 39008: u64 [s1 + 136] = 0\n 39012: ra = 1268, jump @4\n      : @1210 [@dyn 634] (gas: 2)\n 39019: a1 = i32 [0x20154]\n 39024: jump @1212 if a1 >u 63\n      : @1211 (gas: 2)\n 39028: u32 [0x20154] = 0x40\n 39034: fallthrough\n      : @1212 (gas: 8)\n 39035: a1 = 0x20160\n 39040: i32 a1 = a1 + 0\n 39042: a0 = 0x1\n 39045: a2 = 0x24\n 39048: ra = 0x4f6\n 39052: ecalli 11 // 'seal_return'\n 39054: t0 = 0x4f8\n 39058: jump @1443\n      : @1213 [@dyn 635] (gas: 1)\n 39061: t0 = 1272, jump @1443\n      : @1214 [@dyn 636] (gas: 7)\n 39067: t0 = a0 >u 0\n 39069: a4 = t1 <u 0xfffffffffffffec0\n 39073: a4 = a4 ^ 0x1\n 39076: a4 = t0 if a0 != 0\n 39079: a1 = a2 | a3\n 39082: a4 = a5 if a1 != 0\n 39085: jump @1218 if a4 != 0\n      : @1215 (gas: 2)\n 39088: a1 = t1 + 0x140\n 39092: t0 = 1274, jump @1440\n      : @1216 [@dyn 637] (gas: 1)\n 39098: ra = 1276, jump @4\n      : @1217 [@dyn 638] (gas: 5)\n 39105: sp = s0 + 0xffffffffffffff90\n 39108: ra = u64 [sp + 0x68]\n 39111: s0 = u64 [sp + 0x60]\n 39114: sp = sp + 0x70\n 39117: ret\n      : @1218 (gas: 1)\n 39119: t0 = 1278, jump @1431\n      : @1219 [@dyn 639] (gas: 1)\n 39125: ra = 1280, jump @4\n      : @1220 [@dyn 640] (gas: 7)\n 39132: u64 [sp + 24] = 0\n 39135: u64 [sp + 16] = 0\n 39138: u64 [sp + 0] = 0x41\n 39141: a0 = 0x4\n 39144: a1 = sp\n 39146: u64 [sp + 8] = 0\n 39149: ra = 1282, jump @4\n      : @1221 [@dyn 641] (gas: 2)\n 39156: a1 = i32 [0x20154]\n 39161: jump @1223 if a1 >u 63\n      : @1222 (gas: 2)\n 39165: u32 [0x20154] = 0x40\n 39171: fallthrough\n      : @1223 (gas: 8)\n 39172: a1 = 0x20160\n 39177: i32 a1 = a1 + 0\n 39179: a0 = 0x1\n 39182: a2 = 0x24\n 39185: ra = 0x504\n 39189: ecalli 11 // 'seal_return'\n 39191: t0 = 0x506\n 39195: jump @1443\n      : @1224 [@dyn 642] (gas: 1)\n 39198: t0 = 1286, jump @1443\n      : @1225 [@dyn 643] (gas: 7)\n 39204: t0 = a0 >u 0\n 39206: a4 = t1 <u 0xffffffffffffff80\n 39209: a4 = a4 ^ 0x1\n 39212: a4 = t0 if a0 != 0\n 39215: a1 = a2 | a3\n 39218: a4 = a5 if a1 != 0\n 39221: jump @1229 if a4 != 0\n      : @1226 (gas: 2)\n 39224: a1 = t1 + 0x80\n 39228: t0 = 1288, jump @1440\n      : @1227 [@dyn 644] (gas: 1)\n 39234: ra = 1290, jump @4\n      : @1228 [@dyn 645] (gas: 5)\n 39241: sp = s0 + 0xffffffffffffff90\n 39244: ra = u64 [sp + 0x68]\n 39247: s0 = u64 [sp + 0x60]\n 39250: sp = sp + 0x70\n 39253: ret\n      : @1229 (gas: 1)\n 39255: t0 = 1292, jump @1431\n      : @1230 [@dyn 646] (gas: 1)\n 39261: ra = 1294, jump @4\n      : @1231 [@dyn 647] (gas: 7)\n 39268: u64 [sp + 24] = 0\n 39271: u64 [sp + 16] = 0\n 39274: u64 [sp + 0] = 0x41\n 39277: a0 = 0x4\n 39280: a1 = sp\n 39282: u64 [sp + 8] = 0\n 39285: ra = 1296, jump @4\n      : @1232 [@dyn 648] (gas: 2)\n 39292: a1 = i32 [0x20154]\n 39297: jump @1234 if a1 >u 63\n      : @1233 (gas: 2)\n 39301: u32 [0x20154] = 0x40\n 39307: fallthrough\n      : @1234 (gas: 7)\n 39308: a1 = 0x20160\n 39313: i32 a1 = a1 + 0\n 39315: a0 = 0x1\n 39318: a2 = 0x24\n 39321: ra = 0x512\n 39325: ecalli 11 // 'seal_return'\n 39327: fallthrough\n      : @1235 [@dyn 649] (gas: 46)\n 39328: sp = sp + 0xffffffffffffff70\n 39332: u64 [sp + 0x88] = ra\n 39336: u64 [sp + 0x80] = s0\n 39340: u64 [sp + 0x78] = s1\n 39343: s0 = sp + 0x90\n 39347: sp = sp & 0xfffffffffffffff0\n 39350: t0 = a0\n 39352: a2 = u64 [a1]\n 39354: t2 = u64 [a0 + 0x8]\n 39357: a5 = u64 [a1 + 0x8]\n 39360: t1 = u64 [a0]\n 39362: a3 = a2 + 0x1f\n 39365: ra = a3 <u a2\n 39368: a2 = a5 + ra\n 39371: a3 = a3 & 0xffffffffffffffe0\n 39374: u64 [sp + 0x8] = t1\n 39377: t1 = t1 + a3\n 39380: a4 = t1 <u a3\n 39383: a3 = a2 + t2\n 39386: a3 = a3 + a4\n 39389: s1 = a3 ^ a2\n 39392: a0 = a3 <u a2\n 39395: a0 = a4 if s1 == 0\n 39398: a4 = u64 [t0 + 0x18]\n 39401: a5 = a2 <u a5\n 39404: s1 = u64 [a1 + 0x10]\n 39407: t0 = u64 [t0 + 0x10]\n 39410: a1 = u64 [a1 + 0x18]\n 39413: a5 = ra if ra == 0\n 39416: a5 = a5 + s1\n 39419: s1 = a5 <u s1\n 39422: a2 = a5 + t0\n 39425: a0 = a0 + a2\n 39428: a5 = a2 <u a5\n 39431: a2 = a0 <u a2\n 39434: a1 = a1 + a4\n 39437: a1 = a1 + s1\n 39440: a1 = a1 + a5\n 39443: a5 = a1 + a2\n 39446: a1 = a5 >u 0\n 39448: a2 = a0 >u 0\n 39450: a2 = a1 if a5 != 0\n 39453: a1 = a0 | a5\n 39456: s1 = a3 >u 0\n 39458: s1 = a2 if a1 != 0\n 39461: jump @1239 if s1 != 0\n      : @1236 (gas: 13)\n 39464: a1 = u64 [sp + 0x8]\n 39467: a1 = t1 <u a1\n 39470: a2 = a3 ^ t2\n 39473: s1 = a3 <u t2\n 39476: s1 = a1 if a2 == 0\n 39479: a1 = a0 <u t0\n 39482: a2 = a5 ^ a4\n 39485: a4 = a5 <u a4\n 39488: a4 = a1 if a2 == 0\n 39491: a1 = a0 ^ t0\n 39494: a1 = a1 | a2\n 39497: a4 = s1 if a1 == 0\n 39500: jump @1239 if a4 != 0\n      : @1237 (gas: 7)\n 39503: u64 [sp + 0x50] = t1\n 39506: u64 [sp + 0x58] = a3\n 39509: u64 [sp + 0x60] = a0\n 39512: a0 = 0x40\n 39515: a1 = sp + 0x50\n 39518: u64 [sp + 0x68] = a5\n 39521: ra = 1300, jump @4\n      : @1238 [@dyn 650] (gas: 6)\n 39528: sp = s0 + 0xffffffffffffff70\n 39532: ra = u64 [sp + 0x88]\n 39536: s0 = u64 [sp + 0x80]\n 39540: s1 = u64 [sp + 0x78]\n 39543: sp = sp + 0x90\n 39547: ret\n      : @1239 (gas: 1)\n 39549: t0 = 1302, jump @1468\n      : @1240 [@dyn 651] (gas: 1)\n 39555: ra = 1304, jump @4\n      : @1241 [@dyn 652] (gas: 7)\n 39562: u64 [sp + 40] = 0\n 39565: u64 [sp + 32] = 0\n 39568: u64 [sp + 16] = 0x41\n 39572: a0 = 0x4\n 39575: a1 = sp + 0x10\n 39578: u64 [sp + 24] = 0\n 39581: ra = 1306, jump @4\n      : @1242 [@dyn 653] (gas: 2)\n 39588: a1 = i32 [0x20154]\n 39593: jump @1244 if a1 >u 63\n      : @1243 (gas: 2)\n 39597: u32 [0x20154] = 0x40\n 39603: fallthrough\n      : @1244 (gas: 7)\n 39604: a1 = 0x20160\n 39609: i32 a1 = a1 + 0\n 39611: a0 = 0x1\n 39614: a2 = 0x24\n 39617: ra = 0x51c\n 39621: ecalli 11 // 'seal_return'\n 39623: fallthrough\n      : @1245 [@dyn 654] (gas: 6)\n 39624: sp = sp + 0xffffffffffffff00\n 39628: u64 [sp + 0xf8] = ra\n 39632: u64 [sp + 0xf0] = s0\n 39636: u64 [sp + 0xe8] = s1\n 39640: s0 = sp + 0x100\n 39644: t0 = 1310, jump @1455\n      : @1246 [@dyn 655] (gas: 1)\n 39650: jump @1248 if a0 == 0\n      : @1247 (gas: 6)\n 39653: sp = s0 + 0xffffffffffffff00\n 39657: ra = u64 [sp + 0xf8]\n 39661: s0 = u64 [sp + 0xf0]\n 39665: s1 = u64 [sp + 0xe8]\n 39669: sp = sp + 0x100\n 39673: ret\n      : @1248 (gas: 3)\n 39675: a0 = sp + 0xc0\n 39679: a1 = 0x40\n 39682: ra = 1312, jump @2\n      : @1249 [@dyn 656] (gas: 5)\n 39689: a2 = u64 [sp + 0xd8]\n 39693: s1 = u64 [sp + 0xd0]\n 39697: a0 = u64 [sp + 0xc8]\n 39701: a1 = u64 [sp + 0xc0]\n 39705: t0 = 1314, jump @1448\n      : @1250 [@dyn 657] (gas: 1)\n 39711: jump @1263 if a0 != 0\n      : @1251 (gas: 8)\n 39715: u64 [sp + 176] = 0\n 39719: u64 [sp + 168] = 0\n 39723: u64 [sp + 160] = 0\n 39727: a0 = 0x8c379a000000000\n 39737: a1 = sp + 0xa0\n 39741: u64 [sp + 0xb8] = a0\n 39745: a0 = u64 [sp + 0x18]\n 39748: ra = 1316, jump @4\n      : @1252 [@dyn 658] (gas: 1)\n 39755: t0 = 1318, jump @1429\n      : @1253 [@dyn 659] (gas: 1)\n 39761: jump @1263 if a0 == 0\n      : @1254 (gas: 8)\n 39765: a0 = u64 [sp + 0x18]\n 39768: i32 a0 = a0 + 0x4\n 39771: u64 [sp + 152] = 0\n 39775: u64 [sp + 144] = 0\n 39779: u64 [sp + 128] = 0x20\n 39784: a1 = sp + 0x80\n 39788: u64 [sp + 136] = 0\n 39792: ra = 1320, jump @4\n      : @1255 [@dyn 660] (gas: 1)\n 39799: t0 = 1322, jump @1442\n      : @1256 [@dyn 661] (gas: 1)\n 39805: jump @1263 if a0 == 0\n      : @1257 (gas: 8)\n 39808: s1 = u64 [sp + 0x18]\n 39811: i32 a0 = s1 + 0x24\n 39814: u64 [sp + 120] = 0\n 39817: u64 [sp + 112] = 0\n 39820: u64 [sp + 96] = 0x21\n 39824: a1 = sp + 0x60\n 39827: u64 [sp + 104] = 0\n 39830: ra = 1324, jump @4\n      : @1258 [@dyn 662] (gas: 4)\n 39837: a0 = 0x100000000\n 39847: u64 [sp] = a0\n 39849: a0 = 0xffffffbc\n 39859: t0 = 1326, jump @1446\n      : @1259 [@dyn 663] (gas: 1)\n 39865: jump @1263 if a0 == 0\n      : @1260 (gas: 12)\n 39868: s1 = u64 [sp + 0x18]\n 39871: i32 a0 = s1 + 0x44\n 39874: a1 = u64 [0x20110]\n 39879: u64 [sp + 0x58] = a1\n 39882: a1 = u64 [0x20118]\n 39887: a2 = u64 [0x20120]\n 39892: a3 = u64 [0x20128]\n 39897: u64 [sp + 0x50] = a1\n 39900: u64 [sp + 0x48] = a2\n 39903: a1 = sp + 0x40\n 39906: u64 [sp + 0x40] = a3\n 39909: ra = 1328, jump @4\n      : @1261 [@dyn 664] (gas: 3)\n 39916: a0 = u64 [sp]\n 39918: a0 = a0 + 0xffffffffffffff9c\n 39921: t0 = 1330, jump @1446\n      : @1262 [@dyn 665] (gas: 1)\n 39927: jump @1264 if a0 != 0\n      : @1263 (gas: 1)\n 39930: trap\n      : @1264 (gas: 9)\n 39931: s1 = u64 [sp + 0x18]\n 39934: i32 a0 = s1 + 0x64\n 39937: u64 [sp + 48] = 0\n 39940: u64 [sp + 40] = 0\n 39943: a1 = 0x6e00000000000000\n 39953: u64 [sp + 0x38] = a1\n 39956: a1 = sp + 0x20\n 39959: u64 [sp + 32] = 0\n 39962: ra = 1332, jump @4\n      : @1265 [@dyn 666] (gas: 3)\n 39969: a1 = 0x84\n 39973: a0 = s1\n 39975: ra = 1334, jump @15\n      : @1266 [@dyn 667] (gas: 6)\n 39982: i32 a1 = a0 + 0\n 39984: a0 = 0x1\n 39987: a2 = 0x84\n 39991: ra = 0x538\n 39995: ecalli 11 // 'seal_return'\n 39997: fallthrough\n      : @1267 [@dyn 668] (gas: 16)\n 39998: a2 = u64 [a1]\n 40000: t0 = u64 [a1 + 0x18]\n 40003: a3 = u64 [a1 + 0x8]\n 40006: a5 = u64 [a1 + 0x10]\n 40009: a4 = a2 + 0x1\n 40012: a2 = a4 <u 0x1\n 40015: a2 = a2 + a3\n 40018: a3 = a4 | a2\n 40021: a3 = a3 <u 0x1\n 40024: a3 = a3 + a5\n 40027: a5 = a3 <u a5\n 40030: a5 = a5 + t0\n 40033: t0 = a2 | a5\n 40036: a1 = a4 | a3\n 40039: a1 = a1 | t0\n 40042: jump @1269 if a1 == 0\n      : @1268 (gas: 5)\n 40045: u64 [a0] = a4\n 40047: u64 [a0 + 0x8] = a2\n 40050: u64 [a0 + 0x10] = a3\n 40053: u64 [a0 + 0x18] = a5\n 40056: ret\n      : @1269 (gas: 6)\n 40058: sp = sp + 0xffffffffffffffb0\n 40061: u64 [sp + 0x48] = ra\n 40064: u64 [sp + 0x40] = s0\n 40067: s0 = sp + 0x50\n 40070: sp = sp & 0xfffffffffffffff0\n 40073: t0 = 1338, jump @1431\n      : @1270 [@dyn 669] (gas: 1)\n 40079: ra = 1340, jump @4\n      : @1271 [@dyn 670] (gas: 7)\n 40086: u64 [sp + 24] = 0\n 40089: u64 [sp + 16] = 0\n 40092: u64 [sp + 0] = 0x11\n 40095: a0 = 0x4\n 40098: a1 = sp\n 40100: u64 [sp + 8] = 0\n 40103: ra = 1342, jump @4\n      : @1272 [@dyn 671] (gas: 2)\n 40110: a1 = i32 [0x20154]\n 40115: jump @1274 if a1 >u 63\n      : @1273 (gas: 2)\n 40119: u32 [0x20154] = 0x40\n 40125: fallthrough\n      : @1274 (gas: 7)\n 40126: a1 = 0x20160\n 40131: i32 a1 = a1 + 0\n 40133: a0 = 0x1\n 40136: a2 = 0x24\n 40139: ra = 0x540\n 40143: ecalli 11 // 'seal_return'\n 40145: fallthrough\n      : @1275 [@dyn 672] (gas: 45)\n 40146: sp = sp + 0xffffffffffffff90\n 40149: u64 [sp + 0x68] = ra\n 40152: u64 [sp + 0x60] = s0\n 40155: u64 [sp + 0x58] = s1\n 40158: s0 = sp + 0x70\n 40161: sp = sp & 0xfffffffffffffff0\n 40164: a3 = u64 [a1 + 0x18]\n 40167: u64 [sp + 0x8] = a3\n 40170: a4 = u64 [a2 + 0x18]\n 40173: t2 = u64 [a1]\n 40175: u64 [sp] = t2\n 40177: a3 = u64 [a1 + 0x8]\n 40180: s1 = u64 [a2 + 0x8]\n 40183: a5 = u64 [a2]\n 40185: t1 = u64 [a1 + 0x10]\n 40188: t0 = u64 [a2 + 0x10]\n 40191: a2 = s1 + a3\n 40194: t2 = t2 + a5\n 40197: a5 = t2 <u a5\n 40200: a2 = a2 + a5\n 40203: ra = a2 ^ s1\n 40206: s1 = a2 <u s1\n 40209: s1 = a5 if ra == 0\n 40212: a1 = t0 + t1\n 40215: a5 = u64 [sp + 0x8]\n 40218: a5 = a5 + a4\n 40221: a4 = a1 <u t0\n 40224: a4 = a4 + a5\n 40227: a5 = a1 + s1\n 40230: a1 = a5 <u a1\n 40233: ra = a4 + a1\n 40236: a4 = a2 ^ a3\n 40239: a3 = a2 <u a3\n 40242: a1 = u64 [sp]\n 40244: s1 = t2 <u a1\n 40247: s1 = a3 if a4 != 0\n 40250: t0 = a5 <u t1\n 40253: a1 = u64 [sp + 0x8]\n 40256: a4 = ra ^ a1\n 40259: a3 = ra <u a1\n 40262: a3 = t0 if a4 == 0\n 40265: a1 = a5 ^ t1\n 40268: a1 = a1 | a4\n 40271: s1 = a3 if a1 != 0\n 40274: jump @1277 if s1 != 0\n      : @1276 (gas: 10)\n 40277: u64 [a0] = t2\n 40279: u64 [a0 + 0x8] = a2\n 40282: u64 [a0 + 0x10] = a5\n 40285: u64 [a0 + 0x18] = ra\n 40288: sp = s0 + 0xffffffffffffff90\n 40291: ra = u64 [sp + 0x68]\n 40294: s0 = u64 [sp + 0x60]\n 40297: s1 = u64 [sp + 0x58]\n 40300: sp = sp + 0x70\n 40303: ret\n      : @1277 (gas: 1)\n 40305: t0 = 1346, jump @1468\n      : @1278 [@dyn 673] (gas: 1)\n 40311: ra = 1348, jump @4\n      : @1279 [@dyn 674] (gas: 7)\n 40318: u64 [sp + 40] = 0\n 40321: u64 [sp + 32] = 0\n 40324: u64 [sp + 16] = 0x11\n 40328: a0 = 0x4\n 40331: a1 = sp + 0x10\n 40334: u64 [sp + 24] = 0\n 40337: ra = 1350, jump @4\n      : @1280 [@dyn 675] (gas: 2)\n 40344: a1 = i32 [0x20154]\n 40349: jump @1282 if a1 >u 63\n      : @1281 (gas: 2)\n 40353: u32 [0x20154] = 0x40\n 40359: fallthrough\n      : @1282 (gas: 7)\n 40360: a1 = 0x20160\n 40365: i32 a1 = a1 + 0\n 40367: a0 = 0x1\n 40370: a2 = 0x24\n 40373: ra = 0x548\n 40377: ecalli 11 // 'seal_return'\n 40379: fallthrough\n      : @1283 [@dyn 676] (gas: 6)\n 40380: sp = sp + 0xffffffffffffff20\n 40384: u64 [sp + 0xd8] = ra\n 40388: u64 [sp + 0xd0] = s0\n 40392: u64 [sp + 0xc8] = s1\n 40396: s0 = sp + 0xe0\n 40400: t0 = 1354, jump @1455\n      : @1284 [@dyn 677] (gas: 1)\n 40406: jump @1286 if a0 == 0\n      : @1285 (gas: 6)\n 40409: sp = s0 + 0xffffffffffffff20\n 40413: ra = u64 [sp + 0xd8]\n 40417: s0 = u64 [sp + 0xd0]\n 40421: s1 = u64 [sp + 0xc8]\n 40425: sp = sp + 0xe0\n 40429: ret\n      : @1286 (gas: 3)\n 40431: a0 = sp + 0xa0\n 40435: a1 = 0x40\n 40438: ra = 1356, jump @2\n      : @1287 [@dyn 678] (gas: 5)\n 40445: a2 = u64 [sp + 0xb8]\n 40449: s1 = u64 [sp + 0xb0]\n 40453: a0 = u64 [sp + 0xa8]\n 40457: a1 = u64 [sp + 0xa0]\n 40461: t0 = 1358, jump @1448\n      : @1288 [@dyn 679] (gas: 1)\n 40467: jump @1299 if a0 != 0\n      : @1289 (gas: 1)\n 40470: t0 = 1360, jump @1470\n      : @1290 [@dyn 680] (gas: 1)\n 40476: ra = 1362, jump @4\n      : @1291 [@dyn 681] (gas: 1)\n 40483: t0 = 1364, jump @1429\n      : @1292 [@dyn 682] (gas: 1)\n 40489: jump @1299 if a0 == 0\n      : @1293 (gas: 8)\n 40492: a0 = u64 [sp + 0x18]\n 40495: i32 a0 = a0 + 0x4\n 40498: u64 [sp + 120] = 0\n 40501: u64 [sp + 112] = 0\n 40504: u64 [sp + 96] = 0x20\n 40508: a1 = sp + 0x60\n 40511: u64 [sp + 104] = 0\n 40514: ra = 1366, jump @4\n      : @1294 [@dyn 683] (gas: 1)\n 40521: t0 = 1368, jump @1442\n      : @1295 [@dyn 684] (gas: 1)\n 40527: jump @1299 if a0 == 0\n      : @1296 (gas: 8)\n 40530: s1 = u64 [sp + 0x18]\n 40533: i32 a0 = s1 + 0x24\n 40536: u64 [sp + 88] = 0\n 40539: u64 [sp + 80] = 0\n 40542: u64 [sp + 64] = 0x13\n 40546: a1 = sp + 0x40\n 40549: u64 [sp + 72] = 0\n 40552: ra = 1370, jump @4\n      : @1297 [@dyn 685] (gas: 2)\n 40559: a0 = 0xffffffbc\n 40569: t0 = 1372, jump @1446\n      : @1298 [@dyn 686] (gas: 1)\n 40575: jump @1300 if a0 != 0\n      : @1299 (gas: 1)\n 40578: trap\n      : @1300 (gas: 11)\n 40579: s1 = u64 [sp + 0x18]\n 40582: i32 a0 = s1 + 0x44\n 40585: a1 = u64 [0x20130]\n 40590: a2 = u64 [0x20138]\n 40595: u64 [sp + 0x38] = a1\n 40598: u64 [sp + 0x30] = a2\n 40601: a1 = 0x6973740000000000\n 40611: u64 [sp + 0x28] = a1\n 40614: a1 = sp + 0x20\n 40617: u64 [sp + 32] = 0\n 40620: ra = 1374, jump @4\n      : @1301 [@dyn 687] (gas: 3)\n 40627: a1 = 0x64\n 40630: a0 = s1\n 40632: ra = 1376, jump @15\n      : @1302 [@dyn 688] (gas: 6)\n 40639: i32 a1 = a0 + 0\n 40641: a0 = 0x1\n 40644: a2 = 0x64\n 40647: ra = 0x562\n 40651: ecalli 11 // 'seal_return'\n 40653: fallthrough\n      : @1303 [@dyn 689] (gas: 6)\n 40654: sp = sp + 0xffffffffffffff20\n 40658: u64 [sp + 0xd8] = ra\n 40662: u64 [sp + 0xd0] = s0\n 40666: u64 [sp + 0xc8] = s1\n 40670: s0 = sp + 0xe0\n 40674: t0 = 1380, jump @1455\n      : @1304 [@dyn 690] (gas: 1)\n 40680: jump @1306 if a0 == 0\n      : @1305 (gas: 6)\n 40683: sp = s0 + 0xffffffffffffff20\n 40687: ra = u64 [sp + 0xd8]\n 40691: s0 = u64 [sp + 0xd0]\n 40695: s1 = u64 [sp + 0xc8]\n 40699: sp = sp + 0xe0\n 40703: ret\n      : @1306 (gas: 3)\n 40705: a0 = sp + 0xa0\n 40709: a1 = 0x40\n 40712: ra = 1382, jump @2\n      : @1307 [@dyn 691] (gas: 5)\n 40719: a2 = u64 [sp + 0xb8]\n 40723: s1 = u64 [sp + 0xb0]\n 40727: a0 = u64 [sp + 0xa8]\n 40731: a1 = u64 [sp + 0xa0]\n 40735: t0 = 1384, jump @1448\n      : @1308 [@dyn 692] (gas: 1)\n 40741: jump @1319 if a0 != 0\n      : @1309 (gas: 1)\n 40744: t0 = 1386, jump @1470\n      : @1310 [@dyn 693] (gas: 1)\n 40750: ra = 1388, jump @4\n      : @1311 [@dyn 694] (gas: 1)\n 40757: t0 = 1390, jump @1429\n      : @1312 [@dyn 695] (gas: 1)\n 40763: jump @1319 if a0 == 0\n      : @1313 (gas: 8)\n 40766: a0 = u64 [sp + 0x18]\n 40769: i32 a0 = a0 + 0x4\n 40772: u64 [sp + 120] = 0\n 40775: u64 [sp + 112] = 0\n 40778: u64 [sp + 96] = 0x20\n 40782: a1 = sp + 0x60\n 40785: u64 [sp + 104] = 0\n 40788: ra = 1392, jump @4\n      : @1314 [@dyn 696] (gas: 1)\n 40795: t0 = 1394, jump @1442\n      : @1315 [@dyn 697] (gas: 1)\n 40801: jump @1319 if a0 == 0\n      : @1316 (gas: 8)\n 40804: s1 = u64 [sp + 0x18]\n 40807: i32 a0 = s1 + 0x24\n 40810: u64 [sp + 88] = 0\n 40813: u64 [sp + 80] = 0\n 40816: u64 [sp + 64] = 0x12\n 40820: a1 = sp + 0x40\n 40823: u64 [sp + 72] = 0\n 40826: ra = 1396, jump @4\n      : @1317 [@dyn 698] (gas: 2)\n 40833: a0 = 0xffffffbc\n 40843: t0 = 1398, jump @1446\n      : @1318 [@dyn 699] (gas: 1)\n 40849: jump @1320 if a0 != 0\n      : @1319 (gas: 1)\n 40852: trap\n      : @1320 (gas: 11)\n 40853: s1 = u64 [sp + 0x18]\n 40856: i32 a0 = s1 + 0x44\n 40859: a1 = u64 [0x20140]\n 40864: a2 = u64 [0x20148]\n 40869: u64 [sp + 0x38] = a1\n 40872: u64 [sp + 0x30] = a2\n 40875: a1 = 0x6564000000000000\n 40885: u64 [sp + 0x28] = a1\n 40888: a1 = sp + 0x20\n 40891: u64 [sp + 32] = 0\n 40894: ra = 1400, jump @4\n      : @1321 [@dyn 700] (gas: 3)\n 40901: a1 = 0x64\n 40904: a0 = s1\n 40906: ra = 1402, jump @15\n      : @1322 [@dyn 701] (gas: 6)\n 40913: i32 a1 = a0 + 0\n 40915: a0 = 0x1\n 40918: a2 = 0x64\n 40921: ra = 0x57c\n 40925: ecalli 11 // 'seal_return'\n 40927: fallthrough\n      : @1323 [@dyn 702] (gas: 22)\n 40928: sp = sp + 0xffffffffffffff40\n 40932: u64 [sp + 0xb8] = ra\n 40936: u64 [sp + 0xb0] = s0\n 40940: u64 [sp + 0xa8] = s1\n 40944: s0 = sp + 0xc0\n 40948: sp = sp & 0xfffffffffffffff0\n 40951: a4 = u64 [a1 + 0x10]\n 40954: a3 = u64 [a1 + 0x18]\n 40957: a5 = u64 [a1 + 0x8]\n 40960: a1 = u64 [a1]\n 40962: u64 [sp + 0x28] = a3\n 40965: u64 [sp + 0x20] = a5\n 40968: a5 = a5 | a3\n 40971: a3 = a1 | a4\n 40974: a3 = a3 | a5\n 40977: a3 = a3 >> 0x20\n 40980: u64 [sp + 0x30] = a4\n 40983: a4 = a4 | a5\n 40986: a4 = a4 << 0x20\n 40989: a3 = a3 | a4\n 40992: u64 [sp + 0x38] = a0\n 40995: jump @1327 if a3 != 0\n      : @1324 (gas: 10)\n 40999: a0 = u64 [a2 + 0x18]\n 41002: u64 [sp + 0x10] = a0\n 41005: s1 = u64 [a2 + 0x10]\n 41008: a0 = u64 [a2 + 0x8]\n 41011: u64 [sp + 0x8] = a0\n 41014: a0 = u64 [a2]\n 41016: u64 [sp] = a0\n 41018: a0 = sp + 0x80\n 41022: u64 [sp + 0x18] = a1\n 41025: ra = 1406, jump @2\n      : @1325 [@dyn 703] (gas: 19)\n 41032: t0 = u64 [sp + 0x10]\n 41035: a5 = u64 [sp + 0x8]\n 41038: t1 = u64 [sp]\n 41040: a0 = u64 [sp + 0x88]\n 41044: a1 = u64 [sp + 0x98]\n 41048: a2 = u64 [sp + 0x80]\n 41052: a3 = u64 [sp + 0x90]\n 41056: a4 = a0 ^ a5\n 41059: a0 = a5 <u a0\n 41062: a2 = t1 <u a2\n 41065: a2 = a0 if a4 != 0\n 41068: a0 = s1 <u a3\n 41071: a4 = a1 ^ t0\n 41074: a1 = t0 <u a1\n 41077: a1 = a0 if a4 == 0\n 41080: a3 = a3 ^ s1\n 41083: a3 = a3 | a4\n 41086: a1 = a2 if a3 == 0\n 41089: jump @1328 if a1 == 0\n      : @1326 (gas: 47)\n 41093: a0 = s1 >> 0x3b\n 41096: a1 = t0 << 0x5\n 41099: t0 = a1 | a0\n 41102: a1 = a5 >> 0x3b\n 41105: s1 = s1 << 0x5\n 41108: a1 = a1 | s1\n 41111: a2 = t1 >> 0x3b\n 41114: a3 = a5 << 0x5\n 41117: a2 = a2 | a3\n 41120: a3 = t1 << 0x5\n 41123: a0 = u64 [sp + 0x18]\n 41126: a3 = a3 + a0\n 41129: a4 = a3 <u a0\n 41132: a5 = u64 [sp + 0x20]\n 41135: a2 = a2 + a5\n 41138: a2 = a2 + a4\n 41141: a0 = a2 ^ a5\n 41144: s1 = a2 <u a5\n 41147: s1 = a4 if a0 == 0\n 41150: a5 = u64 [sp + 0x30]\n 41153: a1 = a1 + a5\n 41156: s1 = s1 + a1\n 41159: a4 = s1 <u a1\n 41162: a1 = a1 <u a5\n 41165: a5 = u64 [sp + 0x28]\n 41168: a0 = a5 + t0\n 41171: a0 = a0 + a1\n 41174: a0 = a0 + a4\n 41177: a1 = a3 + 0x20\n 41180: a3 = a1 <u a3\n 41183: a4 = a2 + a3\n 41186: a2 = a4 <u a2\n 41189: a2 = a3 if a3 == 0\n 41192: a2 = a2 + s1\n 41195: a3 = a2 <u s1\n 41198: a0 = a0 + a3\n 41201: a3 = u64 [sp + 0x38]\n 41204: u64 [a3] = a1\n 41206: u64 [a3 + 0x8] = a4\n 41209: u64 [a3 + 0x10] = a2\n 41212: u64 [a3 + 0x18] = a0\n 41215: sp = s0 + 0xffffffffffffff40\n 41219: ra = u64 [sp + 0xb8]\n 41223: s0 = u64 [sp + 0xb0]\n 41227: s1 = u64 [sp + 0xa8]\n 41231: sp = sp + 0xc0\n 41235: ret\n      : @1327 (gas: 1)\n 41237: trap\n      : @1328 (gas: 8)\n 41238: u64 [sp + 112] = 0\n 41241: u64 [sp + 104] = 0\n 41244: u64 [sp + 96] = 0\n 41247: a0 = 0x4e487b7100000000\n 41257: a1 = sp + 0x60\n 41260: u64 [sp + 0x78] = a0\n 41263: a0 = 0\n 41265: ra = 1408, jump @4\n      : @1329 [@dyn 704] (gas: 7)\n 41272: u64 [sp + 88] = 0\n 41275: u64 [sp + 80] = 0\n 41278: u64 [sp + 64] = 0x32\n 41282: a0 = 0x4\n 41285: a1 = sp + 0x40\n 41288: u64 [sp + 72] = 0\n 41291: ra = 1410, jump @4\n      : @1330 [@dyn 705] (gas: 2)\n 41298: a1 = i32 [0x20154]\n 41303: jump @1332 if a1 >u 63\n      : @1331 (gas: 2)\n 41307: u32 [0x20154] = 0x40\n 41313: fallthrough\n      : @1332 (gas: 7)\n 41314: a1 = 0x20160\n 41319: i32 a1 = a1 + 0\n 41321: a0 = 0x1\n 41324: a2 = 0x24\n 41327: ra = 0x584\n 41331: ecalli 11 // 'seal_return'\n 41333: fallthrough\n      : @1333 [@dyn 706] (gas: 24)\n 41334: sp = sp + 0xfffffffffffffa40\n 41338: a2 = sp + 0x500\n 41342: u64 [a2 + 0xb8] = ra\n 41346: u64 [a2 + 0xb0] = s0\n 41350: u64 [a2 + 0xa8] = s1\n 41354: s0 = sp + 0x5c0\n 41358: sp = sp & 0xffffffffffffffe0\n 41361: s1 = sp\n 41363: a2 = u64 [a1]\n 41365: a3 = u64 [a1 + 0x8]\n 41368: a4 = u64 [a1 + 0x10]\n 41371: a1 = u64 [a1 + 0x18]\n 41374: u64 [s1 + 0x40] = a0\n 41377: u64 [s1 + 0x70] = a1\n 41380: u64 [s1 + 0x438] = a1\n 41384: u64 [s1 + 0x58] = a4\n 41387: u64 [s1 + 0x430] = a4\n 41391: u64 [s1 + 0x60] = a3\n 41394: u64 [s1 + 0x428] = a3\n 41398: a1 = s1 + 0x420\n 41402: u64 [s1 + 0x68] = a2\n 41405: u64 [s1 + 0x420] = a2\n 41409: a0 = 0\n 41411: ra = 1414, jump @4\n      : @1334 [@dyn 707] (gas: 7)\n 41418: u64 [s1 + 1048] = 0\n 41422: u64 [s1 + 1040] = 0\n 41426: u64 [s1 + 1024] = 0x2\n 41431: a0 = 0x20\n 41434: a1 = s1 + 0x400\n 41438: u64 [s1 + 1032] = 0\n 41442: ra = 1416, jump @4\n      : @1335 [@dyn 708] (gas: 3)\n 41449: a2 = 0x20154\n 41454: a0 = i32 [0x20154]\n 41459: jump @1337 if a0 >u 63\n      : @1336 (gas: 2)\n 41463: u32 [0x20154] = 0x40\n 41469: fallthrough\n      : @1337 (gas: 13)\n 41470: u64 [s1 + 0x28] = a2\n 41473: a0 = sp + 0xffffffffffffffe0\n 41476: a2 = a0 & 0xffffffffffffffe0\n 41479: u64 [s1 + 0x78] = a2\n 41482: sp = a2\n 41484: a0 = 0x20160\n 41489: i32 a0 = a0 + 0\n 41491: i32 a2 = a2 + 0\n 41493: a1 = 0x40\n 41496: u64 [s1 + 0x20] = a0\n 41499: ra = 0x58a\n 41503: ecalli 7 // 'hash_keccak_256'\n 41505: fallthrough\n      : @1338 [@dyn 709] (gas: 6)\n 41506: a3 = u64 [s1 + 0x78]\n 41509: a0 = u64 [a3 + 0x18]\n 41512: a1 = u64 [a3 + 0x10]\n 41515: a2 = u64 [a3 + 0x8]\n 41518: a3 = u64 [a3]\n 41520: t0 = 1420, jump @1447\n      : @1339 [@dyn 710] (gas: 8)\n 41526: a4 = s1 + 0x400\n 41530: u64 [a4 + 0x58] = a3\n 41533: u64 [a4 + 0x50] = a2\n 41536: u64 [a4 + 0x48] = a1\n 41539: u64 [a4 + 0x40] = a0\n 41542: a0 = s1 + 0x3e0\n 41546: a1 = s1 + 0x440\n 41550: ra = 1422, jump @6\n      : @1340 [@dyn 711] (gas: 9)\n 41557: a4 = s1 + 0x300\n 41561: a0 = u64 [a4 + 0xf0]\n 41565: a1 = u64 [a4 + 0xf8]\n 41569: a2 = u64 [a4 + 0xe8]\n 41573: a3 = u64 [a4 + 0xe0]\n 41577: a1 = a1 | a2\n 41580: a0 = a0 | a3\n 41583: a0 = a0 | a1\n 41586: jump @1402 if a0 == 0\n      : @1341 (gas: 11)\n 41590: a0 = u64 [s1 + 0x68]\n 41593: u64 [s1 + 0x3c0] = a0\n 41597: a0 = u64 [s1 + 0x60]\n 41600: u64 [s1 + 0x3c8] = a0\n 41604: a0 = u64 [s1 + 0x58]\n 41607: u64 [s1 + 0x3d0] = a0\n 41611: a1 = s1 + 0x3c0\n 41615: a0 = u64 [s1 + 0x70]\n 41618: u64 [s1 + 0x3d8] = a0\n 41622: a0 = 0\n 41624: ra = 1424, jump @4\n      : @1342 [@dyn 712] (gas: 7)\n 41631: u64 [s1 + 952] = 0\n 41635: u64 [s1 + 944] = 0\n 41639: u64 [s1 + 928] = 0x2\n 41644: a0 = 0x20\n 41647: a1 = s1 + 0x3a0\n 41651: u64 [s1 + 936] = 0\n 41655: ra = 1426, jump @4\n      : @1343 [@dyn 713] (gas: 7)\n 41662: a0 = sp + 0xffffffffffffffe0\n 41665: a0 = a0 & 0xffffffffffffffe0\n 41668: u64 [s1 + 0x48] = a0\n 41671: sp = a0\n 41673: a2 = u64 [s1 + 0x28]\n 41676: a0 = i32 [a2]\n 41678: jump @1345 if a0 >u 63\n      : @1344 (gas: 2)\n 41682: u32 [a2 + 0] = 0x40\n 41685: fallthrough\n      : @1345 (gas: 12)\n 41686: a0 = sp + 0xffffffffffffffe0\n 41689: a0 = a0 & 0xffffffffffffffe0\n 41692: u64 [s1 + 0x78] = a0\n 41695: sp = a0\n 41697: i32 a2 = a0 + 0\n 41699: a1 = 0x40\n 41702: a0 = u64 [s1 + 0x20]\n 41705: ra = 0x594\n 41709: ecalli 7 // 'hash_keccak_256'\n 41711: a3 = u64 [s1 + 0x78]\n 41714: t0 = 0x596\n 41718: jump @1437\n      : @1346 [@dyn 714] (gas: 2)\n 41721: a3 = u64 [s1 + 0x78]\n 41724: t0 = 1430, jump @1437\n      : @1347 [@dyn 715] (gas: 12)\n 41730: u64 [s1 + 0x60] = a1\n 41733: a2 = u64 [s1 + 0x48]\n 41736: u64 [a2 + 0x18] = a1\n 41739: u64 [s1 + 0x68] = a0\n 41742: u64 [a2 + 0x10] = a0\n 41745: u64 [s1 + 0x58] = a4\n 41748: u64 [a2 + 0x8] = a4\n 41751: u64 [s1 + 0x50] = a5\n 41754: u64 [a2] = a5\n 41756: a0 = s1 + 0x380\n 41760: a1 = 0x40\n 41763: ra = 1432, jump @2\n      : @1348 [@dyn 716] (gas: 17)\n 41770: a4 = s1 + 0x300\n 41774: a0 = u64 [a4 + 0x98]\n 41778: u64 [s1 + 0x38] = a0\n 41781: a1 = u64 [a4 + 0x90]\n 41785: u64 [s1 + 0x30] = a1\n 41788: a3 = u64 [a4 + 0x88]\n 41792: u64 [s1 + 0x70] = a3\n 41795: a2 = u64 [a4 + 0x80]\n 41799: u64 [s1 + 0x78] = a2\n 41802: u64 [a4 + 0x78] = a0\n 41805: u64 [a4 + 0x70] = a1\n 41808: u64 [a4 + 0x68] = a3\n 41811: a0 = s1 + 0x360\n 41815: u64 [a4 + 0x60] = a2\n 41818: ra = 0x59a\n 41822: t0 = 0x4f8\n 41826: jump @1443\n      : @1349 [@dyn 717] (gas: 3)\n 41829: a0 = s1 + 0x340\n 41833: a1 = u64 [s1 + 0x48]\n 41836: ra = 1436, jump @6\n      : @1350 [@dyn 718] (gas: 6)\n 41843: a0 = u64 [s1 + 0x38]\n 41846: a1 = u64 [s1 + 0x70]\n 41849: a0 = a0 | a1\n 41852: a2 = u64 [s1 + 0x30]\n 41855: a1 = u64 [s1 + 0x78]\n 41858: t0 = 1438, jump @1472\n      : @1351 [@dyn 719] (gas: 1)\n 41864: jump @1405 if a0 != 0\n      : @1352 (gas: 12)\n 41868: a4 = s1 + 0x300\n 41872: a0 = u64 [a4 + 0x58]\n 41875: a1 = u64 [a4 + 0x50]\n 41878: a2 = u64 [a4 + 0x48]\n 41881: a3 = u64 [a4 + 0x40]\n 41884: u64 [a4 + 0x20] = a3\n 41887: u64 [a4 + 0x28] = a2\n 41890: u64 [a4 + 0x30] = a1\n 41893: a1 = s1 + 0x320\n 41897: u64 [a4 + 0x38] = a0\n 41900: a0 = u64 [s1 + 0x78]\n 41903: ra = 1440, jump @4\n      : @1353 [@dyn 720] (gas: 20)\n 41910: a0 = u64 [s1 + 0x50]\n 41913: a0 = a0 + 0x1\n 41916: a1 = a0 <u 0x1\n 41919: a2 = u64 [s1 + 0x58]\n 41922: a1 = a1 + a2\n 41925: a2 = a0 | a1\n 41928: a2 = a2 <u 0x1\n 41931: a3 = u64 [s1 + 0x68]\n 41934: a2 = a2 + a3\n 41937: a3 = a2 <u a3\n 41940: a4 = u64 [s1 + 0x60]\n 41943: a3 = a3 + a4\n 41946: a4 = s1 + 0x400\n 41950: u64 [a4 + 0x68] = a1\n 41953: u64 [a4 + 0x60] = a0\n 41956: u64 [a4 + 0x70] = a2\n 41959: u64 [a4 + 0x78] = a3\n 41962: a0 = s1 + 0x300\n 41966: a1 = s1 + 0x460\n 41970: ra = 1442, jump @6\n      : @1354 [@dyn 721] (gas: 13)\n 41977: a0 = u64 [s1 + 0x38]\n 41980: a2 = u64 [s1 + 0x30]\n 41983: a2 = a2 | a0\n 41986: a0 = 0x100000000\n 41996: u64 [s1 + 0x38] = a0\n 41999: a0 = 0xffffffe0\n 42009: a1 = u64 [s1 + 0x78]\n 42012: a0 = a1 <u a0\n 42015: a1 = u64 [s1 + 0x70]\n 42018: a0 = 0 if a1 != 0\n 42020: u64 [s1 + 0x48] = a2\n 42023: a0 = 0 if a2 != 0\n 42025: jump @1405 if a0 == 0\n      : @1355 (gas: 14)\n 42029: a0 = s1 + 0x300\n 42033: a2 = u64 [a0 + 0x18]\n 42036: a1 = u64 [a0 + 0x10]\n 42039: a3 = u64 [a0 + 0x8]\n 42042: a4 = u64 [a0]\n 42044: a0 = u64 [s1 + 0x78]\n 42047: i32 a0 = a0 + 0x20\n 42050: a5 = s1 + 0x200\n 42054: u64 [a5 + 0xe0] = a4\n 42058: u64 [a5 + 0xe8] = a3\n 42062: u64 [a5 + 0xf0] = a1\n 42066: a1 = s1 + 0x2e0\n 42070: u64 [a5 + 0xf8] = a2\n 42074: ra = 1444, jump @4\n      : @1356 [@dyn 722] (gas: 3)\n 42081: a1 = u64 [s1 + 0x50]\n 42084: a0 = a1 + 0x2\n 42087: t0 = 1446, jump @1418\n      : @1357 [@dyn 723] (gas: 7)\n 42093: u64 [a4 + 0x88] = a2\n 42097: u64 [a4 + 0x80] = a0\n 42101: u64 [a4 + 0x90] = a3\n 42105: u64 [a4 + 0x98] = a1\n 42109: a0 = s1 + 0x2c0\n 42113: a1 = s1 + 0x480\n 42117: ra = 1448, jump @6\n      : @1358 [@dyn 724] (gas: 3)\n 42124: a0 = u64 [s1 + 0x38]\n 42127: a0 = a0 + 0xffffffffffffffc0\n 42130: t0 = 1450, jump @1420\n      : @1359 [@dyn 725] (gas: 1)\n 42136: jump @1405 if a0 == 0\n      : @1360 (gas: 14)\n 42140: a5 = s1 + 0x200\n 42144: a4 = u64 [a5 + 0xd8]\n 42148: a1 = u64 [a5 + 0xd0]\n 42152: a2 = u64 [a5 + 0xc8]\n 42156: a3 = u64 [a5 + 0xc0]\n 42160: a0 = u64 [s1 + 0x78]\n 42163: i32 a0 = a0 + 0x40\n 42166: u64 [a5 + 0xa0] = a3\n 42170: u64 [a5 + 0xa8] = a2\n 42174: u64 [a5 + 0xb0] = a1\n 42178: a1 = s1 + 0x2a0\n 42182: u64 [a5 + 0xb8] = a4\n 42186: u64 [s1 + 0x18] = a0\n 42189: ra = 1452, jump @4\n      : @1361 [@dyn 726] (gas: 3)\n 42196: a1 = u64 [s1 + 0x50]\n 42199: a0 = a1 + 0x3\n 42202: t0 = 1454, jump @1418\n      : @1362 [@dyn 727] (gas: 7)\n 42208: u64 [a4 + 0xa8] = a2\n 42212: u64 [a4 + 0xa0] = a0\n 42216: u64 [a4 + 0xb0] = a3\n 42220: u64 [a4 + 0xb8] = a1\n 42224: a0 = s1 + 0x280\n 42228: a1 = s1 + 0x4a0\n 42232: ra = 1456, jump @6\n      : @1363 [@dyn 728] (gas: 4)\n 42239: a0 = 0x100000000\n 42249: u64 [s1 + 0x38] = a0\n 42252: a0 = 0xffffffa0\n 42262: t0 = 1458, jump @1420\n      : @1364 [@dyn 729] (gas: 1)\n 42268: jump @1405 if a0 == 0\n      : @1365 (gas: 14)\n 42272: a5 = s1 + 0x200\n 42276: a4 = u64 [a5 + 0x98]\n 42280: a1 = u64 [a5 + 0x90]\n 42284: a2 = u64 [a5 + 0x88]\n 42288: a3 = u64 [a5 + 0x80]\n 42292: a0 = u64 [s1 + 0x78]\n 42295: i32 a0 = a0 + 0x60\n 42298: u64 [a5 + 0x60] = a3\n 42301: u64 [a5 + 0x68] = a2\n 42304: u64 [a5 + 0x70] = a1\n 42307: a1 = s1 + 0x260\n 42311: u64 [a5 + 0x78] = a4\n 42314: u64 [s1 + 0x30] = a0\n 42317: ra = 1460, jump @4\n      : @1366 [@dyn 730] (gas: 3)\n 42324: a1 = u64 [s1 + 0x50]\n 42327: a0 = a1 + 0x4\n 42330: t0 = 1462, jump @1418\n      : @1367 [@dyn 731] (gas: 7)\n 42336: u64 [a4 + 0xc8] = a2\n 42340: u64 [a4 + 0xc0] = a0\n 42344: u64 [a4 + 0xd0] = a3\n 42348: u64 [a4 + 0xd8] = a1\n 42352: a0 = s1 + 0x240\n 42356: a1 = s1 + 0x4c0\n 42360: ra = 1464, jump @6\n      : @1368 [@dyn 732] (gas: 3)\n 42367: a0 = u64 [s1 + 0x38]\n 42370: a0 = a0 + 0xffffffffffffff80\n 42373: t0 = 1466, jump @1420\n      : @1369 [@dyn 733] (gas: 1)\n 42379: jump @1405 if a0 == 0\n      : @1370 (gas: 13)\n 42383: a5 = s1 + 0x200\n 42387: a2 = u64 [a5 + 0x58]\n 42390: a1 = u64 [a5 + 0x50]\n 42393: a3 = u64 [a5 + 0x48]\n 42396: a4 = u64 [a5 + 0x40]\n 42399: a0 = u64 [s1 + 0x78]\n 42402: i32 a0 = a0 + 0x80\n 42406: u64 [a5 + 0x20] = a4\n 42409: u64 [a5 + 0x28] = a3\n 42412: u64 [a5 + 0x30] = a1\n 42415: a1 = s1 + 0x220\n 42419: u64 [a5 + 0x38] = a2\n 42422: ra = 1468, jump @4\n      : @1371 [@dyn 734] (gas: 3)\n 42429: a1 = u64 [s1 + 0x50]\n 42432: a0 = a1 + 0x5\n 42435: t0 = 1470, jump @1418\n      : @1372 [@dyn 735] (gas: 7)\n 42441: u64 [a4 + 0xe8] = a2\n 42445: u64 [a4 + 0xe0] = a0\n 42449: u64 [a4 + 0xf0] = a3\n 42453: u64 [a4 + 0xf8] = a1\n 42457: a0 = s1 + 0x200\n 42461: a1 = s1 + 0x4e0\n 42465: ra = 1472, jump @6\n      : @1373 [@dyn 736] (gas: 4)\n 42472: a0 = 0x100000000\n 42482: u64 [s1 + 0x38] = a0\n 42485: a0 = 0xffffff60\n 42495: t0 = 1474, jump @1420\n      : @1374 [@dyn 737] (gas: 1)\n 42501: jump @1405 if a0 == 0\n      : @1375 (gas: 14)\n 42505: a0 = s1 + 0x200\n 42509: a2 = u64 [a0 + 0x18]\n 42512: a1 = u64 [a0 + 0x10]\n 42515: a3 = u64 [a0 + 0x8]\n 42518: a4 = u64 [a0]\n 42520: a0 = u64 [s1 + 0x78]\n 42523: i32 a0 = a0 + 0xa0\n 42527: a5 = s1 + 0x100\n 42531: u64 [a5 + 0xe0] = a4\n 42535: u64 [a5 + 0xe8] = a3\n 42539: u64 [a5 + 0xf0] = a1\n 42543: a1 = s1 + 0x1e0\n 42547: u64 [a5 + 0xf8] = a2\n 42551: ra = 1476, jump @4\n      : @1376 [@dyn 738] (gas: 3)\n 42558: a1 = u64 [s1 + 0x50]\n 42561: a0 = a1 + 0x6\n 42564: t0 = 1478, jump @1424\n      : @1377 [@dyn 739] (gas: 7)\n 42570: u64 [a4 + 0x8] = a2\n 42573: u64 [a4] = a0\n 42575: u64 [a4 + 0x10] = a3\n 42578: u64 [a4 + 0x18] = a1\n 42581: a0 = s1 + 0x1c0\n 42585: a1 = s1 + 0x500\n 42589: ra = 1480, jump @6\n      : @1378 [@dyn 740] (gas: 3)\n 42596: a0 = u64 [s1 + 0x38]\n 42599: a0 = a0 + 0xffffffffffffff40\n 42603: t0 = 1482, jump @1420\n      : @1379 [@dyn 741] (gas: 1)\n 42609: jump @1405 if a0 == 0\n      : @1380 (gas: 15)\n 42613: a4 = s1 + 0x100\n 42617: a0 = u64 [a4 + 0xd0]\n 42621: u64 [s1 + 0x38] = a0\n 42624: a1 = u64 [a4 + 0xc8]\n 42628: a2 = u64 [a4 + 0xc0]\n 42632: a0 = a0 << 0x20\n 42635: a3 = a0 >> 0x20\n 42638: a0 = u64 [s1 + 0x78]\n 42641: i32 a0 = a0 + 0xc0\n 42645: u64 [s1 + 440] = 0\n 42649: u64 [a4 + 0xa0] = a2\n 42653: u64 [a4 + 0xa8] = a1\n 42657: a1 = s1 + 0x1a0\n 42661: u64 [a4 + 0xb0] = a3\n 42665: ra = 1484, jump @4\n      : @1381 [@dyn 742] (gas: 4)\n 42672: a1 = u64 [s1 + 0x38]\n 42675: a1 = a1 << 0x18\n 42678: a1 = a1 >> 0x38\n 42681: jump @1406 if a1 >u 3\n      : @1382 (gas: 10)\n 42686: a0 = 0x100000000\n 42696: u64 [s1 + 0x38] = a0\n 42699: a0 = 0xffffff20\n 42709: a2 = u64 [s1 + 0x78]\n 42712: a0 = a2 <u a0\n 42715: a2 = u64 [s1 + 0x70]\n 42718: a0 = 0 if a2 != 0\n 42720: a2 = u64 [s1 + 0x48]\n 42723: a0 = 0 if a2 != 0\n 42725: jump @1405 if a0 == 0\n      : @1383 (gas: 8)\n 42729: a0 = u64 [s1 + 0x78]\n 42732: i32 a0 = a0 + 0xe0\n 42736: u64 [s1 + 408] = 0\n 42740: u64 [s1 + 400] = 0\n 42744: u64 [s1 + 0x180] = a1\n 42748: a1 = s1 + 0x180\n 42752: u64 [s1 + 392] = 0\n 42756: ra = 1486, jump @4\n      : @1384 [@dyn 743] (gas: 3)\n 42763: a1 = u64 [s1 + 0x50]\n 42766: a0 = a1 + 0x7\n 42769: t0 = 1488, jump @1424\n      : @1385 [@dyn 744] (gas: 7)\n 42775: u64 [a4 + 0x20] = a0\n 42778: u64 [a4 + 0x28] = a2\n 42781: u64 [a4 + 0x30] = a3\n 42784: u64 [a4 + 0x38] = a1\n 42787: a0 = s1 + 0x160\n 42791: a1 = s1 + 0x520\n 42795: ra = 1490, jump @6\n      : @1386 [@dyn 745] (gas: 3)\n 42802: a0 = u64 [s1 + 0x38]\n 42805: a0 = a0 + 0xffffffffffffff00\n 42809: t0 = 1492, jump @1420\n      : @1387 [@dyn 746] (gas: 1)\n 42815: jump @1405 if a0 == 0\n      : @1388 (gas: 13)\n 42819: a5 = s1 + 0x100\n 42823: a2 = u64 [a5 + 0x78]\n 42826: a1 = u64 [a5 + 0x70]\n 42829: a3 = u64 [a5 + 0x68]\n 42832: a4 = u64 [a5 + 0x60]\n 42835: a0 = u64 [s1 + 0x78]\n 42838: i32 a0 = a0 + 0x100\n 42842: u64 [a5 + 0x40] = a4\n 42845: u64 [a5 + 0x48] = a3\n 42848: u64 [a5 + 0x50] = a1\n 42851: a1 = s1 + 0x140\n 42855: u64 [a5 + 0x58] = a2\n 42858: ra = 1494, jump @4\n      : @1389 [@dyn 747] (gas: 3)\n 42865: a1 = u64 [s1 + 0x50]\n 42868: a0 = a1 + 0x8\n 42871: t0 = 1496, jump @1424\n      : @1390 [@dyn 748] (gas: 7)\n 42877: u64 [a4 + 0x48] = a2\n 42880: u64 [a4 + 0x40] = a0\n 42883: u64 [a4 + 0x50] = a3\n 42886: u64 [a4 + 0x58] = a1\n 42889: a0 = s1 + 0x120\n 42893: a1 = s1 + 0x540\n 42897: ra = 1498, jump @6\n      : @1391 [@dyn 749] (gas: 2)\n 42904: a0 = 0xfffffee0\n 42914: t0 = 1500, jump @1420\n      : @1392 [@dyn 750] (gas: 1)\n 42920: jump @1405 if a0 == 0\n      : @1393 (gas: 11)\n 42924: a0 = u64 [s1 + 0x120]\n 42928: a0 = a0 & 0xff\n 42932: a1 = a0 >u 0\n 42934: a0 = u64 [s1 + 0x78]\n 42937: i32 a0 = a0 + 0x120\n 42941: u64 [s1 + 280] = 0\n 42945: u64 [s1 + 272] = 0\n 42949: u64 [s1 + 0x100] = a1\n 42953: a1 = s1 + 0x100\n 42957: u64 [s1 + 264] = 0\n 42961: ra = 1502, jump @4\n      : @1394 [@dyn 751] (gas: 3)\n 42968: a0 = s1 + 0xe0\n 42972: a1 = u64 [s1 + 0x30]\n 42975: ra = 1504, jump @2\n      : @1395 [@dyn 752] (gas: 12)\n 42982: a0 = u64 [s1 + 0xe0]\n 42986: u64 [s1 + 0x78] = a0\n 42989: a0 = u64 [s1 + 0xe8]\n 42993: u64 [s1 + 0x70] = a0\n 42996: a0 = u64 [s1 + 0xf0]\n 43000: u64 [s1 + 0x68] = a0\n 43003: a0 = u64 [s1 + 0xf8]\n 43007: u64 [s1 + 0x60] = a0\n 43010: i32 a0 = s1 + 0x560\n 43014: ra = 0x5e2\n 43018: ecalli 8 // 'now'\n 43020: fallthrough\n      : @1396 [@dyn 753] (gas: 17)\n 43021: a1 = s1 + 0x500\n 43025: a0 = u64 [a1 + 0x78]\n 43028: t0 = u64 [s1 + 0x560]\n 43032: a2 = u64 [a1 + 0x70]\n 43035: a3 = u64 [a1 + 0x68]\n 43038: a1 = u64 [s1 + 0x60]\n 43041: a4 = a0 ^ a1\n 43044: a1 = a0 <u a1\n 43047: a0 = u64 [s1 + 0x68]\n 43050: a5 = a2 <u a0\n 43053: a5 = a1 if a4 != 0\n 43056: a1 = u64 [s1 + 0x70]\n 43059: t1 = a3 ^ a1\n 43062: a3 = a3 <u a1\n 43065: a1 = u64 [s1 + 0x78]\n 43068: a1 = t0 <u a1\n 43071: t0 = 1508, jump @1456\n      : @1397 [@dyn 754] (gas: 1)\n 43077: jump @1403 if a1 == 0\n      : @1398 (gas: 3)\n 43081: a0 = s1 + 0xc0\n 43085: a1 = u64 [s1 + 0x18]\n 43088: ra = 1510, jump @2\n      : @1399 [@dyn 755] (gas: 12)\n 43095: a0 = u64 [s1 + 0xc0]\n 43099: u64 [s1 + 0x78] = a0\n 43102: a0 = u64 [s1 + 0xc8]\n 43106: u64 [s1 + 0x70] = a0\n 43109: a0 = u64 [s1 + 0xd0]\n 43113: u64 [s1 + 0x68] = a0\n 43116: a0 = u64 [s1 + 0xd8]\n 43120: u64 [s1 + 0x60] = a0\n 43123: i32 a0 = s1 + 0x580\n 43127: ra = 0x5e8\n 43131: ecalli 8 // 'now'\n 43133: fallthrough\n      : @1400 [@dyn 756] (gas: 17)\n 43134: a1 = s1 + 0x500\n 43138: a0 = u64 [a1 + 0x98]\n 43142: t0 = u64 [s1 + 0x580]\n 43146: a2 = u64 [a1 + 0x90]\n 43150: a3 = u64 [a1 + 0x88]\n 43154: a1 = u64 [s1 + 0x60]\n 43157: a4 = a0 ^ a1\n 43160: a1 = a0 <u a1\n 43163: a0 = u64 [s1 + 0x68]\n 43166: a5 = a2 <u a0\n 43169: a5 = a1 if a4 != 0\n 43172: a1 = u64 [s1 + 0x70]\n 43175: t1 = a3 ^ a1\n 43178: a3 = a3 <u a1\n 43181: a1 = u64 [s1 + 0x78]\n 43184: a1 = t0 <u a1\n 43187: t0 = 1514, jump @1456\n      : @1401 [@dyn 757] (gas: 5)\n 43193: a0 = a1 <u 0x3\n 43196: a0 = a0 + 0xffffffffffffffff\n 43199: a1 = 0x2 - a1\n 43202: a2 = a0\n 43204: jump @1404\n      : @1402 (gas: 3)\n 43206: a1 = 0\n 43208: a2 = 0\n 43210: jump @1404\n      : @1403 (gas: 4)\n 43212: a0 = 0\n 43214: a2 = 0\n 43216: a1 = 0x3\n 43219: fallthrough\n      : @1404 (gas: 12)\n 43220: a3 = u64 [s1 + 0x40]\n 43223: u64 [a3] = a1\n 43225: u64 [a3 + 0x8] = a0\n 43228: u64 [a3 + 0x10] = a2\n 43231: u64 [a3 + 0x18] = a0\n 43234: sp = s0 + 0xfffffffffffffa40\n 43238: a0 = sp + 0x500\n 43242: ra = u64 [a0 + 0xb8]\n 43246: s0 = u64 [a0 + 0xb0]\n 43250: s1 = u64 [a0 + 0xa8]\n 43254: sp = sp + 0x5c0\n 43258: ret\n      : @1405 (gas: 1)\n 43260: trap\n      : @1406 (gas: 1)\n 43261: t0 = 1516, jump @1450\n      : @1407 [@dyn 758] (gas: 1)\n 43267: ra = 1518, jump @4\n      : @1408 [@dyn 759] (gas: 7)\n 43274: u64 [s1 + 152] = 0\n 43278: u64 [s1 + 144] = 0\n 43282: u64 [s1 + 128] = 0x21\n 43287: a0 = 0x4\n 43290: a1 = s1 + 0x80\n 43294: u64 [s1 + 136] = 0\n 43298: ra = 1520, jump @4\n      : @1409 [@dyn 760] (gas: 3)\n 43305: a0 = u64 [s1 + 0x28]\n 43308: a0 = i32 [a0]\n 43310: jump @1411 if a0 >u 63\n      : @1410 (gas: 3)\n 43314: a1 = u64 [s1 + 0x28]\n 43317: u32 [a1 + 0] = 0x40\n 43320: fallthrough\n      : @1411 (gas: 7)\n 43321: a0 = 0x1\n 43324: a2 = 0x24\n 43327: a1 = u64 [s1 + 0x20]\n 43330: ecalli 11 // 'seal_return'\n 43332: a0 = 0\n 43334: ra = 0x5f2\n 43338: jump @21\n      : @1412 [export #0: 'call'] (gas: 2)\n 43342: a0 = 0\n 43344: ra = 1522, jump @21\n      : @1413 [@dyn 761] [export #1: 'deploy'] (gas: 2)\n 43351: a0 = 0x1\n 43354: ra = 1524, jump @21\n      : @1414 [@dyn 762] (gas: 13)\n 43361: a1 = a0 <u a1\n 43364: a3 = u64 [s1 + 0x1b0]\n 43368: a2 = a3 + a1\n 43371: a3 = a2 <u a3\n 43374: a3 = a1 if a1 == 0\n 43377: a1 = u64 [s1 + 0x1a0]\n 43381: a3 = a3 + a1\n 43384: a1 = a3 <u a1\n 43387: a4 = u64 [s1 + 0x1b8]\n 43391: a1 = a1 + a4\n 43394: a4 = s1 + 0x3158\n 43398: a5 = a4 + 0x100\n 43402: jump [t0]\n      : @1415 (gas: 12)\n 43404: a5 = s1 + 0x100\n 43408: a1 = u64 [a5 + 0xb8]\n 43412: a0 = u64 [a5 + 0xa8]\n 43416: a3 = u64 [a5 + 0xa0]\n 43420: a3 = a3 | a0\n 43423: a4 = 0x100000000\n 43433: a0 = 0xfffffffc\n 43443: a0 = a1 <u a0\n 43446: a2 = u64 [a5 + 0xb0]\n 43450: a0 = 0 if a2 != 0\n 43452: a0 = 0 if a3 != 0\n 43454: jump [t0]\n      : @1416 (gas: 7)\n 43456: a4 = 0x100000000\n 43466: a0 = 0xfffffffc\n 43476: a0 = a1 <u a0\n 43479: a2 = u64 [a5 + 0xb0]\n 43483: a0 = 0 if a2 != 0\n 43485: a0 = 0 if a3 != 0\n 43487: jump [t0]\n      : @1417 (gas: 10)\n 43489: a4 = s1 + 0x100\n 43493: a3 = u64 [a4 + 0xa8]\n 43497: a2 = u64 [a4 + 0xb0]\n 43501: a1 = u64 [a4 + 0xb8]\n 43505: a0 = u64 [a4 + 0xa0]\n 43509: a0 = a0 + 0xffffffffffffffdc\n 43512: a0 = a1 <u a0\n 43515: a0 = 0 if a2 != 0\n 43517: a0 = 0 if a3 != 0\n 43519: jump [t0]\n      : @1418 (gas: 12)\n 43521: a1 = a0 <u a1\n 43524: a3 = u64 [s1 + 0x58]\n 43527: a2 = a3 + a1\n 43530: a3 = a2 <u a3\n 43533: a3 = a1 if a1 == 0\n 43536: a1 = u64 [s1 + 0x68]\n 43539: a3 = a3 + a1\n 43542: a1 = a3 <u a1\n 43545: a4 = u64 [s1 + 0x60]\n 43548: a1 = a1 + a4\n 43551: a4 = s1 + 0x400\n 43555: jump [t0]\n      : @1419 (gas: 9)\n 43557: a2 = s1 + 0x100\n 43561: a3 = u64 [a2 + 0xb8]\n 43565: a0 = 0xffffffbc\n 43575: a0 = a3 <u a0\n 43578: a1 = u64 [a2 + 0xb0]\n 43582: a0 = 0 if a1 != 0\n 43584: a1 = u64 [a2 + 0xa8]\n 43588: a0 = 0 if a1 != 0\n 43590: jump [t0]\n      : @1420 (gas: 7)\n 43592: a1 = u64 [s1 + 0x78]\n 43595: a0 = a1 <u a0\n 43598: a1 = u64 [s1 + 0x70]\n 43601: a0 = 0 if a1 != 0\n 43603: a1 = u64 [s1 + 0x48]\n 43606: a0 = 0 if a1 != 0\n 43608: jump [t0]\n      : @1421 (gas: 19)\n 43610: a3 = u64 [s1 + 0x188]\n 43614: a0 = u64 [a3]\n 43616: a1 = u64 [a3 + 0x8]\n 43619: a2 = u64 [a3 + 0x10]\n 43622: a3 = u64 [a3 + 0x18]\n 43625: a0 = reverse a0\n 43627: a1 = reverse a1\n 43629: a2 = reverse a2\n 43631: a3 = reverse a3\n 43633: a4 = a3 + 0x6\n 43636: a3 = a4 <u a3\n 43639: a5 = a2 + a3\n 43642: a2 = a5 <u a2\n 43645: a2 = a3 if a3 == 0\n 43648: a2 = a2 + a1\n 43651: a1 = a2 <u a1\n 43654: a0 = a0 + a1\n 43657: a1 = s1 + 0x3958\n 43661: jump [t0]\n      : @1422 (gas: 19)\n 43663: a3 = u64 [s1 + 0x188]\n 43667: a0 = u64 [a3]\n 43669: a1 = u64 [a3 + 0x8]\n 43672: a2 = u64 [a3 + 0x10]\n 43675: a3 = u64 [a3 + 0x18]\n 43678: a0 = reverse a0\n 43680: a1 = reverse a1\n 43682: a2 = reverse a2\n 43684: a3 = reverse a3\n 43686: a4 = a3 + 0x5\n 43689: a3 = a4 <u a3\n 43692: a5 = a2 + a3\n 43695: a2 = a5 <u a2\n 43698: a2 = a3 if a3 == 0\n 43701: a2 = a2 + a1\n 43704: a1 = a2 <u a1\n 43707: a0 = a0 + a1\n 43710: a1 = s1 + 0x3158\n 43714: jump [t0]\n      : @1423 (gas: 14)\n 43716: a0 = u64 [a2 + 0x8]\n 43719: a1 = u64 [a2]\n 43721: a2 = i32 [a2 + 0x10]\n 43724: a0 = reverse a0\n 43726: a3 = a0 >> 0x20\n 43729: a1 = reverse a1\n 43731: a4 = a1 << 0x20\n 43734: a3 = a3 | a4\n 43737: a0 = a0 << 0x20\n 43740: a2 = reverse a2\n 43742: a2 = a2 >> 0x20\n 43745: a0 = a0 | a2\n 43748: a1 = a1 >> 0x20\n 43751: jump [t0]\n      : @1424 (gas: 12)\n 43753: a1 = a0 <u a1\n 43756: a3 = u64 [s1 + 0x58]\n 43759: a2 = a3 + a1\n 43762: a3 = a2 <u a3\n 43765: a3 = a1 if a1 == 0\n 43768: a1 = u64 [s1 + 0x68]\n 43771: a3 = a3 + a1\n 43774: a1 = a3 <u a1\n 43777: a4 = u64 [s1 + 0x60]\n 43780: a1 = a1 + a4\n 43783: a4 = s1 + 0x500\n 43787: jump [t0]\n      : @1425 (gas: 19)\n 43789: a3 = u64 [s1 + 0x1b8]\n 43793: a0 = u64 [a3 + 0x18]\n 43796: a1 = u64 [a3 + 0x10]\n 43799: a2 = u64 [a3 + 0x8]\n 43802: a3 = u64 [a3]\n 43804: a5 = reverse a0\n 43806: u64 [s1 + 0x1a8] = a5\n 43810: a4 = reverse a1\n 43812: u64 [s1 + 0x1b0] = a4\n 43816: a2 = reverse a2\n 43818: u64 [s1 + 0x1a0] = a2\n 43822: a0 = reverse a3\n 43824: u64 [s1 + 0x1b8] = a0\n 43828: a1 = u64 [s1 + 0x190]\n 43832: u64 [a1 + 0x18] = a0\n 43835: u64 [a1 + 0x10] = a2\n 43838: u64 [a1 + 0x8] = a4\n 43841: u64 [a1] = a5\n 43843: jump [t0]\n      : @1426 (gas: 10)\n 43845: a0 = u64 [a3 + 0x18]\n 43848: a1 = u64 [a3 + 0x10]\n 43851: a2 = u64 [a3 + 0x8]\n 43854: a3 = u64 [a3]\n 43856: a0 = reverse a0\n 43858: a1 = reverse a1\n 43860: a2 = reverse a2\n 43862: a3 = reverse a3\n 43864: a4 = s1 + 0x3958\n 43868: jump [t0]\n      : @1427 (gas: 8)\n 43870: a0 = sp + 0xffffffffffffffe0\n 43873: a0 = a0 & 0xffffffffffffffe0\n 43876: u64 [s1 + 0x188] = a0\n 43880: sp = a0\n 43882: i32 a2 = a0 + 0\n 43884: a1 = 0x40\n 43887: a0 = u64 [s1 + 0x198]\n 43891: jump [t0]\n      : @1428 (gas: 19)\n 43893: a3 = u64 [s1 + 0x1b0]\n 43897: a0 = u64 [a3 + 0x18]\n 43900: a1 = u64 [a3 + 0x10]\n 43903: a2 = u64 [a3 + 0x8]\n 43906: a3 = u64 [a3]\n 43908: a0 = reverse a0\n 43910: a1 = reverse a1\n 43912: a2 = reverse a2\n 43914: a3 = reverse a3\n 43916: a4 = u64 [s1 + 0x1b8]\n 43920: u64 [s1 + 0x198] = a3\n 43924: u64 [a4 + 0x18] = a3\n 43927: u64 [s1 + 0x1a0] = a2\n 43931: u64 [a4 + 0x10] = a2\n 43934: u64 [s1 + 0x1a8] = a1\n 43938: u64 [a4 + 0x8] = a1\n 43941: u64 [s1 + 0x1b0] = a0\n 43945: u64 [a4] = a0\n 43947: jump [t0]\n      : @1429 (gas: 11)\n 43949: a2 = u64 [sp + 0x8]\n 43952: a2 = a2 | s1\n 43955: s1 = 0x100000000\n 43965: a0 = 0xfffffffc\n 43975: a1 = u64 [sp + 0x18]\n 43978: a0 = a1 <u a0\n 43981: a1 = u64 [sp + 0x10]\n 43984: a0 = 0 if a1 != 0\n 43986: u64 [sp + 0x8] = a2\n 43989: a0 = 0 if a2 != 0\n 43991: jump [t0]\n      : @1430 (gas: 5)\n 43993: sp = a0\n 43995: i32 a2 = a0 + 0\n 43997: a1 = 0x40\n 44000: a0 = u64 [s1 + 0x198]\n 44004: jump [t0]\n      : @1431 (gas: 8)\n 44006: u64 [sp + 48] = 0\n 44009: u64 [sp + 40] = 0\n 44012: u64 [sp + 32] = 0\n 44015: a0 = 0x4e487b7100000000\n 44025: a1 = sp + 0x20\n 44028: u64 [sp + 0x38] = a0\n 44031: a0 = 0\n 44033: jump [t0]\n      : @1432 (gas: 13)\n 44035: a1 = a0 <u a1\n 44038: a3 = u64 [s1 + 0x198]\n 44042: a2 = a3 + a1\n 44045: a3 = a2 <u a3\n 44048: a3 = a1 if a1 == 0\n 44051: a1 = u64 [s1 + 0x1a8]\n 44055: a3 = a3 + a1\n 44058: a1 = a3 <u a1\n 44061: a4 = u64 [s1 + 0x1a0]\n 44065: a1 = a1 + a4\n 44068: a4 = s1 + 0x3958\n 44072: a5 = a4 + 0x600\n 44076: jump [t0]\n      : @1433 (gas: 13)\n 44078: a1 = a0 <u a1\n 44081: a3 = u64 [s1 + 0x180]\n 44085: a2 = a3 + a1\n 44088: a3 = a2 <u a3\n 44091: a3 = a1 if a1 == 0\n 44094: a1 = u64 [s1 + 0x190]\n 44098: a3 = a3 + a1\n 44101: a1 = a3 <u a1\n 44104: a4 = u64 [s1 + 0x188]\n 44108: a1 = a1 + a4\n 44111: a4 = s1 + 0x3958\n 44115: a5 = a4 + 0x300\n 44119: jump [t0]\n      : @1434 (gas: 15)\n 44121: a0 = u64 [a3 + 0x18]\n 44124: a1 = u64 [a3 + 0x10]\n 44127: a2 = u64 [a3 + 0x8]\n 44130: a3 = u64 [a3]\n 44132: a0 = reverse a0\n 44134: u64 [s1 + 0x188] = a0\n 44138: a0 = reverse a1\n 44140: u64 [s1 + 0x180] = a0\n 44144: a0 = reverse a2\n 44146: u64 [s1 + 0x178] = a0\n 44150: a0 = reverse a3\n 44152: u64 [s1 + 0x170] = a0\n 44156: a0 = sp + 0xffffffffffffffe0\n 44159: a0 = a0 & 0xffffffffffffffe0\n 44162: jump [t0]\n      : @1435 (gas: 18)\n 44164: a1 = a0 <u a1\n 44167: a3 = u64 [a5 + 0x90]\n 44171: a2 = a3 + a1\n 44174: a3 = a2 <u a3\n 44177: a3 = a1 if a1 == 0\n 44180: a1 = u64 [a5 + 0x80]\n 44184: a3 = a3 + a1\n 44187: a1 = a3 <u a1\n 44190: a4 = u64 [a5 + 0x88]\n 44194: a1 = a1 + a4\n 44197: a4 = a0 | a3\n 44200: a1 = a1 | a2\n 44203: a4 = a4 | a1\n 44206: a4 = a4 >> 0x20\n 44209: a1 = a1 | a3\n 44212: a1 = a1 << 0x20\n 44215: a1 = a1 | a4\n 44218: jump [t0]\n      : @1436 (gas: 6)\n 44220: a0 = a1 <u a0\n 44223: a2 = u64 [a3 + 0x90]\n 44227: a0 = 0 if a2 != 0\n 44229: a2 = u64 [a3 + 0x88]\n 44233: a0 = 0 if a2 != 0\n 44235: jump [t0]\n      : @1437 (gas: 9)\n 44237: a0 = u64 [a3 + 0x18]\n 44240: a1 = u64 [a3 + 0x10]\n 44243: a2 = u64 [a3 + 0x8]\n 44246: a3 = u64 [a3]\n 44248: a5 = reverse a0\n 44250: a4 = reverse a1\n 44252: a0 = reverse a2\n 44254: a1 = reverse a3\n 44256: jump [t0]\n      : @1438 (gas: 8)\n 44258: a4 = a4 | a2\n 44261: a2 = a0 | a1\n 44264: a2 = a2 | a4\n 44267: a2 = a2 >> 0x20\n 44270: a1 = a1 | a4\n 44273: a1 = a1 << 0x20\n 44276: a1 = a1 | a2\n 44279: jump [t0]\n      : @1439 (gas: 12)\n 44281: a1 = a0 <u a1\n 44284: a3 = u64 [s1 + 0x30]\n 44287: a2 = a3 + a1\n 44290: a3 = a2 <u a3\n 44293: a3 = a1 if a1 == 0\n 44296: a1 = u64 [s1 + 0x38]\n 44299: a3 = a3 + a1\n 44302: a1 = a3 <u a1\n 44305: a4 = u64 [s1 + 0x40]\n 44308: a1 = a1 + a4\n 44311: a4 = s1 + 0x3958\n 44315: jump [t0]\n      : @1440 (gas: 14)\n 44317: a4 = a1 <u t1\n 44320: a5 = a0 + a4\n 44323: a0 = a5 <u a0\n 44326: a0 = a4 if a4 == 0\n 44329: a0 = a0 + a2\n 44332: a2 = a0 <u a2\n 44335: a2 = a2 + a3\n 44338: u64 [sp + 0x40] = a1\n 44341: u64 [sp + 0x48] = a5\n 44344: u64 [sp + 0x50] = a0\n 44347: a0 = 0x40\n 44350: a1 = sp + a0\n 44353: u64 [sp + 0x58] = a2\n 44356: jump [t0]\n      : @1441 (gas: 8)\n 44358: a0 = sp + 0xffffffffffffffe0\n 44361: a0 = a0 & 0xffffffffffffffe0\n 44364: u64 [s1 + 0x1b8] = a0\n 44368: sp = a0\n 44370: i32 a2 = a0 + 0\n 44372: a1 = 0x40\n 44375: a0 = u64 [s1 + 0xf8]\n 44379: jump [t0]\n      : @1442 (gas: 8)\n 44381: a0 = s1 + 0xffffffffffffffdc\n 44384: a1 = u64 [sp + 0x18]\n 44387: a0 = a1 <u a0\n 44390: a1 = u64 [sp + 0x10]\n 44393: a0 = 0 if a1 != 0\n 44395: a1 = u64 [sp + 0x8]\n 44398: a0 = 0 if a1 != 0\n 44400: jump [t0]\n      : @1443 (gas: 13)\n 44402: sp = sp + 0xffffffffffffff90\n 44405: u64 [sp + 0x68] = ra\n 44408: u64 [sp + 0x60] = s0\n 44411: s0 = sp + 0x70\n 44414: sp = sp & 0xfffffffffffffff0\n 44417: a3 = u64 [a0 + 0x18]\n 44420: a2 = u64 [a0 + 0x10]\n 44423: t1 = u64 [a0]\n 44425: a0 = u64 [a0 + 0x8]\n 44428: a4 = a3 >u 0\n 44430: a5 = a2 >u 0\n 44432: a5 = a4 if a3 != 0\n 44435: jump [t0]\n      : @1444 (gas: 7)\n 44437: a0 = sp + 0xffffffffffffffe0\n 44440: a0 = a0 & 0xffffffffffffffe0\n 44443: u64 [s1 + 0x1b8] = a0\n 44447: sp = a0\n 44449: i32 a2 = a0 + 0\n 44451: a1 = 0x40\n 44454: jump [t0]\n      : @1445 (gas: 7)\n 44456: a0 = sp + 0xffffffffffffffe0\n 44459: a0 = a0 & 0xffffffffffffffe0\n 44462: u64 [s1 + 0x1b8] = a0\n 44466: sp = a0\n 44468: i32 a2 = a0 + 0\n 44470: a1 = 0x20\n 44473: jump [t0]\n      : @1446 (gas: 6)\n 44475: a0 = s1 <u a0\n 44478: a1 = u64 [sp + 0x10]\n 44481: a0 = 0 if a1 != 0\n 44483: a1 = u64 [sp + 0x8]\n 44486: a0 = 0 if a1 != 0\n 44488: jump [t0]\n      : @1447 (gas: 5)\n 44490: a0 = reverse a0\n 44492: a1 = reverse a1\n 44494: a2 = reverse a2\n 44496: a3 = reverse a3\n 44498: jump [t0]\n      : @1448 (gas: 11)\n 44500: u64 [sp + 0x10] = a0\n 44503: u64 [sp + 0x8] = a2\n 44506: a0 = a0 | a2\n 44509: u64 [sp + 0x18] = a1\n 44512: a1 = a1 | s1\n 44515: a1 = a1 | a0\n 44518: a1 = a1 >> 0x20\n 44521: a0 = a0 | s1\n 44524: a0 = a0 << 0x20\n 44527: a0 = a0 | a1\n 44530: jump [t0]\n      : @1449 (gas: 8)\n 44532: a0 = a0 | a2\n 44535: a2 = a4 | a1\n 44538: a2 = a2 | a0\n 44541: a2 = a2 >> 0x20\n 44544: a0 = a0 | a1\n 44547: a0 = a0 << 0x20\n 44550: a0 = a0 | a2\n 44553: jump [t0]\n      : @1450 (gas: 8)\n 44555: u64 [s1 + 176] = 0\n 44559: u64 [s1 + 168] = 0\n 44563: u64 [s1 + 160] = 0\n 44567: a0 = 0x4e487b7100000000\n 44577: a1 = s1 + 0xa0\n 44581: u64 [s1 + 0xb8] = a0\n 44585: a0 = 0\n 44587: jump [t0]\n      : @1451 (gas: 9)\n 44589: a1 = a0 <u a1\n 44592: a3 = u64 [s1 + 0x178]\n 44596: a2 = a3 + a1\n 44599: a3 = a2 <u a3\n 44602: a3 = a1 if a1 == 0\n 44605: a1 = u64 [s1 + 0x190]\n 44609: a3 = a3 + a1\n 44612: a1 = a3 <u a1\n 44615: jump [t0]\n      : @1452 (gas: 11)\n 44617: a4 = a0 <u a2\n 44620: a3 = u64 [s1 + 0x30]\n 44623: a2 = a3 + a4\n 44626: a3 = a2 <u a3\n 44629: a3 = a4 if a4 == 0\n 44632: a4 = u64 [s1 + 0x38]\n 44635: a3 = a3 + a4\n 44638: a4 = a3 <u a4\n 44641: a5 = u64 [s1 + 0x40]\n 44644: a4 = a4 + a5\n 44647: jump [t0]\n      : @1453 (gas: 9)\n 44649: a3 = s1 + 0x100\n 44653: a2 = u64 [a3 + 0xb8]\n 44657: a0 = 0xffffffbc\n 44667: a0 = a2 <u a0\n 44670: a1 = u64 [a3 + 0xb0]\n 44674: a0 = 0 if a1 != 0\n 44676: a1 = u64 [a3 + 0xa8]\n 44680: a0 = 0 if a1 != 0\n 44682: jump [t0]\n      : @1454 (gas: 10)\n 44684: a0 = u64 [a3 + 0x18]\n 44687: a1 = u64 [a3 + 0x10]\n 44690: a2 = u64 [a3 + 0x8]\n 44693: a3 = u64 [a3]\n 44695: a0 = reverse a0\n 44697: a4 = reverse a1\n 44699: a2 = reverse a2\n 44701: a3 = reverse a3\n 44703: a1 = u64 [s1 + 0x180]\n 44707: jump [t0]\n      : @1455 (gas: 9)\n 44709: sp = sp & 0xfffffffffffffff0\n 44712: a1 = u64 [a0 + 0x10]\n 44715: a2 = u64 [a0 + 0x18]\n 44718: a3 = u64 [a0 + 0x8]\n 44721: a0 = u64 [a0]\n 44723: a2 = a2 | a3\n 44726: a0 = a0 | a1\n 44729: a0 = a0 | a2\n 44732: jump [t0]\n      : @1456 (gas: 5)\n 44734: a1 = a3 if t1 != 0\n 44737: a0 = a0 ^ a2\n 44740: a0 = a0 | a4\n 44743: a1 = a5 if a0 != 0\n 44746: jump [t0]\n      : @1457 (gas: 11)\n 44748: a3 = s1 + 0x100\n 44752: a0 = u64 [a3 + 0xa8]\n 44756: a1 = u64 [a3 + 0xa0]\n 44760: a0 = a0 | a1\n 44763: a1 = u64 [a3 + 0x8]\n 44766: a2 = u64 [a3 + 0xb8]\n 44770: a1 = a2 <u a1\n 44773: a2 = u64 [a3 + 0xb0]\n 44777: a1 = 0 if a2 != 0\n 44779: a1 = 0 if a0 != 0\n 44781: jump [t0]\n      : @1458 (gas: 5)\n 44783: sp = a0\n 44785: i32 a2 = a0 + 0\n 44787: a1 = 0x40\n 44790: a0 = u64 [s1 + 0x100]\n 44794: jump [t0]\n      : @1459 (gas: 5)\n 44796: a0 = sp + 0xffffffffffffffe0\n 44799: a2 = a0 & 0xffffffffffffffe0\n 44802: u64 [s1 + 0x1b8] = a2\n 44806: sp = a2\n 44808: jump [t0]\n      : @1460 (gas: 13)\n 44810: a4 = s1 + 0x100\n 44814: a1 = u64 [a4 + 0xb0]\n 44818: a2 = u64 [a4 + 0xa0]\n 44822: a1 = a1 | a2\n 44825: a3 = u64 [a4 + 0xa8]\n 44829: a2 = u64 [a4 + 0xb8]\n 44833: a2 = a2 | a3\n 44836: a2 = a2 | a1\n 44839: a2 = a2 >> 0x20\n 44842: a1 = a1 | a3\n 44845: a1 = a1 << 0x20\n 44848: a1 = a1 | a2\n 44851: jump [t0]\n      : @1461 (gas: 7)\n 44853: a1 = a0 | a3\n 44856: a1 = a1 | a2\n 44859: a1 = a1 >> 0x20\n 44862: a2 = a2 | a3\n 44865: a2 = a2 << 0x20\n 44868: a1 = a1 | a2\n 44871: jump [t0]\n      : @1462 (gas: 7)\n 44873: a0 = u64 [s1 + 0x1a8]\n 44877: a0 = a0 + 0x1\n 44880: a1 = a0 <u 0x1\n 44883: a2 = u64 [s1 + 0x1b0]\n 44887: a1 = a1 + a2\n 44890: a2 = s1 + 0x3158\n 44894: jump [t0]\n      : @1463 (gas: 4)\n 44896: a2 = a3 + a1\n 44899: a3 = a2 <u a3\n 44902: a3 = a1 if a1 == 0\n 44905: jump [t0]\n      : @1464 (gas: 6)\n 44907: a4 = 0xffffff00ffffffff\n 44917: a2 = a2 & a4\n 44920: a4 = 0x300000000\n 44930: a2 = a2 | a4\n 44933: a4 = s1 + 0x3958\n 44937: jump [t0]\n      : @1465 (gas: 6)\n 44939: a1 = u64 [s1 + 0x1a0]\n 44943: a3 = a3 + a1\n 44946: a1 = a3 <u a1\n 44949: a4 = u64 [s1 + 0x1b8]\n 44953: a1 = a1 + a4\n 44956: jump [t0]\n      : @1466 (gas: 8)\n 44958: a0 = sp + 0xffffffffffffffe0\n 44961: a0 = a0 & 0xffffffffffffffe0\n 44964: u64 [s1 + 0x188] = a0\n 44968: sp = a0\n 44970: i32 a2 = a0 + 0\n 44972: a1 = 0x40\n 44975: a0 = u64 [s1 + 0x190]\n 44979: jump [t0]\n      : @1467 (gas: 10)\n 44981: a3 = s1 + a0\n 44984: a4 = a3 + 0x300\n 44988: a0 = u64 [a4 + 0xf8]\n 44992: a1 = u64 [a3 + 0x400]\n 44996: a2 = u64 [a4 + 0xf0]\n 45000: a3 = u64 [a4 + 0xe8]\n 45004: a1 = a1 | a2\n 45007: a0 = a0 | a3\n 45010: a0 = a0 | a1\n 45013: jump [t0]\n      : @1468 (gas: 8)\n 45015: u64 [sp + 64] = 0\n 45018: u64 [sp + 56] = 0\n 45021: u64 [sp + 48] = 0\n 45024: a0 = 0x4e487b7100000000\n 45034: a1 = sp + 0x30\n 45037: u64 [sp + 0x48] = a0\n 45040: a0 = 0\n 45042: jump [t0]\n      : @1469 (gas: 10)\n 45044: a3 = s1 + a0\n 45047: a4 = a3 + 0x700\n 45051: a0 = u64 [a4 + 0xd8]\n 45055: a1 = u64 [a4 + 0xe0]\n 45059: a2 = u64 [a4 + 0xd0]\n 45063: a3 = u64 [a4 + 0xc8]\n 45067: a1 = a1 | a2\n 45070: a0 = a0 | a3\n 45073: a0 = a0 | a1\n 45076: jump [t0]\n      : @1470 (gas: 8)\n 45078: u64 [sp + 144] = 0\n 45082: u64 [sp + 136] = 0\n 45086: u64 [sp + 128] = 0\n 45090: a0 = 0x8c379a000000000\n 45100: a1 = sp + 0x80\n 45104: u64 [sp + 0x98] = a0\n 45108: a0 = u64 [sp + 0x18]\n 45111: jump [t0]\n      : @1471 (gas: 4)\n 45113: a0 = u64 [s1 + 0x1b8]\n 45117: a0 = i32 [a0]\n 45119: a1 = 0x23\n 45122: jump [t0]\n      : @1472 (gas: 7)\n 45124: a1 = a1 | a2\n 45127: a1 = a1 | a0\n 45130: a1 = a1 >> 0x20\n 45133: a0 = a0 | a2\n 45136: a0 = a0 << 0x20\n 45139: a0 = a0 | a1\n 45142: jump [t0]\n      : @1473 (gas: 6)\n 45144: a2 = s1 + a1\n 45147: u64 [a2 + 1056] = 0\n 45151: u64 [a2 + 1048] = 0\n 45155: a1 = 0x20\n 45158: u64 [a2 + 0x408] = a1\n 45162: jump [t0]\n      : @1474 (gas: 2)\n 45164: a3 = a2 & 0x40\n 45167: jump @1478 if a3 != 0\n      : @1475 (gas: 1)\n 45170: jump @1477 if a2 == 0\n      : @1476 (gas: 6)\n 45173: i32 a3 = 0x40 - a2\n 45176: a3 = a1 << a3\n 45179: a1 = a1 >> a2\n 45182: a0 = a0 >> a2\n 45185: a0 = a0 | a3\n 45188: ret\n      : @1477 (gas: 1)\n 45190: ret\n      : @1478 (gas: 4)\n 45192: a0 = a2 + 0xffffffffffffffc0\n 45195: a0 = a1 >> a0\n 45198: a1 = 0\n 45200: ret\n      : @1479 (gas: 2)\n 45202: a3 = a2 & 0x40\n 45205: jump @1483 if a3 != 0\n      : @1480 (gas: 1)\n 45208: jump @1482 if a2 == 0\n      : @1481 (gas: 6)\n 45211: i32 a3 = 0x40 - a2\n 45214: a3 = a0 >> a3\n 45217: a0 = a0 << a2\n 45220: a1 = a1 << a2\n 45223: a1 = a1 | a3\n 45226: ret\n      : @1482 (gas: 1)\n 45228: ret\n      : @1483 (gas: 4)\n 45230: a1 = a2 + 0xffffffffffffffc0\n 45233: a1 = a0 << a1\n 45236: a0 = 0\n 45238: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"ENDING_PERIOD()":"f13d1259","STARTING_PERIOD()":"3d757a4b","TREASURY_SHARE()":"32696174","WINNER_SHARE()":"dbe3010c","currentGameId()":"536a3ddc","emergencyEndGame(uint256)":"b256b11b","endGame(uint256)":"d0399bb8","gamePlayerList(uint256,uint256)":"ed456ee4","gamePlayers(uint256,address)":"62e2961b","games(uint256)":"117a5b90","getGamePlayerCount(uint256)":"ff8fb35c","getGamePlayers(uint256)":"15a40f49","getGameState(uint256)":"ffde0c74","getPlayerBid(uint256,address)":"a59d9ab7","owner()":"8da5cb5b","placeBid(uint256)":"9979ef45","startNewGame()":"482d51e0","withdrawTreasury()":"166bab95"}},"irOptimized":"/// @use-src 0:\"contracts/BigWickGame.sol\"\nobject \"BigWickGame_856\" {\n    code {\n        {\n            /// @src 0:58:8526  \"contract BigWickGame {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:2007:2025  \"owner = msg.sender\" */ 0x00, /** @src 0:58:8526  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:2007:2025  \"owner = msg.sender\" */ 0x00), /** @src 0:58:8526  \"contract BigWickGame {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:2015:2025  \"msg.sender\" */ caller()))\n            /// @src 0:58:8526  \"contract BigWickGame {...\"\n            sstore(/** @src 0:2035:2052  \"currentGameId = 0\" */ 0x01, /** @src 0:2007:2025  \"owner = msg.sender\" */ 0x00)\n            /// @src 0:58:8526  \"contract BigWickGame {...\"\n            let _2 := datasize(\"BigWickGame_856_deployed\")\n            codecopy(_1, dataoffset(\"BigWickGame_856_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/BigWickGame.sol\"\n    object \"BigWickGame_856_deployed\" {\n        code {\n            {\n                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x117a5b90 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ 2)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _2 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ dataSlot)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _3 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1))\n                        let _4 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 2))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _5 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 3))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _6 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 4))\n                        let _7 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 5))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _8 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 6))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _9 := sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 7))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value := and(sload(/** @src 0:903:940  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 8)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                        mstore(_1, _2)\n                        mstore(add(_1, 32), _3)\n                        mstore(add(_1, 64), _4)\n                        mstore(add(_1, 96), _5)\n                        mstore(add(_1, 128), _6)\n                        mstore(add(_1, 160), _7)\n                        mstore(add(_1, 192), and(_8, sub(shl(160, 1), 1)))\n                        abi_encode_enum_GameState(and(shr(160, _8), 0xff), add(_1, 224))\n                        mstore(add(_1, 256), _9)\n                        mstore(add(_1, 288), iszero(iszero(value)))\n                        return(_1, 320)\n                    }\n                    case 0x15a40f49 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let dataSlot_1 := keccak256(0, 64)\n                        let pos := mload(64)\n                        let memPtr := pos\n                        let length := sload(dataSlot_1)\n                        mstore(pos, length)\n                        pos := add(pos, 32)\n                        let updated_pos := pos\n                        mstore(0, dataSlot_1)\n                        let srcPtr := keccak256(0, 32)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr, sub(pos, memPtr))\n                        let memPos := mload(64)\n                        let tail := add(memPos, 32)\n                        mstore(memPos, 32)\n                        let pos_1 := tail\n                        let length_1 := mload(memPtr)\n                        mstore(tail, length_1)\n                        pos_1 := add(memPos, 64)\n                        let srcPtr_1 := updated_pos\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), sub(shl(160, 1), 1)))\n                            pos_1 := add(pos_1, 32)\n                            srcPtr_1 := add(srcPtr_1, 32)\n                        }\n                        return(memPos, sub(pos_1, memPos))\n                    }\n                    case 0x166bab95 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1547:1612  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1555:1574  \"msg.sender == owner\" */ eq(/** @src 0:1555:1565  \"msg.sender\" */ caller(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        /// @src 0:7269:7294  \"uint256 totalTreasury = 0\"\n                        let var_totalTreasury := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:7375:7388  \"uint256 i = 1\"\n                        let var_i := /** @src 0:7387:7388  \"1\" */ 0x01\n                        /// @src 0:7370:7577  \"for (uint256 i = 1; i <= currentGameId; i++) {...\"\n                        for { }\n                        /** @src 0:7387:7388  \"1\" */ 0x01\n                        /// @src 0:7375:7388  \"uint256 i = 1\"\n                        {\n                            /// @src 0:7410:7413  \"i++\"\n                            var_i := increment_uint256(var_i)\n                        }\n                        {\n                            /// @src 0:7390:7408  \"i <= currentGameId\"\n                            if gt(var_i, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:7387:7388  \"1\" */ 0x01))\n                            /// @src 0:7390:7408  \"i <= currentGameId\"\n                            { break }\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(0, var_i)\n                            mstore(0x20, /** @src 0:7433:7438  \"games\" */ 0x02)\n                            /// @src 0:7429:7567  \"if (games[i].finalized) {...\"\n                            if /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(sload(/** @src 0:7433:7451  \"games[i].finalized\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:7433:7451  \"games[i].finalized\" */ 8)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                            /// @src 0:7429:7567  \"if (games[i].finalized) {...\"\n                            {\n                                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                                mstore(0, var_i)\n                                mstore(0x20, /** @src 0:7433:7438  \"games\" */ 0x02)\n                                /// @src 0:7471:7509  \"totalTreasury += games[i].treasuryFund\"\n                                var_totalTreasury := checked_add_uint256(var_totalTreasury, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:7488:7509  \"games[i].treasuryFund\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:7488:7509  \"games[i].treasuryFund\" */ 5)))\n                                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                                mstore(0, var_i)\n                                mstore(0x20, /** @src 0:7433:7438  \"games\" */ 0x02)\n                                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                                sstore(/** @src 0:7527:7548  \"games[i].treasuryFund\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:7488:7509  \"games[i].treasuryFund\" */ 5), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0)\n                            }\n                        }\n                        if /** @src 0:7603:7620  \"totalTreasury > 0\" */ iszero(var_totalTreasury)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 0x20)\n                            mstore(add(memPtr_1, 36), 29)\n                            mstore(add(memPtr_1, 68), \"No treasury funds to withdraw\")\n                            revert(memPtr_1, 100)\n                        }\n                        /// @src 0:7664:7702  \"payable(owner).transfer(totalTreasury)\"\n                        if iszero(call(/** @src 0:58:8526  \"contract BigWickGame {...\" */ 0, and(sload(0), sub(shl(160, 1), 1)), /** @src 0:7664:7702  \"payable(owner).transfer(totalTreasury)\" */ var_totalTreasury, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0, 0, 0, 0))\n                        /// @src 0:7664:7702  \"payable(owner).transfer(totalTreasury)\"\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let pos_2 := mload(64)\n                            returndatacopy(pos_2, 0, returndatasize())\n                            revert(pos_2, returndatasize())\n                        }\n                        return(0, 0)\n                    }\n                    case 0x32696174 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, /** @src 0:800:802  \"10\" */ 0x0a)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x3d757a4b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, /** @src 0:641:647  \"2 days\" */ 0x02a300)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        return(memPos_2, 32)\n                    }\n                    case 0x482d51e0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:1547:1612  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1555:1574  \"msg.sender == owner\" */ eq(/** @src 0:1555:1565  \"msg.sender\" */ caller(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        let _10 := sload(/** @src 0:2148:2161  \"currentGameId\" */ 0x01)\n                        /// @src 0:2148:2215  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                        let expr := /** @src 0:2148:2166  \"currentGameId == 0\" */ iszero(_10)\n                        /// @src 0:2148:2215  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                        if iszero(expr)\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(0, _10)\n                            mstore(0x20, /** @src 0:2170:2175  \"games\" */ 0x02)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let value_1 := and(shr(160, sload(/** @src 0:2170:2196  \"games[currentGameId].state\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:2170:2196  \"games[currentGameId].state\" */ 6))), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_1, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:2148:2215  \"currentGameId == 0 || games[currentGameId].state == GameState.Ended\"\n                            expr := /** @src 0:2170:2215  \"games[currentGameId].state == GameState.Ended\" */ eq(value_1, /** @src 0:2200:2215  \"GameState.Ended\" */ 3)\n                        }\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        if iszero(expr)\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 26)\n                            mstore(add(memPtr_2, 68), \"Current game must be ended\")\n                            revert(memPtr_2, 100)\n                        }\n                        /// @src 0:2265:2280  \"currentGameId++\"\n                        let _11 := increment_uint256(/** @src 0:58:8526  \"contract BigWickGame {...\" */ _10)\n                        sstore(/** @src 0:2148:2161  \"currentGameId\" */ 0x01, /** @src 0:58:8526  \"contract BigWickGame {...\" */ _11)\n                        let sum := add(/** @src 0:2310:2325  \"block.timestamp\" */ timestamp(), /** @src 0:641:647  \"2 days\" */ 0x02a300)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        if gt(/** @src 0:2310:2325  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let sum_1 := add(/** @src 0:2310:2325  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 604800)\n                        if gt(sum, sum_1)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let memPtr_3 := mload(64)\n                        finalize_allocation_19678(memPtr_3)\n                        mstore(memPtr_3, _11)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _12 := add(memPtr_3, 32)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_12, /** @src 0:2310:2325  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _13 := add(memPtr_3, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 64)\n                        mstore(_13, sum)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _14 := add(memPtr_3, 96)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_14, sum_1)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _15 := add(memPtr_3, 128)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_15, 0)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _16 := add(memPtr_3, 160)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_16, 0)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _17 := add(memPtr_3, 192)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_17, 0)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _18 := add(memPtr_3, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 224)\n                        mstore(_18, /** @src 0:2148:2161  \"currentGameId\" */ 0x01)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _19 := add(memPtr_3, 256)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_19, 0)\n                        /// @src 0:2493:2845  \"Game({...\"\n                        let _20 := add(memPtr_3, 288)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(_20, 0)\n                        mstore(0, _11)\n                        mstore(/** @src 0:2493:2845  \"Game({...\" */ 32, /** @src 0:2470:2475  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        sstore(dataSlot_2, mload(memPtr_3))\n                        sstore(add(dataSlot_2, /** @src 0:2148:2161  \"currentGameId\" */ 0x01), /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(_12))\n                        sstore(add(dataSlot_2, /** @src 0:2470:2475  \"games\" */ 0x02), /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(_13))\n                        sstore(add(dataSlot_2, 3), mload(_14))\n                        sstore(add(dataSlot_2, 4), mload(_15))\n                        sstore(add(dataSlot_2, 5), mload(_16))\n                        let memberSlot := add(dataSlot_2, 6)\n                        sstore(memberSlot, or(and(sload(memberSlot), shl(160, 0xffffffffffffffffffffffff)), and(and(mload(_17), sub(shl(160, 1), 1)), sub(shl(160, 1), 1))))\n                        let _21 := mload(_18)\n                        let _22 := iszero(lt(_21, 4))\n                        if _22\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        _22 := 0\n                        let _23 := sload(memberSlot)\n                        sstore(memberSlot, or(and(_23, not(shl(160, 255))), and(shl(/** @src 0:2493:2845  \"Game({...\" */ 160, /** @src 0:58:8526  \"contract BigWickGame {...\" */ _21), shl(160, 255))))\n                        sstore(add(dataSlot_2, 7), mload(_19))\n                        let memberSlot_1 := add(dataSlot_2, 8)\n                        let cleaned := iszero(iszero(mload(_20)))\n                        let value_2 := and(sload(memberSlot_1), not(255))\n                        sstore(memberSlot_1, or(value_2, and(cleaned, 255)))\n                        let _24 := sload(/** @src 0:2148:2161  \"currentGameId\" */ 0x01)\n                        /// @src 0:2869:2934  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\"\n                        let _25 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                        /// @src 0:2869:2934  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\"\n                        log2(_25, sub(abi_encode_uint256_uint256_uint256(_25, /** @src 0:2310:2325  \"block.timestamp\" */ timestamp(), /** @src 0:2869:2934  \"GameStarted(currentGameId, startTime, endingPeriodStart, endTime)\" */ sum, sum_1), _25), 0xa20ded433b888a649d4d8f7862a100fe47f47441b8b01e11ec294b10bc5ea5ee, _24)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _24)\n                        return(memPos_3, /** @src 0:2493:2845  \"Game({...\" */ 32)\n                    }\n                    case /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x536a3ddc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _26 := sload(/** @src 0:869:897  \"uint256 public currentGameId\" */ 1)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _26)\n                        return(memPos_4, 32)\n                    }\n                    case 0x62e2961b {\n                        if callvalue() { revert(0, 0) }\n                        let param, param_1 := abi_decode_uint256t_address(calldatasize())\n                        mstore(0, param)\n                        mstore(0x20, /** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ 3)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_3 := keccak256(0, 64)\n                        /// @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ param_1, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ dataSlot_3)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x40)\n                        let _27 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ dataSlot_4)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _28 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, 1))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _29 := sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, 2))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value_3 := and(sload(/** @src 0:946:1011  \"mapping(uint256 => mapping(address => Player)) public gamePlayers\" */ add(dataSlot_4, 3)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _27)\n                        mstore(add(memPos_5, 0x20), _28)\n                        mstore(add(memPos_5, 64), _29)\n                        mstore(add(memPos_5, 96), iszero(iszero(value_3)))\n                        return(memPos_5, 128)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_4 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_4)\n                        return(memPos_6, 32)\n                    }\n                    case 0x9979ef45 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:1686:1748  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ value_5))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value_6 := and(shr(160, sload(/** @src 0:1834:1853  \"games[gameId].state\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:1834:1853  \"games[gameId].state\" */ 6))), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_6, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:1834:1930  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                        let expr_1 := /** @src 0:1834:1881  \"games[gameId].state == GameState.StartingPeriod\" */ eq(value_6, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1)\n                        /// @src 0:1834:1930  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                        if iszero(expr_1)\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(0, value_5)\n                            mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let value_7 := and(shr(160, sload(/** @src 0:1885:1904  \"games[gameId].state\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:1834:1853  \"games[gameId].state\" */ 6))), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_7, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:1834:1930  \"games[gameId].state == GameState.StartingPeriod || games[gameId].state == GameState.EndingPeriod\"\n                            expr_1 := /** @src 0:1885:1930  \"games[gameId].state == GameState.EndingPeriod\" */ eq(value_7, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        }\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        if iszero(expr_1)\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 20)\n                            mstore(add(memPtr_4, 68), \"Game not in progress\")\n                            revert(memPtr_4, 100)\n                        }\n                        if /** @src 0:3092:3105  \"msg.value > 0\" */ iszero(/** @src 0:3092:3101  \"msg.value\" */ callvalue())\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 33)\n                            mstore(add(memPtr_5, 68), \"Bid amount must be greater than \")\n                            mstore(add(memPtr_5, 100), \"0\")\n                            revert(memPtr_5, 132)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        if iszero(/** @src 0:3161:3200  \"block.timestamp < games[gameId].endTime\" */ lt(/** @src 0:3161:3176  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:3179:3200  \"games[gameId].endTime\" */ add(/** @src 0:58:8526  \"contract BigWickGame {...\" */ keccak256(0, 64), /** @src 0:3179:3200  \"games[gameId].endTime\" */ 3))))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 14)\n                            mstore(add(memPtr_6, 68), \"Game has ended\")\n                            revert(memPtr_6, 100)\n                        }\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_5 := keccak256(0, 64)\n                        mstore(0, value_5)\n                        mstore(32, /** @src 0:3179:3200  \"games[gameId].endTime\" */ 3)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_6 := keccak256(0, 64)\n                        /// @src 0:3305:3336  \"gamePlayers[gameId][msg.sender]\"\n                        let dataSlot_7 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(/** @src 0:3325:3335  \"msg.sender\" */ caller(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:3305:3336  \"gamePlayers[gameId][msg.sender]\" */ dataSlot_6)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        dataSlot_7 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x40)\n                        /// @src 0:3402:3485  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                        let expr_2 := /** @src 0:3402:3443  \"block.timestamp >= game.endingPeriodStart\" */ iszero(lt(/** @src 0:3161:3176  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:3421:3443  \"game.endingPeriodStart\" */ add(dataSlot_5, /** @src 0:1694:1699  \"games\" */ 0x02))))\n                        /// @src 0:3402:3485  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                        if expr_2\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let value_8 := and(shr(160, sload(/** @src 0:3447:3457  \"game.state\" */ add(dataSlot_5, /** @src 0:1834:1853  \"games[gameId].state\" */ 6))), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                            if iszero(lt(value_8, 4))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x21)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:3402:3485  \"block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod\"\n                            expr_2 := /** @src 0:3447:3485  \"game.state == GameState.StartingPeriod\" */ eq(value_8, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:3398:3547  \"if (block.timestamp >= game.endingPeriodStart && game.state == GameState.StartingPeriod) {...\"\n                        if expr_2\n                        {\n                            /// @src 0:3501:3511  \"game.state\"\n                            let _30 := add(dataSlot_5, /** @src 0:1834:1853  \"games[gameId].state\" */ 6)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let cleaned_1 := 0\n                            cleaned_1 := 0\n                            sstore(_30, or(and(sload(_30), not(shl(160, 255))), shl(161, 1)))\n                        }\n                        /// @src 0:3610:3623  \"player.exists\"\n                        let _31 := add(dataSlot_7, /** @src 0:3179:3200  \"games[gameId].endTime\" */ 3)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _32 := sload(/** @src 0:3610:3623  \"player.exists\" */ _31)\n                        /// @src 0:3605:3723  \"if (!player.exists) {...\"\n                        if /** @src 0:3609:3623  \"!player.exists\" */ iszero(/** @src 0:58:8526  \"contract BigWickGame {...\" */ and(_32, 0xff))\n                        /// @src 0:3605:3723  \"if (!player.exists) {...\"\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            sstore(_31, or(and(_32, not(255)), 1))\n                            mstore(0, value_5)\n                            mstore(32, 4)\n                            let dataSlot_8 := keccak256(0, 64)\n                            let oldLen := sload(dataSlot_8)\n                            if iszero(lt(oldLen, 18446744073709551616))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x41)\n                                revert(0, 0x24)\n                            }\n                            sstore(dataSlot_8, add(oldLen, 1))\n                            let slot, offset := storage_array_index_access_address_dyn(dataSlot_8, oldLen)\n                            let _33 := sload(slot)\n                            let shiftBits := shl(/** @src 0:3179:3200  \"games[gameId].endTime\" */ 3, /** @src 0:58:8526  \"contract BigWickGame {...\" */ offset)\n                            sstore(slot, or(and(_33, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, /** @src 0:3325:3335  \"msg.sender\" */ caller())))\n                        }\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(dataSlot_7, /** @src 0:3770:3798  \"player.totalBid += msg.value\" */ checked_add_uint256(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:3770:3798  \"player.totalBid += msg.value\" */ dataSlot_7), /** @src 0:3092:3101  \"msg.value\" */ callvalue()))\n                        /// @src 0:3808:3823  \"player.bidCount\"\n                        let _34 := add(dataSlot_7, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1)\n                        sstore(_34, /** @src 0:3808:3825  \"player.bidCount++\" */ increment_uint256(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:3808:3825  \"player.bidCount++\" */ _34)))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:3835:3853  \"player.lastBidTime\" */ add(dataSlot_7, /** @src 0:1694:1699  \"games\" */ 0x02), /** @src 0:3161:3176  \"block.timestamp\" */ timestamp())\n                        /// @src 0:3917:3930  \"game.totalPot\"\n                        let _35 := add(dataSlot_5, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 4)\n                        sstore(_35, /** @src 0:3917:3943  \"game.totalPot += msg.value\" */ checked_add_uint256(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:3917:3943  \"game.totalPot += msg.value\" */ _35), /** @src 0:3092:3101  \"msg.value\" */ callvalue()))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _36 := sload(/** @src 0:4008:4023  \"player.totalBid\" */ dataSlot_7)\n                        /// @src 0:3967:4024  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\"\n                        let _37 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_37, /** @src 0:3092:3101  \"msg.value\" */ callvalue())\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(add(_37, 32), _36)\n                        /// @src 0:3967:4024  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\"\n                        log3(_37, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 64, /** @src 0:3967:4024  \"BidPlaced(gameId, msg.sender, msg.value, player.totalBid)\" */ 0x51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f, value_5, /** @src 0:3325:3335  \"msg.sender\" */ caller())\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        return(0, 0)\n                    }\n                    case 0xa59d9ab7 {\n                        if callvalue() { revert(0, 0) }\n                        let param_2, param_3 := abi_decode_uint256t_address(calldatasize())\n                        mstore(0, param_2)\n                        mstore(0x20, /** @src 0:6809:6820  \"gamePlayers\" */ 0x03)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        /// @src 0:6809:6836  \"gamePlayers[gameId][player]\"\n                        let dataSlot_10 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(/** @src 0:6809:6836  \"gamePlayers[gameId][player]\" */ param_3, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 0:6809:6828  \"gamePlayers[gameId]\" */ dataSlot_9)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        dataSlot_10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x40)\n                        let memPtr_7 := mload(64)\n                        finalize_allocation_19682(memPtr_7)\n                        let _38 := sload(/** @src 0:6809:6836  \"gamePlayers[gameId][player]\" */ dataSlot_10)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(memPtr_7, _38)\n                        let _39 := sload(add(/** @src 0:6809:6836  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1))\n                        mstore(add(memPtr_7, 0x20), _39)\n                        let _40 := sload(add(/** @src 0:6809:6836  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 2))\n                        mstore(add(memPtr_7, 64), _40)\n                        mstore(add(memPtr_7, 96), iszero(iszero(and(sload(add(/** @src 0:6809:6836  \"gamePlayers[gameId][player]\" */ dataSlot_10, /** @src 0:6809:6820  \"gamePlayers\" */ 0x03)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff))))\n                        let memPos_7 := mload(64)\n                        return(memPos_7, sub(abi_encode_uint256_uint256_uint256(memPos_7, _38, _39, _40), memPos_7))\n                    }\n                    case 0xb256b11b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 0:1547:1612  \"require(msg.sender == owner, \\\"Only owner can call this function\\\")\"\n                        require_helper_stringliteral_1b98(/** @src 0:1555:1574  \"msg.sender == owner\" */ eq(/** @src 0:1555:1565  \"msg.sender\" */ caller(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(sload(0), sub(shl(160, 1), 1))))\n                        mstore(0, value_9)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:1686:1748  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ value_9))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(0, value_9)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        /// @src 0:7908:7918  \"game.state\"\n                        let _41 := add(dataSlot_11, 6)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value_10 := and(shr(160, sload(/** @src 0:7908:7918  \"game.state\" */ _41)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_10, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:7900:7960  \"require(game.state != GameState.Ended, \\\"Game already ended\\\")\"\n                        require_helper_stringliteral_9a4d(/** @src 0:7908:7937  \"game.state != GameState.Ended\" */ iszero(eq(value_10, /** @src 0:7922:7937  \"GameState.Ended\" */ 3)))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let cleaned_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        cleaned_2 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:7979:8007  \"game.state = GameState.Ended\" */ _41, /** @src 0:58:8526  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:7979:8007  \"game.state = GameState.Ended\" */ _41), /** @src 0:58:8526  \"contract BigWickGame {...\" */ not(shl(160, 255))), shl(160, 3)))\n                        /// @src 0:8017:8031  \"game.finalized\"\n                        let _42 := add(dataSlot_11, 8)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(_42, or(and(sload(_42), not(255)), 1))\n                        mstore(0, value_9)\n                        mstore(32, 4)\n                        let dataSlot_12 := keccak256(0, 64)\n                        let pos_3 := mload(64)\n                        let memPtr_8 := pos_3\n                        let length_2 := sload(dataSlot_12)\n                        mstore(pos_3, length_2)\n                        pos_3 := add(pos_3, 32)\n                        mstore(0, dataSlot_12)\n                        let srcPtr_2 := keccak256(0, 32)\n                        let i_2 := 0\n                        for { } lt(i_2, length_2) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_3, and(sload(srcPtr_2), sub(shl(160, 1), 1)))\n                            pos_3 := add(pos_3, 32)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_8, sub(pos_3, memPtr_8))\n                        /// @src 0:8178:8191  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:8173:8459  \"for (uint256 i = 0; i < playerList.length; i++) {...\"\n                        for { }\n                        /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1\n                        /// @src 0:8178:8191  \"uint256 i = 0\"\n                        {\n                            /// @src 0:8216:8219  \"i++\"\n                            var_i_1 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ add(/** @src 0:8216:8219  \"i++\" */ var_i_1, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:8216:8219  \"i++\"\n                        {\n                            /// @src 0:8193:8214  \"i < playerList.length\"\n                            if iszero(lt(var_i_1, /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(/** @src 0:8197:8214  \"playerList.length\" */ memPtr_8)))\n                            /// @src 0:8193:8214  \"i < playerList.length\"\n                            { break }\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let value_11 := and(mload(/** @src 0:8252:8265  \"playerList[i]\" */ memory_array_index_access_address_dyn(memPtr_8, var_i_1)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_9)\n                            mstore(32, /** @src 0:7922:7937  \"GameState.Ended\" */ 3)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let dataSlot_13 := keccak256(0, 64)\n                            /// @src 0:8299:8326  \"gamePlayers[gameId][player]\"\n                            let dataSlot_14 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(/** @src 0:8299:8326  \"gamePlayers[gameId][player]\" */ value_11, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:8299:8318  \"gamePlayers[gameId]\" */ dataSlot_13)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            dataSlot_14 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x40)\n                            let _43 := sload(/** @src 0:8299:8326  \"gamePlayers[gameId][player]\" */ dataSlot_14)\n                            /// @src 0:8366:8379  \"playerBid > 0\"\n                            let _44 := iszero(_43)\n                            /// @src 0:8362:8449  \"if (playerBid > 0) {...\"\n                            if /** @src 0:8366:8379  \"playerBid > 0\" */ iszero(_44)\n                            /// @src 0:8362:8449  \"if (playerBid > 0) {...\"\n                            {\n                                /// @src 0:8399:8434  \"payable(player).transfer(playerBid)\"\n                                let _45 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                                /// @src 0:8399:8434  \"payable(player).transfer(playerBid)\"\n                                if _44 { _45 := 2300 }\n                                if iszero(call(_45, value_11, _43, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0, 0, 0, 0))\n                                /// @src 0:8399:8434  \"payable(player).transfer(playerBid)\"\n                                {\n                                    /// @src 0:58:8526  \"contract BigWickGame {...\"\n                                    let pos_4 := mload(64)\n                                    returndatacopy(pos_4, 0, returndatasize())\n                                    revert(pos_4, returndatasize())\n                                }\n                            }\n                        }\n                        /// @src 0:8482:8517  \"GameEnded(gameId, address(0), 0, 0)\"\n                        let _46 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_46, 0)\n                        mstore(add(_46, 32), 0)\n                        /// @src 0:8482:8517  \"GameEnded(gameId, address(0), 0, 0)\"\n                        log3(_46, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 64, /** @src 0:8482:8517  \"GameEnded(gameId, address(0), 0, 0)\" */ 0x64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800, value_9, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0)\n                        return(0, 0)\n                    }\n                    case 0xd0399bb8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_12 := calldataload(4)\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:1686:1748  \"require(games[gameId].gameId == gameId, \\\"Game does not exist\\\")\"\n                        require_helper_stringliteral_c11e(/** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ eq(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(keccak256(0, 64)), /** @src 0:1694:1724  \"games[gameId].gameId == gameId\" */ value_12))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(0, value_12)\n                        mstore(32, /** @src 0:1694:1699  \"games\" */ 0x02)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let dataSlot_15 := keccak256(0, 64)\n                        if /** @src 0:4163:4194  \"block.timestamp >= game.endTime\" */ lt(/** @src 0:4163:4178  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:4182:4194  \"game.endTime\" */ add(dataSlot_15, 3)))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 22)\n                            mstore(add(memPtr_9, 68), \"Game has not ended yet\")\n                            revert(memPtr_9, 100)\n                        }\n                        /// @src 0:4239:4249  \"game.state\"\n                        let _47 := add(dataSlot_15, 6)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value_13 := and(shr(160, sload(/** @src 0:4239:4249  \"game.state\" */ _47)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)\n                        if iszero(lt(value_13, 4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x21)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:4231:4291  \"require(game.state != GameState.Ended, \\\"Game already ended\\\")\"\n                        require_helper_stringliteral_9a4d(/** @src 0:4239:4268  \"game.state != GameState.Ended\" */ iszero(eq(value_13, /** @src 0:4182:4194  \"game.endTime\" */ 3)))\n                        /// @src 0:4310:4324  \"game.finalized\"\n                        let _48 := add(dataSlot_15, 8)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        if iszero(/** @src 0:4309:4324  \"!game.finalized\" */ iszero(/** @src 0:58:8526  \"contract BigWickGame {...\" */ and(sload(/** @src 0:4310:4324  \"game.finalized\" */ _48), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff)))\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 22)\n                            mstore(add(memPtr_10, 68), \"Game already finalized\")\n                            revert(memPtr_10, 100)\n                        }\n                        let _49 := sload(/** @src 0:4512:4534  \"game.endingPeriodStart\" */ add(dataSlot_15, /** @src 0:1694:1699  \"games\" */ 0x02))\n                        /// @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        let expr_mpos := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                        /// @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        let _50 := add(expr_mpos, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 32)\n                        mstore(_50, /** @src 0:4163:4178  \"block.timestamp\" */ timestamp())\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(add(/** @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\" */ expr_mpos, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 64), /** @src 0:4603:4619  \"block.prevrandao\" */ prevrandao())\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(add(/** @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\" */ expr_mpos, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 96), value_12)\n                        /// @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        mstore(expr_mpos, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 96)\n                        /// @src 0:4569:4628  \"abi.encodePacked(block.timestamp, block.prevrandao, gameId)\"\n                        finalize_allocation(expr_mpos, 128)\n                        /// @src 0:4512:4647  \"game.endingPeriodStart + ...\"\n                        let expr_3 := checked_add_uint256(_49, /** @src 0:58:8526  \"contract BigWickGame {...\" */ mod(/** @src 0:4559:4629  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))\" */ keccak256(/** @src 0:58:8526  \"contract BigWickGame {...\" */ _50, mload(/** @src 0:4559:4629  \"keccak256(abi.encodePacked(block.timestamp, block.prevrandao, gameId))\" */ expr_mpos)), /** @src 0:693:699  \"5 days\" */ 0x069780))\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:4666:4680  \"game.candleEnd\" */ add(dataSlot_15, 7), /** @src 0:58:8526  \"contract BigWickGame {...\" */ expr_3)\n                        let cleaned_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        cleaned_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(/** @src 0:4702:4730  \"game.state = GameState.Ended\" */ _47, /** @src 0:58:8526  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:4702:4730  \"game.state = GameState.Ended\" */ _47), /** @src 0:58:8526  \"contract BigWickGame {...\" */ not(shl(160, 255))), shl(160, 3)))\n                        /// @src 0:4754:4792  \"CandleEndDetermined(gameId, candleEnd)\"\n                        let _51 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                        mstore(_51, expr_3)\n                        /// @src 0:4754:4792  \"CandleEndDetermined(gameId, candleEnd)\"\n                        log2(_51, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 32, /** @src 0:4754:4792  \"CandleEndDetermined(gameId, candleEnd)\" */ 0x86ed31336f526d2a8d9eed7596b4e5f8d4ef5c5a9384792afa58506239913a8b, value_12)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        mstore(0, value_12)\n                        mstore(32, 4)\n                        let dataSlot_16 := keccak256(0, 64)\n                        let pos_5 := mload(64)\n                        let memPtr_11 := pos_5\n                        let length_3 := sload(dataSlot_16)\n                        mstore(pos_5, length_3)\n                        pos_5 := add(pos_5, 32)\n                        mstore(0, dataSlot_16)\n                        let srcPtr_3 := keccak256(0, 32)\n                        let i_3 := 0\n                        for { } lt(i_3, length_3) { i_3 := add(i_3, 1) }\n                        {\n                            mstore(pos_5, and(sload(srcPtr_3), sub(shl(160, 1), 1)))\n                            pos_5 := add(pos_5, 32)\n                            srcPtr_3 := add(srcPtr_3, 1)\n                        }\n                        finalize_allocation(memPtr_11, sub(pos_5, memPtr_11))\n                        /// @src 0:5686:5720  \"address currentWinner = address(0)\"\n                        let var_currentWinner := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5730:5752  \"uint256 highestBid = 0\"\n                        let var_highestBid := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5776:5789  \"uint256 i = 0\"\n                        let var_i_2 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                        /// @src 0:5771:6209  \"for (uint256 i = 0; i < playerList.length; i++) {...\"\n                        for { }\n                        /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1\n                        /// @src 0:5776:5789  \"uint256 i = 0\"\n                        {\n                            /// @src 0:5814:5817  \"i++\"\n                            var_i_2 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ add(/** @src 0:5814:5817  \"i++\" */ var_i_2, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1)\n                        }\n                        /// @src 0:5814:5817  \"i++\"\n                        {\n                            /// @src 0:5791:5812  \"i < playerList.length\"\n                            if iszero(lt(var_i_2, /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(/** @src 0:5795:5812  \"playerList.length\" */ memPtr_11)))\n                            /// @src 0:5791:5812  \"i < playerList.length\"\n                            { break }\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let value_14 := and(mload(/** @src 0:5850:5863  \"playerList[i]\" */ memory_array_index_access_address_dyn(memPtr_11, var_i_2)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                            mstore(0, value_12)\n                            mstore(32, /** @src 0:4182:4194  \"game.endTime\" */ 3)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let dataSlot_17 := keccak256(0, 64)\n                            /// @src 0:5904:5931  \"gamePlayers[gameId][player]\"\n                            let dataSlot_18 := /** @src -1:-1:-1 */ 0\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ and(/** @src 0:5904:5931  \"gamePlayers[gameId][player]\" */ value_14, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 0:5904:5923  \"gamePlayers[gameId]\" */ dataSlot_17)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            dataSlot_18 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x40)\n                            let memPtr_12 := mload(64)\n                            finalize_allocation_19682(memPtr_12)\n                            let _52 := sload(dataSlot_18)\n                            mstore(memPtr_12, _52)\n                            mstore(add(memPtr_12, 32), sload(add(dataSlot_18, 1)))\n                            let _53 := sload(add(dataSlot_18, /** @src 0:1694:1699  \"games\" */ 0x02))\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            mstore(add(memPtr_12, 64), _53)\n                            mstore(add(memPtr_12, 96), iszero(iszero(and(sload(add(dataSlot_18, /** @src 0:4182:4194  \"game.endTime\" */ 3)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0xff))))\n                            /// @src 0:6021:6092  \"playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid\"\n                            let expr_4 := /** @src 0:6021:6056  \"playerData.lastBidTime <= candleEnd\" */ iszero(gt(_53, expr_3))\n                            /// @src 0:6021:6092  \"playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid\"\n                            if expr_4\n                            {\n                                expr_4 := /** @src 0:6060:6092  \"playerData.totalBid > highestBid\" */ gt(_52, var_highestBid)\n                            }\n                            /// @src 0:6017:6199  \"if (playerData.lastBidTime <= candleEnd && playerData.totalBid > highestBid) {...\"\n                            if expr_4\n                            {\n                                /// @src 0:6112:6144  \"highestBid = playerData.totalBid\"\n                                var_highestBid := _52\n                                /// @src 0:6162:6184  \"currentWinner = player\"\n                                var_currentWinner := value_14\n                            }\n                        }\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let _54 := and(/** @src 0:4953:4973  \"winner != address(0)\" */ var_currentWinner, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                        /// @src 0:4949:5466  \"if (winner != address(0)) {...\"\n                        if /** @src 0:4953:4973  \"winner != address(0)\" */ iszero(iszero(/** @src 0:58:8526  \"contract BigWickGame {...\" */ _54))\n                        /// @src 0:4949:5466  \"if (winner != address(0)) {...\"\n                        {\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            sstore(/** @src 0:4989:5009  \"game.winner = winner\" */ _47, /** @src 0:58:8526  \"contract BigWickGame {...\" */ or(and(sload(/** @src 0:4989:5009  \"game.winner = winner\" */ _47), /** @src 0:58:8526  \"contract BigWickGame {...\" */ shl(160, 0xffffffffffffffffffffffff)), _54))\n                            let _55 := sload(/** @src 0:5103:5116  \"game.totalPot\" */ add(dataSlot_15, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 4))\n                            let product := mul(_55, /** @src 0:744:746  \"90\" */ 0x5a)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            if iszero(or(iszero(_55), eq(/** @src 0:744:746  \"90\" */ 0x5a, /** @src 0:58:8526  \"contract BigWickGame {...\" */ div(product, _55))))\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            let r := div(product, /** @src 0:5135:5138  \"100\" */ 0x64)\n                            /// @src 0:58:8526  \"contract BigWickGame {...\"\n                            let diff := sub(_55, r)\n                            if gt(diff, _55)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            sstore(/** @src 0:5231:5248  \"game.treasuryFund\" */ add(dataSlot_15, 5), /** @src 0:58:8526  \"contract BigWickGame {...\" */ diff)\n                            /// @src 0:5332:5369  \"payable(winner).transfer(winnerPrize)\"\n                            let _56 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                            /// @src 0:5332:5369  \"payable(winner).transfer(winnerPrize)\"\n                            if iszero(r) { _56 := 2300 }\n                            if iszero(call(_56, _54, r, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0, 0, 0, 0))\n                            /// @src 0:5332:5369  \"payable(winner).transfer(winnerPrize)\"\n                            {\n                                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                                let pos_6 := mload(64)\n                                returndatacopy(pos_6, 0, returndatasize())\n                                revert(pos_6, returndatasize())\n                            }\n                            /// @src 0:5401:5455  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\"\n                            let _57 := /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(64)\n                            mstore(_57, r)\n                            mstore(add(_57, 32), diff)\n                            /// @src 0:5401:5455  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\"\n                            log3(_57, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 64, /** @src 0:5401:5455  \"GameEnded(gameId, winner, winnerPrize, treasuryAmount)\" */ 0x64e67454795640f66cef8019a707b9381952f2f1024a355d5470bafc82af1800, value_12, _54)\n                        }\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        sstore(_48, or(and(sload(_48), not(255)), 1))\n                        return(0, 0)\n                    }\n                    case 0xdbe3010c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 0:744:746  \"90\" */ 0x5a)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0xed456ee4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 64) { revert(0, 0) }\n                        let value_15 := calldataload(36)\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let dataSlot_19 := keccak256(0, 64)\n                        /// @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\"\n                        if iszero(lt(value_15, /** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(/** @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\" */ dataSlot_19)))\n                        {\n                            revert(/** @src 0:58:8526  \"contract BigWickGame {...\" */ 0, 0)\n                        }\n                        /// @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\"\n                        let slot_1, offset_1 := storage_array_index_access_address_dyn(dataSlot_19, value_15)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        let value_16 := and(shr(shl(3, offset_1), sload(/** @src 0:1017:1068  \"mapping(uint256 => address[]) public gamePlayerList\" */ slot_1)), /** @src 0:58:8526  \"contract BigWickGame {...\" */ sub(shl(160, 1), 1))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, value_16)\n                        return(memPos_9, 32)\n                    }\n                    case 0xf13d1259 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, /** @src 0:693:699  \"5 days\" */ 0x069780)\n                        /// @src 0:58:8526  \"contract BigWickGame {...\"\n                        return(memPos_10, 32)\n                    }\n                    case 0xff8fb35c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, 4)\n                        let length_4 := sload(keccak256(0, 64))\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, length_4)\n                        return(memPos_11, 32)\n                    }\n                    case 0xffde0c74 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let ret := fun_getGameState(calldataload(4))\n                        let memPos_12 := mload(64)\n                        abi_encode_enum_GameState(ret, memPos_12)\n                        return(memPos_12, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_enum_GameState(value, pos)\n            {\n                if iszero(lt(value, 4))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(pos, value)\n            }\n            function abi_decode_uint256t_address(dataEnd) -> value0, value1\n            {\n                if slt(add(dataEnd, not(3)), 64) { revert(0, 0) }\n                value0 := calldataload(4)\n                let value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                value1 := value\n            }\n            function abi_encode_uint256_uint256_uint256(headStart, value0, value1, value2) -> tail\n            {\n                tail := add(headStart, 96)\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), value2)\n            }\n            function storage_array_index_access_address_dyn(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 0:58:8526  \"contract BigWickGame {...\"\n            function finalize_allocation_19678(memPtr)\n            {\n                let newFreePtr := add(memPtr, 320)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19682(memPtr)\n            {\n                let newFreePtr := add(memPtr, 128)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function require_helper_stringliteral_1b98(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 33)\n                    mstore(add(memPtr, 68), \"Only owner can call this functio\")\n                    mstore(add(memPtr, 100), \"n\")\n                    revert(memPtr, 132)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_c11e(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Game does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9a4d(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Game already ended\")\n                    revert(memPtr, 100)\n                }\n            }\n            function memory_array_index_access_address_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 641 @src 0:6264:6658  \"function getGameState(uint256 gameId) external view returns (GameState) {...\"\n            function fun_getGameState(var_gameId) -> var\n            {\n                /// @src 0:6325:6334  \"GameState\"\n                var := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                mstore(0, var_gameId)\n                mstore(0x20, /** @src 0:6350:6355  \"games\" */ 0x02)\n                /// @src 0:6346:6404  \"if (games[gameId].gameId == 0) return GameState.NotStarted\"\n                if /** @src 0:6350:6375  \"games[gameId].gameId == 0\" */ iszero(/** @src 0:58:8526  \"contract BigWickGame {...\" */ sload(keccak256(0, 0x40)))\n                /// @src 0:6346:6404  \"if (games[gameId].gameId == 0) return GameState.NotStarted\"\n                {\n                    /// @src 0:6377:6404  \"return GameState.NotStarted\"\n                    var := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 0\n                    /// @src 0:6377:6404  \"return GameState.NotStarted\"\n                    leave\n                }\n                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                mstore(0, var_gameId)\n                mstore(0x20, /** @src 0:6350:6355  \"games\" */ 0x02)\n                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                let dataSlot := keccak256(0, 0x40)\n                let memPtr := mload(0x40)\n                finalize_allocation_19678(memPtr)\n                mstore(memPtr, sload(dataSlot))\n                mstore(add(memPtr, 0x20), sload(add(dataSlot, 1)))\n                let _1 := sload(add(dataSlot, /** @src 0:6350:6355  \"games\" */ 0x02))\n                /// @src 0:58:8526  \"contract BigWickGame {...\"\n                let _2 := add(memPtr, 0x40)\n                mstore(_2, _1)\n                let _3 := sload(add(dataSlot, 3))\n                let _4 := add(memPtr, 96)\n                mstore(_4, _3)\n                mstore(add(memPtr, 128), sload(add(dataSlot, 4)))\n                mstore(add(memPtr, 160), sload(add(dataSlot, 5)))\n                let _5 := sload(add(dataSlot, 6))\n                mstore(add(memPtr, 192), and(_5, sub(shl(160, 1), 1)))\n                let value := and(shr(160, _5), 0xff)\n                if iszero(lt(value, 4))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(0, 0x24)\n                }\n                mstore(add(memPtr, 224), value)\n                mstore(add(memPtr, 256), sload(add(dataSlot, 7)))\n                mstore(add(memPtr, 288), iszero(iszero(and(sload(add(dataSlot, 8)), 0xff))))\n                /// @src 0:6465:6524  \"if (block.timestamp >= game.endTime) return GameState.Ended\"\n                if /** @src 0:6469:6500  \"block.timestamp >= game.endTime\" */ iszero(lt(/** @src 0:6469:6484  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(/** @src 0:6488:6500  \"game.endTime\" */ _4)))\n                /// @src 0:6465:6524  \"if (block.timestamp >= game.endTime) return GameState.Ended\"\n                {\n                    /// @src 0:6502:6524  \"return GameState.Ended\"\n                    var := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 3\n                    /// @src 0:6502:6524  \"return GameState.Ended\"\n                    leave\n                }\n                /// @src 0:6534:6610  \"if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod\"\n                if /** @src 0:6538:6579  \"block.timestamp >= game.endingPeriodStart\" */ iszero(lt(/** @src 0:6469:6484  \"block.timestamp\" */ timestamp(), /** @src 0:58:8526  \"contract BigWickGame {...\" */ mload(/** @src 0:6557:6579  \"game.endingPeriodStart\" */ _2)))\n                /// @src 0:6534:6610  \"if (block.timestamp >= game.endingPeriodStart) return GameState.EndingPeriod\"\n                {\n                    /// @src 0:6581:6610  \"return GameState.EndingPeriod\"\n                    var := /** @src 0:6350:6355  \"games\" */ 0x02\n                    /// @src 0:6581:6610  \"return GameState.EndingPeriod\"\n                    leave\n                }\n                /// @src 0:6620:6651  \"return GameState.StartingPeriod\"\n                var := /** @src 0:58:8526  \"contract BigWickGame {...\" */ 1\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220e495b88b83bf4aabf974fad420c0304ef4e3a4ad141700c98c478e3bbaa317db64736f6c634300081c0033\"\n    }\n}\n","hash":"f1074e9220ea5f9f29374497ba81eca73185bf74ee3104b2e08d7584f7561a48","factoryDependencies":{}}}}}}