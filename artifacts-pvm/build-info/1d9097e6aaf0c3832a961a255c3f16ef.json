{"id":"1d9097e6aaf0c3832a961a255c3f16ef","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"contracts/PvPGrid.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract PvPGrid {\n    // Game configuration\n    uint256 public constant GRID_SIZE = 16; // 4x4 grid\n    uint256 public entryFee;\n    uint256 public gameFee; // Platform fee percentage (basis points, e.g., 1000 = 10%)\n    \n    // Game state\n    address[GRID_SIZE] public grid;\n    uint256 public tilesSelected;\n    uint256 public currentGameId;\n    uint256 public prizePool;\n    \n    // Randomness state\n    uint256 public finalSelectionBlock;\n    bool public winnerDetermined;\n    address public winner;\n    \n    // Admin\n    address public owner;\n    address public teamWallet; // Separate wallet for team/developer fees\n    \n    // Events\n    event TileSelected(uint256 indexed gameId, address indexed player, uint256 tileIndex);\n    event GameCompleted(uint256 indexed gameId, address indexed winner, uint256 prize);\n    event NewGameStarted(uint256 indexed gameId, uint256 entryFee);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n    \n    constructor(uint256 _entryFee, uint256 _gameFee, address _teamWallet) {\n        owner = msg.sender;\n        teamWallet = _teamWallet;\n        entryFee = _entryFee;\n        gameFee = _gameFee;\n        require(_gameFee <= 2000, \"Fee too high\"); // Max 20%\n        require(_teamWallet != address(0), \"Invalid team wallet\");\n        _startNewGame();\n    }\n    \n    function selectTile(uint256 tileIndex) external payable {\n        require(msg.value == entryFee, \"Incorrect entry fee\");\n        require(tileIndex < GRID_SIZE, \"Invalid tile index\");\n        require(grid[tileIndex] == address(0), \"Tile already selected\");\n        require(!winnerDetermined, \"Game already finished\");\n        \n        // Record the selection\n        grid[tileIndex] = msg.sender;\n        tilesSelected++;\n        prizePool += msg.value;\n        \n        emit TileSelected(currentGameId, msg.sender, tileIndex);\n        \n        // Check if this was the last tile\n        if (tilesSelected == GRID_SIZE) {\n            // Record the block number for randomness\n            finalSelectionBlock = block.number;\n        }\n    }\n    \n    function determineWinner() external {\n        require(tilesSelected == GRID_SIZE, \"Game not complete\");\n        require(!winnerDetermined, \"Winner already determined\");\n        require(block.number > finalSelectionBlock, \"Wait for next block\");\n        require(block.number <= finalSelectionBlock + 255, \"Too late to determine winner\");\n        \n        // Generate random number using future block hash\n        uint256 randomHash = uint256(blockhash(finalSelectionBlock + 1));\n        uint256 winningTile = randomHash % GRID_SIZE;\n        \n        winner = grid[winningTile];\n        winnerDetermined = true;\n        \n        // Calculate prize distribution\n        uint256 platformFee = (prizePool * gameFee) / 10000;\n        uint256 winnerPrize = prizePool - platformFee;\n        \n        // Transfer winnings\n        if (platformFee > 0) {\n            (bool feeSuccess, ) = teamWallet.call{value: platformFee}(\"\");\n            require(feeSuccess, \"Fee transfer failed\");\n        }\n        \n        (bool prizeSuccess, ) = winner.call{value: winnerPrize}(\"\");\n        require(prizeSuccess, \"Prize transfer failed\");\n        \n        emit GameCompleted(currentGameId, winner, winnerPrize);\n        \n        // Start new game\n        _startNewGame();\n    }\n    \n    function _startNewGame() private {\n        currentGameId++;\n        tilesSelected = 0;\n        winnerDetermined = false;\n        winner = address(0);\n        finalSelectionBlock = 0;\n        prizePool = 0;\n        \n        // Clear the grid\n        for (uint256 i = 0; i < GRID_SIZE; i++) {\n            grid[i] = address(0);\n        }\n        \n        emit NewGameStarted(currentGameId, entryFee);\n    }\n    \n    // Admin functions\n    function updateEntryFee(uint256 _newFee) external onlyOwner {\n        require(tilesSelected == 0, \"Game in progress\");\n        entryFee = _newFee;\n    }\n    \n    function updateGameFee(uint256 _newFee) external onlyOwner {\n        require(_newFee <= 2000, \"Fee too high\"); // Max 20%\n        gameFee = _newFee;\n    }\n    \n    function updateTeamWallet(address _newWallet) external onlyOwner {\n        require(_newWallet != address(0), \"Invalid wallet\");\n        teamWallet = _newWallet;\n    }\n    \n    // View functions\n    function getGrid() external view returns (address[GRID_SIZE] memory) {\n        return grid;\n    }\n    \n    function getTileOwner(uint256 tileIndex) external view returns (address) {\n        require(tileIndex < GRID_SIZE, \"Invalid tile index\");\n        return grid[tileIndex];\n    }\n    \n    function isGameComplete() external view returns (bool) {\n        return tilesSelected == GRID_SIZE;\n    }\n    \n    function canDetermineWinner() external view returns (bool) {\n        return tilesSelected == GRID_SIZE && \n               !winnerDetermined && \n               block.number > finalSelectionBlock &&\n               block.number <= finalSelectionBlock + 255;\n    }\n}"},"contracts/PvPGridEnhanced.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\ncontract PvPGridEnhanced {\n    // Game configuration\n    uint256 public constant GRID_SIZE = 16;\n    uint256 public entryFee;\n    uint256 public gameFee; // Basis points (1000 = 10%)\n    uint256 public minPlayers = 2; // Minimum players to start a game\n    \n    // Game state\n    struct Game {\n        address[GRID_SIZE] grid;\n        mapping(address => uint256) playerTileCount;\n        uint256 tilesSelected;\n        uint256 prizePool;\n        uint256 finalSelectionBlock;\n        uint256 startTime;\n        bool winnerDetermined;\n        address winner;\n    }\n    \n    mapping(uint256 => Game) public games;\n    uint256 public currentGameId;\n    \n    // Player stats\n    mapping(address => uint256) public playerWins;\n    mapping(address => uint256) public playerGamesPlayed;\n    \n    // Admin\n    address public owner;\n    address public teamWallet; // Separate wallet for team/developer fees\n    bool public paused;\n    \n    // Reentrancy guard\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n    uint256 private _status;\n    \n    // Events\n    event TileSelected(uint256 indexed gameId, address indexed player, uint256 tileIndex);\n    event GameCompleted(uint256 indexed gameId, address indexed winner, uint256 prize);\n    event NewGameStarted(uint256 indexed gameId, uint256 entryFee);\n    event GameRefunded(uint256 indexed gameId, string reason);\n    \n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not owner\");\n        _;\n    }\n    \n    modifier whenNotPaused() {\n        require(!paused, \"Contract paused\");\n        _;\n    }\n    \n    modifier nonReentrant() {\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n        _status = _ENTERED;\n        _;\n        _status = _NOT_ENTERED;\n    }\n    \n    constructor(uint256 _entryFee, uint256 _gameFee, address _teamWallet) {\n        owner = msg.sender;\n        teamWallet = _teamWallet;\n        entryFee = _entryFee;\n        gameFee = _gameFee;\n        require(_gameFee <= 2000, \"Fee too high\"); // Max 20%\n        require(_teamWallet != address(0), \"Invalid team wallet\");\n        _status = _NOT_ENTERED;\n        _startNewGame();\n    }\n    \n    function selectTile(uint256 tileIndex) external payable whenNotPaused nonReentrant {\n        require(msg.value == entryFee, \"Incorrect entry fee\");\n        require(tileIndex < GRID_SIZE, \"Invalid tile index\");\n        \n        Game storage game = games[currentGameId];\n        require(game.grid[tileIndex] == address(0), \"Tile already selected\");\n        require(!game.winnerDetermined, \"Game already finished\");\n        \n        // Prevent same player from taking too many tiles\n        require(game.playerTileCount[msg.sender] < GRID_SIZE / 2, \"Too many tiles per player\");\n        \n        // Record the selection\n        game.grid[tileIndex] = msg.sender;\n        game.playerTileCount[msg.sender]++;\n        game.tilesSelected++;\n        game.prizePool += msg.value;\n        \n        // Update player stats\n        if (game.playerTileCount[msg.sender] == 1) {\n            playerGamesPlayed[msg.sender]++;\n        }\n        \n        emit TileSelected(currentGameId, msg.sender, tileIndex);\n        \n        // Check if this was the last tile\n        if (game.tilesSelected == GRID_SIZE) {\n            game.finalSelectionBlock = block.number;\n        }\n    }\n    \n    function selectMultipleTiles(uint256[] calldata tileIndexes) external payable whenNotPaused nonReentrant {\n        require(msg.value == entryFee * tileIndexes.length, \"Incorrect total fee\");\n        require(tileIndexes.length > 0 && tileIndexes.length <= 4, \"Invalid number of tiles\");\n        \n        Game storage game = games[currentGameId];\n        require(game.playerTileCount[msg.sender] + tileIndexes.length <= GRID_SIZE / 2, \"Too many tiles per player\");\n        \n        for (uint256 i = 0; i < tileIndexes.length; i++) {\n            require(tileIndexes[i] < GRID_SIZE, \"Invalid tile index\");\n            require(game.grid[tileIndexes[i]] == address(0), \"Tile already selected\");\n            \n            game.grid[tileIndexes[i]] = msg.sender;\n            emit TileSelected(currentGameId, msg.sender, tileIndexes[i]);\n        }\n        \n        game.playerTileCount[msg.sender] += tileIndexes.length;\n        game.tilesSelected += tileIndexes.length;\n        game.prizePool += msg.value;\n        \n        if (game.playerTileCount[msg.sender] == tileIndexes.length) {\n            playerGamesPlayed[msg.sender]++;\n        }\n        \n        if (game.tilesSelected == GRID_SIZE) {\n            game.finalSelectionBlock = block.number;\n        }\n    }\n    \n    function determineWinner() external nonReentrant {\n        Game storage game = games[currentGameId];\n        require(game.tilesSelected == GRID_SIZE, \"Game not complete\");\n        require(!game.winnerDetermined, \"Winner already determined\");\n        require(block.number > game.finalSelectionBlock, \"Wait for next block\");\n        require(block.number <= game.finalSelectionBlock + 255, \"Too late to determine winner\");\n        \n        // Check if minimum players requirement is met\n        uint256 uniquePlayers = _countUniquePlayers(currentGameId);\n        if (uniquePlayers < minPlayers) {\n            _refundGame(currentGameId, \"Not enough players\");\n            return;\n        }\n        \n        // Generate random number using future block hash\n        uint256 randomHash = uint256(blockhash(game.finalSelectionBlock + 1));\n        uint256 winningTile = randomHash % GRID_SIZE;\n        \n        game.winner = game.grid[winningTile];\n        game.winnerDetermined = true;\n        playerWins[game.winner]++;\n        \n        // Calculate prize distribution\n        uint256 platformFee = (game.prizePool * gameFee) / 10000;\n        uint256 winnerPrize = game.prizePool - platformFee;\n        \n        // Transfer winnings\n        if (platformFee > 0) {\n            (bool feeSuccess, ) = teamWallet.call{value: platformFee}(\"\");\n            require(feeSuccess, \"Fee transfer failed\");\n        }\n        \n        (bool prizeSuccess, ) = game.winner.call{value: winnerPrize}(\"\");\n        require(prizeSuccess, \"Prize transfer failed\");\n        \n        emit GameCompleted(currentGameId, game.winner, winnerPrize);\n        \n        // Start new game\n        _startNewGame();\n    }\n    \n    function emergencyDetermineWinner() external onlyOwner nonReentrant {\n        Game storage game = games[currentGameId];\n        require(game.tilesSelected == GRID_SIZE, \"Game not complete\");\n        require(!game.winnerDetermined, \"Winner already determined\");\n        require(block.number > game.finalSelectionBlock + 255, \"Use normal determination\");\n        \n        // Use a combination of block data for emergency randomness\n        uint256 emergencyRandom = uint256(keccak256(abi.encodePacked(\n            block.timestamp,\n            block.prevrandao,\n            currentGameId\n        )));\n        uint256 winningTile = emergencyRandom % GRID_SIZE;\n        \n        game.winner = game.grid[winningTile];\n        game.winnerDetermined = true;\n        playerWins[game.winner]++;\n        \n        uint256 platformFee = (game.prizePool * gameFee) / 10000;\n        uint256 winnerPrize = game.prizePool - platformFee;\n        \n        if (platformFee > 0) {\n            (bool feeSuccess, ) = owner.call{value: platformFee}(\"\");\n            require(feeSuccess, \"Fee transfer failed\");\n        }\n        \n        (bool prizeSuccess, ) = game.winner.call{value: winnerPrize}(\"\");\n        require(prizeSuccess, \"Prize transfer failed\");\n        \n        emit GameCompleted(currentGameId, game.winner, winnerPrize);\n        _startNewGame();\n    }\n    \n    function _refundGame(uint256 gameId, string memory reason) private {\n        Game storage game = games[gameId];\n        \n        // Refund all players\n        for (uint256 i = 0; i < GRID_SIZE; i++) {\n            if (game.grid[i] != address(0)) {\n                uint256 refundAmount = entryFee * game.playerTileCount[game.grid[i]];\n                game.playerTileCount[game.grid[i]] = 0;\n                \n                (bool success, ) = game.grid[i].call{value: refundAmount}(\"\");\n                require(success, \"Refund failed\");\n            }\n        }\n        \n        game.winnerDetermined = true; // Mark as complete\n        emit GameRefunded(gameId, reason);\n        _startNewGame();\n    }\n    \n    function _countUniquePlayers(uint256 gameId) private view returns (uint256) {\n        Game storage game = games[gameId];\n        address[] memory players = new address[](GRID_SIZE);\n        uint256 count = 0;\n        \n        for (uint256 i = 0; i < GRID_SIZE; i++) {\n            address player = game.grid[i];\n            if (player != address(0)) {\n                bool found = false;\n                for (uint256 j = 0; j < count; j++) {\n                    if (players[j] == player) {\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) {\n                    players[count] = player;\n                    count++;\n                }\n            }\n        }\n        \n        return count;\n    }\n    \n    function _startNewGame() private {\n        currentGameId++;\n        Game storage newGame = games[currentGameId];\n        newGame.startTime = block.timestamp;\n        \n        emit NewGameStarted(currentGameId, entryFee);\n    }\n    \n    // Admin functions\n    function setPaused(bool _paused) external onlyOwner {\n        paused = _paused;\n    }\n    \n    function updateEntryFee(uint256 _newFee) external onlyOwner {\n        require(games[currentGameId].tilesSelected == 0, \"Game in progress\");\n        entryFee = _newFee;\n    }\n    \n    function updateGameFee(uint256 _newFee) external onlyOwner {\n        require(_newFee <= 2000, \"Fee too high\"); // Max 20%\n        gameFee = _newFee;\n    }\n    \n    function updateTeamWallet(address _newWallet) external onlyOwner {\n        require(_newWallet != address(0), \"Invalid wallet\");\n        teamWallet = _newWallet;\n    }\n    \n    function updateMinPlayers(uint256 _minPlayers) external onlyOwner {\n        require(_minPlayers >= 2 && _minPlayers <= GRID_SIZE, \"Invalid min players\");\n        minPlayers = _minPlayers;\n    }\n    \n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"Invalid address\");\n        owner = newOwner;\n    }\n    \n    // View functions\n    function getGrid(uint256 gameId) external view returns (address[GRID_SIZE] memory) {\n        return games[gameId].grid;\n    }\n    \n    function getCurrentGrid() external view returns (address[GRID_SIZE] memory) {\n        return games[currentGameId].grid;\n    }\n    \n    function getAvailableTiles() external view returns (uint256[] memory) {\n        Game storage game = games[currentGameId];\n        uint256[] memory available = new uint256[](GRID_SIZE - game.tilesSelected);\n        uint256 index = 0;\n        \n        for (uint256 i = 0; i < GRID_SIZE; i++) {\n            if (game.grid[i] == address(0)) {\n                available[index] = i;\n                index++;\n            }\n        }\n        \n        return available;\n    }\n    \n    function getPlayerTileCount(address player) external view returns (uint256) {\n        return games[currentGameId].playerTileCount[player];\n    }\n    \n    function getGameInfo(uint256 gameId) external view returns (\n        uint256 tilesSelected,\n        uint256 prizePool,\n        bool isComplete,\n        bool winnerDetermined,\n        address winner\n    ) {\n        Game storage game = games[gameId];\n        return (\n            game.tilesSelected,\n            game.prizePool,\n            game.tilesSelected == GRID_SIZE,\n            game.winnerDetermined,\n            game.winner\n        );\n    }\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi"]}},"resolc":{"version":"1.5.2","compilerSource":"npm","settings":{"optimizer":{}}}}},"output":{"errors":[],"version":"0.8.30","long_version":"0.8.30+commit.73712a01.Emscripten.clang","revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","sources":{"contracts/PvPGrid.sol":{"id":0,"ast":{"absolutePath":"contracts/PvPGrid.sol","exportedSymbols":{"PvPGrid":[480]},"id":481,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"PvPGrid","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":480,"linearizedBaseContracts":[480],"name":"PvPGrid","nameLocation":"67:7:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"7fc4eda8","id":4,"mutability":"constant","name":"GRID_SIZE","nameLocation":"131:9:0","nodeType":"VariableDeclaration","scope":480,"src":"107:38:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2,"name":"uint256","nodeType":"ElementaryTypeName","src":"107:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":3,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"143:2:0","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"constant":false,"functionSelector":"072ea61c","id":6,"mutability":"mutable","name":"entryFee","nameLocation":"178:8:0","nodeType":"VariableDeclaration","scope":480,"src":"163:23:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"163:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ea777eec","id":8,"mutability":"mutable","name":"gameFee","nameLocation":"207:7:0","nodeType":"VariableDeclaration","scope":480,"src":"192:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7,"name":"uint256","nodeType":"ElementaryTypeName","src":"192:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"51d2cc8f","id":12,"mutability":"mutable","name":"grid","nameLocation":"329:4:0","nodeType":"VariableDeclaration","scope":480,"src":"303:30:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16]"},"typeName":{"baseType":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"303:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11,"length":{"id":10,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"311:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"303:18:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"}},"visibility":"public"},{"constant":false,"functionSelector":"5fb9c98c","id":14,"mutability":"mutable","name":"tilesSelected","nameLocation":"354:13:0","nodeType":"VariableDeclaration","scope":480,"src":"339:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"536a3ddc","id":16,"mutability":"mutable","name":"currentGameId","nameLocation":"388:13:0","nodeType":"VariableDeclaration","scope":480,"src":"373:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15,"name":"uint256","nodeType":"ElementaryTypeName","src":"373:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"719ce73e","id":18,"mutability":"mutable","name":"prizePool","nameLocation":"422:9:0","nodeType":"VariableDeclaration","scope":480,"src":"407:24:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":17,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"95f7e7dd","id":20,"mutability":"mutable","name":"finalSelectionBlock","nameLocation":"481:19:0","nodeType":"VariableDeclaration","scope":480,"src":"466:34:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint256","nodeType":"ElementaryTypeName","src":"466:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"7f1ad6f1","id":22,"mutability":"mutable","name":"winnerDetermined","nameLocation":"518:16:0","nodeType":"VariableDeclaration","scope":480,"src":"506:28:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":21,"name":"bool","nodeType":"ElementaryTypeName","src":"506:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":false,"functionSelector":"dfbf53ae","id":24,"mutability":"mutable","name":"winner","nameLocation":"555:6:0","nodeType":"VariableDeclaration","scope":480,"src":"540:21:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"540:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":26,"mutability":"mutable","name":"owner","nameLocation":"600:5:0","nodeType":"VariableDeclaration","scope":480,"src":"585:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":25,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"59927044","id":28,"mutability":"mutable","name":"teamWallet","nameLocation":"626:10:0","nodeType":"VariableDeclaration","scope":480,"src":"611:25:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"611:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"anonymous":false,"eventSelector":"19096bbaf57f25f25fc838b12784fb7497242fe3ca9d1c50f6990f13fe053810","id":36,"name":"TileSelected","nameLocation":"710:12:0","nodeType":"EventDefinition","parameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"739:6:0","nodeType":"VariableDeclaration","scope":36,"src":"723:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"723:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"763:6:0","nodeType":"VariableDeclaration","scope":36,"src":"747:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"747:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":34,"indexed":false,"mutability":"mutable","name":"tileIndex","nameLocation":"779:9:0","nodeType":"VariableDeclaration","scope":36,"src":"771:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"771:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"722:67:0"},"src":"704:86:0"},{"anonymous":false,"eventSelector":"f6ae188cc6336ef5ad970d3c81cda5814b4c4902540924c6924debe94ece13eb","id":44,"name":"GameCompleted","nameLocation":"801:13:0","nodeType":"EventDefinition","parameters":{"id":43,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"831:6:0","nodeType":"VariableDeclaration","scope":44,"src":"815:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"815:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":40,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"855:6:0","nodeType":"VariableDeclaration","scope":44,"src":"839:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"839:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":42,"indexed":false,"mutability":"mutable","name":"prize","nameLocation":"871:5:0","nodeType":"VariableDeclaration","scope":44,"src":"863:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":41,"name":"uint256","nodeType":"ElementaryTypeName","src":"863:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"814:63:0"},"src":"795:83:0"},{"anonymous":false,"eventSelector":"1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73","id":50,"name":"NewGameStarted","nameLocation":"889:14:0","nodeType":"EventDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"920:6:0","nodeType":"VariableDeclaration","scope":50,"src":"904:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"904:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":48,"indexed":false,"mutability":"mutable","name":"entryFee","nameLocation":"936:8:0","nodeType":"VariableDeclaration","scope":50,"src":"928:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"903:42:0"},"src":"883:63:0"},{"body":{"id":61,"nodeType":"Block","src":"977:69:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":53,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"995:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"999:6:0","memberName":"sender","nodeType":"MemberAccess","src":"995:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":55,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1009:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"995:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572","id":57,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1016:11:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""},"value":"Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""}],"id":52,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"987:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":58,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"987:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59,"nodeType":"ExpressionStatement","src":"987:41:0"},{"id":60,"nodeType":"PlaceholderStatement","src":"1038:1:0"}]},"id":62,"name":"onlyOwner","nameLocation":"965:9:0","nodeType":"ModifierDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[],"src":"974:2:0"},"src":"956:90:0","virtual":false,"visibility":"internal"},{"body":{"id":108,"nodeType":"Block","src":"1126:281:0","statements":[{"expression":{"id":74,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":26,"src":"1136:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":72,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1144:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":73,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1148:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1144:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1136:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":75,"nodeType":"ExpressionStatement","src":"1136:18:0"},{"expression":{"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":76,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"1164:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":77,"name":"_teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1177:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1164:24:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":79,"nodeType":"ExpressionStatement","src":"1164:24:0"},{"expression":{"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":80,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1198:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":81,"name":"_entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64,"src":"1209:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1198:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":83,"nodeType":"ExpressionStatement","src":"1198:20:0"},{"expression":{"id":86,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":84,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1228:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":85,"name":"_gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1238:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1228:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":87,"nodeType":"ExpressionStatement","src":"1228:18:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":89,"name":"_gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"1264:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32303030","id":90,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1276:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"1264:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1282:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":88,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1256:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":93,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1256:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":94,"nodeType":"ExpressionStatement","src":"1256:41:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":96,"name":"_teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"1326:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":99,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1349:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":98,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1341:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"1341:7:0","typeDescriptions":{}}},"id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1341:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1326:25:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207465616d2077616c6c6574","id":102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1353:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e","typeString":"literal_string \"Invalid team wallet\""},"value":"Invalid team wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e","typeString":"literal_string \"Invalid team wallet\""}],"id":95,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1318:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1318:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":104,"nodeType":"ExpressionStatement","src":"1318:57:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":105,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"1385:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":107,"nodeType":"ExpressionStatement","src":"1385:15:0"}]},"id":109,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":64,"mutability":"mutable","name":"_entryFee","nameLocation":"1076:9:0","nodeType":"VariableDeclaration","scope":109,"src":"1068:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"1068:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"_gameFee","nameLocation":"1095:8:0","nodeType":"VariableDeclaration","scope":109,"src":"1087:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65,"name":"uint256","nodeType":"ElementaryTypeName","src":"1087:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"_teamWallet","nameLocation":"1113:11:0","nodeType":"VariableDeclaration","scope":109,"src":"1105:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1067:58:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1126:0:0"},"scope":480,"src":"1056:351:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":179,"nodeType":"Block","src":"1473:682:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1491:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1495:5:0","memberName":"value","nodeType":"MemberAccess","src":"1491:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":117,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"1504:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1491:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f727265637420656e74727920666565","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1514:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_d357b34a3d690750c69937c649bb30a03d028666aacc4f34fd3f24525fc36f0b","typeString":"literal_string \"Incorrect entry fee\""},"value":"Incorrect entry fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d357b34a3d690750c69937c649bb30a03d028666aacc4f34fd3f24525fc36f0b","typeString":"literal_string \"Incorrect entry fee\""}],"id":114,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1483:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1483:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":121,"nodeType":"ExpressionStatement","src":"1483:53:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":123,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1554:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":124,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"1566:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1554:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696c6520696e646578","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1577:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""},"value":"Invalid tile index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""}],"id":122,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1546:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1546:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":128,"nodeType":"ExpressionStatement","src":"1546:52:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":130,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1616:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":132,"indexExpression":{"id":131,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1621:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1643:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1635:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"1635:7:0","typeDescriptions":{}}},"id":136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1635:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1616:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696c6520616c72656164792073656c6563746564","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1647:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""},"value":"Tile already selected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""}],"id":129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1608:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1608:63:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"1608:63:0"},{"expression":{"arguments":[{"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1689:17:0","subExpression":{"id":142,"name":"winnerDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1690:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c72656164792066696e6973686564","id":144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1708:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a8721555b9111e120a3a6144983f310909859984153f5e2dda7f98b8f6a5a44","typeString":"literal_string \"Game already finished\""},"value":"Game already finished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a8721555b9111e120a3a6144983f310909859984153f5e2dda7f98b8f6a5a44","typeString":"literal_string \"Game already finished\""}],"id":141,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1681:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1681:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":146,"nodeType":"ExpressionStatement","src":"1681:51:0"},{"expression":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":147,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"1783:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":149,"indexExpression":{"id":148,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1788:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1783:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":150,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1801:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1805:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1801:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1783:28:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":153,"nodeType":"ExpressionStatement","src":"1783:28:0"},{"expression":{"id":155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1821:15:0","subExpression":{"id":154,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"1821:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":156,"nodeType":"ExpressionStatement","src":"1821:15:0"},{"expression":{"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":157,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":158,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1859:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1863:5:0","memberName":"value","nodeType":"MemberAccess","src":"1859:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1846:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":161,"nodeType":"ExpressionStatement","src":"1846:22:0"},{"eventCall":{"arguments":[{"id":163,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1905:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":164,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1920:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1924:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1920:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":166,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1932:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":162,"name":"TileSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"1892:12:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:50:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"EmitStatement","src":"1887:55:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2008:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":170,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2025:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2008:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":178,"nodeType":"IfStatement","src":"2004:145:0","trueBody":{"id":177,"nodeType":"Block","src":"2036:113:0","statements":[{"expression":{"id":175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":172,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2104:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":173,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2126:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2132:6:0","memberName":"number","nodeType":"MemberAccess","src":"2126:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2104:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":176,"nodeType":"ExpressionStatement","src":"2104:34:0"}]}}]},"functionSelector":"9793ed08","id":180,"implemented":true,"kind":"function","modifiers":[],"name":"selectTile","nameLocation":"1426:10:0","nodeType":"FunctionDefinition","parameters":{"id":112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":111,"mutability":"mutable","name":"tileIndex","nameLocation":"1445:9:0","nodeType":"VariableDeclaration","scope":180,"src":"1437:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1437:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1436:19:0"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"1473:0:0"},"scope":480,"src":"1417:738:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":298,"nodeType":"Block","src":"2201:1221:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":184,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"2219:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":185,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2236:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2219:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420636f6d706c657465","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2247:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""},"value":"Game not complete"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""}],"id":183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2211:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2211:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"2211:56:0"},{"expression":{"arguments":[{"id":192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2285:17:0","subExpression":{"id":191,"name":"winnerDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2286:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e657220616c72656164792064657465726d696e6564","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2304:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""},"value":"Winner already determined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""}],"id":190,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2277:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2277:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":195,"nodeType":"ExpressionStatement","src":"2277:55:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":197,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2350:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2356:6:0","memberName":"number","nodeType":"MemberAccess","src":"2350:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":199,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2365:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2350:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5761697420666f72206e65787420626c6f636b","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2386:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a561cca8e0d60a1350ab3d75214ab5d9019ee6ebd00084b73435a95876ef79bc","typeString":"literal_string \"Wait for next block\""},"value":"Wait for next block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a561cca8e0d60a1350ab3d75214ab5d9019ee6ebd00084b73435a95876ef79bc","typeString":"literal_string \"Wait for next block\""}],"id":196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2342:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2342:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"2342:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":205,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"2426:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2432:6:0","memberName":"number","nodeType":"MemberAccess","src":"2426:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":207,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2442:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323535","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2464:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2442:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2426:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206c61746520746f2064657465726d696e652077696e6e6572","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2469:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f22b89869e4d009c38786f64620369ce9d1210b1333585c832ae34a3bb1b0dcc","typeString":"literal_string \"Too late to determine winner\""},"value":"Too late to determine winner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f22b89869e4d009c38786f64620369ce9d1210b1333585c832ae34a3bb1b0dcc","typeString":"literal_string \"Too late to determine winner\""}],"id":204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2418:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2418:82:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"2418:82:0"},{"assignments":[215],"declarations":[{"constant":false,"id":215,"mutability":"mutable","name":"randomHash","nameLocation":"2585:10:0","nodeType":"VariableDeclaration","scope":298,"src":"2577:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2577:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":224,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":219,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2616:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:0","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2616:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":218,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967291,"src":"2606:9:0","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2598:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2598:7:0","typeDescriptions":{}}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2598:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2577:64:0"},{"assignments":[226],"declarations":[{"constant":false,"id":226,"mutability":"mutable","name":"winningTile","nameLocation":"2659:11:0","nodeType":"VariableDeclaration","scope":298,"src":"2651:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2651:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":230,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":227,"name":"randomHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":215,"src":"2673:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":228,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"2686:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:22:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2651:44:0"},{"expression":{"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":231,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"2714:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":232,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"2723:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":234,"indexExpression":{"id":233,"name":"winningTile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2728:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2723:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2714:26:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":236,"nodeType":"ExpressionStatement","src":"2714:26:0"},{"expression":{"id":239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":237,"name":"winnerDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2750:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2769:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2750:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":240,"nodeType":"ExpressionStatement","src":"2750:23:0"},{"assignments":[242],"declarations":[{"constant":false,"id":242,"mutability":"mutable","name":"platformFee","nameLocation":"2840:11:0","nodeType":"VariableDeclaration","scope":298,"src":"2832:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":241,"name":"uint256","nodeType":"ElementaryTypeName","src":"2832:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":249,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":243,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2855:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":244,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"2867:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2855:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":246,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2854:21:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2878:5:0","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"2854:29:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2832:51:0"},{"assignments":[251],"declarations":[{"constant":false,"id":251,"mutability":"mutable","name":"winnerPrize","nameLocation":"2901:11:0","nodeType":"VariableDeclaration","scope":298,"src":"2893:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"2893:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":255,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":252,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2915:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":253,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2927:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2915:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2893:45:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":256,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2990:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3004:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2990:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2986:163:0","trueBody":{"id":273,"nodeType":"Block","src":"3007:142:0","statements":[{"assignments":[260,null],"declarations":[{"constant":false,"id":260,"mutability":"mutable","name":"feeSuccess","nameLocation":"3027:10:0","nodeType":"VariableDeclaration","scope":273,"src":"3022:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":259,"name":"bool","nodeType":"ElementaryTypeName","src":"3022:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":267,"initialValue":{"arguments":[{"hexValue":"","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3079:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":261,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"3043:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3054:4:0","memberName":"call","nodeType":"MemberAccess","src":"3043:15:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":263,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"3066:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3043:35:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3043:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3021:61:0"},{"expression":{"arguments":[{"id":269,"name":"feeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"3104:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3116:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":268,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3096:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3096:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":272,"nodeType":"ExpressionStatement","src":"3096:42:0"}]}},{"assignments":[276,null],"declarations":[{"constant":false,"id":276,"mutability":"mutable","name":"prizeSuccess","nameLocation":"3173:12:0","nodeType":"VariableDeclaration","scope":298,"src":"3168:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":275,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":283,"initialValue":{"arguments":[{"hexValue":"","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3223:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":277,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3191:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3198:4:0","memberName":"call","nodeType":"MemberAccess","src":"3191:11:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":279,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3210:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3191:31:0","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3167:59:0"},{"expression":{"arguments":[{"id":285,"name":"prizeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3244:12:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072697a65207472616e73666572206661696c6564","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3258:23:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""},"value":"Prize transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""}],"id":284,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3236:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3236:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"3236:46:0"},{"eventCall":{"arguments":[{"id":290,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"3320:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":291,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3335:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":292,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"3343:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":289,"name":"GameCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"3306:13:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3306:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":294,"nodeType":"EmitStatement","src":"3301:54:0"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":295,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":355,"src":"3400:13:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3400:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":297,"nodeType":"ExpressionStatement","src":"3400:15:0"}]},"functionSelector":"33b16d93","id":299,"implemented":true,"kind":"function","modifiers":[],"name":"determineWinner","nameLocation":"2174:15:0","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"2189:2:0"},"returnParameters":{"id":182,"nodeType":"ParameterList","parameters":[],"src":"2201:0:0"},"scope":480,"src":"2165:1257:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":354,"nodeType":"Block","src":"3465:370:0","statements":[{"expression":{"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3475:15:0","subExpression":{"id":302,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"3475:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":304,"nodeType":"ExpressionStatement","src":"3475:15:0"},{"expression":{"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":305,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3500:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3516:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3500:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":308,"nodeType":"ExpressionStatement","src":"3500:17:0"},{"expression":{"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":309,"name":"winnerDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"3527:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3546:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"3527:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"ExpressionStatement","src":"3527:24:0"},{"expression":{"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":313,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3561:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3578:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3570:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:0","typeDescriptions":{}}},"id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3570:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3561:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ExpressionStatement","src":"3561:19:0"},{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":320,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"3590:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3590:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":323,"nodeType":"ExpressionStatement","src":"3590:23:0"},{"expression":{"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":324,"name":"prizePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"3623:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3623:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":327,"nodeType":"ExpressionStatement","src":"3623:13:0"},{"body":{"id":347,"nodeType":"Block","src":"3721:45:0","statements":[{"expression":{"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":338,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"3735:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":340,"indexExpression":{"id":339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3740:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3735:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3753:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3745:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:0","typeDescriptions":{}}},"id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3745:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3735:20:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":346,"nodeType":"ExpressionStatement","src":"3735:20:0"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3701:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":333,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"3705:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3701:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":348,"initializationExpression":{"assignments":[329],"declarations":[{"constant":false,"id":329,"mutability":"mutable","name":"i","nameLocation":"3694:1:0","nodeType":"VariableDeclaration","scope":348,"src":"3686:9:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":328,"name":"uint256","nodeType":"ElementaryTypeName","src":"3686:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":331,"initialValue":{"hexValue":"30","id":330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3698:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3686:13:0"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3716:3:0","subExpression":{"id":335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":329,"src":"3716:1:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":337,"nodeType":"ExpressionStatement","src":"3716:3:0"},"nodeType":"ForStatement","src":"3681:85:0"},{"eventCall":{"arguments":[{"id":350,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"3804:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":351,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3819:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":349,"name":"NewGameStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":50,"src":"3789:14:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3789:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":353,"nodeType":"EmitStatement","src":"3784:44:0"}]},"id":355,"implemented":true,"kind":"function","modifiers":[],"name":"_startNewGame","nameLocation":"3441:13:0","nodeType":"FunctionDefinition","parameters":{"id":300,"nodeType":"ParameterList","parameters":[],"src":"3454:2:0"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"3465:0:0"},"scope":480,"src":"3432:403:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":373,"nodeType":"Block","src":"3928:92:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":363,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"3946:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3963:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3946:18:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520696e2070726f6772657373","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3966:18:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b7c55786d4829823a08314f48f69f19751f92d363eb671f800edc0cdc35e1c2","typeString":"literal_string \"Game in progress\""},"value":"Game in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b7c55786d4829823a08314f48f69f19751f92d363eb671f800edc0cdc35e1c2","typeString":"literal_string \"Game in progress\""}],"id":362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3938:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3938:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":368,"nodeType":"ExpressionStatement","src":"3938:47:0"},{"expression":{"id":371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":369,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6,"src":"3995:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":370,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"4006:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3995:18:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":372,"nodeType":"ExpressionStatement","src":"3995:18:0"}]},"functionSelector":"aa182626","id":374,"implemented":true,"kind":"function","modifiers":[{"id":360,"kind":"modifierInvocation","modifierName":{"id":359,"name":"onlyOwner","nameLocations":["3918:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"3918:9:0"},"nodeType":"ModifierInvocation","src":"3918:9:0"}],"name":"updateEntryFee","nameLocation":"3877:14:0","nodeType":"FunctionDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"_newFee","nameLocation":"3900:7:0","nodeType":"VariableDeclaration","scope":374,"src":"3892:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":356,"name":"uint256","nodeType":"ElementaryTypeName","src":"3892:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3891:17:0"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"3928:0:0"},"scope":480,"src":"3868:152:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":392,"nodeType":"Block","src":"4089:95:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":382,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4107:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32303030","id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4118:4:0","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"4107:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4124:14:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4099:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4099:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":387,"nodeType":"ExpressionStatement","src":"4099:40:0"},{"expression":{"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":388,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"4160:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":389,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"4170:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4160:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":391,"nodeType":"ExpressionStatement","src":"4160:17:0"}]},"functionSelector":"b70a6dec","id":393,"implemented":true,"kind":"function","modifiers":[{"id":379,"kind":"modifierInvocation","modifierName":{"id":378,"name":"onlyOwner","nameLocations":["4079:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"4079:9:0"},"nodeType":"ModifierInvocation","src":"4079:9:0"}],"name":"updateGameFee","nameLocation":"4039:13:0","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"_newFee","nameLocation":"4061:7:0","nodeType":"VariableDeclaration","scope":393,"src":"4053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":375,"name":"uint256","nodeType":"ElementaryTypeName","src":"4053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4052:17:0"},"returnParameters":{"id":380,"nodeType":"ParameterList","parameters":[],"src":"4089:0:0"},"scope":480,"src":"4030:154:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":414,"nodeType":"Block","src":"4259:101:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":401,"name":"_newWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4277:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4299:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4291:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":402,"name":"address","nodeType":"ElementaryTypeName","src":"4291:7:0","typeDescriptions":{}}},"id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4291:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4277:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077616c6c6574","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4303:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6711091e95d1cc0916752596e5ca9e74d8e033197d30e64a48eb755d3cfdcbc","typeString":"literal_string \"Invalid wallet\""},"value":"Invalid wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6711091e95d1cc0916752596e5ca9e74d8e033197d30e64a48eb755d3cfdcbc","typeString":"literal_string \"Invalid wallet\""}],"id":400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4269:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4269:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"ExpressionStatement","src":"4269:51:0"},{"expression":{"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":410,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"4330:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":411,"name":"_newWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"4343:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4330:23:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":413,"nodeType":"ExpressionStatement","src":"4330:23:0"}]},"functionSelector":"7cb332bb","id":415,"implemented":true,"kind":"function","modifiers":[{"id":398,"kind":"modifierInvocation","modifierName":{"id":397,"name":"onlyOwner","nameLocations":["4249:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":62,"src":"4249:9:0"},"nodeType":"ModifierInvocation","src":"4249:9:0"}],"name":"updateTeamWallet","nameLocation":"4203:16:0","nodeType":"FunctionDefinition","parameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"_newWallet","nameLocation":"4228:10:0","nodeType":"VariableDeclaration","scope":415,"src":"4220:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"4220:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4219:20:0"},"returnParameters":{"id":399,"nodeType":"ParameterList","parameters":[],"src":"4259:0:0"},"scope":480,"src":"4194:166:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":424,"nodeType":"Block","src":"4461:28:0","statements":[{"expression":{"id":422,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"4478:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"functionReturnParameters":421,"id":423,"nodeType":"Return","src":"4471:11:0"}]},"functionSelector":"134000c0","id":425,"implemented":true,"kind":"function","modifiers":[],"name":"getGrid","nameLocation":"4401:7:0","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[],"src":"4408:2:0"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":425,"src":"4434:25:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_memory_ptr","typeString":"address[16]"},"typeName":{"baseType":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":419,"length":{"id":418,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"4442:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"4434:18:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"}},"visibility":"internal"}],"src":"4433:27:0"},"scope":480,"src":"4392:97:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":443,"nodeType":"Block","src":"4572:101:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":433,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4590:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":434,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"4602:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4590:21:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696c6520696e646578","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4613:20:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""},"value":"Invalid tile index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""}],"id":432,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4582:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"4582:52:0"},{"expression":{"baseExpression":{"id":439,"name":"grid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":12,"src":"4651:4:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":441,"indexExpression":{"id":440,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"4656:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4651:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":431,"id":442,"nodeType":"Return","src":"4644:22:0"}]},"functionSelector":"71be7faf","id":444,"implemented":true,"kind":"function","modifiers":[],"name":"getTileOwner","nameLocation":"4508:12:0","nodeType":"FunctionDefinition","parameters":{"id":428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"tileIndex","nameLocation":"4529:9:0","nodeType":"VariableDeclaration","scope":444,"src":"4521:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4520:19:0"},"returnParameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":444,"src":"4563:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":429,"name":"address","nodeType":"ElementaryTypeName","src":"4563:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4562:9:0"},"scope":480,"src":"4499:174:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":453,"nodeType":"Block","src":"4738:50:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":449,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4755:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":450,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"4772:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":448,"id":452,"nodeType":"Return","src":"4748:33:0"}]},"functionSelector":"789c20f9","id":454,"implemented":true,"kind":"function","modifiers":[],"name":"isGameComplete","nameLocation":"4692:14:0","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"4706:2:0"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":454,"src":"4732:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":446,"name":"bool","nodeType":"ElementaryTypeName","src":"4732:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4731:6:0"},"scope":480,"src":"4683:105:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":478,"nodeType":"Block","src":"4857:201:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":459,"name":"tilesSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":14,"src":"4874:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":460,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4,"src":"4891:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4874:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4920:17:0","subExpression":{"id":462,"name":"winnerDetermined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"4921:16:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4874:63:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":465,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4957:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4963:6:0","memberName":"number","nodeType":"MemberAccess","src":"4957:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":467,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"4972:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4957:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4874:117:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":470,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5010:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5016:6:0","memberName":"number","nodeType":"MemberAccess","src":"5010:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":472,"name":"finalSelectionBlock","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"5026:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323535","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5048:3:0","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"5026:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5010:41:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4874:177:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":458,"id":477,"nodeType":"Return","src":"4867:184:0"}]},"functionSelector":"c336b9ca","id":479,"implemented":true,"kind":"function","modifiers":[],"name":"canDetermineWinner","nameLocation":"4807:18:0","nodeType":"FunctionDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"4825:2:0"},"returnParameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":479,"src":"4851:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":456,"name":"bool","nodeType":"ElementaryTypeName","src":"4851:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4850:6:0"},"scope":480,"src":"4798:260:0","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":481,"src":"58:5002:0","usedErrors":[],"usedEvents":[36,44,50]}],"src":"32:5028:0"}},"contracts/PvPGridEnhanced.sol":{"id":1,"ast":{"absolutePath":"contracts/PvPGridEnhanced.sol","exportedSymbols":{"PvPGridEnhanced":[1754]},"id":1755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":482,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"PvPGridEnhanced","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1754,"linearizedBaseContracts":[1754],"name":"PvPGridEnhanced","nameLocation":"67:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"7fc4eda8","id":485,"mutability":"constant","name":"GRID_SIZE","nameLocation":"139:9:1","nodeType":"VariableDeclaration","scope":1754,"src":"115:38:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"115:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3136","id":484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"151:2:1","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"visibility":"public"},{"constant":false,"functionSelector":"072ea61c","id":487,"mutability":"mutable","name":"entryFee","nameLocation":"174:8:1","nodeType":"VariableDeclaration","scope":1754,"src":"159:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"159:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ea777eec","id":489,"mutability":"mutable","name":"gameFee","nameLocation":"203:7:1","nodeType":"VariableDeclaration","scope":1754,"src":"188:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"188:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"2770c895","id":492,"mutability":"mutable","name":"minPlayers","nameLocation":"260:10:1","nodeType":"VariableDeclaration","scope":1754,"src":"245:29:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"245:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"273:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"canonicalName":"PvPGridEnhanced.Game","id":513,"members":[{"constant":false,"id":496,"mutability":"mutable","name":"grid","nameLocation":"379:4:1","nodeType":"VariableDeclaration","scope":513,"src":"360:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"},"typeName":{"baseType":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"360:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":495,"length":{"id":494,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"368:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"360:18:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"}},"visibility":"internal"},{"constant":false,"id":500,"mutability":"mutable","name":"playerTileCount","nameLocation":"421:15:1","nodeType":"VariableDeclaration","scope":513,"src":"393:43:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":499,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":497,"name":"address","nodeType":"ElementaryTypeName","src":"401:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"393:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"412:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"tilesSelected","nameLocation":"454:13:1","nodeType":"VariableDeclaration","scope":513,"src":"446:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"446:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":504,"mutability":"mutable","name":"prizePool","nameLocation":"485:9:1","nodeType":"VariableDeclaration","scope":513,"src":"477:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":503,"name":"uint256","nodeType":"ElementaryTypeName","src":"477:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":506,"mutability":"mutable","name":"finalSelectionBlock","nameLocation":"512:19:1","nodeType":"VariableDeclaration","scope":513,"src":"504:27:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":505,"name":"uint256","nodeType":"ElementaryTypeName","src":"504:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"startTime","nameLocation":"549:9:1","nodeType":"VariableDeclaration","scope":513,"src":"541:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":510,"mutability":"mutable","name":"winnerDetermined","nameLocation":"573:16:1","nodeType":"VariableDeclaration","scope":513,"src":"568:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":509,"name":"bool","nodeType":"ElementaryTypeName","src":"568:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"winner","nameLocation":"607:6:1","nodeType":"VariableDeclaration","scope":513,"src":"599:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"599:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Game","nameLocation":"345:4:1","nodeType":"StructDefinition","scope":1754,"src":"338:282:1","visibility":"public"},{"constant":false,"functionSelector":"117a5b90","id":518,"mutability":"mutable","name":"games","nameLocation":"662:5:1","nodeType":"VariableDeclaration","scope":1754,"src":"630:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game)"},"typeName":{"id":517,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":514,"name":"uint256","nodeType":"ElementaryTypeName","src":"638:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"630:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":516,"nodeType":"UserDefinedTypeName","pathNode":{"id":515,"name":"Game","nameLocations":["649:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"649:4:1"},"referencedDeclaration":513,"src":"649:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}}},"visibility":"public"},{"constant":false,"functionSelector":"536a3ddc","id":520,"mutability":"mutable","name":"currentGameId","nameLocation":"688:13:1","nodeType":"VariableDeclaration","scope":1754,"src":"673:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":519,"name":"uint256","nodeType":"ElementaryTypeName","src":"673:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8b31fb89","id":524,"mutability":"mutable","name":"playerWins","nameLocation":"767:10:1","nodeType":"VariableDeclaration","scope":1754,"src":"732:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":523,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"732:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c8c1fcaa","id":528,"mutability":"mutable","name":"playerGamesPlayed","nameLocation":"818:17:1","nodeType":"VariableDeclaration","scope":1754,"src":"783:52:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":527,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"783:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":530,"mutability":"mutable","name":"owner","nameLocation":"874:5:1","nodeType":"VariableDeclaration","scope":1754,"src":"859:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":529,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"59927044","id":532,"mutability":"mutable","name":"teamWallet","nameLocation":"900:10:1","nodeType":"VariableDeclaration","scope":1754,"src":"885:25:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"5c975abb","id":534,"mutability":"mutable","name":"paused","nameLocation":"971:6:1","nodeType":"VariableDeclaration","scope":1754,"src":"959:18:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":533,"name":"bool","nodeType":"ElementaryTypeName","src":"959:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"public"},{"constant":true,"id":537,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1037:12:1","nodeType":"VariableDeclaration","scope":1754,"src":"1012:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1052:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":540,"mutability":"constant","name":"_ENTERED","nameLocation":"1084:8:1","nodeType":"VariableDeclaration","scope":1754,"src":"1059:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1059:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1095:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":542,"mutability":"mutable","name":"_status","nameLocation":"1118:7:1","nodeType":"VariableDeclaration","scope":1754,"src":"1102:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"19096bbaf57f25f25fc838b12784fb7497242fe3ca9d1c50f6990f13fe053810","id":550,"name":"TileSelected","nameLocation":"1156:12:1","nodeType":"EventDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1185:6:1","nodeType":"VariableDeclaration","scope":550,"src":"1169:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":543,"name":"uint256","nodeType":"ElementaryTypeName","src":"1169:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":546,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1209:6:1","nodeType":"VariableDeclaration","scope":550,"src":"1193:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":548,"indexed":false,"mutability":"mutable","name":"tileIndex","nameLocation":"1225:9:1","nodeType":"VariableDeclaration","scope":550,"src":"1217:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1217:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:67:1"},"src":"1150:86:1"},{"anonymous":false,"eventSelector":"f6ae188cc6336ef5ad970d3c81cda5814b4c4902540924c6924debe94ece13eb","id":558,"name":"GameCompleted","nameLocation":"1247:13:1","nodeType":"EventDefinition","parameters":{"id":557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1277:6:1","nodeType":"VariableDeclaration","scope":558,"src":"1261:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1301:6:1","nodeType":"VariableDeclaration","scope":558,"src":"1285:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"indexed":false,"mutability":"mutable","name":"prize","nameLocation":"1317:5:1","nodeType":"VariableDeclaration","scope":558,"src":"1309:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"1309:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1260:63:1"},"src":"1241:83:1"},{"anonymous":false,"eventSelector":"1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73","id":564,"name":"NewGameStarted","nameLocation":"1335:14:1","nodeType":"EventDefinition","parameters":{"id":563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1366:6:1","nodeType":"VariableDeclaration","scope":564,"src":"1350:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"1350:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":562,"indexed":false,"mutability":"mutable","name":"entryFee","nameLocation":"1382:8:1","nodeType":"VariableDeclaration","scope":564,"src":"1374:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1349:42:1"},"src":"1329:63:1"},{"anonymous":false,"eventSelector":"d4dee1ad9aaf5e16668c28363994a5e60dba69b179e82bb7b9a8a4af8171b642","id":570,"name":"GameRefunded","nameLocation":"1403:12:1","nodeType":"EventDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":566,"indexed":true,"mutability":"mutable","name":"gameId","nameLocation":"1432:6:1","nodeType":"VariableDeclaration","scope":570,"src":"1416:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":568,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1447:6:1","nodeType":"VariableDeclaration","scope":570,"src":"1440:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":567,"name":"string","nodeType":"ElementaryTypeName","src":"1440:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1415:39:1"},"src":"1397:58:1"},{"body":{"id":581,"nodeType":"Block","src":"1486:69:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":573,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1504:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1508:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1504:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":575,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1518:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1504:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f776e6572","id":577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1525:11:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""},"value":"Not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682","typeString":"literal_string \"Not owner\""}],"id":572,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1496:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1496:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":579,"nodeType":"ExpressionStatement","src":"1496:41:1"},{"id":580,"nodeType":"PlaceholderStatement","src":"1547:1:1"}]},"id":582,"name":"onlyOwner","nameLocation":"1474:9:1","nodeType":"ModifierDefinition","parameters":{"id":571,"nodeType":"ParameterList","parameters":[],"src":"1483:2:1"},"src":"1465:90:1","virtual":false,"visibility":"internal"},{"body":{"id":591,"nodeType":"Block","src":"1590:63:1","statements":[{"expression":{"arguments":[{"id":586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1608:7:1","subExpression":{"id":585,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"1609:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e747261637420706175736564","id":587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1617:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15","typeString":"literal_string \"Contract paused\""},"value":"Contract paused"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15","typeString":"literal_string \"Contract paused\""}],"id":584,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1600:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1600:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":589,"nodeType":"ExpressionStatement","src":"1600:35:1"},{"id":590,"nodeType":"PlaceholderStatement","src":"1645:1:1"}]},"id":592,"name":"whenNotPaused","nameLocation":"1574:13:1","nodeType":"ModifierDefinition","parameters":{"id":583,"nodeType":"ParameterList","parameters":[],"src":"1587:2:1"},"src":"1565:88:1","virtual":false,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"1687:151:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":595,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1705:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":596,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"1716:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1705:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1726:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":594,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"1697:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1697:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"ExpressionStatement","src":"1697:63:1"},{"expression":{"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":601,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":602,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":540,"src":"1780:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1770:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ExpressionStatement","src":"1770:18:1"},{"id":605,"nodeType":"PlaceholderStatement","src":"1798:1:1"},{"expression":{"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":606,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":607,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"1819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":609,"nodeType":"ExpressionStatement","src":"1809:22:1"}]},"id":611,"name":"nonReentrant","nameLocation":"1672:12:1","nodeType":"ModifierDefinition","parameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"1684:2:1"},"src":"1663:175:1","virtual":false,"visibility":"internal"},{"body":{"id":661,"nodeType":"Block","src":"1918:313:1","statements":[{"expression":{"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":620,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"1928:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":621,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"1936:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1940:6:1","memberName":"sender","nodeType":"MemberAccess","src":"1936:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1928:18:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":624,"nodeType":"ExpressionStatement","src":"1928:18:1"},{"expression":{"id":627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":625,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"1956:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":626,"name":"_teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"1969:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1956:24:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":628,"nodeType":"ExpressionStatement","src":"1956:24:1"},{"expression":{"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":629,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"1990:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":630,"name":"_entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":613,"src":"2001:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1990:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":632,"nodeType":"ExpressionStatement","src":"1990:20:1"},{"expression":{"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":633,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"2020:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":634,"name":"_gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2030:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2020:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":636,"nodeType":"ExpressionStatement","src":"2020:18:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":638,"name":"_gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":615,"src":"2056:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32303030","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2068:4:1","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"2056:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2074:14:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2048:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2048:41:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":643,"nodeType":"ExpressionStatement","src":"2048:41:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":645,"name":"_teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"2118:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"2133:7:1","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2118:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207465616d2077616c6c6574","id":651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2145:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e","typeString":"literal_string \"Invalid team wallet\""},"value":"Invalid team wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a88cee65b9b3e00164d2d9ef8773b101d84f90a54dba51ce037060537091024e","typeString":"literal_string \"Invalid team wallet\""}],"id":644,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2110:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2110:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"ExpressionStatement","src":"2110:57:1"},{"expression":{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":654,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"2177:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":655,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":537,"src":"2187:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2177:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":657,"nodeType":"ExpressionStatement","src":"2177:22:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":658,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"2209:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2209:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"2209:15:1"}]},"id":662,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":613,"mutability":"mutable","name":"_entryFee","nameLocation":"1868:9:1","nodeType":"VariableDeclaration","scope":662,"src":"1860:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":612,"name":"uint256","nodeType":"ElementaryTypeName","src":"1860:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":615,"mutability":"mutable","name":"_gameFee","nameLocation":"1887:8:1","nodeType":"VariableDeclaration","scope":662,"src":"1879:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":614,"name":"uint256","nodeType":"ElementaryTypeName","src":"1879:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":617,"mutability":"mutable","name":"_teamWallet","nameLocation":"1905:11:1","nodeType":"VariableDeclaration","scope":662,"src":"1897:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1859:58:1"},"returnParameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"1918:0:1"},"scope":1754,"src":"1848:383:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":790,"nodeType":"Block","src":"2324:1077:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":672,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2342:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2346:5:1","memberName":"value","nodeType":"MemberAccess","src":"2342:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":674,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2355:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2342:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f727265637420656e74727920666565","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2365:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d357b34a3d690750c69937c649bb30a03d028666aacc4f34fd3f24525fc36f0b","typeString":"literal_string \"Incorrect entry fee\""},"value":"Incorrect entry fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d357b34a3d690750c69937c649bb30a03d028666aacc4f34fd3f24525fc36f0b","typeString":"literal_string \"Incorrect entry fee\""}],"id":671,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2334:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:53:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"ExpressionStatement","src":"2334:53:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2405:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":681,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"2417:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2405:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696c6520696e646578","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2428:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""},"value":"Invalid tile index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""}],"id":679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2397:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2397:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"2397:52:1"},{"assignments":[688],"declarations":[{"constant":false,"id":688,"mutability":"mutable","name":"game","nameLocation":"2481:4:1","nodeType":"VariableDeclaration","scope":790,"src":"2468:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":687,"nodeType":"UserDefinedTypeName","pathNode":{"id":686,"name":"Game","nameLocations":["2468:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"2468:4:1"},"referencedDeclaration":513,"src":"2468:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":692,"initialValue":{"baseExpression":{"id":689,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"2488:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":691,"indexExpression":{"id":690,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2494:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2488:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2468:40:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":694,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2526:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2531:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"2526:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":697,"indexExpression":{"id":696,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2536:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2526:20:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2558:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2550:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":698,"name":"address","nodeType":"ElementaryTypeName","src":"2550:7:1","typeDescriptions":{}}},"id":701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2550:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2526:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696c6520616c72656164792073656c6563746564","id":703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2562:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""},"value":"Tile already selected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""}],"id":693,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2518:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2518:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":705,"nodeType":"ExpressionStatement","src":"2518:68:1"},{"expression":{"arguments":[{"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2604:22:1","subExpression":{"expression":{"id":707,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2605:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":708,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2610:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"2605:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520616c72656164792066696e6973686564","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2628:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a8721555b9111e120a3a6144983f310909859984153f5e2dda7f98b8f6a5a44","typeString":"literal_string \"Game already finished\""},"value":"Game already finished"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a8721555b9111e120a3a6144983f310909859984153f5e2dda7f98b8f6a5a44","typeString":"literal_string \"Game already finished\""}],"id":706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2596:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2596:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":712,"nodeType":"ExpressionStatement","src":"2596:56:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":714,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2737:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":715,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2742:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"2737:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":718,"indexExpression":{"expression":{"id":716,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2758:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2762:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2758:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2737:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":719,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"2772:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2784:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2772:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2737:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d616e792074696c65732070657220706c61796572","id":723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2787:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a5462ad36fa9ba77ece4e85f8cc61e5bad3934312630807c73454abcc1a87a1","typeString":"literal_string \"Too many tiles per player\""},"value":"Too many tiles per player"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a5462ad36fa9ba77ece4e85f8cc61e5bad3934312630807c73454abcc1a87a1","typeString":"literal_string \"Too many tiles per player\""}],"id":713,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"2729:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:86:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":725,"nodeType":"ExpressionStatement","src":"2729:86:1"},{"expression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":726,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2866:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2871:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"2866:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":730,"indexExpression":{"id":728,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"2876:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2866:20:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2889:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2893:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2889:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2866:33:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":734,"nodeType":"ExpressionStatement","src":"2866:33:1"},{"expression":{"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2909:34:1","subExpression":{"baseExpression":{"expression":{"id":735,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2909:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2914:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"2909:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":740,"indexExpression":{"expression":{"id":737,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"2930:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2934:6:1","memberName":"sender","nodeType":"MemberAccess","src":"2930:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2909:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":742,"nodeType":"ExpressionStatement","src":"2909:34:1"},{"expression":{"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2953:20:1","subExpression":{"expression":{"id":743,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2953:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2958:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"2953:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":747,"nodeType":"ExpressionStatement","src":"2953:20:1"},{"expression":{"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":748,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2983:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2988:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"2983:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":751,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3001:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3005:5:1","memberName":"value","nodeType":"MemberAccess","src":"3001:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2983:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":754,"nodeType":"ExpressionStatement","src":"2983:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":755,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3064:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3069:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"3064:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":759,"indexExpression":{"expression":{"id":757,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3085:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3089:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3085:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3064:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3064:37:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":769,"nodeType":"IfStatement","src":"3060:99:1","trueBody":{"id":768,"nodeType":"Block","src":"3103:56:1","statements":[{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3117:31:1","subExpression":{"baseExpression":{"id":762,"name":"playerGamesPlayed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"3117:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":765,"indexExpression":{"expression":{"id":763,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3135:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3139:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3135:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3117:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"nodeType":"ExpressionStatement","src":"3117:31:1"}]}},{"eventCall":{"arguments":[{"id":771,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3195:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":772,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3210:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3214:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3210:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":774,"name":"tileIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3222:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"TileSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"3182:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3182:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":776,"nodeType":"EmitStatement","src":"3177:55:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":777,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3298:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3303:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"3298:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":779,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3320:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3298:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":789,"nodeType":"IfStatement","src":"3294:101:1","trueBody":{"id":788,"nodeType":"Block","src":"3331:64:1","statements":[{"expression":{"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":781,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3345:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3350:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"3345:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":784,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"3372:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3378:6:1","memberName":"number","nodeType":"MemberAccess","src":"3372:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3345:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":787,"nodeType":"ExpressionStatement","src":"3345:39:1"}]}}]},"functionSelector":"9793ed08","id":791,"implemented":true,"kind":"function","modifiers":[{"id":667,"kind":"modifierInvocation","modifierName":{"id":666,"name":"whenNotPaused","nameLocations":["2297:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"2297:13:1"},"nodeType":"ModifierInvocation","src":"2297:13:1"},{"id":669,"kind":"modifierInvocation","modifierName":{"id":668,"name":"nonReentrant","nameLocations":["2311:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"2311:12:1"},"nodeType":"ModifierInvocation","src":"2311:12:1"}],"name":"selectTile","nameLocation":"2250:10:1","nodeType":"FunctionDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"tileIndex","nameLocation":"2269:9:1","nodeType":"VariableDeclaration","scope":791,"src":"2261:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":663,"name":"uint256","nodeType":"ElementaryTypeName","src":"2261:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2260:19:1"},"returnParameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"2324:0:1"},"scope":1754,"src":"2241:1160:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":958,"nodeType":"Block","src":"3516:1151:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":802,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3534:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3538:5:1","memberName":"value","nodeType":"MemberAccess","src":"3534:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3547:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":805,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3558:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3570:6:1","memberName":"length","nodeType":"MemberAccess","src":"3558:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3547:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3534:42:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f727265637420746f74616c20666565","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3578:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_6f3a2dd884f348baea4b647b176ad0df8b4dbc40208c59558234b6ab357f32d7","typeString":"literal_string \"Incorrect total fee\""},"value":"Incorrect total fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6f3a2dd884f348baea4b647b176ad0df8b4dbc40208c59558234b6ab357f32d7","typeString":"literal_string \"Incorrect total fee\""}],"id":801,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3526:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3526:74:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"3526:74:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":813,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3618:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3630:6:1","memberName":"length","nodeType":"MemberAccess","src":"3618:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3639:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3618:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":817,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3644:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3656:6:1","memberName":"length","nodeType":"MemberAccess","src":"3644:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"34","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3666:1:1","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3644:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3618:49:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e756d626572206f662074696c6573","id":822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3669:25:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8d982c3d05fb1c1b92e7628a789b50170a98d65c41682c4f7ec7f15895fb28","typeString":"literal_string \"Invalid number of tiles\""},"value":"Invalid number of tiles"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8d982c3d05fb1c1b92e7628a789b50170a98d65c41682c4f7ec7f15895fb28","typeString":"literal_string \"Invalid number of tiles\""}],"id":812,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3610:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3610:85:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"3610:85:1"},{"assignments":[827],"declarations":[{"constant":false,"id":827,"mutability":"mutable","name":"game","nameLocation":"3727:4:1","nodeType":"VariableDeclaration","scope":958,"src":"3714:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":826,"nodeType":"UserDefinedTypeName","pathNode":{"id":825,"name":"Game","nameLocations":["3714:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"3714:4:1"},"referencedDeclaration":513,"src":"3714:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":831,"initialValue":{"baseExpression":{"id":828,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3734:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":830,"indexExpression":{"id":829,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"3740:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3734:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3714:40:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":833,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"3772:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":834,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3777:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"3772:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":837,"indexExpression":{"expression":{"id":835,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"3793:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3797:6:1","memberName":"sender","nodeType":"MemberAccess","src":"3793:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3772:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":838,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3807:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3819:6:1","memberName":"length","nodeType":"MemberAccess","src":"3807:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3772:53:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":841,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3829:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3841:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3829:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3772:70:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206d616e792074696c65732070657220706c61796572","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3844:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a5462ad36fa9ba77ece4e85f8cc61e5bad3934312630807c73454abcc1a87a1","typeString":"literal_string \"Too many tiles per player\""},"value":"Too many tiles per player"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a5462ad36fa9ba77ece4e85f8cc61e5bad3934312630807c73454abcc1a87a1","typeString":"literal_string \"Too many tiles per player\""}],"id":832,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3764:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3764:108:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"ExpressionStatement","src":"3764:108:1"},{"body":{"id":903,"nodeType":"Block","src":"3940:308:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":860,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3962:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":862,"indexExpression":{"id":861,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"3974:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3962:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":863,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"3979:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3962:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642074696c6520696e646578","id":865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""},"value":"Invalid tile index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_307f50b69a4586238785c7f353cc857759698486e10bdb7606e5eebb65712344","typeString":"literal_string \"Invalid tile index\""}],"id":859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"3954:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"ExpressionStatement","src":"3954:57:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":869,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4033:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4038:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"4033:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":874,"indexExpression":{"baseExpression":{"id":871,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4043:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":873,"indexExpression":{"id":872,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4055:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4043:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4033:25:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4070:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4062:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"4062:7:1","typeDescriptions":{}}},"id":878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4062:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4033:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54696c6520616c72656164792073656c6563746564","id":880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4074:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""},"value":"Tile already selected"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_589a783ac51f3e05f06eac83bd8eec1775fdc6521ef576e9a389d21f6c097794","typeString":"literal_string \"Tile already selected\""}],"id":868,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4025:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4025:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":882,"nodeType":"ExpressionStatement","src":"4025:73:1"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":883,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4125:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4130:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"4125:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":889,"indexExpression":{"baseExpression":{"id":885,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4135:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":887,"indexExpression":{"id":886,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4147:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4135:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4125:25:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":890,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4153:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4157:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4153:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4125:38:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":893,"nodeType":"ExpressionStatement","src":"4125:38:1"},{"eventCall":{"arguments":[{"id":895,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4195:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":896,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4210:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4214:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4210:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":898,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4222:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":900,"indexExpression":{"id":899,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"4234:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4222:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":894,"name":"TileSelected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"4182:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4182:55:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":902,"nodeType":"EmitStatement","src":"4177:60:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":852,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"3911:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":853,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"3915:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3927:6:1","memberName":"length","nodeType":"MemberAccess","src":"3915:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3911:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":904,"initializationExpression":{"assignments":[849],"declarations":[{"constant":false,"id":849,"mutability":"mutable","name":"i","nameLocation":"3904:1:1","nodeType":"VariableDeclaration","scope":904,"src":"3896:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"3896:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":851,"initialValue":{"hexValue":"30","id":850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3908:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3896:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3935:3:1","subExpression":{"id":856,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":849,"src":"3935:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"3935:3:1"},"nodeType":"ForStatement","src":"3891:357:1"},{"expression":{"id":913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":905,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4266:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":909,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4271:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"4266:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":910,"indexExpression":{"expression":{"id":907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4287:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4291:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4287:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4266:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":911,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4302:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4314:6:1","memberName":"length","nodeType":"MemberAccess","src":"4302:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4266:54:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ExpressionStatement","src":"4266:54:1"},{"expression":{"id":920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":915,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4330:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4335:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"4330:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":918,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4352:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4364:6:1","memberName":"length","nodeType":"MemberAccess","src":"4352:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4330:40:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":921,"nodeType":"ExpressionStatement","src":"4330:40:1"},{"expression":{"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":922,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4380:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4385:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"4380:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":925,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4398:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4402:5:1","memberName":"value","nodeType":"MemberAccess","src":"4398:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4380:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":928,"nodeType":"ExpressionStatement","src":"4380:27:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":929,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4430:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4435:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"4430:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":933,"indexExpression":{"expression":{"id":931,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4451:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4455:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4451:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4430:32:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":934,"name":"tileIndexes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4466:11:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4478:6:1","memberName":"length","nodeType":"MemberAccess","src":"4466:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4430:54:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":944,"nodeType":"IfStatement","src":"4426:116:1","trueBody":{"id":943,"nodeType":"Block","src":"4486:56:1","statements":[{"expression":{"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4500:31:1","subExpression":{"baseExpression":{"id":937,"name":"playerGamesPlayed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4500:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":940,"indexExpression":{"expression":{"id":938,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967281,"src":"4518:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:1","memberName":"sender","nodeType":"MemberAccess","src":"4518:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4500:29:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":942,"nodeType":"ExpressionStatement","src":"4500:31:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":945,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4564:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4569:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"4564:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":947,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4586:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4564:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":957,"nodeType":"IfStatement","src":"4560:101:1","trueBody":{"id":956,"nodeType":"Block","src":"4597:64:1","statements":[{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":949,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"4611:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":951,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4616:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4611:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":952,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4638:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4644:6:1","memberName":"number","nodeType":"MemberAccess","src":"4638:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4611:39:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":955,"nodeType":"ExpressionStatement","src":"4611:39:1"}]}}]},"functionSelector":"30b70493","id":959,"implemented":true,"kind":"function","modifiers":[{"id":797,"kind":"modifierInvocation","modifierName":{"id":796,"name":"whenNotPaused","nameLocations":["3489:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":592,"src":"3489:13:1"},"nodeType":"ModifierInvocation","src":"3489:13:1"},{"id":799,"kind":"modifierInvocation","modifierName":{"id":798,"name":"nonReentrant","nameLocations":["3503:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"3503:12:1"},"nodeType":"ModifierInvocation","src":"3503:12:1"}],"name":"selectMultipleTiles","nameLocation":"3420:19:1","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"mutability":"mutable","name":"tileIndexes","nameLocation":"3459:11:1","nodeType":"VariableDeclaration","scope":959,"src":"3440:30:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":792,"name":"uint256","nodeType":"ElementaryTypeName","src":"3440:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":793,"nodeType":"ArrayTypeName","src":"3440:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3439:32:1"},"returnParameters":{"id":800,"nodeType":"ParameterList","parameters":[],"src":"3516:0:1"},"scope":1754,"src":"3411:1256:1","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1123,"nodeType":"Block","src":"4726:1632:1","statements":[{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"game","nameLocation":"4749:4:1","nodeType":"VariableDeclaration","scope":1123,"src":"4736:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":965,"nodeType":"UserDefinedTypeName","pathNode":{"id":964,"name":"Game","nameLocations":["4736:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"4736:4:1"},"referencedDeclaration":513,"src":"4736:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":970,"initialValue":{"baseExpression":{"id":967,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4756:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":969,"indexExpression":{"id":968,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4762:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4756:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4736:40:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":972,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4794:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4799:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"4794:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":974,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"4816:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4794:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420636f6d706c657465","id":976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4827:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""},"value":"Game not complete"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""}],"id":971,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4786:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4786:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"4786:61:1"},{"expression":{"arguments":[{"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4865:22:1","subExpression":{"expression":{"id":980,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4866:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4871:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"4866:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e657220616c72656164792064657465726d696e6564","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4889:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""},"value":"Winner already determined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""}],"id":979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4857:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4857:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"4857:60:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":987,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"4935:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4941:6:1","memberName":"number","nodeType":"MemberAccess","src":"4935:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":989,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"4950:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4955:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"4950:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4935:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5761697420666f72206e65787420626c6f636b","id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4976:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a561cca8e0d60a1350ab3d75214ab5d9019ee6ebd00084b73435a95876ef79bc","typeString":"literal_string \"Wait for next block\""},"value":"Wait for next block"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a561cca8e0d60a1350ab3d75214ab5d9019ee6ebd00084b73435a95876ef79bc","typeString":"literal_string \"Wait for next block\""}],"id":986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"4927:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4927:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"4927:71:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":996,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"5016:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5022:6:1","memberName":"number","nodeType":"MemberAccess","src":"5016:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":998,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5032:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":999,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5037:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"5032:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323535","id":1000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5059:3:1","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"5032:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5016:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6f206c61746520746f2064657465726d696e652077696e6e6572","id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5064:30:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f22b89869e4d009c38786f64620369ce9d1210b1333585c832ae34a3bb1b0dcc","typeString":"literal_string \"Too late to determine winner\""},"value":"Too late to determine winner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f22b89869e4d009c38786f64620369ce9d1210b1333585c832ae34a3bb1b0dcc","typeString":"literal_string \"Too late to determine winner\""}],"id":995,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"5008:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5008:87:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1005,"nodeType":"ExpressionStatement","src":"5008:87:1"},{"assignments":[1007],"declarations":[{"constant":false,"id":1007,"mutability":"mutable","name":"uniquePlayers","nameLocation":"5177:13:1","nodeType":"VariableDeclaration","scope":1123,"src":"5169:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5169:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1011,"initialValue":{"arguments":[{"id":1009,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5213:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1008,"name":"_countUniquePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1461,"src":"5193:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5193:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5169:58:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"uniquePlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"5241:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1013,"name":"minPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"5257:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5241:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1022,"nodeType":"IfStatement","src":"5237:125:1","trueBody":{"id":1021,"nodeType":"Block","src":"5269:93:1","statements":[{"expression":{"arguments":[{"id":1016,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"5295:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4e6f7420656e6f75676820706c6179657273","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5310:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_543cde6d57481e61eff19dce080efaaf31452fee1732d8dfc4ed801d034e0f39","typeString":"literal_string \"Not enough players\""},"value":"Not enough players"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_543cde6d57481e61eff19dce080efaaf31452fee1732d8dfc4ed801d034e0f39","typeString":"literal_string \"Not enough players\""}],"id":1015,"name":"_refundGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"5283:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5283:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1019,"nodeType":"ExpressionStatement","src":"5283:48:1"},{"functionReturnParameters":963,"id":1020,"nodeType":"Return","src":"5345:7:1"}]}},{"assignments":[1024],"declarations":[{"constant":false,"id":1024,"mutability":"mutable","name":"randomHash","nameLocation":"5446:10:1","nodeType":"VariableDeclaration","scope":1123,"src":"5438:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1023,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1034,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1028,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5477:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5482:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"5477:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5504:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5477:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1027,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967291,"src":"5467:9:1","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":1032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5467:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5459:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1025,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:1","typeDescriptions":{}}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5459:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5438:69:1"},{"assignments":[1036],"declarations":[{"constant":false,"id":1036,"mutability":"mutable","name":"winningTile","nameLocation":"5525:11:1","nodeType":"VariableDeclaration","scope":1123,"src":"5517:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"5517:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1040,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1037,"name":"randomHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1024,"src":"5539:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1038,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"5552:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5539:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5517:44:1"},{"expression":{"id":1048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1041,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5580:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1043,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5585:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"5580:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1044,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5594:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5599:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"5594:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1047,"indexExpression":{"id":1046,"name":"winningTile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"5604:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5594:22:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5580:36:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1049,"nodeType":"ExpressionStatement","src":"5580:36:1"},{"expression":{"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1050,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5626:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5631:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"5626:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5650:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5626:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"ExpressionStatement","src":"5626:28:1"},{"expression":{"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5664:25:1","subExpression":{"baseExpression":{"id":1056,"name":"playerWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"5664:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1059,"indexExpression":{"expression":{"id":1057,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5675:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5680:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"5675:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5664:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1061,"nodeType":"ExpressionStatement","src":"5664:25:1"},{"assignments":[1063],"declarations":[{"constant":false,"id":1063,"mutability":"mutable","name":"platformFee","nameLocation":"5756:11:1","nodeType":"VariableDeclaration","scope":1123,"src":"5748:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5748:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1071,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1064,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5771:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5776:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"5771:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1066,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"5788:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5771:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5770:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5799:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"5770:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5748:56:1"},{"assignments":[1073],"declarations":[{"constant":false,"id":1073,"mutability":"mutable","name":"winnerPrize","nameLocation":"5822:11:1","nodeType":"VariableDeclaration","scope":1123,"src":"5814:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1072,"name":"uint256","nodeType":"ElementaryTypeName","src":"5814:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1078,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1074,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"5836:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5841:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"5836:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1076,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5853:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5836:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5814:50:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1079,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5916:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5930:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5916:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1097,"nodeType":"IfStatement","src":"5912:163:1","trueBody":{"id":1096,"nodeType":"Block","src":"5933:142:1","statements":[{"assignments":[1083,null],"declarations":[{"constant":false,"id":1083,"mutability":"mutable","name":"feeSuccess","nameLocation":"5953:10:1","nodeType":"VariableDeclaration","scope":1096,"src":"5948:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1082,"name":"bool","nodeType":"ElementaryTypeName","src":"5948:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1090,"initialValue":{"arguments":[{"hexValue":"","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6005:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1084,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"5969:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5980:4:1","memberName":"call","nodeType":"MemberAccess","src":"5969:15:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1086,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"5992:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5969:35:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5969:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5947:61:1"},{"expression":{"arguments":[{"id":1092,"name":"feeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1083,"src":"6030:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6042:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6022:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6022:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"ExpressionStatement","src":"6022:42:1"}]}},{"assignments":[1099,null],"declarations":[{"constant":false,"id":1099,"mutability":"mutable","name":"prizeSuccess","nameLocation":"6099:12:1","nodeType":"VariableDeclaration","scope":1123,"src":"6094:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1098,"name":"bool","nodeType":"ElementaryTypeName","src":"6094:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1107,"initialValue":{"arguments":[{"hexValue":"","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6154:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1100,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"6117:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6122:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"6117:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6129:4:1","memberName":"call","nodeType":"MemberAccess","src":"6117:16:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1103,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6141:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"6117:36:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6117:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6093:64:1"},{"expression":{"arguments":[{"id":1109,"name":"prizeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"6175:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072697a65207472616e73666572206661696c6564","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6189:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""},"value":"Prize transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""}],"id":1108,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6167:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6167:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1112,"nodeType":"ExpressionStatement","src":"6167:46:1"},{"eventCall":{"arguments":[{"id":1114,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6251:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1115,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"6266:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1116,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6271:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"6266:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1117,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"6279:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1113,"name":"GameCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"6237:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6237:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1119,"nodeType":"EmitStatement","src":"6232:59:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1120,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"6336:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6336:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1122,"nodeType":"ExpressionStatement","src":"6336:15:1"}]},"functionSelector":"33b16d93","id":1124,"implemented":true,"kind":"function","modifiers":[{"id":962,"kind":"modifierInvocation","modifierName":{"id":961,"name":"nonReentrant","nameLocations":["4713:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"4713:12:1"},"nodeType":"ModifierInvocation","src":"4713:12:1"}],"name":"determineWinner","nameLocation":"4686:15:1","nodeType":"FunctionDefinition","parameters":{"id":960,"nodeType":"ParameterList","parameters":[],"src":"4701:2:1"},"returnParameters":{"id":963,"nodeType":"ParameterList","parameters":[],"src":"4726:0:1"},"scope":1754,"src":"4677:1681:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1268,"nodeType":"Block","src":"6436:1275:1","statements":[{"assignments":[1133],"declarations":[{"constant":false,"id":1133,"mutability":"mutable","name":"game","nameLocation":"6459:4:1","nodeType":"VariableDeclaration","scope":1268,"src":"6446:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1132,"nodeType":"UserDefinedTypeName","pathNode":{"id":1131,"name":"Game","nameLocations":["6446:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"6446:4:1"},"referencedDeclaration":513,"src":"6446:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1137,"initialValue":{"baseExpression":{"id":1134,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"6466:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1136,"indexExpression":{"id":1135,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6472:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6466:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6446:40:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1139,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6504:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6509:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"6504:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1141,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6526:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6504:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d65206e6f7420636f6d706c657465","id":1143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6537:19:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""},"value":"Game not complete"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48a8013ef1249dd69b741b5ee42d4fea80b244ee17808c9ecaf47ba61bd1336d","typeString":"literal_string \"Game not complete\""}],"id":1138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6496:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6496:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1145,"nodeType":"ExpressionStatement","src":"6496:61:1"},{"expression":{"arguments":[{"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6575:22:1","subExpression":{"expression":{"id":1147,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6576:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1148,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6581:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"6576:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57696e6e657220616c72656164792064657465726d696e6564","id":1150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6599:27:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""},"value":"Winner already determined"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_10eed9a6ce907a2af4a0a33da576c8991293b766d00f126cdadb9d666e3a660d","typeString":"literal_string \"Winner already determined\""}],"id":1146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6567:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6567:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1152,"nodeType":"ExpressionStatement","src":"6567:60:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1154,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6645:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6651:6:1","memberName":"number","nodeType":"MemberAccess","src":"6645:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1156,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"6660:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6665:19:1","memberName":"finalSelectionBlock","nodeType":"MemberAccess","referencedDeclaration":506,"src":"6660:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323535","id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6687:3:1","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"6660:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6645:45:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365206e6f726d616c2064657465726d696e6174696f6e","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6692:26:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc31e6a72783b998c00c0418850fd216feaaefe11000b2af807fc3ead171015d","typeString":"literal_string \"Use normal determination\""},"value":"Use normal determination"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc31e6a72783b998c00c0418850fd216feaaefe11000b2af807fc3ead171015d","typeString":"literal_string \"Use normal determination\""}],"id":1153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"6637:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6637:82:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1163,"nodeType":"ExpressionStatement","src":"6637:82:1"},{"assignments":[1165],"declarations":[{"constant":false,"id":1165,"mutability":"mutable","name":"emergencyRandom","nameLocation":"6814:15:1","nodeType":"VariableDeclaration","scope":1268,"src":"6806:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"6806:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1179,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":1171,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6880:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6886:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"6880:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1173,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"6909:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6915:10:1","memberName":"prevrandao","nodeType":"MemberAccess","src":"6909:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1175,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"6939:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1169,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967295,"src":"6850:3:1","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6854:12:1","memberName":"encodePacked","nodeType":"MemberAccess","src":"6850:16:1","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6850:112:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1168,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967288,"src":"6840:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6840:123:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6832:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"6832:7:1","typeDescriptions":{}}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:132:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6806:158:1"},{"assignments":[1181],"declarations":[{"constant":false,"id":1181,"mutability":"mutable","name":"winningTile","nameLocation":"6982:11:1","nodeType":"VariableDeclaration","scope":1268,"src":"6974:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"6974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1185,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"emergencyRandom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"6996:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1183,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7014:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6996:27:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6974:49:1"},{"expression":{"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1186,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7042:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7047:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"7042:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1189,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7056:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7061:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"7056:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1192,"indexExpression":{"id":1191,"name":"winningTile","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1181,"src":"7066:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7056:22:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7042:36:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1194,"nodeType":"ExpressionStatement","src":"7042:36:1"},{"expression":{"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1195,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7088:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7093:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"7088:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7112:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7088:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1200,"nodeType":"ExpressionStatement","src":"7088:28:1"},{"expression":{"id":1205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7126:25:1","subExpression":{"baseExpression":{"id":1201,"name":"playerWins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":524,"src":"7126:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1204,"indexExpression":{"expression":{"id":1202,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7137:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7142:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"7137:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7126:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1206,"nodeType":"ExpressionStatement","src":"7126:25:1"},{"assignments":[1208],"declarations":[{"constant":false,"id":1208,"mutability":"mutable","name":"platformFee","nameLocation":"7178:11:1","nodeType":"VariableDeclaration","scope":1268,"src":"7170:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"7170:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1216,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1209,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7193:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1210,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7198:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"7193:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1211,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"7210:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7193:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1213,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7192:26:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"3130303030","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7221:5:1","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"value":"10000"},"src":"7192:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7170:56:1"},{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"winnerPrize","nameLocation":"7244:11:1","nodeType":"VariableDeclaration","scope":1268,"src":"7236:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint256","nodeType":"ElementaryTypeName","src":"7236:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1223,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1219,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7258:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7263:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"7258:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1221,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7275:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7258:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7236:50:1"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7309:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7323:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7309:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1242,"nodeType":"IfStatement","src":"7305:158:1","trueBody":{"id":1241,"nodeType":"Block","src":"7326:137:1","statements":[{"assignments":[1228,null],"declarations":[{"constant":false,"id":1228,"mutability":"mutable","name":"feeSuccess","nameLocation":"7346:10:1","nodeType":"VariableDeclaration","scope":1241,"src":"7341:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1227,"name":"bool","nodeType":"ElementaryTypeName","src":"7341:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1235,"initialValue":{"arguments":[{"hexValue":"","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7393:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1229,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7362:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7368:4:1","memberName":"call","nodeType":"MemberAccess","src":"7362:10:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1231,"name":"platformFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7380:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7362:30:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7362:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7340:56:1"},{"expression":{"arguments":[{"id":1237,"name":"feeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"7418:10:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"466565207472616e73666572206661696c6564","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7430:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""},"value":"Fee transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56","typeString":"literal_string \"Fee transfer failed\""}],"id":1236,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7410:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7410:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1240,"nodeType":"ExpressionStatement","src":"7410:42:1"}]}},{"assignments":[1244,null],"declarations":[{"constant":false,"id":1244,"mutability":"mutable","name":"prizeSuccess","nameLocation":"7487:12:1","nodeType":"VariableDeclaration","scope":1268,"src":"7482:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1243,"name":"bool","nodeType":"ElementaryTypeName","src":"7482:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1252,"initialValue":{"arguments":[{"hexValue":"","id":1250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7542:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":1245,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7505:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7510:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"7505:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7517:4:1","memberName":"call","nodeType":"MemberAccess","src":"7505:16:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1248,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"7529:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"7505:36:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7505:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7481:64:1"},{"expression":{"arguments":[{"id":1254,"name":"prizeSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1244,"src":"7563:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072697a65207472616e73666572206661696c6564","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7577:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""},"value":"Prize transfer failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e7726e22b3945fd776004c46f31f7810e450113825374f511aae4e3ade52646e","typeString":"literal_string \"Prize transfer failed\""}],"id":1253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"7555:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7555:46:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"7555:46:1"},{"eventCall":{"arguments":[{"id":1259,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7639:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1260,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1133,"src":"7654:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1261,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7659:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"7654:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1262,"name":"winnerPrize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"7667:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1258,"name":"GameCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"7625:13:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7625:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1264,"nodeType":"EmitStatement","src":"7620:59:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1265,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"7689:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7689:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"ExpressionStatement","src":"7689:15:1"}]},"functionSelector":"39c85bff","id":1269,"implemented":true,"kind":"function","modifiers":[{"id":1127,"kind":"modifierInvocation","modifierName":{"id":1126,"name":"onlyOwner","nameLocations":["6413:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"6413:9:1"},"nodeType":"ModifierInvocation","src":"6413:9:1"},{"id":1129,"kind":"modifierInvocation","modifierName":{"id":1128,"name":"nonReentrant","nameLocations":["6423:12:1"],"nodeType":"IdentifierPath","referencedDeclaration":611,"src":"6423:12:1"},"nodeType":"ModifierInvocation","src":"6423:12:1"}],"name":"emergencyDetermineWinner","nameLocation":"6377:24:1","nodeType":"FunctionDefinition","parameters":{"id":1125,"nodeType":"ParameterList","parameters":[],"src":"6401:2:1"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[],"src":"6436:0:1"},"scope":1754,"src":"6368:1343:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1360,"nodeType":"Block","src":"7788:633:1","statements":[{"assignments":[1278],"declarations":[{"constant":false,"id":1278,"mutability":"mutable","name":"game","nameLocation":"7811:4:1","nodeType":"VariableDeclaration","scope":1360,"src":"7798:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1277,"nodeType":"UserDefinedTypeName","pathNode":{"id":1276,"name":"Game","nameLocations":["7798:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"7798:4:1"},"referencedDeclaration":513,"src":"7798:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1282,"initialValue":{"baseExpression":{"id":1279,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"7818:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1281,"indexExpression":{"id":1280,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7824:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7818:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7798:33:1"},{"body":{"id":1344,"nodeType":"Block","src":"7920:360:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1293,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"7938:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7943:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"7938:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1296,"indexExpression":{"id":1295,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7948:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7938:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7962:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7954:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"7954:7:1","typeDescriptions":{}}},"id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7954:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7938:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1343,"nodeType":"IfStatement","src":"7934:336:1","trueBody":{"id":1342,"nodeType":"Block","src":"7966:304:1","statements":[{"assignments":[1303],"declarations":[{"constant":false,"id":1303,"mutability":"mutable","name":"refundAmount","nameLocation":"7992:12:1","nodeType":"VariableDeclaration","scope":1342,"src":"7984:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"7984:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1313,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1304,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"8007:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"expression":{"id":1305,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8018:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8023:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"8018:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1311,"indexExpression":{"baseExpression":{"expression":{"id":1307,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8039:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8044:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"8039:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1310,"indexExpression":{"id":1309,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"8049:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8039:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8018:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8007:45:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7984:68:1"},{"expression":{"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1314,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8070:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8075:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"8070:20:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1321,"indexExpression":{"baseExpression":{"expression":{"id":1316,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8091:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8096:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"8091:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1319,"indexExpression":{"id":1318,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"8101:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8091:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8070:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8107:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8070:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1324,"nodeType":"ExpressionStatement","src":"8070:38:1"},{"assignments":[1326,null],"declarations":[{"constant":false,"id":1326,"mutability":"mutable","name":"success","nameLocation":"8149:7:1","nodeType":"VariableDeclaration","scope":1342,"src":"8144:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1325,"name":"bool","nodeType":"ElementaryTypeName","src":"8144:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1336,"initialValue":{"arguments":[{"hexValue":"","id":1334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8201:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"baseExpression":{"expression":{"id":1327,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8162:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1328,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8167:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"8162:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1330,"indexExpression":{"id":1329,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"8172:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8162:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8175:4:1","memberName":"call","nodeType":"MemberAccess","src":"8162:17:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1332,"name":"refundAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"8187:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8162:38:1","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8162:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8143:61:1"},{"expression":{"arguments":[{"id":1338,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"8230:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526566756e64206661696c6564","id":1339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8239:15:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""},"value":"Refund failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_940ea0545bf4a4779ef86217d18a28c86bb09c07d43dd7635f3da6878953d25e","typeString":"literal_string \"Refund failed\""}],"id":1337,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"8222:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8222:33:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"8222:33:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1288,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"7904:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7900:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1345,"initializationExpression":{"assignments":[1284],"declarations":[{"constant":false,"id":1284,"mutability":"mutable","name":"i","nameLocation":"7893:1:1","nodeType":"VariableDeclaration","scope":1345,"src":"7885:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1283,"name":"uint256","nodeType":"ElementaryTypeName","src":"7885:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1286,"initialValue":{"hexValue":"30","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7897:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7885:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7915:3:1","subExpression":{"id":1290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"7915:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"7915:3:1"},"nodeType":"ForStatement","src":"7880:400:1"},{"expression":{"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1346,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"8298:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8303:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"8298:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8322:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8298:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1351,"nodeType":"ExpressionStatement","src":"8298:28:1"},{"eventCall":{"arguments":[{"id":1353,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"8374:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1354,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1273,"src":"8382:6:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1352,"name":"GameRefunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"8361:12:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8361:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"EmitStatement","src":"8356:33:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1357,"name":"_startNewGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"8399:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1359,"nodeType":"ExpressionStatement","src":"8399:15:1"}]},"id":1361,"implemented":true,"kind":"function","modifiers":[],"name":"_refundGame","nameLocation":"7730:11:1","nodeType":"FunctionDefinition","parameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1271,"mutability":"mutable","name":"gameId","nameLocation":"7750:6:1","nodeType":"VariableDeclaration","scope":1361,"src":"7742:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"7742:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1273,"mutability":"mutable","name":"reason","nameLocation":"7772:6:1","nodeType":"VariableDeclaration","scope":1361,"src":"7758:20:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1272,"name":"string","nodeType":"ElementaryTypeName","src":"7758:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7741:38:1"},"returnParameters":{"id":1275,"nodeType":"ParameterList","parameters":[],"src":"7788:0:1"},"scope":1754,"src":"7721:700:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1460,"nodeType":"Block","src":"8507:704:1","statements":[{"assignments":[1370],"declarations":[{"constant":false,"id":1370,"mutability":"mutable","name":"game","nameLocation":"8530:4:1","nodeType":"VariableDeclaration","scope":1460,"src":"8517:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1369,"nodeType":"UserDefinedTypeName","pathNode":{"id":1368,"name":"Game","nameLocations":["8517:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"8517:4:1"},"referencedDeclaration":513,"src":"8517:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1374,"initialValue":{"baseExpression":{"id":1371,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"8537:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1373,"indexExpression":{"id":1372,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"8543:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8537:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8517:33:1"},{"assignments":[1379],"declarations":[{"constant":false,"id":1379,"mutability":"mutable","name":"players","nameLocation":"8577:7:1","nodeType":"VariableDeclaration","scope":1460,"src":"8560:24:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"8560:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1378,"nodeType":"ArrayTypeName","src":"8560:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1385,"initialValue":{"arguments":[{"id":1383,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"8601:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8587:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"8591:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1381,"nodeType":"ArrayTypeName","src":"8591:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8587:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8560:51:1"},{"assignments":[1387],"declarations":[{"constant":false,"id":1387,"mutability":"mutable","name":"count","nameLocation":"8629:5:1","nodeType":"VariableDeclaration","scope":1460,"src":"8621:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"8621:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1389,"initialValue":{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8637:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8621:17:1"},{"body":{"id":1456,"nodeType":"Block","src":"8697:477:1","statements":[{"assignments":[1401],"declarations":[{"constant":false,"id":1401,"mutability":"mutable","name":"player","nameLocation":"8719:6:1","nodeType":"VariableDeclaration","scope":1456,"src":"8711:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"8711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1406,"initialValue":{"baseExpression":{"expression":{"id":1402,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"8728:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8733:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"8728:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1405,"indexExpression":{"id":1404,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8738:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8728:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8711:29:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1407,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"8758:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8768:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"8768:7:1","typeDescriptions":{}}},"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8768:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8758:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"IfStatement","src":"8754:410:1","trueBody":{"id":1454,"nodeType":"Block","src":"8780:384:1","statements":[{"assignments":[1414],"declarations":[{"constant":false,"id":1414,"mutability":"mutable","name":"found","nameLocation":"8803:5:1","nodeType":"VariableDeclaration","scope":1454,"src":"8798:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1413,"name":"bool","nodeType":"ElementaryTypeName","src":"8798:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1416,"initialValue":{"hexValue":"66616c7365","id":1415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8811:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"8798:18:1"},{"body":{"id":1439,"nodeType":"Block","src":"8870:158:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1427,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"8896:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1429,"indexExpression":{"id":1428,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8904:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8896:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1430,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"8910:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8896:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1438,"nodeType":"IfStatement","src":"8892:118:1","trueBody":{"id":1437,"nodeType":"Block","src":"8918:92:1","statements":[{"expression":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1432,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"8944:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8952:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8944:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"ExpressionStatement","src":"8944:12:1"},{"id":1436,"nodeType":"Break","src":"8982:5:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1421,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8854:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1422,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"8858:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8854:9:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1440,"initializationExpression":{"assignments":[1418],"declarations":[{"constant":false,"id":1418,"mutability":"mutable","name":"j","nameLocation":"8847:1:1","nodeType":"VariableDeclaration","scope":1440,"src":"8839:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1417,"name":"uint256","nodeType":"ElementaryTypeName","src":"8839:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1420,"initialValue":{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8851:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8839:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8865:3:1","subExpression":{"id":1424,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"8865:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ExpressionStatement","src":"8865:3:1"},"nodeType":"ForStatement","src":"8834:194:1"},{"condition":{"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9049:6:1","subExpression":{"id":1441,"name":"found","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"9050:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1453,"nodeType":"IfStatement","src":"9045:105:1","trueBody":{"id":1452,"nodeType":"Block","src":"9057:93:1","statements":[{"expression":{"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1443,"name":"players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1379,"src":"9079:7:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":1445,"indexExpression":{"id":1444,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9087:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9079:14:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1446,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"9096:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9079:23:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1448,"nodeType":"ExpressionStatement","src":"9079:23:1"},{"expression":{"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9124:7:1","subExpression":{"id":1449,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9124:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1451,"nodeType":"ExpressionStatement","src":"9124:7:1"}]}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8677:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1395,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"8681:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8677:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1457,"initializationExpression":{"assignments":[1391],"declarations":[{"constant":false,"id":1391,"mutability":"mutable","name":"i","nameLocation":"8670:1:1","nodeType":"VariableDeclaration","scope":1457,"src":"8662:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"8662:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1393,"initialValue":{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8674:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8662:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8692:3:1","subExpression":{"id":1397,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"8692:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1399,"nodeType":"ExpressionStatement","src":"8692:3:1"},"nodeType":"ForStatement","src":"8657:517:1"},{"expression":{"id":1458,"name":"count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"9199:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1367,"id":1459,"nodeType":"Return","src":"9192:12:1"}]},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"_countUniquePlayers","nameLocation":"8440:19:1","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"gameId","nameLocation":"8468:6:1","nodeType":"VariableDeclaration","scope":1461,"src":"8460:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1362,"name":"uint256","nodeType":"ElementaryTypeName","src":"8460:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8459:16:1"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1461,"src":"8498:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1365,"name":"uint256","nodeType":"ElementaryTypeName","src":"8498:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8497:9:1"},"scope":1754,"src":"8431:780:1","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":1486,"nodeType":"Block","src":"9254:193:1","statements":[{"expression":{"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9264:15:1","subExpression":{"id":1464,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9264:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1466,"nodeType":"ExpressionStatement","src":"9264:15:1"},{"assignments":[1469],"declarations":[{"constant":false,"id":1469,"mutability":"mutable","name":"newGame","nameLocation":"9302:7:1","nodeType":"VariableDeclaration","scope":1486,"src":"9289:20:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1468,"nodeType":"UserDefinedTypeName","pathNode":{"id":1467,"name":"Game","nameLocations":["9289:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"9289:4:1"},"referencedDeclaration":513,"src":"9289:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1473,"initialValue":{"baseExpression":{"id":1470,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9312:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1472,"indexExpression":{"id":1471,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9318:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9312:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9289:43:1"},{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1474,"name":"newGame","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"9342:7:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9350:9:1","memberName":"startTime","nodeType":"MemberAccess","referencedDeclaration":508,"src":"9342:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1477,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294967292,"src":"9362:5:1","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9368:9:1","memberName":"timestamp","nodeType":"MemberAccess","src":"9362:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9342:35:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1480,"nodeType":"ExpressionStatement","src":"9342:35:1"},{"eventCall":{"arguments":[{"id":1482,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9416:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1483,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"9431:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1481,"name":"NewGameStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"9401:14:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":1484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9401:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1485,"nodeType":"EmitStatement","src":"9396:44:1"}]},"id":1487,"implemented":true,"kind":"function","modifiers":[],"name":"_startNewGame","nameLocation":"9230:13:1","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"9243:2:1"},"returnParameters":{"id":1463,"nodeType":"ParameterList","parameters":[],"src":"9254:0:1"},"scope":1754,"src":"9221:226:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1498,"nodeType":"Block","src":"9532:33:1","statements":[{"expression":{"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1494,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"9542:6:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1495,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9551:7:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9542:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1497,"nodeType":"ExpressionStatement","src":"9542:16:1"}]},"functionSelector":"16c38b3c","id":1499,"implemented":true,"kind":"function","modifiers":[{"id":1492,"kind":"modifierInvocation","modifierName":{"id":1491,"name":"onlyOwner","nameLocations":["9522:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"9522:9:1"},"nodeType":"ModifierInvocation","src":"9522:9:1"}],"name":"setPaused","nameLocation":"9489:9:1","nodeType":"FunctionDefinition","parameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"_paused","nameLocation":"9504:7:1","nodeType":"VariableDeclaration","scope":1499,"src":"9499:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1488,"name":"bool","nodeType":"ElementaryTypeName","src":"9499:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9498:14:1"},"returnParameters":{"id":1493,"nodeType":"ParameterList","parameters":[],"src":"9532:0:1"},"scope":1754,"src":"9480:85:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1520,"nodeType":"Block","src":"9635:113:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":1507,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"9653:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1509,"indexExpression":{"id":1508,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"9659:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9653:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"id":1510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9674:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"9653:34:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9691:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9653:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"47616d6520696e2070726f6772657373","id":1513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9694:18:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1b7c55786d4829823a08314f48f69f19751f92d363eb671f800edc0cdc35e1c2","typeString":"literal_string \"Game in progress\""},"value":"Game in progress"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1b7c55786d4829823a08314f48f69f19751f92d363eb671f800edc0cdc35e1c2","typeString":"literal_string \"Game in progress\""}],"id":1506,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9645:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9645:68:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1515,"nodeType":"ExpressionStatement","src":"9645:68:1"},{"expression":{"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1516,"name":"entryFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"9723:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1517,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1501,"src":"9734:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9723:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1519,"nodeType":"ExpressionStatement","src":"9723:18:1"}]},"functionSelector":"aa182626","id":1521,"implemented":true,"kind":"function","modifiers":[{"id":1504,"kind":"modifierInvocation","modifierName":{"id":1503,"name":"onlyOwner","nameLocations":["9625:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"9625:9:1"},"nodeType":"ModifierInvocation","src":"9625:9:1"}],"name":"updateEntryFee","nameLocation":"9584:14:1","nodeType":"FunctionDefinition","parameters":{"id":1502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"mutability":"mutable","name":"_newFee","nameLocation":"9607:7:1","nodeType":"VariableDeclaration","scope":1521,"src":"9599:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1500,"name":"uint256","nodeType":"ElementaryTypeName","src":"9599:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9598:17:1"},"returnParameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"9635:0:1"},"scope":1754,"src":"9575:173:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1539,"nodeType":"Block","src":"9817:95:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"9835:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"32303030","id":1530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9846:4:1","typeDescriptions":{"typeIdentifier":"t_rational_2000_by_1","typeString":"int_const 2000"},"value":"2000"},"src":"9835:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"46656520746f6f2068696768","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9852:14:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""},"value":"Fee too high"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1","typeString":"literal_string \"Fee too high\""}],"id":1528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9827:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9827:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"9827:40:1"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1535,"name":"gameFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"9888:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1536,"name":"_newFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"9898:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9888:17:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1538,"nodeType":"ExpressionStatement","src":"9888:17:1"}]},"functionSelector":"b70a6dec","id":1540,"implemented":true,"kind":"function","modifiers":[{"id":1526,"kind":"modifierInvocation","modifierName":{"id":1525,"name":"onlyOwner","nameLocations":["9807:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"9807:9:1"},"nodeType":"ModifierInvocation","src":"9807:9:1"}],"name":"updateGameFee","nameLocation":"9767:13:1","nodeType":"FunctionDefinition","parameters":{"id":1524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1523,"mutability":"mutable","name":"_newFee","nameLocation":"9789:7:1","nodeType":"VariableDeclaration","scope":1540,"src":"9781:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1522,"name":"uint256","nodeType":"ElementaryTypeName","src":"9781:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9780:17:1"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"9817:0:1"},"scope":1754,"src":"9758:154:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1561,"nodeType":"Block","src":"9987:101:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1548,"name":"_newWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10005:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10027:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10019:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"10019:7:1","typeDescriptions":{}}},"id":1552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10019:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10005:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642077616c6c6574","id":1554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10031:16:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6711091e95d1cc0916752596e5ca9e74d8e033197d30e64a48eb755d3cfdcbc","typeString":"literal_string \"Invalid wallet\""},"value":"Invalid wallet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6711091e95d1cc0916752596e5ca9e74d8e033197d30e64a48eb755d3cfdcbc","typeString":"literal_string \"Invalid wallet\""}],"id":1547,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"9997:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9997:51:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1556,"nodeType":"ExpressionStatement","src":"9997:51:1"},{"expression":{"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1557,"name":"teamWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"10058:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1558,"name":"_newWallet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"10071:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10058:23:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1560,"nodeType":"ExpressionStatement","src":"10058:23:1"}]},"functionSelector":"7cb332bb","id":1562,"implemented":true,"kind":"function","modifiers":[{"id":1545,"kind":"modifierInvocation","modifierName":{"id":1544,"name":"onlyOwner","nameLocations":["9977:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"9977:9:1"},"nodeType":"ModifierInvocation","src":"9977:9:1"}],"name":"updateTeamWallet","nameLocation":"9931:16:1","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"_newWallet","nameLocation":"9956:10:1","nodeType":"VariableDeclaration","scope":1562,"src":"9948:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1541,"name":"address","nodeType":"ElementaryTypeName","src":"9948:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9947:20:1"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[],"src":"9987:0:1"},"scope":1754,"src":"9922:166:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1584,"nodeType":"Block","src":"10164:127:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1570,"name":"_minPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10182:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"32","id":1571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10197:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10182:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1573,"name":"_minPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10202:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1574,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"10217:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10202:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10182:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e20706c6179657273","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10228:21:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2926b95256a76f75dca2f87fb1f1f0fc8c745a32d3c542732f42f002062a994","typeString":"literal_string \"Invalid min players\""},"value":"Invalid min players"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2926b95256a76f75dca2f87fb1f1f0fc8c745a32d3c542732f42f002062a994","typeString":"literal_string \"Invalid min players\""}],"id":1569,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10174:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10174:76:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"10174:76:1"},{"expression":{"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1580,"name":"minPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":492,"src":"10260:10:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1581,"name":"_minPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"10273:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10260:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1583,"nodeType":"ExpressionStatement","src":"10260:24:1"}]},"functionSelector":"8f4fafc8","id":1585,"implemented":true,"kind":"function","modifiers":[{"id":1567,"kind":"modifierInvocation","modifierName":{"id":1566,"name":"onlyOwner","nameLocations":["10154:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"10154:9:1"},"nodeType":"ModifierInvocation","src":"10154:9:1"}],"name":"updateMinPlayers","nameLocation":"10107:16:1","nodeType":"FunctionDefinition","parameters":{"id":1565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1564,"mutability":"mutable","name":"_minPlayers","nameLocation":"10132:11:1","nodeType":"VariableDeclaration","scope":1585,"src":"10124:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1563,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10123:21:1"},"returnParameters":{"id":1568,"nodeType":"ParameterList","parameters":[],"src":"10164:0:1"},"scope":1754,"src":"10098:193:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1606,"nodeType":"Block","src":"10365:93:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1593,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10383:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10403:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10395:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"10395:7:1","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10395:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10383:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642061646472657373","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10407:17:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""},"value":"Invalid address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226","typeString":"literal_string \"Invalid address\""}],"id":1592,"name":"require","nodeType":"Identifier","overloadedDeclarations":[4294967278,4294967278,4294967278],"referencedDeclaration":4294967278,"src":"10375:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10375:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1601,"nodeType":"ExpressionStatement","src":"10375:50:1"},{"expression":{"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1602,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"10435:5:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1603,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"10443:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10435:16:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1605,"nodeType":"ExpressionStatement","src":"10435:16:1"}]},"functionSelector":"f2fde38b","id":1607,"implemented":true,"kind":"function","modifiers":[{"id":1590,"kind":"modifierInvocation","modifierName":{"id":1589,"name":"onlyOwner","nameLocations":["10355:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":582,"src":"10355:9:1"},"nodeType":"ModifierInvocation","src":"10355:9:1"}],"name":"transferOwnership","nameLocation":"10310:17:1","nodeType":"FunctionDefinition","parameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"newOwner","nameLocation":"10336:8:1","nodeType":"VariableDeclaration","scope":1607,"src":"10328:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1586,"name":"address","nodeType":"ElementaryTypeName","src":"10328:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10327:18:1"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[],"src":"10365:0:1"},"scope":1754,"src":"10301:157:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1621,"nodeType":"Block","src":"10573:42:1","statements":[{"expression":{"expression":{"baseExpression":{"id":1616,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"10590:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1618,"indexExpression":{"id":1617,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"10596:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10590:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"id":1619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10604:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"10590:18:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"functionReturnParameters":1615,"id":1620,"nodeType":"Return","src":"10583:25:1"}]},"functionSelector":"27754775","id":1622,"implemented":true,"kind":"function","modifiers":[],"name":"getGrid","nameLocation":"10499:7:1","nodeType":"FunctionDefinition","parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"gameId","nameLocation":"10515:6:1","nodeType":"VariableDeclaration","scope":1622,"src":"10507:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1608,"name":"uint256","nodeType":"ElementaryTypeName","src":"10507:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10506:16:1"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1622,"src":"10546:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_memory_ptr","typeString":"address[16]"},"typeName":{"baseType":{"id":1611,"name":"address","nodeType":"ElementaryTypeName","src":"10546:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1613,"length":{"id":1612,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"10554:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"10546:18:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"}},"visibility":"internal"}],"src":"10545:27:1"},"scope":1754,"src":"10490:125:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1634,"nodeType":"Block","src":"10701:49:1","statements":[{"expression":{"expression":{"baseExpression":{"id":1629,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"10718:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1631,"indexExpression":{"id":1630,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"10724:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10718:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"id":1632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10739:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"10718:25:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"functionReturnParameters":1628,"id":1633,"nodeType":"Return","src":"10711:32:1"}]},"functionSelector":"de592333","id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentGrid","nameLocation":"10634:14:1","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"10648:2:1"},"returnParameters":{"id":1628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"10674:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_memory_ptr","typeString":"address[16]"},"typeName":{"baseType":{"id":1624,"name":"address","nodeType":"ElementaryTypeName","src":"10674:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1626,"length":{"id":1625,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"10682:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"ArrayTypeName","src":"10674:18:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage_ptr","typeString":"address[16]"}},"visibility":"internal"}],"src":"10673:27:1"},"scope":1754,"src":"10625:125:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1700,"nodeType":"Block","src":"10830:395:1","statements":[{"assignments":[1643],"declarations":[{"constant":false,"id":1643,"mutability":"mutable","name":"game","nameLocation":"10853:4:1","nodeType":"VariableDeclaration","scope":1700,"src":"10840:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1642,"nodeType":"UserDefinedTypeName","pathNode":{"id":1641,"name":"Game","nameLocations":["10840:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"10840:4:1"},"referencedDeclaration":513,"src":"10840:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1647,"initialValue":{"baseExpression":{"id":1644,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"10860:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1646,"indexExpression":{"id":1645,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"10866:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10860:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10840:40:1"},{"assignments":[1652],"declarations":[{"constant":false,"id":1652,"mutability":"mutable","name":"available","nameLocation":"10907:9:1","nodeType":"VariableDeclaration","scope":1700,"src":"10890:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1650,"name":"uint256","nodeType":"ElementaryTypeName","src":"10890:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1651,"nodeType":"ArrayTypeName","src":"10890:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1661,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1656,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"10933:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1657,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"10945:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10950:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"10945:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10933:30:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"10919:13:1","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1653,"name":"uint256","nodeType":"ElementaryTypeName","src":"10923:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1654,"nodeType":"ArrayTypeName","src":"10923:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:45:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10890:74:1"},{"assignments":[1663],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"index","nameLocation":"10982:5:1","nodeType":"VariableDeclaration","scope":1700,"src":"10974:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1662,"name":"uint256","nodeType":"ElementaryTypeName","src":"10974:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1665,"initialValue":{"hexValue":"30","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10990:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10974:17:1"},{"body":{"id":1696,"nodeType":"Block","src":"11050:134:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1676,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1643,"src":"11068:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1677,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11073:4:1","memberName":"grid","nodeType":"MemberAccess","referencedDeclaration":496,"src":"11068:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$16_storage","typeString":"address[16] storage ref"}},"id":1679,"indexExpression":{"id":1678,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"11078:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11068:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11092:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11084:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1680,"name":"address","nodeType":"ElementaryTypeName","src":"11084:7:1","typeDescriptions":{}}},"id":1683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11084:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11068:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"11064:110:1","trueBody":{"id":1694,"nodeType":"Block","src":"11096:78:1","statements":[{"expression":{"id":1689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1685,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"11114:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1687,"indexExpression":{"id":1686,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11124:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11114:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1688,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"11133:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11114:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1690,"nodeType":"ExpressionStatement","src":"11114:20:1"},{"expression":{"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11152:7:1","subExpression":{"id":1691,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"11152:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1693,"nodeType":"ExpressionStatement","src":"11152:7:1"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1670,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"11030:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1671,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"11034:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11030:13:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"initializationExpression":{"assignments":[1667],"declarations":[{"constant":false,"id":1667,"mutability":"mutable","name":"i","nameLocation":"11023:1:1","nodeType":"VariableDeclaration","scope":1697,"src":"11015:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1666,"name":"uint256","nodeType":"ElementaryTypeName","src":"11015:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1669,"initialValue":{"hexValue":"30","id":1668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11027:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11015:13:1"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11045:3:1","subExpression":{"id":1673,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1667,"src":"11045:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"11045:3:1"},"nodeType":"ForStatement","src":"11010:174:1"},{"expression":{"id":1698,"name":"available","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"11209:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":1640,"id":1699,"nodeType":"Return","src":"11202:16:1"}]},"functionSelector":"c19f4925","id":1701,"implemented":true,"kind":"function","modifiers":[],"name":"getAvailableTiles","nameLocation":"10769:17:1","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[],"src":"10786:2:1"},"returnParameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1701,"src":"10812:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1637,"name":"uint256","nodeType":"ElementaryTypeName","src":"10812:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1638,"nodeType":"ArrayTypeName","src":"10812:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10811:18:1"},"scope":1754,"src":"10760:465:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1715,"nodeType":"Block","src":"11311:68:1","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1708,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11328:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1710,"indexExpression":{"id":1709,"name":"currentGameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"11334:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11328:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"id":1711,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11349:15:1","memberName":"playerTileCount","nodeType":"MemberAccess","referencedDeclaration":500,"src":"11328:36:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1713,"indexExpression":{"id":1712,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"11365:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11328:44:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1707,"id":1714,"nodeType":"Return","src":"11321:51:1"}]},"functionSelector":"6915d788","id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayerTileCount","nameLocation":"11244:18:1","nodeType":"FunctionDefinition","parameters":{"id":1704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1703,"mutability":"mutable","name":"player","nameLocation":"11271:6:1","nodeType":"VariableDeclaration","scope":1716,"src":"11263:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"11263:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11262:16:1"},"returnParameters":{"id":1707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1716,"src":"11302:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11301:9:1"},"scope":1754,"src":"11235:144:1","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1752,"nodeType":"Block","src":"11593:242:1","statements":[{"assignments":[1733],"declarations":[{"constant":false,"id":1733,"mutability":"mutable","name":"game","nameLocation":"11616:4:1","nodeType":"VariableDeclaration","scope":1752,"src":"11603:17:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"},"typeName":{"id":1732,"nodeType":"UserDefinedTypeName","pathNode":{"id":1731,"name":"Game","nameLocations":["11603:4:1"],"nodeType":"IdentifierPath","referencedDeclaration":513,"src":"11603:4:1"},"referencedDeclaration":513,"src":"11603:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game"}},"visibility":"internal"}],"id":1737,"initialValue":{"baseExpression":{"id":1734,"name":"games","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"11623:5:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Game_$513_storage_$","typeString":"mapping(uint256 => struct PvPGridEnhanced.Game storage ref)"}},"id":1736,"indexExpression":{"id":1735,"name":"gameId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"11629:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11623:13:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage","typeString":"struct PvPGridEnhanced.Game storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11603:33:1"},{"expression":{"components":[{"expression":{"id":1738,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11667:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1739,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11672:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"11667:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1740,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11699:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11704:9:1","memberName":"prizePool","nodeType":"MemberAccess","referencedDeclaration":504,"src":"11699:14:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1742,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11727:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11732:13:1","memberName":"tilesSelected","nodeType":"MemberAccess","referencedDeclaration":502,"src":"11727:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1744,"name":"GRID_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"11749:9:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11727:31:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1746,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11772:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11777:16:1","memberName":"winnerDetermined","nodeType":"MemberAccess","referencedDeclaration":510,"src":"11772:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1748,"name":"game","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1733,"src":"11807:4:1","typeDescriptions":{"typeIdentifier":"t_struct$_Game_$513_storage_ptr","typeString":"struct PvPGridEnhanced.Game storage pointer"}},"id":1749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11812:6:1","memberName":"winner","nodeType":"MemberAccess","referencedDeclaration":512,"src":"11807:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11653:175:1","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$_t_address_$","typeString":"tuple(uint256,uint256,bool,bool,address)"}},"functionReturnParameters":1730,"id":1751,"nodeType":"Return","src":"11646:182:1"}]},"functionSelector":"47e1d550","id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"getGameInfo","nameLocation":"11398:11:1","nodeType":"FunctionDefinition","parameters":{"id":1719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"gameId","nameLocation":"11418:6:1","nodeType":"VariableDeclaration","scope":1753,"src":"11410:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1717,"name":"uint256","nodeType":"ElementaryTypeName","src":"11410:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11409:16:1"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1721,"mutability":"mutable","name":"tilesSelected","nameLocation":"11466:13:1","nodeType":"VariableDeclaration","scope":1753,"src":"11458:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1720,"name":"uint256","nodeType":"ElementaryTypeName","src":"11458:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"prizePool","nameLocation":"11497:9:1","nodeType":"VariableDeclaration","scope":1753,"src":"11489:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"11489:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1725,"mutability":"mutable","name":"isComplete","nameLocation":"11521:10:1","nodeType":"VariableDeclaration","scope":1753,"src":"11516:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1724,"name":"bool","nodeType":"ElementaryTypeName","src":"11516:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"winnerDetermined","nameLocation":"11546:16:1","nodeType":"VariableDeclaration","scope":1753,"src":"11541:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1726,"name":"bool","nodeType":"ElementaryTypeName","src":"11541:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1729,"mutability":"mutable","name":"winner","nameLocation":"11580:6:1","nodeType":"VariableDeclaration","scope":1753,"src":"11572:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1728,"name":"address","nodeType":"ElementaryTypeName","src":"11572:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11448:144:1"},"scope":1754,"src":"11389:446:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1755,"src":"58:11779:1","usedErrors":[],"usedEvents":[550,558,564,570]}],"src":"32:11805:1"}}},"contracts":{"contracts/PvPGrid.sol":{"PvPGrid":{"abi":[{"inputs":[{"internalType":"uint256","name":"_entryFee","type":"uint256"},{"internalType":"uint256","name":"_gameFee","type":"uint256"},{"internalType":"address","name":"_teamWallet","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"prize","type":"uint256"}],"name":"GameCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"entryFee","type":"uint256"}],"name":"NewGameStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"tileIndex","type":"uint256"}],"name":"TileSelected","type":"event"},{"inputs":[],"name":"GRID_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"canDetermineWinner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"determineWinner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"finalSelectionBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gameFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGrid","outputs":[{"internalType":"address[16]","name":"","type":"address[16]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tileIndex","type":"uint256"}],"name":"getTileOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"grid","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isGameComplete","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"prizePool","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tileIndex","type":"uint256"}],"name":"selectTile","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"teamWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tilesSelected","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateEntryFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateGameFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newWallet","type":"address"}],"name":"updateTeamWallet","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"winner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"winnerDetermined","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gameFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"GameCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFee\",\"type\":\"uint256\"}],\"name\":\"NewGameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tileIndex\",\"type\":\"uint256\"}],\"name\":\"TileSelected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRID_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canDetermineWinner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"determineWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalSelectionBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGrid\",\"outputs\":[{\"internalType\":\"address[16]\",\"name\":\"\",\"type\":\"address[16]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tileIndex\",\"type\":\"uint256\"}],\"name\":\"getTileOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"grid\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isGameComplete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"prizePool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tileIndex\",\"type\":\"uint256\"}],\"name\":\"selectTile\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tilesSelected\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateEntryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateGameFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"updateTeamWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winnerDetermined\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PvPGrid.sol\":\"PvPGrid\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PvPGrid.sol\":{\"keccak256\":\"0x4cb44c9182530207e13b85f864aaaf038f148dee288ed53c0e7ca62b49cfe113\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd023484512967168d2ccf46385cfab25ce9d76b2aac7c59161c109f4e342f17\",\"dweb:/ipfs/QmX22wf8tgsVJK9yZFFqyHdNZaq12e7osBoWC7uxuKMEor\"]}},\"version\":1}","solc_version":"0.8.30+commit.73712a01.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 376/65968 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6556\n// Code size = 23684 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20180]\n     5: jump @108 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x301b0\n    14: i32 a0 = a0 + 0\n    16: ecalli 13 // 'set_immutable_data'\n    18: jump @108\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @14\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @14\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 8 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 14 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 (gas: 24)\n   811: sp = sp + 0xffffffffffffff60\n   815: u64 [sp + 0x98] = ra\n   819: u64 [sp + 0x90] = s0\n   823: u64 [sp + 0x88] = s1\n   827: s0 = sp + 0xa0\n   831: sp = sp & 0xffffffffffffffe0\n   834: a4 = u64 [a3]\n   836: u64 [sp + 0x38] = a4\n   839: a4 = u64 [a3 + 0x8]\n   842: u64 [sp + 0x30] = a4\n   845: a4 = u64 [a3 + 0x10]\n   848: u64 [sp + 0x28] = a4\n   851: a3 = u64 [a3 + 0x18]\n   854: u64 [sp + 0x20] = a3\n   857: a3 = u64 [a2]\n   859: u64 [sp + 0x18] = a3\n   862: a3 = u64 [a2 + 0x8]\n   865: u64 [sp + 0x10] = a3\n   868: a3 = u64 [a2 + 0x10]\n   871: u64 [sp + 0x8] = a3\n   874: a2 = u64 [a2 + 0x18]\n   877: u64 [sp] = a2\n   879: s1 = a1\n   881: ra = 6, jump @14\n      : @9 [@dyn 3] (gas: 35)\n   886: a1 = u64 [sp]\n   888: a1 = reverse a1\n   890: a2 = u64 [sp + 0x8]\n   893: a2 = reverse a2\n   895: a3 = u64 [sp + 0x10]\n   898: a3 = reverse a3\n   900: a4 = u64 [sp + 0x18]\n   903: a4 = reverse a4\n   905: u64 [sp + 0x58] = a4\n   908: u64 [sp + 0x50] = a3\n   911: u64 [sp + 0x48] = a2\n   914: u64 [sp + 0x40] = a1\n   917: a1 = u64 [sp + 0x20]\n   920: a1 = reverse a1\n   922: a2 = u64 [sp + 0x28]\n   925: a2 = reverse a2\n   927: a3 = u64 [sp + 0x30]\n   930: a3 = reverse a3\n   932: a4 = u64 [sp + 0x38]\n   935: a4 = reverse a4\n   937: u64 [sp + 0x78] = a4\n   940: u64 [sp + 0x70] = a3\n   943: u64 [sp + 0x68] = a2\n   946: u64 [sp + 0x60] = a1\n   949: i32 a2 = a0 + 0\n   951: i32 a3 = s1 + 0\n   953: i32 a0 = sp + 0x40\n   956: a1 = 0x2\n   959: ecalli 7 // 'deposit_event'\n   961: sp = s0 + 0xffffffffffffff60\n   965: ra = u64 [sp + 0x98]\n   969: s0 = u64 [sp + 0x90]\n   973: s1 = u64 [sp + 0x88]\n   977: sp = sp + 0xa0\n   981: ret\n      : @10 (gas: 33)\n   983: sp = sp + 0xffffffffffffff20\n   987: u64 [sp + 0xd8] = ra\n   991: u64 [sp + 0xd0] = s0\n   995: u64 [sp + 0xc8] = s1\n   999: s0 = sp + 0xe0\n  1003: sp = sp & 0xffffffffffffffe0\n  1006: a5 = u64 [a4]\n  1008: u64 [sp + 0x40] = a5\n  1011: a5 = u64 [a4 + 0x8]\n  1014: u64 [sp + 0x48] = a5\n  1017: a5 = u64 [a4 + 0x10]\n  1020: u64 [sp + 0x50] = a5\n  1023: a4 = u64 [a4 + 0x18]\n  1026: u64 [sp + 0x58] = a4\n  1029: t0 = 0x8\n  1032: a4 = u64 [a3]\n  1034: u64 [sp + 0x18] = a4\n  1037: a4 = u64 [a3 + 0x8]\n  1040: u64 [sp + 0x20] = a4\n  1043: a4 = u64 [a3 + 0x10]\n  1046: u64 [sp + 0x28] = a4\n  1049: a3 = u64 [a3 + 0x18]\n  1052: u64 [sp + 0x30] = a3\n  1055: s1 = u64 [a2]\n  1057: a3 = u64 [a2 + 0x8]\n  1060: u64 [sp] = a3\n  1062: a3 = u64 [a2 + 0x10]\n  1065: u64 [sp + 0x8] = a3\n  1068: a2 = u64 [a2 + 0x18]\n  1071: u64 [sp + 0x10] = a2\n  1074: u64 [sp + 56] = 0x20\n  1078: ra = 0xa\n  1081: jump @14\n      : @11 [@dyn 4] (gas: 2)\n  1084: u64 [sp + 0x38] = a1\n  1087: ra = 10, jump @14\n      : @12 [@dyn 5] (gas: 41)\n  1091: a1 = reverse s1\n  1093: u64 [sp + 0x78] = a1\n  1096: a1 = u64 [sp]\n  1098: a1 = reverse a1\n  1100: u64 [sp + 0x70] = a1\n  1103: a1 = u64 [sp + 0x8]\n  1106: a1 = reverse a1\n  1108: u64 [sp + 0x68] = a1\n  1111: a1 = u64 [sp + 0x10]\n  1114: a1 = reverse a1\n  1116: u64 [sp + 0x60] = a1\n  1119: a1 = u64 [sp + 0x18]\n  1122: a1 = reverse a1\n  1124: u64 [sp + 0x98] = a1\n  1128: a1 = u64 [sp + 0x20]\n  1131: a1 = reverse a1\n  1133: u64 [sp + 0x90] = a1\n  1137: a1 = u64 [sp + 0x28]\n  1140: a1 = reverse a1\n  1142: u64 [sp + 0x88] = a1\n  1146: a1 = u64 [sp + 0x30]\n  1149: a1 = reverse a1\n  1151: u64 [sp + 0x80] = a1\n  1155: a1 = u64 [sp + 0x40]\n  1158: a1 = reverse a1\n  1160: u64 [sp + 0xb8] = a1\n  1164: a1 = u64 [sp + 0x48]\n  1167: a1 = reverse a1\n  1169: u64 [sp + 0xb0] = a1\n  1173: a1 = u64 [sp + 0x50]\n  1176: a1 = reverse a1\n  1178: u64 [sp + 0xa8] = a1\n  1182: a1 = u64 [sp + 0x58]\n  1185: a1 = reverse a1\n  1187: u64 [sp + 0xa0] = a1\n  1191: i32 a2 = a0 + 0\n  1193: a3 = i32 [sp + 0x38]\n  1196: i32 a0 = sp + 0x60\n  1199: a1 = 0x3\n  1202: ecalli 7 // 'deposit_event'\n  1204: t0 = 12, jump @897\n      : @13 [@dyn 6] (gas: 1)\n  1209: ret\n      : @14 (gas: 2)\n  1211: i32 a2 = a0 >> 0x10\n  1214: jump @19 if a2 != 0\n      : @15 (gas: 4)\n  1217: a1 = a1 + a0\n  1220: i32 a1 = a1 + 0x1f\n  1223: a1 = a1 & 0xffffffffffffffe0\n  1226: jump @19 if a1 >u 65536\n      : @16 (gas: 3)\n  1232: a2 = 0x2017c\n  1237: a3 = i32 [0x2017c]\n  1242: jump @18 if a3 >=u a1\n      : @17 (gas: 2)\n  1245: u32 [0x2017c] = a1\n  1250: fallthrough\n      : @18 (gas: 4)\n  1251: a1 = 0x20190\n  1256: i32 a0 = a0 + 0\n  1258: a0 = a0 + a1\n  1261: ret\n      : @19 (gas: 1)\n  1263: trap\n      : @20 (gas: 6)\n  1264: sp = sp + 0xfffffffffffffff0\n  1267: u64 [sp + 0x8] = ra\n  1270: u64 [sp] = s0\n  1272: s0 = a0 & 0x1\n  1275: ecalli 5 // 'call_data_size'\n  1277: fallthrough\n      : @21 (gas: 2)\n  1278: u32 [0x20178] = a0\n  1283: jump @23 if s0 == 0\n      : @22 (gas: 1)\n  1286: ra = 14, jump @24\n      : @23 [@dyn 7] (gas: 12)\n  1290: ra = 0x10\n  1293: sp = sp + 0xfffffffffffffe10\n  1297: u64 [sp + 0x1e8] = ra\n  1301: u64 [sp + 0x1e0] = s0\n  1305: u64 [sp + 0x1d8] = s1\n  1309: s0 = sp + 0x1f0\n  1313: sp = sp + 0xffffffffffffdd30\n  1317: sp = sp & 0xffffffffffffffe0\n  1320: s1 = sp\n  1322: t0 = 0x7e\n  1325: a2 = s1 + 0x1058\n  1329: jump @110\n      : @24 [@dyn 8] (gas: 15)\n  1332: sp = sp + 0xfffffffffffff8e0\n  1336: a0 = sp + 0x700\n  1340: u64 [a0 + 0x18] = ra\n  1343: u64 [a0 + 0x10] = s0\n  1346: u64 [a0 + 0x8] = s1\n  1349: s0 = sp + 0x720\n  1353: sp = sp & 0xffffffffffffffe0\n  1356: s1 = sp\n  1358: u64 [s1 + 1048] = 0\n  1362: u64 [s1 + 1040] = 0\n  1366: u64 [s1 + 1032] = 0\n  1370: u64 [s1 + 1024] = 0\n  1374: i32 a0 = s1 + 0x400\n  1378: ecalli 15 // 'value_transferred'\n  1380: fallthrough\n      : @25 (gas: 9)\n  1381: a4 = s1 + 0x400\n  1385: a0 = u64 [a4 + 0x10]\n  1388: a1 = u64 [a4 + 0x18]\n  1391: a2 = u64 [a4 + 0x8]\n  1394: a3 = u64 [a4]\n  1396: a1 = a1 | a2\n  1399: a0 = a0 | a3\n  1402: a0 = a0 | a1\n  1405: jump @98 if a0 != 0\n      : @26 (gas: 17)\n  1409: a0 = i32 [0x20178]\n  1414: u64 [s1 + 0x78] = a0\n  1417: a0 = a0 << 0x20\n  1420: a0 = a0 >> 0x20\n  1423: a0 = a0 + 0x1f\n  1426: a0 = a0 & 0xffffffffffffffe0\n  1429: a1 = a0 + 0x80\n  1433: a0 = a1 <u a0\n  1436: a2 = s1 + 0x300\n  1440: u64 [a2 + 0xe0] = a1\n  1444: u64 [a2 + 0xe8] = a0\n  1448: a0 = 0 if a0 != 0\n  1450: u64 [a2 + 0xf0] = a0\n  1454: a0 = 0x40\n  1457: a1 = s1 + 0x3e0\n  1461: u64 [s1 + 1016] = 0\n  1465: ra = 18, jump @4\n      : @27 [@dyn 9] (gas: 3)\n  1470: a0 = 0x80\n  1474: a1 = u64 [s1 + 0x78]\n  1477: ra = 20, jump @14\n      : @28 [@dyn 10] (gas: 5)\n  1482: i32 a0 = a0 + 0\n  1484: a1 = u64 [s1 + 0x78]\n  1487: a2 = 0\n  1489: ecalli 3 // 'call_data_copy'\n  1491: fallthrough\n      : @29 (gas: 2)\n  1492: a1 = u64 [s1 + 0x78]\n  1495: jump @99 if a1 <=u 95\n      : @30 (gas: 7)\n  1500: a0 = sp + 0xffffffffffffffe0\n  1503: a0 = a0 & 0xffffffffffffffe0\n  1506: u64 [s1 + 0x78] = a0\n  1509: sp = a0\n  1511: a0 = s1 + 0x3c0\n  1515: a1 = 0x80\n  1519: ra = 22, jump @2\n      : @31 [@dyn 11] (gas: 16)\n  1524: a0 = u64 [s1 + 0x3d0]\n  1528: a1 = u64 [s1 + 0x3d8]\n  1532: a2 = u64 [s1 + 0x3c0]\n  1536: a3 = u64 [s1 + 0x3c8]\n  1540: a4 = u64 [s1 + 0x78]\n  1543: u64 [a4 + 0x10] = a0\n  1546: u64 [a4 + 0x18] = a1\n  1549: u64 [a4] = a2\n  1551: u64 [a4 + 0x8] = a3\n  1554: a0 = sp + 0xffffffffffffffe0\n  1557: a0 = a0 & 0xffffffffffffffe0\n  1560: u64 [s1 + 0x70] = a0\n  1563: sp = a0\n  1565: a0 = s1 + 0x3a0\n  1569: a1 = 0xa0\n  1573: ra = 24, jump @2\n      : @32 [@dyn 12] (gas: 16)\n  1578: a0 = u64 [s1 + 0x3b0]\n  1582: a1 = u64 [s1 + 0x3b8]\n  1586: a3 = u64 [s1 + 0x3a0]\n  1590: a2 = u64 [s1 + 0x3a8]\n  1594: u64 [s1 + 0x50] = a0\n  1597: a4 = u64 [s1 + 0x70]\n  1600: u64 [a4 + 0x10] = a0\n  1603: u64 [s1 + 0x48] = a1\n  1606: u64 [a4 + 0x18] = a1\n  1609: u64 [s1 + 0x38] = a3\n  1612: u64 [a4] = a3\n  1614: u64 [s1 + 0x40] = a2\n  1617: u64 [a4 + 0x8] = a2\n  1620: a0 = s1 + 0x380\n  1624: a1 = 0xc0\n  1628: ra = 26, jump @2\n      : @33 [@dyn 13] (gas: 12)\n  1633: a1 = u64 [s1 + 0x390]\n  1637: a2 = u64 [s1 + 0x398]\n  1641: a0 = 0x100000000\n  1651: a0 = a0 ^ a1\n  1654: a0 = a0 | a2\n  1657: u64 [s1 + 0x68] = a1\n  1660: a1 = a1 >> 0x20\n  1663: a1 = a1 <u 0x1\n  1666: u64 [s1 + 0x30] = a2\n  1669: a1 = 0 if a2 != 0\n  1671: a1 = 0 if a0 == 0\n  1673: jump @100 if a1 == 0\n      : @34 (gas: 12)\n  1677: a0 = u64 [s1 + 0x388]\n  1681: u64 [s1 + 0x60] = a0\n  1684: a0 = u64 [s1 + 0x380]\n  1688: u64 [s1 + 0x58] = a0\n  1691: a0 = 0x30190\n  1696: u64 [s1 + 0x28] = a0\n  1699: i32 a0 = a0 + 0\n  1701: ra = 0x1c\n  1704: ecalli 6 // 'caller'\n  1706: a2 = u64 [s1 + 0x28]\n  1709: t0 = 0x1e\n  1712: jump @893\n      : @35 [@dyn 14] (gas: 2)\n  1715: a2 = u64 [s1 + 0x28]\n  1718: t0 = 30, jump @893\n      : @36 [@dyn 15] (gas: 15)\n  1723: u64 [s1 + 0x28] = a1\n  1726: a0 = a0 >> 0x20\n  1729: a1 = reverse a2\n  1731: a2 = a1 << 0x20\n  1734: a0 = a0 | a2\n  1737: u64 [s1 + 0x20] = a0\n  1740: a1 = a1 >> 0x20\n  1743: u64 [s1 + 0x18] = a1\n  1746: u64 [s1 + 1080] = 0\n  1750: u64 [s1 + 1072] = 0\n  1754: u64 [s1 + 1064] = 0\n  1758: u64 [s1 + 1056] = 0x17\n  1763: a0 = s1 + 0x360\n  1767: a1 = s1 + 0x420\n  1771: ra = 32, jump @6\n      : @37 [@dyn 16] (gas: 18)\n  1776: a0 = u32 [s1 + 0x374]\n  1780: a0 = a0 << 0x20\n  1783: a1 = u64 [s1 + 0x378]\n  1787: a2 = u64 [s1 + 0x18]\n  1790: a0 = a0 | a2\n  1793: u64 [s1 + 1112] = 0\n  1797: u64 [s1 + 1104] = 0\n  1801: u64 [s1 + 1096] = 0\n  1805: u64 [s1 + 1088] = 0x17\n  1810: u64 [s1 + 0x478] = a1\n  1814: a1 = u64 [s1 + 0x20]\n  1817: u64 [s1 + 0x468] = a1\n  1821: a1 = u64 [s1 + 0x28]\n  1824: u64 [s1 + 0x460] = a1\n  1828: u64 [s1 + 0x470] = a0\n  1832: a0 = s1 + 0x440\n  1836: a1 = s1 + 0x460\n  1840: ra = 34, jump @7\n      : @38 [@dyn 17] (gas: 7)\n  1845: u64 [s1 + 1176] = 0\n  1849: u64 [s1 + 1168] = 0\n  1853: u64 [s1 + 1160] = 0\n  1857: u64 [s1 + 1152] = 0x18\n  1862: a0 = s1 + 0x340\n  1866: a1 = s1 + 0x480\n  1870: ra = 36, jump @6\n      : @39 [@dyn 18] (gas: 21)\n  1875: a0 = u32 [s1 + 0x354]\n  1879: a1 = u64 [s1 + 0x358]\n  1883: a0 = a0 << 0x20\n  1886: a2 = u64 [s1 + 0x68]\n  1889: a0 = a0 | a2\n  1892: a2 = u64 [s1 + 0x30]\n  1895: a1 = a1 | a2\n  1898: u64 [s1 + 1208] = 0\n  1902: u64 [s1 + 1200] = 0\n  1906: u64 [s1 + 1192] = 0\n  1910: a3 = s1 + 0x400\n  1914: u64 [a3 + 160] = 0x18\n  1919: a2 = u64 [s1 + 0x60]\n  1922: u64 [a3 + 0xc8] = a2\n  1926: a2 = u64 [s1 + 0x58]\n  1929: u64 [a3 + 0xc0] = a2\n  1933: u64 [a3 + 0xd8] = a1\n  1937: u64 [a3 + 0xd0] = a0\n  1941: a0 = s1 + 0x4a0\n  1945: a1 = s1 + 0x4c0\n  1949: ra = 38, jump @7\n      : @40 [@dyn 19] (gas: 7)\n  1954: u64 [s1 + 1272] = 0\n  1958: u64 [s1 + 1264] = 0\n  1962: u64 [s1 + 1256] = 0\n  1966: u64 [s1 + 1248] = 0\n  1970: a0 = s1 + 0x4e0\n  1974: a1 = u64 [s1 + 0x78]\n  1977: ra = 40, jump @7\n      : @41 [@dyn 20] (gas: 7)\n  1982: u64 [s1 + 1304] = 0\n  1986: u64 [s1 + 1296] = 0\n  1990: u64 [s1 + 1288] = 0\n  1994: u64 [s1 + 1280] = 0x1\n  1999: a0 = s1 + 0x500\n  2003: a1 = u64 [s1 + 0x70]\n  2006: ra = 42, jump @7\n      : @42 [@dyn 21] (gas: 9)\n  2011: a0 = u64 [s1 + 0x38]\n  2014: a0 = a0 <u 0x7d1\n  2018: a1 = u64 [s1 + 0x40]\n  2021: a0 = 0 if a1 != 0\n  2023: a1 = u64 [s1 + 0x50]\n  2026: a2 = u64 [s1 + 0x48]\n  2029: a1 = a1 | a2\n  2032: a0 = 0 if a1 != 0\n  2034: jump @57 if a0 != 0\n      : @43 (gas: 3)\n  2038: a0 = s1 + 0x100\n  2042: a1 = 0x40\n  2045: ra = 44, jump @2\n      : @44 [@dyn 22] (gas: 6)\n  2050: a1 = s1 + 0x100\n  2054: a4 = u64 [a1 + 0x18]\n  2057: a5 = u64 [a1 + 0x10]\n  2060: a3 = u64 [a1 + 0x8]\n  2063: a0 = u64 [a1]\n  2065: t0 = 46, jump @879\n      : @45 [@dyn 23] (gas: 1)\n  2070: jump @97 if a1 != 0\n      : @46 (gas: 6)\n  2074: u64 [s1 + 240] = 0\n  2078: u64 [s1 + 232] = 0\n  2082: u64 [s1 + 224] = 0\n  2086: t0 = 0x30\n  2089: a2 = 0x8c379a000000000\n  2099: fallthrough\n      : @47 [@dyn 24] (gas: 7)\n  2100: a1 = s1 + 0xe0\n  2104: u64 [s1 + 0xf8] = a2\n  2108: u64 [s1 + 0x78] = a0\n  2111: u64 [s1 + 0x70] = a3\n  2114: u64 [s1 + 0x68] = a4\n  2117: u64 [s1 + 0x60] = a5\n  2120: ra = 50, jump @4\n      : @48 [@dyn 25] (gas: 1)\n  2125: t0 = 52, jump @881\n      : @49 [@dyn 26] (gas: 1)\n  2130: jump @97 if a0 == 0\n      : @50 (gas: 9)\n  2134: i32 a0 = a1 + 0x4\n  2137: u64 [s1 + 216] = 0\n  2141: u64 [s1 + 208] = 0\n  2145: u64 [s1 + 192] = 0x20\n  2150: a1 = s1 + 0xc0\n  2154: u64 [s1 + 200] = 0\n  2158: u64 [s1 + 0x68] = a3\n  2161: u64 [s1 + 0x60] = a4\n  2164: ra = 54, jump @4\n      : @51 [@dyn 27] (gas: 1)\n  2169: t0 = 56, jump @889\n      : @52 [@dyn 28] (gas: 1)\n  2174: jump @97 if a0 == 0\n      : @53 (gas: 7)\n  2178: i32 a0 = a1 + 0x24\n  2181: u64 [s1 + 184] = 0\n  2185: u64 [s1 + 176] = 0\n  2189: u64 [s1 + 160] = 0xc\n  2194: a1 = s1 + 0xa0\n  2198: u64 [s1 + 168] = 0\n  2202: ra = 58, jump @4\n      : @54 [@dyn 29] (gas: 1)\n  2207: t0 = 60, jump @887\n      : @55 [@dyn 30] (gas: 1)\n  2212: jump @97 if a0 == 0\n      : @56 (gas: 10)\n  2216: i32 a0 = a2 + 0x44\n  2219: a1 = u64 [0x20030]\n  2224: u64 [s1 + 136] = 0\n  2228: u64 [s1 + 0x98] = a1\n  2232: a1 = 0x6869676800000000\n  2242: u64 [s1 + 0x90] = a1\n  2246: a1 = s1 + 0x80\n  2250: u64 [s1 + 128] = 0\n  2254: ra = 0x50\n  2257: jump @4\n      : @57 (gas: 8)\n  2260: a0 = u64 [s1 + 0x68]\n  2263: a0 = a0 << 0x20\n  2266: a0 = a0 >> 0x20\n  2269: a1 = u64 [s1 + 0x60]\n  2272: a2 = u64 [s1 + 0x58]\n  2275: a1 = a1 | a2\n  2278: a0 = a0 | a1\n  2281: jump @74 if a0 != 0\n      : @58 (gas: 3)\n  2285: a0 = s1 + 0x1a0\n  2289: a1 = 0x40\n  2292: ra = 62, jump @2\n      : @59 [@dyn 31] (gas: 6)\n  2297: a1 = s1 + 0x100\n  2301: a4 = u64 [a1 + 0xb8]\n  2305: a5 = u64 [a1 + 0xb0]\n  2309: a3 = u64 [a1 + 0xa8]\n  2313: a0 = u64 [a1 + 0xa0]\n  2317: t0 = 64, jump @879\n      : @60 [@dyn 32] (gas: 1)\n  2322: jump @97 if a1 != 0\n      : @61 (gas: 6)\n  2326: u64 [s1 + 400] = 0\n  2330: u64 [s1 + 392] = 0\n  2334: u64 [s1 + 384] = 0\n  2338: t0 = 0x42\n  2341: a2 = 0x8c379a000000000\n  2351: fallthrough\n      : @62 [@dyn 33] (gas: 7)\n  2352: a1 = s1 + 0x180\n  2356: u64 [s1 + 0x198] = a2\n  2360: u64 [s1 + 0x78] = a0\n  2363: u64 [s1 + 0x70] = a3\n  2366: u64 [s1 + 0x68] = a4\n  2369: u64 [s1 + 0x60] = a5\n  2372: ra = 68, jump @4\n      : @63 [@dyn 34] (gas: 1)\n  2377: t0 = 70, jump @881\n      : @64 [@dyn 35] (gas: 1)\n  2382: jump @97 if a0 == 0\n      : @65 (gas: 9)\n  2386: i32 a0 = a1 + 0x4\n  2389: u64 [s1 + 376] = 0\n  2393: u64 [s1 + 368] = 0\n  2397: u64 [s1 + 352] = 0x20\n  2402: a1 = s1 + 0x160\n  2406: u64 [s1 + 360] = 0\n  2410: u64 [s1 + 0x68] = a3\n  2413: u64 [s1 + 0x60] = a4\n  2416: ra = 72, jump @4\n      : @66 [@dyn 36] (gas: 1)\n  2421: t0 = 74, jump @889\n      : @67 [@dyn 37] (gas: 1)\n  2426: jump @97 if a0 == 0\n      : @68 (gas: 7)\n  2430: i32 a0 = a1 + 0x24\n  2433: u64 [s1 + 344] = 0\n  2437: u64 [s1 + 336] = 0\n  2441: u64 [s1 + 320] = 0x13\n  2446: a1 = s1 + 0x140\n  2450: u64 [s1 + 328] = 0\n  2454: ra = 76, jump @4\n      : @69 [@dyn 38] (gas: 1)\n  2459: t0 = 78, jump @887\n      : @70 [@dyn 39] (gas: 1)\n  2464: jump @97 if a0 == 0\n      : @71 (gas: 11)\n  2468: i32 a0 = a2 + 0x44\n  2471: a1 = u64 [0x20020]\n  2476: a2 = u64 [0x20028]\n  2481: a3 = s1 + 0x100\n  2485: u64 [a3 + 0x38] = a1\n  2488: u64 [a3 + 0x30] = a2\n  2491: a1 = 0x6c65740000000000\n  2501: u64 [a3 + 0x28] = a1\n  2504: a1 = s1 + 0x120\n  2508: u64 [s1 + 288] = 0\n  2512: ra = 80, jump @4\n      : @72 [@dyn 40] (gas: 3)\n  2517: a1 = 0x64\n  2520: a0 = u64 [s1 + 0x78]\n  2523: ra = 82, jump @14\n      : @73 [@dyn 41] (gas: 5)\n  2528: i32 a1 = a0 + 0\n  2530: a0 = 0x1\n  2533: a2 = 0x64\n  2536: ecalli 12 // 'seal_return'\n  2538: fallthrough\n      : @74 (gas: 7)\n  2539: u64 [s1 + 1336] = 0\n  2543: u64 [s1 + 1328] = 0\n  2547: u64 [s1 + 1320] = 0\n  2551: u64 [s1 + 1312] = 0x13\n  2556: a0 = s1 + 0x320\n  2560: a1 = s1 + 0x520\n  2564: ra = 84, jump @6\n      : @75 [@dyn 42] (gas: 17)\n  2569: a2 = s1 + 0x300\n  2573: a0 = u64 [a2 + 0x20]\n  2576: a3 = u64 [a2 + 0x38]\n  2579: a1 = u64 [a2 + 0x28]\n  2582: a4 = u64 [a2 + 0x30]\n  2585: a0 = a0 + 0x1\n  2588: a2 = a0 <u 0x1\n  2591: a1 = a1 + a2\n  2594: a2 = a0 | a1\n  2597: a2 = a2 <u 0x1\n  2600: a2 = a2 + a4\n  2603: a4 = a2 <u a4\n  2606: a3 = a3 + a4\n  2609: a4 = a1 | a3\n  2612: a5 = a0 | a2\n  2615: a4 = a4 | a5\n  2618: jump @101 if a4 == 0\n      : @76 (gas: 13)\n  2622: a4 = 0xffffffff00000000\n  2632: u64 [s1 + 0x50] = a4\n  2635: u64 [s1 + 1368] = 0\n  2639: u64 [s1 + 1360] = 0\n  2643: u64 [s1 + 1352] = 0\n  2647: u64 [s1 + 1344] = 0x13\n  2652: u64 [s1 + 0x560] = a0\n  2656: u64 [s1 + 0x568] = a1\n  2660: u64 [s1 + 0x570] = a2\n  2664: u64 [s1 + 0x578] = a3\n  2668: a0 = s1 + 0x540\n  2672: a1 = s1 + 0x560\n  2676: ra = 86, jump @7\n      : @77 [@dyn 43] (gas: 11)\n  2681: u64 [s1 + 1432] = 0\n  2685: u64 [s1 + 1424] = 0\n  2689: u64 [s1 + 1416] = 0\n  2693: u64 [s1 + 1408] = 0x12\n  2698: u64 [s1 + 1464] = 0\n  2702: u64 [s1 + 1456] = 0\n  2706: u64 [s1 + 1448] = 0\n  2710: u64 [s1 + 1440] = 0\n  2714: a0 = s1 + 0x580\n  2718: a1 = s1 + 0x5a0\n  2722: ra = 88, jump @7\n      : @78 [@dyn 44] (gas: 7)\n  2727: u64 [s1 + 1496] = 0\n  2731: u64 [s1 + 1488] = 0\n  2735: u64 [s1 + 1480] = 0\n  2739: u64 [s1 + 1472] = 0x16\n  2744: a0 = s1 + 0x300\n  2748: a1 = s1 + 0x5c0\n  2752: ra = 90, jump @6\n      : @79 [@dyn 45] (gas: 15)\n  2757: a0 = u64 [s1 + 0x310]\n  2761: a1 = u64 [s1 + 0x318]\n  2765: a0 = a0 >> 0x28\n  2768: a0 = a0 << 0x28\n  2771: u64 [s1 + 1528] = 0\n  2775: u64 [s1 + 1520] = 0\n  2779: u64 [s1 + 1512] = 0\n  2783: u64 [s1 + 1504] = 0x16\n  2788: u64 [s1 + 1544] = 0\n  2792: u64 [s1 + 1536] = 0\n  2796: u64 [s1 + 0x618] = a1\n  2800: u64 [s1 + 0x610] = a0\n  2804: a0 = s1 + 0x5e0\n  2808: a1 = s1 + 0x600\n  2812: ra = 92, jump @7\n      : @80 [@dyn 46] (gas: 11)\n  2817: u64 [s1 + 1592] = 0\n  2821: u64 [s1 + 1584] = 0\n  2825: u64 [s1 + 1576] = 0\n  2829: u64 [s1 + 1568] = 0x15\n  2834: u64 [s1 + 1624] = 0\n  2838: u64 [s1 + 1616] = 0\n  2842: u64 [s1 + 1608] = 0\n  2846: u64 [s1 + 1600] = 0\n  2850: a0 = s1 + 0x620\n  2854: a1 = s1 + 0x640\n  2858: ra = 94, jump @7\n      : @81 [@dyn 47] (gas: 11)\n  2863: u64 [s1 + 1656] = 0\n  2867: u64 [s1 + 1648] = 0\n  2871: u64 [s1 + 1640] = 0\n  2875: u64 [s1 + 1632] = 0x14\n  2880: u64 [s1 + 1688] = 0\n  2884: u64 [s1 + 1680] = 0\n  2888: u64 [s1 + 1672] = 0\n  2892: u64 [s1 + 1664] = 0\n  2896: a0 = s1 + 0x660\n  2900: a1 = s1 + 0x680\n  2904: ra = 96, jump @7\n      : @82 [@dyn 48] (gas: 5)\n  2909: a2 = 0\n  2911: a3 = 0\n  2913: t0 = 0\n  2915: a4 = 0\n  2917: fallthrough\n      : @83 (gas: 5)\n  2918: a0 = a2 <u 0x10\n  2921: a0 = 0 if a3 != 0\n  2923: a1 = t0 | a4\n  2926: a0 = 0 if a1 != 0\n  2928: jump @87 if a0 == 0\n      : @84 (gas: 23)\n  2932: a0 = sp + 0xffffffffffffffe0\n  2935: a1 = a0 & 0xffffffffffffffe0\n  2938: u64 [s1 + 0x58] = a1\n  2941: sp = a1\n  2943: a0 = a2 + 0x2\n  2946: a5 = a0 <u a2\n  2949: u64 [s1 + 0x70] = a2\n  2952: a2 = a3 + a5\n  2955: u64 [s1 + 0x78] = a3\n  2958: a3 = u64 [s1 + 0x78]\n  2961: a3 = a2 <u a3\n  2964: a3 = a5 if a5 == 0\n  2967: a3 = a3 + t0\n  2970: a5 = a3 <u t0\n  2973: a5 = a5 + a4\n  2976: u64 [a1 + 0x8] = a2\n  2979: u64 [a1] = a0\n  2981: u64 [a1 + 0x10] = a3\n  2984: u64 [a1 + 0x18] = a5\n  2987: a0 = s1 + 0x2e0\n  2991: u64 [s1 + 0x68] = a4\n  2994: u64 [s1 + 0x60] = t0\n  2997: ra = 98, jump @6\n      : @85 [@dyn 49] (gas: 12)\n  3002: a0 = u64 [s1 + 0x2f0]\n  3006: a1 = u64 [s1 + 0x2f8]\n  3010: a2 = u64 [s1 + 0x50]\n  3013: a0 = a0 & a2\n  3016: a1 = a1 & 0xffffffffffffffff\n  3019: u64 [s1 + 1704] = 0\n  3023: u64 [s1 + 1696] = 0\n  3027: u64 [s1 + 0x6b8] = a1\n  3031: u64 [s1 + 0x6b0] = a0\n  3035: a1 = s1 + 0x6a0\n  3039: a0 = u64 [s1 + 0x58]\n  3042: ra = 100, jump @7\n      : @86 [@dyn 50] (gas: 14)\n  3047: a4 = u64 [s1 + 0x68]\n  3050: a3 = u64 [s1 + 0x78]\n  3053: a2 = u64 [s1 + 0x70]\n  3056: a2 = a2 + 0x1\n  3059: a0 = a2 <u 0x1\n  3062: a3 = a3 + a0\n  3065: a0 = a2 | a3\n  3068: a0 = a0 <u 0x1\n  3071: a1 = u64 [s1 + 0x60]\n  3074: a0 = a0 + a1\n  3077: a1 = a0 <u a1\n  3080: a4 = a4 + a1\n  3083: t0 = a0\n  3085: jump @83\n      : @87 (gas: 7)\n  3088: u64 [s1 + 1752] = 0\n  3092: u64 [s1 + 1744] = 0\n  3096: u64 [s1 + 1736] = 0\n  3100: u64 [s1 + 1728] = 0x13\n  3105: a0 = s1 + 0x2c0\n  3109: a1 = s1 + 0x6c0\n  3113: ra = 102, jump @6\n      : @88 [@dyn 51] (gas: 15)\n  3118: a0 = u64 [s1 + 0x2d8]\n  3122: u64 [s1 + 0x60] = a0\n  3125: a0 = u64 [s1 + 0x2d0]\n  3129: u64 [s1 + 0x68] = a0\n  3132: a0 = u64 [s1 + 0x2c8]\n  3136: u64 [s1 + 0x70] = a0\n  3139: a0 = u64 [s1 + 0x2c0]\n  3143: u64 [s1 + 0x78] = a0\n  3146: u64 [s1 + 1784] = 0\n  3150: u64 [s1 + 1776] = 0\n  3154: u64 [s1 + 1768] = 0\n  3158: u64 [s1 + 1760] = 0\n  3162: a0 = s1 + 0x2a0\n  3166: a1 = s1 + 0x6e0\n  3170: ra = 104, jump @6\n      : @89 [@dyn 52] (gas: 11)\n  3175: a0 = u64 [s1 + 0x2b8]\n  3179: u64 [s1 + 0x58] = a0\n  3182: a0 = u64 [s1 + 0x2b0]\n  3186: u64 [s1 + 0x50] = a0\n  3189: a0 = u64 [s1 + 0x2a8]\n  3193: u64 [s1 + 0x48] = a0\n  3196: a0 = u64 [s1 + 0x2a0]\n  3200: u64 [s1 + 0x40] = a0\n  3203: a0 = s1 + 0x280\n  3207: a1 = 0x40\n  3210: ra = 106, jump @2\n      : @90 [@dyn 53] (gas: 6)\n  3215: a4 = s1 + 0x200\n  3219: a3 = u64 [a4 + 0x98]\n  3223: a1 = u64 [a4 + 0x90]\n  3227: a2 = u64 [a4 + 0x88]\n  3231: a0 = u64 [a4 + 0x80]\n  3235: t0 = 108, jump @883\n      : @91 [@dyn 54] (gas: 1)\n  3240: jump @97 if a1 != 0\n      : @92 (gas: 11)\n  3244: a1 = u64 [s1 + 0x40]\n  3247: u64 [s1 + 0x260] = a1\n  3251: a1 = u64 [s1 + 0x48]\n  3254: u64 [s1 + 0x268] = a1\n  3258: a1 = u64 [s1 + 0x50]\n  3261: u64 [s1 + 0x270] = a1\n  3265: a1 = s1 + 0x260\n  3269: a2 = u64 [s1 + 0x58]\n  3272: u64 [s1 + 0x278] = a2\n  3276: u64 [s1 + 0x58] = a0\n  3279: ra = 110, jump @4\n      : @93 [@dyn 55] (gas: 21)\n  3284: a0 = u64 [s1 + 0x60]\n  3287: u64 [s1 + 0x238] = a0\n  3291: a0 = u64 [s1 + 0x68]\n  3294: u64 [s1 + 0x230] = a0\n  3298: a0 = u64 [s1 + 0x70]\n  3301: u64 [s1 + 0x228] = a0\n  3305: a0 = u64 [0x20000]\n  3310: a1 = u64 [0x20008]\n  3315: a2 = u64 [0x20010]\n  3320: a3 = u64 [s1 + 0x78]\n  3323: u64 [s1 + 0x220] = a3\n  3327: u64 [s1 + 0x258] = a0\n  3331: u64 [s1 + 0x250] = a1\n  3335: u64 [s1 + 0x248] = a2\n  3339: a0 = u64 [0x20018]\n  3344: a1 = 0x20\n  3347: a2 = s1 + 0x240\n  3351: a3 = s1 + 0x220\n  3355: u64 [s1 + 0x240] = a0\n  3359: a0 = u64 [s1 + 0x58]\n  3362: ra = 112, jump @8\n      : @94 [@dyn 56] (gas: 3)\n  3367: a0 = s1 + 0x200\n  3371: a1 = 0x40\n  3374: ra = 114, jump @2\n      : @95 [@dyn 57] (gas: 6)\n  3379: a4 = s1 + 0x200\n  3383: a3 = u64 [a4 + 0x18]\n  3386: a1 = u64 [a4 + 0x10]\n  3389: a2 = u64 [a4 + 0x8]\n  3392: a0 = u64 [a4]\n  3394: t0 = 116, jump @883\n      : @96 [@dyn 58] (gas: 1)\n  3399: jump @106 if a1 == 0\n      : @97 (gas: 1)\n  3403: trap\n      : @98 (gas: 6)\n  3404: a1 = 0x20190\n  3409: i32 a1 = a1 + 0\n  3411: a0 = 0x1\n  3414: a2 = 0\n  3416: ecalli 12 // 'seal_return'\n  3418: jump @101\n      : @99 (gas: 6)\n  3420: a1 = 0x20190\n  3425: i32 a1 = a1 + 0\n  3427: a0 = 0x1\n  3430: a2 = 0\n  3432: ecalli 12 // 'seal_return'\n  3434: jump @101\n      : @100 (gas: 6)\n  3436: a1 = 0x20190\n  3441: i32 a1 = a1 + 0\n  3443: a0 = 0x1\n  3446: a2 = 0\n  3448: ecalli 12 // 'seal_return'\n  3450: fallthrough\n      : @101 (gas: 8)\n  3451: u64 [s1 + 496] = 0\n  3455: u64 [s1 + 488] = 0\n  3459: u64 [s1 + 480] = 0\n  3463: a0 = 0x4e487b7100000000\n  3473: a1 = s1 + 0x1e0\n  3477: u64 [s1 + 0x1f8] = a0\n  3481: a0 = 0\n  3483: ra = 118, jump @4\n      : @102 [@dyn 59] (gas: 7)\n  3488: u64 [s1 + 472] = 0\n  3492: u64 [s1 + 464] = 0\n  3496: u64 [s1 + 448] = 0x11\n  3501: a0 = 0x4\n  3504: a1 = s1 + 0x1c0\n  3508: u64 [s1 + 456] = 0\n  3512: ra = 120, jump @4\n      : @103 [@dyn 60] (gas: 2)\n  3517: a1 = i32 [0x2017c]\n  3522: jump @105 if a1 >u 63\n      : @104 (gas: 2)\n  3526: u32 [0x2017c] = 0x40\n  3532: fallthrough\n      : @105 (gas: 8)\n  3533: a1 = 0x20190\n  3538: i32 a1 = a1 + 0\n  3540: a0 = 0x1\n  3543: a2 = 0x24\n  3546: ecalli 12 // 'seal_return'\n  3548: u64 [s1 + 0x78] = a0\n  3551: ra = 0x7a\n  3554: jump @14\n      : @106 (gas: 2)\n  3557: u64 [s1 + 0x78] = a0\n  3560: ra = 122, jump @14\n      : @107 [@dyn 61] (gas: 5)\n  3565: i32 a0 = a0 + 0\n  3567: a1 = 0\n  3569: a2 = 0\n  3571: ecalli 3 // 'call_data_copy'\n  3573: jump @0\n      : @108 (gas: 3)\n  3576: a0 = u64 [s1 + 0x78]\n  3579: a1 = 0\n  3581: ra = 124, jump @14\n      : @109 [@dyn 62] (gas: 5)\n  3586: i32 a1 = a0 + 0\n  3588: a0 = 0\n  3590: a2 = 0\n  3592: ecalli 12 // 'seal_return'\n  3594: jump @101\n      : @110 [@dyn 63] (gas: 7)\n  3597: u64 [a2 + 1856] = 0\n  3601: u64 [a2 + 1848] = 0\n  3605: u64 [a2 + 1832] = 0x80\n  3611: a0 = 0x40\n  3614: a1 = s1 + 0x1780\n  3618: u64 [a2 + 1840] = 0\n  3622: ra = 128, jump @4\n      : @111 [@dyn 64] (gas: 4)\n  3628: a0 = 0x20178\n  3633: u64 [s1 + 0xd8] = a0\n  3637: a0 = i32 [0x20178]\n  3642: jump @113 if a0 >=u 4\n      : @112 (gas: 1)\n  3646: jump @734\n      : @113 (gas: 8)\n  3649: a0 = s1 + 0x1000\n  3653: i32 a0 = a0 + 0x7a0\n  3657: a1 = 0\n  3659: ra = 0x82\n  3663: ecalli 4 // 'call_data_load'\n  3665: t0 = 0x84\n  3669: a3 = s1 + 0x1058\n  3673: jump @115\n      : @114 [@dyn 65] (gas: 3)\n  3675: t0 = 0x84\n  3679: a3 = s1 + 0x1058\n  3683: fallthrough\n      : @115 [@dyn 66] (gas: 2)\n  3684: a0 = i32 [a3 + 0x764]\n  3688: jump @117 if a0 != 2376452955\n      : @116 (gas: 1)\n  3695: jump @489\n      : @117 (gas: 1)\n  3698: jump @119 if a0 != 2516051933\n      : @118 (gas: 1)\n  3705: jump @436\n      : @119 (gas: 3)\n  3708: a4 = s1 + 0x2058\n  3712: a2 = s1 + 0x1858\n  3716: jump @121 if a0 != 2543054088\n      : @120 (gas: 1)\n  3723: jump @369\n      : @121 (gas: 1)\n  3726: jump @159 if a0 == 2853709350\n      : @122 (gas: 1)\n  3734: jump @124 if a0 != 3070914028\n      : @123 (gas: 1)\n  3741: jump @304\n      : @124 (gas: 1)\n  3744: jump @191 if a0 == 3275143626\n      : @125 (gas: 1)\n  3752: jump @127 if a0 != 3753857966\n      : @126 (gas: 1)\n  3759: jump @415\n      : @127 (gas: 1)\n  3762: jump @245 if a0 == 3933699820\n      : @128 (gas: 1)\n  3770: jump @212 if a0 == 322961600\n      : @129 (gas: 1)\n  3778: jump @131 if a0 != 867265939\n      : @130 (gas: 1)\n  3785: jump @448\n      : @131 (gas: 1)\n  3788: jump @258 if a0 == 1372769423\n      : @132 (gas: 1)\n  3796: jump @134 if a0 != 1399471580\n      : @133 (gas: 1)\n  3803: jump @478\n      : @134 (gas: 1)\n  3806: jump @136 if a0 != 1502769220\n      : @135 (gas: 1)\n  3813: jump @345\n      : @136 (gas: 1)\n  3816: jump @138 if a0 != 1606011276\n      : @137 (gas: 1)\n  3823: jump @426\n      : @138 (gas: 1)\n  3826: jump @140 if a0 != 1906108222\n      : @139 (gas: 1)\n  3833: jump @405\n      : @140 (gas: 1)\n  3836: jump @231 if a0 == 1908309935\n      : @141 (gas: 1)\n  3844: jump @143 if a0 != 2023497977\n      : @142 (gas: 1)\n  3851: jump @333\n      : @143 (gas: 1)\n  3854: jump @273 if a0 == 2092118715\n      : @144 (gas: 1)\n  3862: jump @146 if a0 == 2132465393\n      : @145 (gas: 1)\n  3869: jump @356\n      : @146 (gas: 10)\n  3872: u64 [a2 + 1824] = 0\n  3876: u64 [a2 + 1816] = 0\n  3880: u64 [a2 + 1808] = 0\n  3884: u64 [a2 + 1800] = 0\n  3888: a0 = s1 + 0x2000\n  3892: i32 a0 = a0 + 0xffffffffffffff60\n  3896: ra = 0x86\n  3900: ecalli 15 // 'value_transferred'\n  3902: t0 = 0x88\n  3906: jump @895\n      : @147 [@dyn 67] (gas: 1)\n  3909: t0 = 136, jump @895\n      : @148 [@dyn 68] (gas: 1)\n  3915: t0 = 138, jump @899\n      : @149 [@dyn 69] (gas: 1)\n  3921: jump @151 if a0 == 0\n      : @150 (gas: 1)\n  3924: jump @694\n      : @151 (gas: 3)\n  3927: a0 = u64 [s1 + 0xd8]\n  3931: a0 = i32 [a0]\n  3933: jump @153 if a0 >u 3\n      : @152 (gas: 1)\n  3937: jump @695\n      : @153 (gas: 8)\n  3940: u64 [a4 + 1856] = 0\n  3944: u64 [a4 + 1848] = 0\n  3948: u64 [a4 + 1840] = 0\n  3952: u64 [a4 + 1832] = 0x16\n  3957: a0 = s1 + 0x7ff\n  3961: a0 = a0 + 0x681\n  3965: a1 = s1 + 0x1f80\n  3969: ra = 140, jump @6\n      : @154 [@dyn 70] (gas: 8)\n  3975: a0 = s1 + 0x7ff\n  3979: a0 = a0 + 0x59\n  3982: a0 = u64 [a0 + 0x628]\n  3986: u64 [s1 + 0xd8] = a0\n  3990: a0 = s1 + 0x7ff\n  3994: a0 = a0 + 0x661\n  3998: a1 = 0x40\n  4001: ra = 142, jump @2\n      : @155 [@dyn 71] (gas: 8)\n  4007: a3 = s1 + 0x7ff\n  4011: a3 = a3 + 0x59\n  4014: a5 = a3 + 0x600\n  4018: a4 = u64 [a5 + 0x20]\n  4021: a1 = u64 [a5 + 0x18]\n  4024: a2 = u64 [a5 + 0x10]\n  4027: a0 = u64 [a5 + 0x8]\n  4030: t0 = 144, jump @876\n      : @156 [@dyn 72] (gas: 1)\n  4036: jump @158 if a1 == 0\n      : @157 (gas: 1)\n  4039: jump @505\n      : @158 (gas: 11)\n  4042: a1 = u8 [s1 + 0xd8]\n  4046: a1 = a1 >u 0\n  4048: u64 [a3 + 1536] = 0\n  4052: u64 [a3 + 1528] = 0\n  4056: u64 [a3 + 0x5e8] = a1\n  4060: a1 = s1 + 0x7ff\n  4064: a1 = a1 + 0x641\n  4068: u64 [a3 + 1520] = 0\n  4072: u64 [s1 + 0xd8] = a0\n  4076: ra = 0x28c\n  4080: jump @4\n      : @159 (gas: 9)\n  4083: u64 [a4 + 448] = 0\n  4087: u64 [a4 + 440] = 0\n  4091: u64 [a4 + 432] = 0\n  4095: u64 [a4 + 424] = 0\n  4099: a0 = s1 + 0x2000\n  4103: i32 a0 = a0 + 0x200\n  4107: ra = 0x92\n  4111: ecalli 15 // 'value_transferred'\n  4113: fallthrough\n      : @160 [@dyn 73] (gas: 3)\n  4114: a4 = s1 + 0x2058\n  4118: a5 = a4 + 0x100\n  4122: t0 = 148, jump @898\n      : @161 [@dyn 74] (gas: 1)\n  4128: jump @163 if a0 == 0\n      : @162 (gas: 1)\n  4131: jump @696\n      : @163 (gas: 3)\n  4134: a0 = u64 [s1 + 0xd8]\n  4138: a0 = i32 [a0]\n  4140: jump @165 if a0 >u 35\n      : @164 (gas: 1)\n  4144: jump @697\n      : @165 (gas: 7)\n  4147: u64 [a4 + 480] = 0\n  4151: u64 [a4 + 472] = 0\n  4155: u64 [a4 + 464] = 0\n  4159: u64 [a4 + 456] = 0x17\n  4164: a0 = s1 + 0x14c0\n  4168: a1 = s1 + 0x2220\n  4172: ra = 150, jump @6\n      : @166 [@dyn 75] (gas: 15)\n  4178: a0 = s1 + 0x1058\n  4182: a1 = u64 [a0 + 0x470]\n  4186: u64 [s1 + 0xd8] = a1\n  4190: a1 = u64 [a0 + 0x468]\n  4194: u64 [s1 + 0xd0] = a1\n  4198: a0 = u32 [a0 + 0x478]\n  4202: u64 [s1 + 0xc8] = a0\n  4206: a0 = 0x30190\n  4211: u64 [s1 + 0xc0] = a0\n  4215: i32 a0 = a0 + 0\n  4217: ra = 0x98\n  4221: ecalli 6 // 'caller'\n  4223: a2 = u64 [s1 + 0xc0]\n  4227: t0 = 0x9a\n  4231: jump @877\n      : @167 [@dyn 76] (gas: 2)\n  4234: a2 = u64 [s1 + 0xc0]\n  4238: t0 = 154, jump @877\n      : @168 [@dyn 77] (gas: 18)\n  4244: a2 = u64 [s1 + 0xc8]\n  4248: a1 = a1 ^ a2\n  4251: a2 = u64 [s1 + 0xd0]\n  4255: a0 = a0 ^ a2\n  4258: a0 = a0 | a1\n  4261: a1 = u64 [s1 + 0xd8]\n  4265: a1 = a1 ^ a3\n  4268: a0 = a0 | a1\n  4271: a0 = a0 <u 0x1\n  4274: a1 = s1 + 0x1058\n  4278: u64 [a1 + 1120] = 0\n  4282: u64 [a1 + 1112] = 0\n  4286: u64 [a1 + 0x448] = a0\n  4290: a0 = s1 + 0x14a0\n  4294: u64 [a1 + 1104] = 0\n  4298: ra = 0x9c\n  4302: t0 = 0x2de\n  4306: jump @886\n      : @169 [@dyn 78] (gas: 9)\n  4309: a0 = s1 + 0x2058\n  4313: u64 [a0 + 512] = 0\n  4317: u64 [a0 + 504] = 0\n  4321: u64 [a0 + 496] = 0\n  4325: a1 = a0\n  4327: u64 [a1 + 488] = 0x12\n  4332: a0 = s1 + 0x1480\n  4336: a1 = s1 + 0x2240\n  4340: ra = 158, jump @6\n      : @170 [@dyn 79] (gas: 3)\n  4346: t0 = 0xa0\n  4350: a3 = s1 + 0x1058\n  4354: fallthrough\n      : @171 [@dyn 80] (gas: 9)\n  4355: a4 = a3 + 0x400\n  4359: a0 = u64 [a4 + 0x38]\n  4362: a1 = u64 [a4 + 0x40]\n  4365: a2 = u64 [a4 + 0x30]\n  4368: a3 = u64 [a4 + 0x28]\n  4371: a1 = a1 | a2\n  4374: a0 = a0 | a3\n  4377: a0 = a0 | a1\n  4380: jump @173 if a0 != 0\n      : @172 (gas: 1)\n  4383: jump @698\n      : @173 (gas: 3)\n  4386: a0 = s1 + 0x1460\n  4390: a1 = 0x40\n  4393: ra = 162, jump @2\n      : @174 [@dyn 81] (gas: 14)\n  4399: a4 = s1 + 0x1058\n  4403: t0 = u64 [a4 + 0x420]\n  4407: a1 = a4 + 0x400\n  4411: a5 = u64 [a1 + 0x18]\n  4414: a3 = u64 [a1 + 0x10]\n  4417: a0 = u64 [a1 + 0x8]\n  4420: a2 = a3 | t0\n  4423: a1 = a0 | a5\n  4426: a1 = a1 | a2\n  4429: a1 = a1 >> 0x20\n  4432: a2 = a2 | a5\n  4435: a2 = a2 << 0x20\n  4438: a1 = a1 | a2\n  4441: jump @176 if a1 == 0\n      : @175 (gas: 1)\n  4444: jump @505\n      : @176 (gas: 11)\n  4447: u64 [a4 + 1016] = 0\n  4451: u64 [a4 + 1008] = 0\n  4455: u64 [a4 + 1000] = 0\n  4459: u64 [s1 + 0xd0] = a3\n  4463: a3 = 0x8c379a000000000\n  4473: a1 = s1 + 0x1440\n  4477: u64 [a4 + 0x400] = a3\n  4481: u64 [s1 + 0xd8] = a0\n  4485: u64 [s1 + 0xc8] = t0\n  4489: u64 [s1 + 0xc0] = a5\n  4493: ra = 164, jump @4\n      : @177 [@dyn 82] (gas: 5)\n  4499: a1 = u64 [s1 + 0xd8]\n  4503: a0 = u64 [s1 + 0xc8]\n  4507: a3 = u64 [s1 + 0xc0]\n  4511: a3 = a3 | a0\n  4514: t0 = 166, jump @873\n      : @178 [@dyn 83] (gas: 1)\n  4520: jump @180 if a0 != 0\n      : @179 (gas: 1)\n  4523: jump @505\n      : @180 (gas: 1)\n  4526: t0 = 168, jump @882\n      : @181 [@dyn 84] (gas: 8)\n  4532: u64 [a2 + 992] = 0\n  4536: u64 [a2 + 984] = 0\n  4540: u64 [a2 + 968] = 0x20\n  4545: a1 = s1 + 0x1420\n  4549: u64 [a2 + 976] = 0\n  4553: u64 [s1 + 0xc8] = a3\n  4557: u64 [s1 + 0xc0] = a4\n  4561: ra = 170, jump @4\n      : @182 [@dyn 85] (gas: 1)\n  4567: t0 = 172, jump @874\n      : @183 [@dyn 86] (gas: 1)\n  4573: jump @185 if a0 != 0\n      : @184 (gas: 1)\n  4576: jump @505\n      : @185 (gas: 1)\n  4579: t0 = 174, jump @896\n      : @186 [@dyn 87] (gas: 6)\n  4585: u64 [a3 + 960] = 0\n  4589: u64 [a3 + 952] = 0\n  4593: u64 [a3 + 936] = 0x10\n  4598: a1 = s1 + 0x1400\n  4602: u64 [a3 + 944] = 0\n  4606: ra = 176, jump @4\n      : @187 [@dyn 88] (gas: 1)\n  4612: t0 = 178, jump @875\n      : @188 [@dyn 89] (gas: 1)\n  4618: jump @190 if a0 != 0\n      : @189 (gas: 1)\n  4621: jump @505\n      : @190 (gas: 11)\n  4624: i32 a0 = a3 + 0x44\n  4627: a1 = u64 [0x20040]\n  4632: a2 = u64 [0x20048]\n  4637: a4 = s1 + 0x1058\n  4641: u64 [a4 + 0x3a0] = a1\n  4645: u64 [a4 + 912] = 0\n  4649: u64 [a4 + 0x398] = a2\n  4653: a1 = s1 + 0x13e0\n  4657: u64 [a4 + 904] = 0\n  4661: ra = 0x270\n  4665: jump @4\n      : @191 (gas: 8)\n  4668: u64 [a4 + 768] = 0\n  4672: u64 [a4 + 760] = 0\n  4676: u64 [a4 + 752] = 0\n  4680: u64 [a4 + 744] = 0\n  4684: a0 = s1 + 0x2000\n  4688: i32 a0 = a0 + 0x340\n  4692: ecalli 15 // 'value_transferred'\n  4694: fallthrough\n      : @192 (gas: 10)\n  4695: a4 = s1 + 0x2058\n  4699: a5 = a4 + 0x200\n  4703: a0 = u64 [a5 + 0xf8]\n  4707: a1 = u64 [a4 + 0x300]\n  4711: a2 = u64 [a5 + 0xf0]\n  4715: a3 = u64 [a5 + 0xe8]\n  4719: a1 = a1 | a2\n  4722: a0 = a0 | a3\n  4725: a0 = a0 | a1\n  4728: jump @194 if a0 == 0\n      : @193 (gas: 1)\n  4731: jump @700\n      : @194 (gas: 3)\n  4734: a0 = u64 [s1 + 0xd8]\n  4738: a0 = i32 [a0]\n  4740: jump @196 if a0 >u 3\n      : @195 (gas: 1)\n  4744: jump @701\n      : @196 (gas: 7)\n  4747: u64 [a4 + 800] = 0\n  4751: u64 [a4 + 792] = 0\n  4755: u64 [a4 + 784] = 0\n  4759: u64 [a4 + 776] = 0x12\n  4764: a0 = s1 + 0x16a0\n  4768: a1 = s1 + 0x2360\n  4772: ra = 180, jump @6\n      : @197 [@dyn 90] (gas: 3)\n  4778: t0 = 0xb6\n  4782: a3 = s1 + 0x1058\n  4786: fallthrough\n      : @198 [@dyn 91] (gas: 10)\n  4787: a4 = a3 + 0x600\n  4791: a0 = u64 [a4 + 0x60]\n  4794: a1 = u64 [a4 + 0x50]\n  4797: a2 = u64 [a4 + 0x48]\n  4800: a3 = u64 [a4 + 0x58]\n  4803: a0 = a0 | a1\n  4806: a1 = a2 ^ 0x10\n  4809: a1 = a1 | a3\n  4812: a0 = a0 | a1\n  4815: jump @200 if a0 == 0\n      : @199 (gas: 1)\n  4818: jump @500\n      : @200 (gas: 8)\n  4821: a1 = s1 + 0x2058\n  4825: u64 [a1 + 832] = 0\n  4829: u64 [a1 + 824] = 0\n  4833: u64 [a1 + 816] = 0\n  4837: u64 [a1 + 808] = 0x16\n  4842: a0 = s1 + 0x1680\n  4846: a1 = s1 + 0x2380\n  4850: ra = 184, jump @6\n      : @201 [@dyn 92] (gas: 3)\n  4856: a0 = s1 + 0x1058\n  4860: a0 = u8 [a0 + 0x628]\n  4864: jump @203 if a0 == 0\n      : @202 (gas: 1)\n  4867: jump @500\n      : @203 (gas: 8)\n  4870: a1 = s1 + 0x2058\n  4874: u64 [a1 + 864] = 0\n  4878: u64 [a1 + 856] = 0\n  4882: u64 [a1 + 848] = 0\n  4886: u64 [a1 + 840] = 0x15\n  4891: a0 = s1 + 0x1660\n  4895: a1 = s1 + 0x23a0\n  4899: ra = 186, jump @6\n      : @204 [@dyn 93] (gas: 14)\n  4905: a0 = s1 + 0x1058\n  4909: a2 = a0 + 0x600\n  4913: a1 = u64 [a2 + 0x8]\n  4916: u64 [s1 + 0xd0] = a1\n  4920: a1 = u64 [a2 + 0x10]\n  4923: u64 [s1 + 0xc8] = a1\n  4927: a1 = u64 [a2 + 0x18]\n  4930: u64 [s1 + 0xd8] = a1\n  4934: a0 = u64 [a2 + 0x20]\n  4937: u64 [s1 + 0xc0] = a0\n  4941: a0 = s1 + 0x2000\n  4945: i32 a0 = a0 + 0x3c0\n  4949: ecalli 1 // 'block_number'\n  4951: fallthrough\n      : @205 (gas: 37)\n  4952: t2 = s1 + 0x2058\n  4956: a2 = t2 + 0x300\n  4960: a0 = u64 [a2 + 0x80]\n  4964: a1 = u64 [a2 + 0x68]\n  4967: a5 = u64 [a2 + 0x70]\n  4970: t0 = u64 [t2 + 0x378]\n  4974: a3 = u64 [s1 + 0xc0]\n  4978: a2 = a0 ^ a3\n  4981: t1 = a3 <u a0\n  4984: a0 = u64 [s1 + 0xc8]\n  4988: a3 = a5 ^ a0\n  4991: a5 = a0 <u a5\n  4994: a4 = a5 ^ 0x1\n  4997: a0 = u64 [s1 + 0xd0]\n  5001: a1 = a0 <u a1\n  5004: a0 = a1 ^ 0x1\n  5007: a0 = a4 if a3 != 0\n  5010: ra = t1 ^ 0x1\n  5013: a1 = a5 if a3 != 0\n  5016: a4 = u64 [s1 + 0xd8]\n  5020: a3 = a4 <u t0\n  5023: a5 = a3 ^ 0x1\n  5026: a5 = ra if a2 != 0\n  5029: a4 = t0 ^ a4\n  5032: a3 = t1 if a2 != 0\n  5035: a2 = a2 | a4\n  5038: a0 = a5 if a2 != 0\n  5041: a1 = a3 if a2 != 0\n  5044: a2 = sp + 0xffffffffffffffe0\n  5047: a2 = a2 & 0xffffffffffffffe0\n  5050: sp = a2\n  5052: u64 [a2 + 24] = 0\n  5055: u64 [a2 + 16] = 0\n  5058: u64 [a2 + 8] = 0\n  5061: u64 [s1 + 0xd8] = a2\n  5065: u64 [a2] = a1\n  5067: jump @207 if a0 == 0\n      : @206 (gas: 1)\n  5070: jump @501\n      : @207 (gas: 7)\n  5073: u64 [t2 + 928] = 0\n  5077: u64 [t2 + 920] = 0\n  5081: u64 [t2 + 912] = 0\n  5085: u64 [t2 + 904] = 0x15\n  5090: a0 = s1 + 0x1640\n  5094: a1 = s1 + 0x23e0\n  5098: ra = 188, jump @6\n      : @208 [@dyn 94] (gas: 3)\n  5104: t0 = 0xbe\n  5108: a1 = s1 + 0x1058\n  5112: fallthrough\n      : @209 [@dyn 95] (gas: 13)\n  5113: a4 = a1 + 0x500\n  5117: a2 = u64 [a4 + 0xf0]\n  5121: a3 = u64 [a4 + 0xe8]\n  5125: a0 = u64 [a1 + 0x600]\n  5129: a1 = u64 [a4 + 0xf8]\n  5133: a4 = a2 + 0x1\n  5136: a5 = a3 <u 0xffffffffffffff01\n  5140: a5 = a5 ^ 0x1\n  5143: a5 = 0 if a4 != 0\n  5145: a4 = a1 & a0\n  5148: a4 = a4 + 0x1\n  5151: a5 = 0 if a4 != 0\n  5153: jump @211 if a5 == 0\n      : @210 (gas: 1)\n  5156: jump @767\n      : @211 (gas: 42)\n  5159: a4 = a3 + 0xff\n  5163: u64 [s1 + 0xc8] = a4\n  5167: a3 = a4 <u a3\n  5170: a4 = a2 + a3\n  5173: u64 [s1 + 0xb8] = a4\n  5177: a2 = a4 <u a2\n  5180: a2 = a3 if a3 == 0\n  5183: a2 = a2 + a1\n  5186: u64 [s1 + 0xd0] = a2\n  5190: a1 = a2 <u a1\n  5193: a0 = a0 + a1\n  5196: u64 [s1 + 0xc0] = a0\n  5200: a0 = s1 + 0x2000\n  5204: i32 a0 = a0 + 0x400\n  5208: ecalli 1 // 'block_number'\n  5210: a4 = s1 + 0x2058\n  5214: a0 = u64 [a4 + 0x3a8]\n  5218: a1 = u64 [a4 + 0x3b0]\n  5222: a2 = u64 [a4 + 0x3c0]\n  5226: a3 = u64 [s1 + 0xc8]\n  5230: a0 = a3 <u a0\n  5233: a5 = u64 [s1 + 0xb8]\n  5237: a3 = a1 ^ a5\n  5240: a1 = a5 <u a1\n  5243: a4 = u64 [a4 + 0x3b8]\n  5247: a1 = a0 if a3 == 0\n  5250: a3 = u64 [s1 + 0xc0]\n  5254: a0 = a2 ^ a3\n  5257: a2 = a3 <u a2\n  5260: a5 = u64 [s1 + 0xd0]\n  5264: a3 = a5 <u a4\n  5267: a2 = a3 if a0 == 0\n  5270: a3 = a4 ^ a5\n  5273: a0 = a0 | a3\n  5276: a1 = a2 if a0 != 0\n  5279: a0 = a1 ^ 0x1\n  5282: a1 = u64 [s1 + 0xd8]\n  5286: u64 [a1] = a0\n  5288: u64 [a1 + 24] = 0\n  5291: u64 [a1 + 16] = 0\n  5294: u64 [a1 + 8] = 0\n  5297: jump @501\n      : @212 (gas: 8)\n  5300: u64 [a3 + 1984] = 0\n  5304: u64 [a3 + 1976] = 0\n  5308: u64 [a3 + 1968] = 0\n  5312: u64 [a3 + 1960] = 0\n  5316: a0 = s1 + 0x2000\n  5320: i32 a0 = a0 + 0xfffffffffffff800\n  5324: ecalli 15 // 'value_transferred'\n  5326: fallthrough\n      : @213 (gas: 10)\n  5327: a3 = s1 + 0x1058\n  5331: a4 = a3 + 0x700\n  5335: a0 = u64 [a4 + 0xb8]\n  5339: a1 = u64 [a4 + 0xc0]\n  5343: a2 = u64 [a4 + 0xb0]\n  5347: a3 = u64 [a4 + 0xa8]\n  5351: a1 = a1 | a2\n  5354: a0 = a0 | a3\n  5357: a0 = a0 | a1\n  5360: jump @215 if a0 == 0\n      : @214 (gas: 1)\n  5363: jump @702\n      : @215 (gas: 3)\n  5366: a0 = u64 [s1 + 0xd8]\n  5370: a0 = i32 [a0]\n  5372: jump @217 if a0 >u 3\n      : @216 (gas: 1)\n  5376: jump @703\n      : @217 (gas: 3)\n  5379: a0 = s1 + 0x260\n  5383: a1 = 0x40\n  5386: ra = 192, jump @2\n      : @218 [@dyn 96] (gas: 20)\n  5392: a5 = s1 + 0x200\n  5396: a1 = u64 [a5 + 0x78]\n  5399: u64 [s1 + 0xd0] = a1\n  5403: a2 = u64 [a5 + 0x70]\n  5406: u64 [s1 + 0xc8] = a2\n  5410: a3 = u64 [a5 + 0x68]\n  5413: u64 [s1 + 0xc0] = a3\n  5417: a4 = u64 [a5 + 0x60]\n  5420: u64 [s1 + 0xb8] = a4\n  5424: u64 [s1 + 568] = 0\n  5428: u64 [s1 + 560] = 0\n  5432: u64 [s1 + 552] = 0\n  5436: u64 [a5 + 32] = 0x200\n  5441: u64 [a5 + 0x58] = a1\n  5444: u64 [a5 + 0x50] = a2\n  5447: u64 [a5 + 0x48] = a3\n  5450: a0 = s1 + 0x240\n  5454: a1 = s1 + 0x220\n  5458: u64 [a5 + 0x40] = a4\n  5461: ra = 194, jump @798\n      : @219 [@dyn 97] (gas: 12)\n  5467: a2 = u64 [s1 + 0xb8]\n  5471: a0 = u64 [s1 + 0xd0]\n  5475: a1 = u64 [s1 + 0xc0]\n  5479: a0 = a0 | a1\n  5482: a3 = u64 [s1 + 0xc8]\n  5486: a1 = a2 | a3\n  5489: a1 = a1 | a0\n  5492: a1 = a1 >> 0x20\n  5495: a0 = a0 | a3\n  5498: a0 = a0 << 0x20\n  5501: a0 = a0 | a1\n  5504: jump @221 if a0 == 0\n      : @220 (gas: 1)\n  5507: jump @505\n      : @221 (gas: 8)\n  5510: a0 = u64 [s1 + 0xd8]\n  5514: a0 = i32 [a0]\n  5516: u64 [s1 + 0xd8] = a0\n  5520: a0 = 0xffffffff\n  5530: u64 [s1 + 0x68] = a0\n  5533: a1 = 0x200\n  5537: a0 = a2\n  5539: ra = 196, jump @14\n      : @222 [@dyn 98] (gas: 7)\n  5545: i32 a0 = a0 + 0\n  5547: a1 = 0x200\n  5551: a2 = u64 [s1 + 0xd8]\n  5555: ecalli 3 // 'call_data_copy'\n  5557: a0 = s1 + 0x200\n  5561: a1 = 0x40\n  5564: ra = 198, jump @2\n      : @223 [@dyn 99] (gas: 33)\n  5570: a1 = s1 + 0x200\n  5574: a0 = u64 [a1 + 0x18]\n  5577: u64 [s1 + 0x60] = a0\n  5580: a0 = u64 [a1 + 0x10]\n  5583: u64 [s1 + 0x58] = a0\n  5586: ra = u64 [s1 + 0x208]\n  5590: a4 = u64 [a1]\n  5592: a0 = sp + 0xffffffffffffffe0\n  5595: a1 = a0 & 0xffffffffffffffe0\n  5598: sp = a1\n  5600: t0 = 0\n  5602: u64 [s1 + 184] = 0\n  5606: a3 = 0\n  5608: t2 = 0\n  5610: t1 = 0\n  5612: a2 = 0\n  5614: u64 [a1 + 24] = 0\n  5617: u64 [a1 + 16] = 0\n  5620: u64 [a1 + 8] = 0\n  5623: u64 [a1 + 0] = 0x2\n  5626: u64 [s1 + 0x40] = a4\n  5629: u64 [s1 + 0xd0] = a4\n  5633: a0 = ra\n  5635: u64 [s1 + 0x50] = a0\n  5638: u64 [s1 + 0xc8] = a0\n  5642: a4 = u64 [s1 + 0x58]\n  5645: u64 [s1 + 0xd8] = a4\n  5649: ra = 0x2\n  5652: a4 = u64 [s1 + 0x60]\n  5655: u64 [s1 + 0xc0] = a4\n  5659: a4 = 0\n  5661: u64 [s1 + 0x48] = a1\n  5664: fallthrough\n      : @224 (gas: 6)\n  5665: a0 = t2 <u 0x10\n  5668: a0 = 0 if t1 != 0\n  5670: u64 [s1 + 0xb0] = a2\n  5674: a2 = a2 | a4\n  5677: a0 = 0 if a2 != 0\n  5679: jump @226 if a0 != 0\n      : @225 (gas: 1)\n  5682: jump @533\n      : @226 (gas: 8)\n  5685: u64 [s1 + 0x98] = a4\n  5689: u64 [s1 + 0xa0] = t1\n  5693: u64 [s1 + 0xa8] = t2\n  5697: a0 = s1 + 0x140\n  5701: u64 [s1 + 0x90] = t0\n  5705: u64 [s1 + 0x88] = a3\n  5709: u64 [s1 + 0x80] = ra\n  5713: ra = 200, jump @6\n      : @227 [@dyn 100] (gas: 12)\n  5719: a2 = u64 [s1 + 0xd8]\n  5723: a0 = u64 [s1 + 0xd0]\n  5727: a3 = a0 | a2\n  5730: a1 = u64 [s1 + 0xc0]\n  5734: a4 = u64 [s1 + 0xc8]\n  5738: a1 = a1 | a4\n  5741: a3 = a3 | a1\n  5744: a3 = a3 >> 0x20\n  5747: a1 = a1 | a2\n  5750: a1 = a1 << 0x20\n  5753: a1 = a1 | a3\n  5756: jump @229 if a1 == 0\n      : @228 (gas: 1)\n  5759: jump @505\n      : @229 (gas: 17)\n  5762: u64 [s1 + 0xc8] = a4\n  5766: a5 = s1 + 0x100\n  5770: a4 = u64 [a5 + 0x50]\n  5773: a1 = u64 [a5 + 0x48]\n  5776: u64 [s1 + 0xd8] = a2\n  5780: a2 = u64 [a5 + 0x40]\n  5783: a3 = u64 [s1 + 0x68]\n  5786: a4 = a4 & a3\n  5789: a1 = a1 & 0xffffffffffffffff\n  5792: a2 = a2 & 0xffffffffffffffff\n  5795: u64 [s1 + 312] = 0\n  5799: u64 [a5 + 0x20] = a2\n  5802: u64 [a5 + 0x28] = a1\n  5805: a1 = s1 + 0x120\n  5809: u64 [a5 + 0x30] = a4\n  5812: u64 [s1 + 0xd0] = a0\n  5816: ra = 202, jump @4\n      : @230 [@dyn 101] (gas: 53)\n  5822: a1 = u64 [s1 + 0xd0]\n  5826: a0 = a1 + 0x20\n  5829: u64 [s1 + 0x78] = a0\n  5832: a2 = a0 <u a1\n  5835: a1 = u64 [s1 + 0xc8]\n  5839: a0 = a1 + a2\n  5842: u64 [s1 + 0x70] = a0\n  5845: a3 = a0 <u a1\n  5848: a3 = a2 if a2 == 0\n  5851: a0 = u64 [s1 + 0xd8]\n  5855: a2 = a0 + a3\n  5858: a3 = a2 <u a0\n  5861: a0 = u64 [s1 + 0xc0]\n  5865: a0 = a0 + a3\n  5868: u64 [s1 + 0xc0] = a0\n  5872: ra = u64 [s1 + 0x80]\n  5876: ra = ra + 0x1\n  5879: a3 = ra <u 0x1\n  5882: t0 = u64 [s1 + 0x90]\n  5886: t0 = t0 + a3\n  5889: a3 = ra | t0\n  5892: a3 = a3 <u 0x1\n  5895: a0 = u64 [s1 + 0xb8]\n  5899: a1 = a0 + a3\n  5902: a4 = a1 <u a0\n  5905: a3 = u64 [s1 + 0x88]\n  5909: a3 = a3 + a4\n  5912: t2 = u64 [s1 + 0xa8]\n  5916: t2 = t2 + 0x1\n  5919: a4 = t2 <u 0x1\n  5922: t1 = u64 [s1 + 0xa0]\n  5926: t1 = t1 + a4\n  5929: a4 = t2 | t1\n  5932: a4 = a4 <u 0x1\n  5935: a5 = u64 [s1 + 0xb0]\n  5939: a0 = a5 + a4\n  5942: a5 = a0 <u a5\n  5945: a4 = u64 [s1 + 0x98]\n  5949: a4 = a4 + a5\n  5952: a5 = u64 [s1 + 0x48]\n  5955: u64 [a5 + 0x8] = t0\n  5958: u64 [a5] = ra\n  5960: u64 [a5 + 0x10] = a1\n  5963: u64 [a5 + 0x18] = a3\n  5966: u64 [s1 + 0xb8] = a1\n  5970: a1 = u64 [s1 + 0x78]\n  5973: u64 [s1 + 0xd0] = a1\n  5977: a1 = u64 [s1 + 0x70]\n  5980: u64 [s1 + 0xc8] = a1\n  5984: u64 [s1 + 0xd8] = a2\n  5988: a2 = a0\n  5990: a1 = a5\n  5992: jump @224\n      : @231 (gas: 8)\n  5995: u64 [a2 + 1472] = 0\n  5999: u64 [a2 + 1464] = 0\n  6003: u64 [a2 + 1456] = 0\n  6007: u64 [a2 + 1448] = 0\n  6011: a0 = s1 + 0x2000\n  6015: i32 a0 = a0 + 0xfffffffffffffe00\n  6019: ecalli 15 // 'value_transferred'\n  6021: fallthrough\n      : @232 (gas: 10)\n  6022: a3 = s1 + 0x1858\n  6026: a4 = a3 + 0x500\n  6030: a0 = u64 [a4 + 0xb8]\n  6034: a1 = u64 [a4 + 0xc0]\n  6038: a2 = u64 [a4 + 0xb0]\n  6042: a3 = u64 [a4 + 0xa8]\n  6046: a1 = a1 | a2\n  6049: a0 = a0 | a3\n  6052: a0 = a0 | a1\n  6055: jump @234 if a0 == 0\n      : @233 (gas: 1)\n  6058: jump @704\n      : @234 (gas: 3)\n  6061: a0 = u64 [s1 + 0xd8]\n  6065: a0 = i32 [a0]\n  6067: jump @236 if a0 >u 35\n      : @235 (gas: 1)\n  6071: jump @705\n      : @236 (gas: 37)\n  6074: a0 = s1 + 0x2000\n  6078: i32 a0 = a0 + 0xfffffffffffffe20\n  6082: a1 = 0x4\n  6085: ecalli 4 // 'call_data_load'\n  6087: a0 = s1 + 0x1858\n  6091: a1 = a0 + 0x500\n  6095: a3 = u64 [a1 + 0xe0]\n  6099: a4 = u64 [a1 + 0xd8]\n  6103: a5 = u64 [a1 + 0xd0]\n  6107: a2 = u64 [a1 + 0xc8]\n  6111: a0 = a3 >u 0\n  6113: a1 = a4 >u 0\n  6115: a1 = a0 if a3 != 0\n  6118: t0 = a5 >u 0\n  6120: u64 [s1 + 0xc0] = a2\n  6124: a2 = a2 <u 0x10\n  6127: a0 = a2 ^ 0x1\n  6130: a0 = t0 if a5 != 0\n  6133: u64 [s1 + 0xd8] = a3\n  6137: u64 [s1 + 0xd0] = a4\n  6141: a3 = a3 | a4\n  6144: a0 = a1 if a3 != 0\n  6147: u64 [s1 + 0xb8] = a0\n  6151: u64 [s1 + 0xc8] = a5\n  6155: a2 = 0 if a5 != 0\n  6157: a2 = 0 if a3 != 0\n  6159: a1 = s1 + 0x7ff\n  6163: a1 = a1 + 0x59\n  6166: u64 [a1 + 1152] = 0\n  6170: u64 [a1 + 1144] = 0\n  6174: u64 [a1 + 0x468] = a2\n  6178: a0 = s1 + 0x7ff\n  6182: a0 = a0 + 0x4c1\n  6186: u64 [a1 + 1136] = 0\n  6190: ra = 0xcc\n  6194: t0 = 0x2c2\n  6198: jump @886\n      : @237 [@dyn 102] (gas: 2)\n  6201: a0 = u64 [s1 + 0xb8]\n  6205: jump @239 if a0 == 0\n      : @238 (gas: 1)\n  6208: jump @706\n      : @239 (gas: 22)\n  6211: a1 = u64 [s1 + 0xc0]\n  6215: a0 = a1 + 0x2\n  6218: a1 = a0 <u a1\n  6221: a3 = u64 [s1 + 0xc8]\n  6225: a2 = a3 + a1\n  6228: a3 = a2 <u a3\n  6231: a3 = a1 if a1 == 0\n  6234: a1 = u64 [s1 + 0xd0]\n  6238: a3 = a3 + a1\n  6241: a1 = a3 <u a1\n  6244: a4 = u64 [s1 + 0xd8]\n  6248: a1 = a1 + a4\n  6251: a4 = s1 + 0x1858\n  6255: a5 = a4 + 0x500\n  6259: u64 [a5 + 0xe8] = a0\n  6263: u64 [a5 + 0xf0] = a2\n  6267: u64 [a5 + 0xf8] = a3\n  6271: u64 [a4 + 0x600] = a1\n  6275: a0 = s1 + 0x7ff\n  6279: a0 = a0 + 0x461\n  6283: a1 = s1 + 0x1e40\n  6287: ra = 206, jump @6\n      : @240 [@dyn 103] (gas: 13)\n  6293: a1 = s1 + 0x7ff\n  6297: a1 = a1 + 0x59\n  6300: a2 = a1 + 0x400\n  6304: a0 = u64 [a2 + 0x18]\n  6307: u64 [s1 + 0xc8] = a0\n  6311: a0 = u64 [a2 + 0x10]\n  6314: u64 [s1 + 0xd8] = a0\n  6318: a0 = u64 [a2 + 0x8]\n  6321: u64 [s1 + 0xd0] = a0\n  6325: a0 = s1 + 0x7ff\n  6329: a0 = a0 + 0x441\n  6333: a1 = 0x40\n  6336: ra = 208, jump @2\n      : @241 [@dyn 104] (gas: 8)\n  6342: a4 = s1 + 0x7ff\n  6346: a4 = a4 + 0x59\n  6349: a3 = u64 [a4 + 0x400]\n  6353: a5 = a4 + 0x300\n  6357: a1 = u64 [a5 + 0xf8]\n  6361: a2 = u64 [a5 + 0xf0]\n  6365: a0 = u64 [a5 + 0xe8]\n  6369: t0 = 210, jump @883\n      : @242 [@dyn 105] (gas: 1)\n  6375: jump @244 if a1 == 0\n      : @243 (gas: 1)\n  6378: jump @505\n      : @244 (gas: 15)\n  6381: a1 = u64 [s1 + 0xc8]\n  6385: a1 = a1 << 0x20\n  6388: a3 = a1 >> 0x20\n  6391: u64 [a4 + 992] = 0\n  6395: a1 = u64 [s1 + 0xd0]\n  6399: a2 = a4 + 0x300\n  6403: u64 [a2 + 0xc8] = a1\n  6407: a1 = u64 [s1 + 0xd8]\n  6411: u64 [a2 + 0xd0] = a1\n  6415: a1 = s1 + 0x7ff\n  6419: a1 = a1 + 0x421\n  6423: u64 [a2 + 0xd8] = a3\n  6427: u64 [s1 + 0xd8] = a0\n  6431: ra = 0x28c\n  6435: jump @4\n      : @245 (gas: 9)\n  6438: u64 [a4 + 1056] = 0\n  6442: u64 [a4 + 1048] = 0\n  6446: u64 [a4 + 1040] = 0\n  6450: u64 [a4 + 1032] = 0\n  6454: a0 = s1 + 0x2000\n  6458: i32 a0 = a0 + 0x460\n  6462: ra = 0xd4\n  6466: ecalli 15 // 'value_transferred'\n  6468: fallthrough\n      : @246 [@dyn 106] (gas: 3)\n  6469: a4 = s1 + 0x2058\n  6473: a5 = a4 + 0x400\n  6477: t0 = 214, jump @899\n      : @247 [@dyn 107] (gas: 1)\n  6483: jump @249 if a0 == 0\n      : @248 (gas: 1)\n  6486: jump @711\n      : @249 (gas: 3)\n  6489: a0 = u64 [s1 + 0xd8]\n  6493: a0 = i32 [a0]\n  6495: jump @251 if a0 >u 3\n      : @250 (gas: 1)\n  6499: jump @712\n      : @251 (gas: 7)\n  6502: u64 [a4 + 1088] = 0\n  6506: u64 [a4 + 1080] = 0\n  6510: u64 [a4 + 1072] = 0\n  6514: u64 [a4 + 1064] = 0x1\n  6519: a0 = s1 + 0x1760\n  6523: a1 = s1 + 0x2480\n  6527: ra = 216, jump @6\n      : @252 [@dyn 108] (gas: 3)\n  6533: t0 = 0xda\n  6537: a1 = s1 + 0x1058\n  6541: fallthrough\n      : @253 [@dyn 109] (gas: 12)\n  6542: a2 = a1 + 0x700\n  6546: a0 = u64 [a2 + 0x20]\n  6549: u64 [s1 + 0xd8] = a0\n  6553: a0 = u64 [a2 + 0x18]\n  6556: u64 [s1 + 0xd0] = a0\n  6560: a0 = u64 [a2 + 0x10]\n  6563: u64 [s1 + 0xc8] = a0\n  6567: a0 = u64 [a2 + 0x8]\n  6570: u64 [s1 + 0xc0] = a0\n  6574: a0 = s1 + 0x1740\n  6578: a1 = 0x40\n  6581: ra = 220, jump @2\n      : @254 [@dyn 110] (gas: 7)\n  6587: a3 = s1 + 0x1058\n  6591: a0 = u64 [a3 + 0x700]\n  6595: a5 = a3 + 0x600\n  6599: a1 = u64 [a5 + 0xf8]\n  6603: a2 = u64 [a5 + 0xf0]\n  6607: a4 = u64 [a5 + 0xe8]\n  6611: t0 = 222, jump @880\n      : @255 [@dyn 111] (gas: 1)\n  6617: jump @257 if a0 == 0\n      : @256 (gas: 1)\n  6620: jump @505\n      : @257 (gas: 14)\n  6623: a0 = u64 [s1 + 0xc0]\n  6627: a2 = a3 + 0x600\n  6631: u64 [a2 + 0xc8] = a0\n  6635: a0 = u64 [s1 + 0xc8]\n  6639: u64 [a2 + 0xd0] = a0\n  6643: a0 = u64 [s1 + 0xd0]\n  6647: u64 [a2 + 0xd8] = a0\n  6651: a1 = s1 + 0x1720\n  6655: a0 = u64 [s1 + 0xd8]\n  6659: u64 [a2 + 0xe0] = a0\n  6663: a0 = a4\n  6665: u64 [s1 + 0xd8] = a4\n  6669: ra = 0x28c\n  6673: jump @4\n      : @258 (gas: 9)\n  6676: u64 [a2 + 1120] = 0\n  6680: u64 [a2 + 1112] = 0\n  6684: u64 [a2 + 1104] = 0\n  6688: u64 [a2 + 1096] = 0\n  6692: a0 = s1 + 0x2000\n  6696: i32 a0 = a0 + 0xfffffffffffffca0\n  6700: ra = 0xe0\n  6704: ecalli 15 // 'value_transferred'\n  6706: fallthrough\n      : @259 [@dyn 112] (gas: 3)\n  6707: a3 = s1 + 0x1858\n  6711: a4 = a3 + 0x400\n  6715: t0 = 226, jump @894\n      : @260 [@dyn 113] (gas: 1)\n  6721: jump @262 if a0 == 0\n      : @261 (gas: 1)\n  6724: jump @713\n      : @262 (gas: 3)\n  6727: a0 = u64 [s1 + 0xd8]\n  6731: a0 = i32 [a0]\n  6733: jump @264 if a0 >u 35\n      : @263 (gas: 1)\n  6737: jump @714\n      : @264 (gas: 5)\n  6740: a0 = s1 + 0x2000\n  6744: i32 a0 = a0 + 0xfffffffffffffcc0\n  6748: a1 = 0x4\n  6751: ecalli 4 // 'call_data_load'\n  6753: fallthrough\n      : @265 (gas: 11)\n  6754: a0 = s1 + 0x1858\n  6758: t0 = u64 [a0 + 0x480]\n  6762: a4 = a0 + 0x400\n  6766: a1 = u64 [a4 + 0x78]\n  6769: a3 = u64 [a4 + 0x68]\n  6772: a2 = u64 [a4 + 0x70]\n  6775: a4 = a1 | t0\n  6778: a5 = a3 <u 0x10\n  6781: a5 = 0 if a2 != 0\n  6783: a5 = 0 if a4 != 0\n  6785: jump @267 if a5 != 0\n      : @266 (gas: 1)\n  6788: jump @715\n      : @267 (gas: 17)\n  6791: a4 = a3 + 0x2\n  6794: a3 = a4 <u a3\n  6797: a5 = a2 + a3\n  6800: a2 = a5 <u a2\n  6803: a2 = a3 if a3 == 0\n  6806: a2 = a2 + a1\n  6809: a1 = a2 <u a1\n  6812: a1 = a1 + t0\n  6815: a3 = a0 + 0x400\n  6819: u64 [a3 + 0x88] = a4\n  6823: u64 [a3 + 0x90] = a5\n  6827: u64 [a3 + 0x98] = a2\n  6831: u64 [a3 + 0xa0] = a1\n  6835: a0 = s1 + 0x7ff\n  6839: a0 = a0 + 0x281\n  6843: a1 = s1 + 0x1ce0\n  6847: ra = 228, jump @6\n      : @268 [@dyn 114] (gas: 13)\n  6853: a1 = s1 + 0x7ff\n  6857: a1 = a1 + 0x59\n  6860: a2 = a1 + 0x200\n  6864: a0 = u64 [a2 + 0x38]\n  6867: u64 [s1 + 0xc8] = a0\n  6871: a0 = u64 [a2 + 0x30]\n  6874: u64 [s1 + 0xd8] = a0\n  6878: a0 = u64 [a2 + 0x28]\n  6881: u64 [s1 + 0xd0] = a0\n  6885: a0 = s1 + 0x7ff\n  6889: a0 = a0 + 0x261\n  6893: a1 = 0x40\n  6896: ra = 230, jump @2\n      : @269 [@dyn 115] (gas: 8)\n  6902: a3 = s1 + 0x7ff\n  6906: a3 = a3 + 0x59\n  6909: a5 = a3 + 0x200\n  6913: a4 = u64 [a5 + 0x20]\n  6916: a1 = u64 [a5 + 0x18]\n  6919: a2 = u64 [a5 + 0x10]\n  6922: a0 = u64 [a5 + 0x8]\n  6925: t0 = 232, jump @876\n      : @270 [@dyn 116] (gas: 1)\n  6931: jump @272 if a1 == 0\n      : @271 (gas: 1)\n  6934: jump @505\n      : @272 (gas: 15)\n  6937: a1 = u64 [s1 + 0xc8]\n  6941: a1 = a1 << 0x20\n  6944: a2 = a1 >> 0x20\n  6947: u64 [a3 + 512] = 0\n  6951: a1 = u64 [s1 + 0xd0]\n  6955: a4 = a3 + 0x100\n  6959: u64 [a4 + 0xe8] = a1\n  6963: a1 = u64 [s1 + 0xd8]\n  6967: u64 [a4 + 0xf0] = a1\n  6971: a1 = s1 + 0x7ff\n  6975: a1 = a1 + 0x241\n  6979: u64 [a4 + 0xf8] = a2\n  6983: u64 [s1 + 0xd8] = a0\n  6987: ra = 0x28c\n  6991: jump @4\n      : @273 (gas: 9)\n  6994: u64 [a2 + 1632] = 0\n  6998: u64 [a2 + 1624] = 0\n  7002: u64 [a2 + 1616] = 0\n  7006: u64 [a2 + 1608] = 0\n  7010: a0 = s1 + 0x2000\n  7014: i32 a0 = a0 + 0xfffffffffffffea0\n  7018: ra = 0xea\n  7022: ecalli 15 // 'value_transferred'\n  7024: fallthrough\n      : @274 [@dyn 117] (gas: 3)\n  7025: a3 = s1 + 0x1858\n  7029: a4 = a3 + 0x600\n  7033: t0 = 236, jump @894\n      : @275 [@dyn 118] (gas: 1)\n  7039: jump @277 if a0 == 0\n      : @276 (gas: 1)\n  7042: jump @716\n      : @277 (gas: 3)\n  7045: a0 = u64 [s1 + 0xd8]\n  7049: a0 = i32 [a0]\n  7051: jump @279 if a0 >u 35\n      : @278 (gas: 1)\n  7055: jump @717\n      : @279 (gas: 5)\n  7058: a0 = s1 + 0x2000\n  7062: i32 a0 = a0 + 0xfffffffffffffec0\n  7066: a1 = 0x4\n  7069: ecalli 4 // 'call_data_load'\n  7071: fallthrough\n      : @280 (gas: 13)\n  7072: a2 = s1 + 0x1858\n  7076: a1 = u64 [a2 + 0x678]\n  7080: a3 = u64 [a2 + 0x680]\n  7084: a0 = 0x100000000\n  7094: a0 = a0 ^ a1\n  7097: a0 = a0 | a3\n  7100: u64 [s1 + 0xd8] = a1\n  7104: a1 = a1 >> 0x20\n  7107: a1 = a1 <u 0x1\n  7110: u64 [s1 + 0xd0] = a3\n  7114: a1 = 0 if a3 != 0\n  7116: a1 = 0 if a0 == 0\n  7118: jump @282 if a1 != 0\n      : @281 (gas: 1)\n  7121: jump @718\n      : @282 (gas: 13)\n  7124: a1 = a2 + 0x600\n  7128: a0 = u64 [a1 + 0x70]\n  7131: u64 [s1 + 0xc0] = a0\n  7135: a0 = u64 [a1 + 0x68]\n  7138: u64 [s1 + 0xc8] = a0\n  7142: u64 [a2 + 1696] = 0\n  7146: u64 [a2 + 1688] = 0\n  7150: u64 [a2 + 1680] = 0\n  7154: u64 [a1 + 136] = 0x17\n  7159: a0 = s1 + 0x7ff\n  7163: a0 = a0 + 0x621\n  7167: a1 = s1 + 0x1ee0\n  7171: ra = 238, jump @6\n      : @283 [@dyn 119] (gas: 16)\n  7177: a0 = s1 + 0x7ff\n  7181: a0 = a0 + 0x59\n  7184: a1 = u64 [a0 + 0x5d0]\n  7188: u64 [s1 + 0xb8] = a1\n  7192: a1 = u64 [a0 + 0x5c8]\n  7196: u64 [s1 + 0xb0] = a1\n  7200: a0 = u32 [a0 + 0x5d8]\n  7204: u64 [s1 + 0xa8] = a0\n  7208: a0 = 0x30190\n  7213: u64 [s1 + 0xa0] = a0\n  7217: i32 a0 = a0 + 0\n  7219: ra = 0xf0\n  7223: ecalli 6 // 'caller'\n  7225: a2 = u64 [s1 + 0xa0]\n  7229: t0 = 0xf2\n  7233: jump @877\n      : @284 [@dyn 120] (gas: 2)\n  7236: a2 = u64 [s1 + 0xa0]\n  7240: t0 = 242, jump @877\n      : @285 [@dyn 121] (gas: 20)\n  7246: a2 = u64 [s1 + 0xa8]\n  7250: a1 = a1 ^ a2\n  7253: a2 = u64 [s1 + 0xb0]\n  7257: a0 = a0 ^ a2\n  7260: a0 = a0 | a1\n  7263: a1 = u64 [s1 + 0xb8]\n  7267: a1 = a1 ^ a3\n  7270: a0 = a0 | a1\n  7273: a0 = a0 <u 0x1\n  7276: a1 = s1 + 0x7ff\n  7280: a1 = a1 + 0x59\n  7283: u64 [a1 + 1472] = 0\n  7287: u64 [a1 + 1464] = 0\n  7291: u64 [a1 + 0x5a8] = a0\n  7295: a0 = s1 + 0x7ff\n  7299: a0 = a0 + 0x601\n  7303: u64 [a1 + 1456] = 0\n  7307: ra = 0xf4\n  7311: t0 = 0x2de\n  7315: jump @886\n      : @286 [@dyn 122] (gas: 8)\n  7318: a0 = u64 [s1 + 0xd8]\n  7322: a1 = u64 [s1 + 0xc8]\n  7326: a0 = a0 | a1\n  7329: a1 = u64 [s1 + 0xd0]\n  7333: a2 = u64 [s1 + 0xc0]\n  7337: a1 = a1 | a2\n  7340: a0 = a0 | a1\n  7343: jump @288 if a0 == 0\n      : @287 (gas: 1)\n  7346: jump @719\n      : @288 (gas: 4)\n  7349: a0 = s1 + 0x7ff\n  7353: a0 = a0 + 0x5c1\n  7357: a1 = 0x40\n  7360: ra = 246, jump @2\n      : @289 [@dyn 123] (gas: 15)\n  7366: a4 = s1 + 0x7ff\n  7370: a4 = a4 + 0x59\n  7373: t0 = u64 [a4 + 0x580]\n  7377: a1 = a4 + 0x500\n  7381: a5 = u64 [a1 + 0x78]\n  7384: a3 = u64 [a1 + 0x70]\n  7387: a0 = u64 [a1 + 0x68]\n  7390: a2 = a3 | t0\n  7393: a1 = a0 | a5\n  7396: a1 = a1 | a2\n  7399: a1 = a1 >> 0x20\n  7402: a2 = a2 | a5\n  7405: a2 = a2 << 0x20\n  7408: a1 = a1 | a2\n  7411: jump @291 if a1 == 0\n      : @290 (gas: 1)\n  7414: jump @505\n      : @291 (gas: 12)\n  7417: u64 [a4 + 1368] = 0\n  7421: u64 [a4 + 1360] = 0\n  7425: u64 [a4 + 1352] = 0\n  7429: u64 [s1 + 0xd0] = a3\n  7433: a3 = 0x8c379a000000000\n  7443: a1 = s1 + 0x7ff\n  7447: a1 = a1 + 0x5a1\n  7451: u64 [a4 + 0x560] = a3\n  7455: u64 [s1 + 0xd8] = a0\n  7459: u64 [s1 + 0xc8] = t0\n  7463: u64 [s1 + 0xc0] = a5\n  7467: ra = 248, jump @4\n      : @292 [@dyn 124] (gas: 5)\n  7473: a1 = u64 [s1 + 0xd8]\n  7477: a0 = u64 [s1 + 0xc8]\n  7481: a3 = u64 [s1 + 0xc0]\n  7485: a3 = a3 | a0\n  7488: t0 = 250, jump @873\n      : @293 [@dyn 125] (gas: 1)\n  7494: jump @295 if a0 != 0\n      : @294 (gas: 1)\n  7497: jump @505\n      : @295 (gas: 12)\n  7500: i32 a0 = a1 + 0x4\n  7503: a2 = s1 + 0x7ff\n  7507: a2 = a2 + 0x59\n  7510: u64 [a2 + 1344] = 0\n  7514: u64 [a2 + 1336] = 0\n  7518: u64 [a2 + 1320] = 0x20\n  7523: a1 = s1 + 0x7ff\n  7527: a1 = a1 + 0x581\n  7531: u64 [a2 + 1328] = 0\n  7535: u64 [s1 + 0xc8] = a3\n  7539: u64 [s1 + 0xc0] = a4\n  7543: ra = 252, jump @4\n      : @296 [@dyn 126] (gas: 1)\n  7549: t0 = 254, jump @874\n      : @297 [@dyn 127] (gas: 1)\n  7555: jump @299 if a0 != 0\n      : @298 (gas: 1)\n  7558: jump @505\n      : @299 (gas: 10)\n  7561: i32 a0 = a1 + 0x24\n  7564: a3 = s1 + 0x7ff\n  7568: a3 = a3 + 0x59\n  7571: u64 [a3 + 1312] = 0\n  7575: u64 [a3 + 1304] = 0\n  7579: u64 [a3 + 1288] = 0xe\n  7584: a1 = s1 + 0x7ff\n  7588: a1 = a1 + 0x561\n  7592: u64 [a3 + 1296] = 0\n  7596: ra = 256, jump @4\n      : @300 [@dyn 128] (gas: 1)\n  7602: t0 = 258, jump @875\n      : @301 [@dyn 129] (gas: 1)\n  7608: jump @303 if a0 != 0\n      : @302 (gas: 1)\n  7611: jump @505\n      : @303 (gas: 13)\n  7614: i32 a0 = a3 + 0x44\n  7617: a1 = u64 [0x200a0]\n  7622: a2 = u64 [0x200a8]\n  7627: a4 = s1 + 0x7ff\n  7631: a4 = a4 + 0x59\n  7634: u64 [a4 + 0x500] = a1\n  7638: u64 [a4 + 1264] = 0\n  7642: u64 [a4 + 0x4f8] = a2\n  7646: a1 = s1 + 0x7ff\n  7650: a1 = a1 + 0x541\n  7654: u64 [a4 + 1256] = 0\n  7658: ra = 0x270\n  7662: jump @4\n      : @304 (gas: 8)\n  7665: u64 [a4 + 640] = 0\n  7669: u64 [a4 + 632] = 0\n  7673: u64 [a4 + 624] = 0\n  7677: u64 [a4 + 616] = 0\n  7681: a0 = s1 + 0x2000\n  7685: i32 a0 = a0 + 0x2c0\n  7689: ecalli 15 // 'value_transferred'\n  7691: fallthrough\n      : @305 (gas: 10)\n  7692: a3 = s1 + 0x2058\n  7696: a4 = a3 + 0x200\n  7700: a0 = u64 [a4 + 0x78]\n  7703: a1 = u64 [a4 + 0x80]\n  7707: a2 = u64 [a4 + 0x70]\n  7710: a3 = u64 [a4 + 0x68]\n  7713: a1 = a1 | a2\n  7716: a0 = a0 | a3\n  7719: a0 = a0 | a1\n  7722: jump @307 if a0 == 0\n      : @306 (gas: 1)\n  7725: jump @722\n      : @307 (gas: 3)\n  7728: a0 = u64 [s1 + 0xd8]\n  7732: a0 = i32 [a0]\n  7734: jump @309 if a0 >u 35\n      : @308 (gas: 1)\n  7738: jump @723\n      : @309 (gas: 29)\n  7741: a0 = sp + 0xffffffffffffffe0\n  7744: a0 = a0 & 0xffffffffffffffe0\n  7747: u64 [s1 + 0xd8] = a0\n  7751: sp = a0\n  7753: a0 = s1 + 0x2000\n  7757: i32 a0 = a0 + 0x2e0\n  7761: a1 = 0x4\n  7764: ecalli 4 // 'call_data_load'\n  7766: a1 = s1 + 0x2058\n  7770: a2 = u64 [a1 + 0x2a0]\n  7774: u64 [s1 + 0xc8] = a2\n  7778: a3 = u64 [a1 + 0x298]\n  7782: u64 [s1 + 0xc0] = a3\n  7786: a0 = u64 [a1 + 0x290]\n  7790: u64 [s1 + 0xd0] = a0\n  7794: a4 = u64 [a1 + 0x288]\n  7798: u64 [s1 + 0xb8] = a4\n  7802: a5 = u64 [s1 + 0xd8]\n  7806: u64 [a5 + 0x18] = a2\n  7809: u64 [a5 + 0x10] = a3\n  7812: u64 [a5 + 0x8] = a0\n  7815: u64 [a5] = a4\n  7817: u64 [a1 + 704] = 0\n  7821: u64 [a1 + 696] = 0\n  7825: u64 [a1 + 688] = 0\n  7829: u64 [a1 + 680] = 0x17\n  7834: a0 = s1 + 0x15a0\n  7838: a1 = s1 + 0x2300\n  7842: ra = 260, jump @6\n      : @310 [@dyn 130] (gas: 15)\n  7848: a0 = s1 + 0x1058\n  7852: a1 = u64 [a0 + 0x550]\n  7856: u64 [s1 + 0xb0] = a1\n  7860: a1 = u64 [a0 + 0x548]\n  7864: u64 [s1 + 0xa8] = a1\n  7868: a0 = u32 [a0 + 0x558]\n  7872: u64 [s1 + 0xa0] = a0\n  7876: a0 = 0x30190\n  7881: u64 [s1 + 0x98] = a0\n  7885: i32 a0 = a0 + 0\n  7887: ra = 0x106\n  7891: ecalli 6 // 'caller'\n  7893: a2 = u64 [s1 + 0x98]\n  7897: t0 = 0x108\n  7901: jump @877\n      : @311 [@dyn 131] (gas: 2)\n  7904: a2 = u64 [s1 + 0x98]\n  7908: t0 = 264, jump @877\n      : @312 [@dyn 132] (gas: 18)\n  7914: a2 = u64 [s1 + 0xa0]\n  7918: a1 = a1 ^ a2\n  7921: a2 = u64 [s1 + 0xa8]\n  7925: a0 = a0 ^ a2\n  7928: a0 = a0 | a1\n  7931: a1 = u64 [s1 + 0xb0]\n  7935: a1 = a1 ^ a3\n  7938: a0 = a0 | a1\n  7941: a0 = a0 <u 0x1\n  7944: a1 = s1 + 0x1058\n  7948: u64 [a1 + 1344] = 0\n  7952: u64 [a1 + 1336] = 0\n  7956: u64 [a1 + 0x528] = a0\n  7960: a0 = s1 + 0x1580\n  7964: u64 [a1 + 1328] = 0\n  7968: ra = 0x10a\n  7972: t0 = 0x2de\n  7976: jump @886\n      : @313 [@dyn 133] (gas: 9)\n  7979: a0 = u64 [s1 + 0xc8]\n  7983: a1 = u64 [s1 + 0xc0]\n  7987: a0 = a0 | a1\n  7990: a1 = u64 [s1 + 0xb8]\n  7994: a1 = a1 <u 0x7d1\n  7998: a2 = u64 [s1 + 0xd0]\n  8002: a1 = 0 if a2 != 0\n  8004: a1 = 0 if a0 != 0\n  8006: jump @315 if a1 == 0\n      : @314 (gas: 1)\n  8009: jump @724\n      : @315 (gas: 3)\n  8012: a0 = s1 + 0x1560\n  8016: a1 = 0x40\n  8019: ra = 268, jump @2\n      : @316 [@dyn 134] (gas: 14)\n  8025: a4 = s1 + 0x1058\n  8029: t0 = u64 [a4 + 0x520]\n  8033: a1 = a4 + 0x500\n  8037: a5 = u64 [a1 + 0x18]\n  8040: a3 = u64 [a1 + 0x10]\n  8043: a0 = u64 [a1 + 0x8]\n  8046: a2 = a3 | t0\n  8049: a1 = a0 | a5\n  8052: a1 = a1 | a2\n  8055: a1 = a1 >> 0x20\n  8058: a2 = a2 | a5\n  8061: a2 = a2 << 0x20\n  8064: a1 = a1 | a2\n  8067: jump @318 if a1 == 0\n      : @317 (gas: 1)\n  8070: jump @505\n      : @318 (gas: 11)\n  8073: u64 [a4 + 1272] = 0\n  8077: u64 [a4 + 1264] = 0\n  8081: u64 [a4 + 1256] = 0\n  8085: u64 [s1 + 0xd0] = a3\n  8089: a3 = 0x8c379a000000000\n  8099: a1 = s1 + 0x1540\n  8103: u64 [a4 + 0x500] = a3\n  8107: u64 [s1 + 0xd8] = a0\n  8111: u64 [s1 + 0xc8] = t0\n  8115: u64 [s1 + 0xc0] = a5\n  8119: ra = 270, jump @4\n      : @319 [@dyn 135] (gas: 5)\n  8125: a1 = u64 [s1 + 0xd8]\n  8129: a0 = u64 [s1 + 0xc8]\n  8133: a3 = u64 [s1 + 0xc0]\n  8137: a3 = a3 | a0\n  8140: t0 = 272, jump @873\n      : @320 [@dyn 136] (gas: 1)\n  8146: jump @322 if a0 != 0\n      : @321 (gas: 1)\n  8149: jump @505\n      : @322 (gas: 1)\n  8152: t0 = 274, jump @882\n      : @323 [@dyn 137] (gas: 8)\n  8158: u64 [a2 + 1248] = 0\n  8162: u64 [a2 + 1240] = 0\n  8166: u64 [a2 + 1224] = 0x20\n  8171: a1 = s1 + 0x1520\n  8175: u64 [a2 + 1232] = 0\n  8179: u64 [s1 + 0xc8] = a3\n  8183: u64 [s1 + 0xc0] = a4\n  8187: ra = 276, jump @4\n      : @324 [@dyn 138] (gas: 1)\n  8193: t0 = 278, jump @874\n      : @325 [@dyn 139] (gas: 1)\n  8199: jump @327 if a0 != 0\n      : @326 (gas: 1)\n  8202: jump @505\n      : @327 (gas: 1)\n  8205: t0 = 280, jump @896\n      : @328 [@dyn 140] (gas: 6)\n  8211: u64 [a3 + 1216] = 0\n  8215: u64 [a3 + 1208] = 0\n  8219: u64 [a3 + 1192] = 0xc\n  8224: a1 = s1 + 0x1500\n  8228: u64 [a3 + 1200] = 0\n  8232: ra = 282, jump @4\n      : @329 [@dyn 141] (gas: 4)\n  8238: a2 = u64 [s1 + 0xd8]\n  8242: a0 = 0xffffffbc\n  8252: a0 = a2 <u a0\n  8255: t0 = 284, jump @878\n      : @330 [@dyn 142] (gas: 1)\n  8261: jump @332 if a0 != 0\n      : @331 (gas: 1)\n  8264: jump @505\n      : @332 (gas: 11)\n  8267: i32 a0 = a2 + 0x44\n  8270: a1 = u64 [0x20038]\n  8275: a3 = s1 + 0x1058\n  8279: u64 [a3 + 1168] = 0\n  8283: u64 [a3 + 0x4a0] = a1\n  8287: a1 = 0x6869676800000000\n  8297: u64 [a3 + 0x498] = a1\n  8301: a1 = s1 + 0x14e0\n  8305: u64 [a3 + 1160] = 0\n  8309: ra = 0x270\n  8313: jump @4\n      : @333 (gas: 9)\n  8316: u64 [a2 + 1568] = 0\n  8320: u64 [a2 + 1560] = 0\n  8324: u64 [a2 + 1552] = 0\n  8328: u64 [a2 + 1544] = 0\n  8332: a0 = s1 + 0x2000\n  8336: i32 a0 = a0 + 0xfffffffffffffe60\n  8340: ra = 0x11e\n  8344: ecalli 15 // 'value_transferred'\n  8346: fallthrough\n      : @334 [@dyn 143] (gas: 3)\n  8347: a4 = s1 + 0x1858\n  8351: a5 = a4 + 0x600\n  8355: t0 = 288, jump @899\n      : @335 [@dyn 144] (gas: 1)\n  8361: jump @337 if a0 == 0\n      : @336 (gas: 1)\n  8364: jump @726\n      : @337 (gas: 3)\n  8367: a0 = u64 [s1 + 0xd8]\n  8371: a0 = i32 [a0]\n  8373: jump @339 if a0 >u 3\n      : @338 (gas: 1)\n  8377: jump @727\n      : @339 (gas: 8)\n  8380: u64 [a4 + 1600] = 0\n  8384: u64 [a4 + 1592] = 0\n  8388: u64 [a4 + 1584] = 0\n  8392: u64 [a4 + 1576] = 0x12\n  8397: a0 = s1 + 0x7ff\n  8401: a0 = a0 + 0x521\n  8405: a1 = s1 + 0x1e80\n  8409: ra = 290, jump @6\n      : @340 [@dyn 145] (gas: 15)\n  8415: a1 = s1 + 0x7ff\n  8419: a1 = a1 + 0x59\n  8422: a2 = a1 + 0x400\n  8426: a0 = u64 [a2 + 0xe0]\n  8430: u64 [s1 + 0xd8] = a0\n  8434: a0 = u64 [a2 + 0xd8]\n  8438: u64 [s1 + 0xc8] = a0\n  8442: a0 = u64 [a2 + 0xd0]\n  8446: u64 [s1 + 0xd0] = a0\n  8450: a0 = u64 [a2 + 0xc8]\n  8454: u64 [s1 + 0xc0] = a0\n  8458: a0 = s1 + 0x7ff\n  8462: a0 = a0 + 0x501\n  8466: a1 = 0x40\n  8469: ra = 292, jump @2\n      : @341 [@dyn 146] (gas: 8)\n  8475: a3 = s1 + 0x7ff\n  8479: a3 = a3 + 0x59\n  8482: a5 = a3 + 0x400\n  8486: a4 = u64 [a5 + 0xc0]\n  8490: a1 = u64 [a5 + 0xb8]\n  8494: a2 = u64 [a5 + 0xb0]\n  8498: a0 = u64 [a5 + 0xa8]\n  8502: t0 = 294, jump @876\n      : @342 [@dyn 147] (gas: 1)\n  8508: jump @344 if a1 == 0\n      : @343 (gas: 1)\n  8511: jump @505\n      : @344 (gas: 18)\n  8514: a1 = u64 [s1 + 0xc0]\n  8518: a1 = a1 ^ 0x10\n  8521: a2 = u64 [s1 + 0xc8]\n  8525: a2 = a2 | a1\n  8528: a1 = u64 [s1 + 0xd8]\n  8532: a4 = u64 [s1 + 0xd0]\n  8536: a1 = a1 | a4\n  8539: a1 = a1 | a2\n  8542: a1 = a1 <u 0x1\n  8545: u64 [a3 + 1184] = 0\n  8549: u64 [a3 + 1176] = 0\n  8553: u64 [a3 + 0x488] = a1\n  8557: a1 = s1 + 0x7ff\n  8561: a1 = a1 + 0x4e1\n  8565: u64 [a3 + 1168] = 0\n  8569: u64 [s1 + 0xd8] = a0\n  8573: ra = 0x28c\n  8577: jump @4\n      : @345 (gas: 8)\n  8580: u64 [a2 + 1280] = 0\n  8584: u64 [a2 + 1272] = 0\n  8588: u64 [a2 + 1264] = 0\n  8592: u64 [a2 + 1256] = 0\n  8596: a0 = s1 + 0x2000\n  8600: i32 a0 = a0 + 0xfffffffffffffd40\n  8604: ecalli 15 // 'value_transferred'\n  8606: fallthrough\n      : @346 (gas: 10)\n  8607: a4 = s1 + 0x1858\n  8611: a5 = a4 + 0x400\n  8615: a0 = u64 [a5 + 0xf8]\n  8619: a1 = u64 [a4 + 0x500]\n  8623: a2 = u64 [a5 + 0xf0]\n  8627: a3 = u64 [a5 + 0xe8]\n  8631: a1 = a1 | a2\n  8634: a0 = a0 | a3\n  8637: a0 = a0 | a1\n  8640: jump @348 if a0 == 0\n      : @347 (gas: 1)\n  8643: jump @728\n      : @348 (gas: 3)\n  8646: a0 = u64 [s1 + 0xd8]\n  8650: a0 = i32 [a0]\n  8652: jump @350 if a0 >u 3\n      : @349 (gas: 1)\n  8656: jump @729\n      : @350 (gas: 8)\n  8659: u64 [a4 + 1312] = 0\n  8663: u64 [a4 + 1304] = 0\n  8667: u64 [a4 + 1296] = 0\n  8671: u64 [a4 + 1288] = 0x18\n  8676: a0 = s1 + 0x7ff\n  8680: a0 = a0 + 0x341\n  8684: a1 = s1 + 0x1d60\n  8688: ra = 296, jump @6\n      : @351 [@dyn 148] (gas: 13)\n  8694: a1 = s1 + 0x7ff\n  8698: a1 = a1 + 0x59\n  8701: a2 = a1 + 0x200\n  8705: a0 = u64 [a2 + 0xf8]\n  8709: u64 [s1 + 0xc8] = a0\n  8713: a0 = u64 [a2 + 0xf0]\n  8717: u64 [s1 + 0xd8] = a0\n  8721: a0 = u64 [a2 + 0xe8]\n  8725: u64 [s1 + 0xd0] = a0\n  8729: a0 = s1 + 0x7ff\n  8733: a0 = a0 + 0x321\n  8737: a1 = 0x40\n  8740: ra = 298, jump @2\n      : @352 [@dyn 149] (gas: 8)\n  8746: a3 = s1 + 0x7ff\n  8750: a3 = a3 + 0x59\n  8753: a5 = a3 + 0x200\n  8757: a4 = u64 [a5 + 0xe0]\n  8761: a1 = u64 [a5 + 0xd8]\n  8765: a2 = u64 [a5 + 0xd0]\n  8769: a0 = u64 [a5 + 0xc8]\n  8773: t0 = 300, jump @876\n      : @353 [@dyn 150] (gas: 1)\n  8779: jump @355 if a1 == 0\n      : @354 (gas: 1)\n  8782: jump @505\n      : @355 (gas: 15)\n  8785: a1 = u64 [s1 + 0xc8]\n  8789: a1 = a1 << 0x20\n  8792: a2 = a1 >> 0x20\n  8795: u64 [a3 + 704] = 0\n  8799: a1 = u64 [s1 + 0xd0]\n  8803: a4 = a3 + 0x200\n  8807: u64 [a4 + 0xa8] = a1\n  8811: a1 = u64 [s1 + 0xd8]\n  8815: u64 [a4 + 0xb0] = a1\n  8819: a1 = s1 + 0x7ff\n  8823: a1 = a1 + 0x301\n  8827: u64 [a4 + 0xb8] = a2\n  8831: u64 [s1 + 0xd8] = a0\n  8835: ra = 0x28c\n  8839: jump @4\n      : @356 (gas: 1)\n  8842: jump @358 if a0 == 2143612328\n      : @357 (gas: 1)\n  8849: jump @730\n      : @358 (gas: 9)\n  8852: u64 [a2 + 1888] = 0\n  8856: u64 [a2 + 1880] = 0\n  8860: u64 [a2 + 1872] = 0\n  8864: u64 [a2 + 1864] = 0\n  8868: a0 = s1 + 0x2000\n  8872: i32 a0 = a0 + 0xffffffffffffffa0\n  8875: ra = 0x12e\n  8879: ecalli 15 // 'value_transferred'\n  8881: fallthrough\n      : @359 [@dyn 151] (gas: 3)\n  8882: a3 = s1 + 0x1858\n  8886: a4 = a3 + 0x700\n  8890: t0 = 304, jump @894\n      : @360 [@dyn 152] (gas: 1)\n  8896: jump @362 if a0 == 0\n      : @361 (gas: 1)\n  8899: jump @737\n      : @362 (gas: 3)\n  8902: a0 = u64 [s1 + 0xd8]\n  8906: a0 = i32 [a0]\n  8908: jump @364 if a0 >u 3\n      : @363 (gas: 1)\n  8912: jump @738\n      : @364 (gas: 4)\n  8915: a0 = s1 + 0x7ff\n  8919: a0 = a0 + 0x6c1\n  8923: a1 = 0x40\n  8926: ra = 306, jump @2\n      : @365 [@dyn 153] (gas: 8)\n  8932: a3 = s1 + 0x7ff\n  8936: a3 = a3 + 0x59\n  8939: a5 = a3 + 0x600\n  8943: a4 = u64 [a5 + 0x80]\n  8947: a1 = u64 [a5 + 0x78]\n  8950: a2 = u64 [a5 + 0x70]\n  8953: a0 = u64 [a5 + 0x68]\n  8956: t0 = 308, jump @876\n      : @366 [@dyn 154] (gas: 1)\n  8962: jump @368 if a1 == 0\n      : @367 (gas: 1)\n  8965: jump @505\n      : @368 (gas: 9)\n  8968: u64 [a3 + 1632] = 0\n  8972: u64 [a3 + 1624] = 0\n  8976: u64 [a3 + 1608] = 0x10\n  8981: a1 = s1 + 0x7ff\n  8985: a1 = a1 + 0x6a1\n  8989: u64 [a3 + 1616] = 0\n  8993: u64 [s1 + 0xd8] = a0\n  8997: ra = 0x28c\n  9001: jump @4\n      : @369 (gas: 3)\n  9004: a0 = u64 [s1 + 0xd8]\n  9008: a0 = i32 [a0]\n  9010: jump @371 if a0 >u 35\n      : @370 (gas: 1)\n  9014: jump @739\n      : @371 (gas: 21)\n  9017: a0 = s1 + 0x2000\n  9021: i32 a0 = a0 + 0x40\n  9024: a1 = 0x4\n  9027: ecalli 4 // 'call_data_load'\n  9029: a1 = s1 + 0x2058\n  9033: a0 = u64 [a1]\n  9035: u64 [s1 + 0xd8] = a0\n  9039: a2 = a1 + 0xffffffffffffff00\n  9043: a0 = u64 [a2 + 0xf8]\n  9047: u64 [s1 + 0xd0] = a0\n  9051: a0 = u64 [a2 + 0xf0]\n  9055: u64 [s1 + 0xc8] = a0\n  9059: a0 = u64 [a2 + 0xe8]\n  9063: u64 [s1 + 0xc0] = a0\n  9067: u64 [a1 + 32] = 0\n  9070: u64 [a1 + 24] = 0\n  9073: u64 [a1 + 16] = 0\n  9076: u64 [a1 + 8] = 0\n  9079: a0 = s1 + 0x13c0\n  9083: a1 = s1 + 0x2060\n  9087: ra = 310, jump @6\n      : @372 [@dyn 155] (gas: 19)\n  9093: a0 = s1 + 0x1058\n  9097: a2 = a0 + 0x300\n  9101: a1 = u64 [a2 + 0x68]\n  9104: u64 [s1 + 0xb8] = a1\n  9108: a1 = u64 [a2 + 0x78]\n  9111: u64 [s1 + 0xb0] = a1\n  9115: a1 = u64 [a2 + 0x70]\n  9118: u64 [s1 + 0xa8] = a1\n  9122: a0 = u64 [a2 + 0x80]\n  9126: u64 [s1 + 0xa0] = a0\n  9130: a0 = s1 + 0x2058\n  9134: u64 [a0 + 64] = 0\n  9137: u64 [a0 + 56] = 0\n  9140: u64 [a0 + 48] = 0\n  9143: u64 [a0 + 40] = 0\n  9146: a0 = s1 + 0x2000\n  9150: i32 a0 = a0 + 0x80\n  9154: ecalli 15 // 'value_transferred'\n  9156: fallthrough\n      : @373 (gas: 17)\n  9157: a3 = s1 + 0x2058\n  9161: a0 = u64 [a3 + 0x40]\n  9164: a1 = u64 [a3 + 0x30]\n  9167: a2 = u64 [a3 + 0x28]\n  9170: a3 = u64 [a3 + 0x38]\n  9173: a4 = u64 [s1 + 0xa0]\n  9177: a0 = a0 ^ a4\n  9180: a4 = u64 [s1 + 0xa8]\n  9184: a1 = a1 ^ a4\n  9187: a0 = a0 | a1\n  9190: a1 = u64 [s1 + 0xb0]\n  9194: a1 = a1 ^ a3\n  9197: a3 = u64 [s1 + 0xb8]\n  9201: a2 = a2 ^ a3\n  9204: a1 = a1 | a2\n  9207: a0 = a0 | a1\n  9210: jump @506 if a0 != 0\n      : @374 (gas: 25)\n  9214: a5 = u64 [s1 + 0xc8]\n  9218: a0 = a5 >u 0\n  9220: a1 = u64 [s1 + 0xc0]\n  9224: a1 = a1 <u 0x10\n  9227: a2 = a1 ^ 0x1\n  9230: a2 = a0 if a5 != 0\n  9233: a4 = u64 [s1 + 0xd0]\n  9237: t0 = a4 >u 0\n  9239: a3 = u64 [s1 + 0xd8]\n  9243: a0 = a3 >u 0\n  9245: a0 = t0 if a3 == 0\n  9248: a3 = a3 | a4\n  9251: a0 = a2 if a3 == 0\n  9254: u64 [s1 + 0xb8] = a0\n  9258: a1 = 0 if a5 != 0\n  9260: a1 = 0 if a3 != 0\n  9262: a2 = s1 + 0x1058\n  9266: u64 [a2 + 704] = 0\n  9270: u64 [a2 + 696] = 0\n  9274: u64 [a2 + 0x2a8] = a1\n  9278: a0 = s1 + 0x1300\n  9282: u64 [a2 + 688] = 0\n  9286: ra = 0x138\n  9290: t0 = 0x2c2\n  9294: jump @886\n      : @375 [@dyn 156] (gas: 2)\n  9297: a0 = u64 [s1 + 0xb8]\n  9301: jump @377 if a0 == 0\n      : @376 (gas: 1)\n  9304: jump @758\n      : @377 (gas: 22)\n  9307: a0 = sp + 0xffffffffffffffe0\n  9310: a1 = a0 & 0xffffffffffffffe0\n  9313: sp = a1\n  9315: a2 = u64 [s1 + 0xc0]\n  9319: a0 = a2 + 0x2\n  9322: a4 = a0 <u a2\n  9325: a3 = u64 [s1 + 0xc8]\n  9329: a2 = a3 + a4\n  9332: a3 = a2 <u a3\n  9335: a3 = a4 if a4 == 0\n  9338: a4 = u64 [s1 + 0xd0]\n  9342: a3 = a3 + a4\n  9345: a5 = a3 <u a4\n  9348: a4 = u64 [s1 + 0xd8]\n  9352: a4 = a4 + a5\n  9355: u64 [a1 + 0x8] = a2\n  9358: u64 [a1] = a0\n  9360: u64 [a1 + 0x10] = a3\n  9363: u64 [a1 + 0x18] = a4\n  9366: a0 = s1 + 0x12a0\n  9370: u64 [s1 + 0xb8] = a1\n  9374: ra = 314, jump @6\n      : @378 [@dyn 157] (gas: 3)\n  9380: t0 = 0x13c\n  9384: a2 = s1 + 0x1058\n  9388: fallthrough\n      : @379 [@dyn 158] (gas: 6)\n  9389: a0 = u32 [a2 + 0x258]\n  9393: a1 = u64 [a2 + 0x248]\n  9397: a2 = u64 [a2 + 0x250]\n  9401: a0 = a0 | a1\n  9404: a0 = a0 | a2\n  9407: jump @381 if a0 == 0\n      : @380 (gas: 1)\n  9410: jump @542\n      : @381 (gas: 8)\n  9413: a1 = s1 + 0x2058\n  9417: u64 [a1 + 96] = 0\n  9420: u64 [a1 + 88] = 0\n  9423: u64 [a1 + 80] = 0\n  9426: u64 [a1 + 72] = 0x16\n  9430: a0 = s1 + 0x11e0\n  9434: a1 = s1 + 0x20a0\n  9438: ra = 318, jump @6\n      : @382 [@dyn 159] (gas: 3)\n  9444: a0 = s1 + 0x1058\n  9448: a0 = u8 [a0 + 0x188]\n  9452: jump @384 if a0 == 0\n      : @383 (gas: 1)\n  9455: jump @568\n      : @384 (gas: 9)\n  9458: a0 = 0x30190\n  9463: u64 [s1 + 0xa8] = a0\n  9467: i32 a0 = a0 + 0\n  9469: u64 [s1 + 0x88] = a0\n  9473: ra = 0x140\n  9477: ecalli 6 // 'caller'\n  9479: a2 = u64 [s1 + 0xa8]\n  9483: t0 = 0x142\n  9487: jump @893\n      : @385 [@dyn 160] (gas: 2)\n  9490: a2 = u64 [s1 + 0xa8]\n  9494: t0 = 322, jump @893\n      : @386 [@dyn 161] (gas: 11)\n  9500: u64 [s1 + 0xb0] = a1\n  9504: a0 = a0 >> 0x20\n  9507: a1 = reverse a2\n  9509: a2 = a1 << 0x20\n  9512: a0 = a0 | a2\n  9515: u64 [s1 + 0xa0] = a0\n  9519: a1 = a1 >> 0x20\n  9522: u64 [s1 + 0x98] = a1\n  9526: a0 = s1 + 0x1120\n  9530: a1 = u64 [s1 + 0xb8]\n  9534: ra = 324, jump @6\n      : @387 [@dyn 162] (gas: 16)\n  9540: a1 = s1 + 0x1058\n  9544: a0 = u32 [a1 + 0xdc]\n  9548: a1 = u64 [a1 + 0xe0]\n  9552: a0 = a0 << 0x20\n  9555: a2 = u64 [s1 + 0x98]\n  9559: a0 = a0 | a2\n  9562: a2 = s1 + 0x2058\n  9566: u64 [a2 + 0x80] = a1\n  9570: a1 = u64 [s1 + 0xa0]\n  9574: u64 [a2 + 0x70] = a1\n  9577: a1 = u64 [s1 + 0xb0]\n  9581: u64 [a2 + 0x68] = a1\n  9584: u64 [a2 + 0x78] = a0\n  9587: a1 = s1 + 0x20c0\n  9591: a0 = u64 [s1 + 0xb8]\n  9595: ra = 326, jump @7\n      : @388 [@dyn 163] (gas: 12)\n  9601: a0 = sp + 0xffffffffffffffe0\n  9604: a0 = a0 & 0xffffffffffffffe0\n  9607: u64 [s1 + 0xb8] = a0\n  9611: sp = a0\n  9613: a0 = s1 + 0x2058\n  9617: u64 [a0 + 160] = 0\n  9621: u64 [a0 + 152] = 0\n  9625: u64 [a0 + 144] = 0\n  9629: u64 [a0 + 136] = 0x12\n  9634: a0 = s1 + 0x1100\n  9638: a1 = s1 + 0x20e0\n  9642: ra = 328, jump @6\n      : @389 [@dyn 164] (gas: 12)\n  9648: a4 = s1 + 0x1058\n  9652: a2 = u64 [a4 + 0xa8]\n  9656: a0 = u64 [a4 + 0xb0]\n  9660: a1 = u64 [a4 + 0xb8]\n  9664: a3 = u64 [a4 + 0xc0]\n  9668: u64 [a4 + 0x80] = a3\n  9672: u64 [a4 + 0x78] = a1\n  9675: u64 [a4 + 0x70] = a0\n  9678: a0 = s1 + 0x10e0\n  9682: a1 = s1 + 0x10c0\n  9686: u64 [a4 + 0x68] = a2\n  9689: ra = 330, jump @864\n      : @390 [@dyn 165] (gas: 22)\n  9695: a2 = s1 + 0x1058\n  9699: a0 = u64 [a2 + 0x98]\n  9703: a1 = u64 [a2 + 0xa0]\n  9707: a3 = u64 [a2 + 0x88]\n  9711: a2 = u64 [a2 + 0x90]\n  9715: u64 [s1 + 0x80] = a0\n  9719: a4 = u64 [s1 + 0xb8]\n  9723: u64 [a4 + 0x10] = a0\n  9726: u64 [s1 + 0x78] = a1\n  9729: u64 [a4 + 0x18] = a1\n  9732: u64 [s1 + 0x68] = a3\n  9735: u64 [a4] = a3\n  9737: u64 [s1 + 0x70] = a2\n  9740: u64 [a4 + 0x8] = a2\n  9743: a1 = a4\n  9745: a0 = s1 + 0x2058\n  9749: u64 [a0 + 192] = 0\n  9753: u64 [a0 + 184] = 0\n  9757: u64 [a0 + 176] = 0\n  9761: u64 [a0 + 168] = 0x12\n  9766: a0 = s1 + 0x2100\n  9770: ra = 332, jump @7\n      : @391 [@dyn 166] (gas: 8)\n  9776: a1 = s1 + 0x2058\n  9780: u64 [a1 + 224] = 0\n  9784: u64 [a1 + 216] = 0\n  9788: u64 [a1 + 208] = 0\n  9792: u64 [a1 + 200] = 0x14\n  9797: a0 = s1 + 0x10a0\n  9801: a1 = s1 + 0x2120\n  9805: ra = 334, jump @6\n      : @392 [@dyn 167] (gas: 22)\n  9811: a1 = s1 + 0x1058\n  9815: a0 = u64 [a1 + 0x60]\n  9818: u64 [s1 + 0x98] = a0\n  9822: a0 = u64 [a1 + 0x58]\n  9825: u64 [s1 + 0xb8] = a0\n  9829: a0 = u64 [a1 + 0x48]\n  9832: u64 [s1 + 0x90] = a0\n  9836: a0 = u64 [a1 + 0x50]\n  9839: u64 [s1 + 0xb0] = a0\n  9843: a0 = sp + 0xffffffffffffffe0\n  9846: a0 = a0 & 0xffffffffffffffe0\n  9849: u64 [s1 + 0xa0] = a0\n  9853: sp = a0\n  9855: a0 = s1 + 0x2058\n  9859: u64 [a0 + 256] = 0\n  9863: u64 [a0 + 248] = 0\n  9867: u64 [a0 + 240] = 0\n  9871: u64 [a0 + 232] = 0\n  9875: a0 = s1 + 0x2000\n  9879: i32 a0 = a0 + 0x140\n  9883: ecalli 15 // 'value_transferred'\n  9885: fallthrough\n      : @393 (gas: 43)\n  9886: a0 = s1 + 0x2058\n  9890: a2 = u64 [a0 + 0xf0]\n  9894: a1 = u64 [a0 + 0xe8]\n  9898: t0 = u64 [a0 + 0x100]\n  9902: a4 = u64 [a0 + 0xf8]\n  9906: a5 = u64 [s1 + 0xb0]\n  9910: a5 = a5 + a2\n  9913: a0 = u64 [s1 + 0x90]\n  9917: ra = a1 + a0\n  9920: a1 = ra <u a1\n  9923: a5 = a5 + a1\n  9926: a3 = a5 ^ a2\n  9929: a2 = a5 <u a2\n  9932: a2 = a1 if a3 == 0\n  9935: a1 = u64 [s1 + 0xb8]\n  9939: a1 = a1 + a4\n  9942: t1 = u64 [s1 + 0x98]\n  9946: t0 = t0 + t1\n  9949: a3 = a1 <u a4\n  9952: a3 = a3 + t0\n  9955: a2 = a2 + a1\n  9958: a1 = a2 <u a1\n  9961: t2 = a3 + a1\n  9964: a3 = u64 [s1 + 0xb0]\n  9968: a1 = a3 ^ a5\n  9971: a4 = a5 <u a3\n  9974: a0 = ra <u a0\n  9977: a0 = a4 if a1 != 0\n  9980: a3 = u64 [s1 + 0xb8]\n  9984: t0 = a2 <u a3\n  9987: a4 = t1 ^ t2\n  9990: a1 = t2 <u t1\n  9993: a1 = t0 if a4 == 0\n  9996: a3 = a3 ^ a2\n  9999: a3 = a3 | a4\n 10002: a0 = a1 if a3 != 0\n 10005: a1 = u64 [s1 + 0xa0]\n 10009: u64 [a1] = ra\n 10011: u64 [a1 + 0x8] = a5\n 10014: u64 [a1 + 0x10] = a2\n 10017: u64 [a1 + 0x18] = t2\n 10020: a2 = s1 + 0x2058\n 10024: jump @395 if a0 == 0\n      : @394 (gas: 1)\n 10027: jump @773\n      : @395 (gas: 6)\n 10030: u64 [a2 + 288] = 0\n 10034: u64 [a2 + 280] = 0\n 10038: u64 [a2 + 272] = 0\n 10042: u64 [a2 + 264] = 0x14\n 10047: a0 = s1 + 0x2160\n 10051: ra = 336, jump @7\n      : @396 [@dyn 168] (gas: 9)\n 10057: a0 = s1 + 0x2058\n 10061: u64 [a0 + 320] = 0\n 10065: u64 [a0 + 312] = 0\n 10069: u64 [a0 + 304] = 0\n 10073: a1 = a0\n 10075: u64 [a1 + 296] = 0x13\n 10080: a0 = s1 + 0x1080\n 10084: a1 = s1 + 0x2180\n 10088: ra = 338, jump @6\n      : @397 [@dyn 169] (gas: 3)\n 10094: t0 = 0x154\n 10098: a1 = s1 + 0x1058\n 10102: fallthrough\n      : @398 [@dyn 170] (gas: 11)\n 10103: a0 = u64 [a1 + 0x40]\n 10106: u64 [s1 + 0x98] = a0\n 10110: a0 = u64 [a1 + 0x38]\n 10113: u64 [s1 + 0xa0] = a0\n 10117: a0 = u64 [a1 + 0x30]\n 10120: u64 [s1 + 0xb0] = a0\n 10124: a0 = u64 [a1 + 0x28]\n 10127: u64 [s1 + 0xb8] = a0\n 10131: a0 = s1 + 0x1060\n 10135: a1 = 0x40\n 10138: ra = 342, jump @2\n      : @399 [@dyn 171] (gas: 13)\n 10144: a4 = s1 + 0x1058\n 10148: a0 = u64 [a4 + 0x20]\n 10151: a1 = u64 [a4 + 0x18]\n 10154: a2 = u64 [a4 + 0x10]\n 10157: a3 = u64 [a4 + 0x8]\n 10160: a0 = a0 | a2\n 10163: a2 = a3 | a1\n 10166: a2 = a2 | a0\n 10169: a2 = a2 >> 0x20\n 10172: a0 = a0 | a1\n 10175: a0 = a0 << 0x20\n 10178: a0 = a0 | a2\n 10181: jump @505 if a0 != 0\n      : @400 (gas: 15)\n 10185: a1 = s1 + 0x7ff\n 10189: a1 = a1 + 0x59\n 10192: a0 = u64 [s1 + 0xc0]\n 10196: a2 = a1 + 0x700\n 10200: u64 [a2 + 0xe8] = a0\n 10204: a0 = u64 [s1 + 0xc8]\n 10208: u64 [a2 + 0xf0] = a0\n 10212: a0 = u64 [s1 + 0xd0]\n 10216: u64 [a2 + 0xf8] = a0\n 10220: a1 = s1 + 0x1040\n 10224: a0 = u64 [s1 + 0xd8]\n 10228: u64 [a4] = a0\n 10230: a0 = a3\n 10232: u64 [s1 + 0xd8] = a3\n 10236: ra = 344, jump @4\n      : @401 [@dyn 172] (gas: 47)\n 10242: a0 = u64 [s1 + 0x88]\n 10246: ecalli 6 // 'caller'\n 10248: a2 = u64 [s1 + 0xa8]\n 10252: a0 = u64 [a2 + 0x8]\n 10255: a1 = i32 [a2 + 0x10]\n 10258: a2 = u64 [a2]\n 10260: a3 = reverse a0\n 10262: a0 = a3 << 0x20\n 10265: a1 = reverse a1\n 10267: a1 = a1 >> 0x20\n 10270: t0 = a1 | a0\n 10273: a3 = a3 >> 0x20\n 10276: a2 = reverse a2\n 10278: a1 = a2 << 0x20\n 10281: t1 = a1 | a3\n 10284: a2 = a2 >> 0x20\n 10287: a1 = s1 + 0x7ff\n 10291: a1 = a1 + 0x59\n 10294: u64 [a1 + 1952] = 0\n 10298: a0 = u64 [s1 + 0x98]\n 10302: u64 [a1 + 0x7c0] = a0\n 10306: a0 = u64 [s1 + 0xa0]\n 10310: u64 [a1 + 0x7b8] = a0\n 10314: a0 = u64 [s1 + 0xb0]\n 10318: u64 [a1 + 0x7b0] = a0\n 10322: a0 = u64 [s1 + 0xb8]\n 10326: u64 [a1 + 0x7a8] = a0\n 10330: a3 = u64 [0x20080]\n 10335: a4 = u64 [0x20088]\n 10340: a5 = u64 [0x20090]\n 10345: a0 = u64 [0x20098]\n 10350: u64 [a1 + 0x7e0] = a3\n 10354: a3 = a1 + 0x700\n 10358: u64 [a3 + 0xd8] = a4\n 10362: u64 [a3 + 0xd0] = a5\n 10366: u64 [a3 + 0xc8] = a0\n 10370: u64 [a3 + 0x98] = a2\n 10374: u64 [a1 + 0x790] = t1\n 10378: a0 = a1\n 10380: a1 = 0x20\n 10383: a2 = s1 + 0x1020\n 10387: a3 = s1 + 0x1000\n 10391: a4 = s1 + 0x7ff\n 10395: a4 = a4 + 0x7e1\n 10399: u64 [a0 + 0x788] = t0\n 10403: a0 = u64 [s1 + 0xd8]\n 10407: ra = 346, jump @10\n      : @402 [@dyn 173] (gas: 9)\n 10413: a0 = u64 [s1 + 0x68]\n 10416: a0 = a0 ^ 0x10\n 10419: a1 = u64 [s1 + 0x80]\n 10423: a0 = a0 | a1\n 10426: a1 = u64 [s1 + 0x78]\n 10429: a2 = u64 [s1 + 0x70]\n 10432: a1 = a1 | a2\n 10435: a0 = a0 | a1\n 10438: jump @404 if a0 != 0\n      : @403 (gas: 20)\n 10441: a0 = s1 + 0x2000\n 10445: i32 a0 = a0 + 0x1a0\n 10449: ecalli 1 // 'block_number'\n 10451: a5 = s1 + 0x2058\n 10455: a0 = u64 [a5 + 0x148]\n 10459: a1 = u64 [a5 + 0x150]\n 10463: a2 = u64 [a5 + 0x158]\n 10467: a3 = u64 [a5 + 0x160]\n 10471: u64 [a5 + 384] = 0\n 10475: u64 [a5 + 376] = 0\n 10479: u64 [a5 + 368] = 0\n 10483: u64 [a5 + 360] = 0x15\n 10488: a4 = a5 + 0x100\n 10492: u64 [a4 + 0xa0] = a3\n 10496: u64 [a4 + 0x98] = a2\n 10500: u64 [a4 + 0x90] = a1\n 10504: u64 [a4 + 0x88] = a0\n 10508: a0 = s1 + 0x21c0\n 10512: a1 = s1 + 0x21e0\n 10516: ra = 348, jump @7\n      : @404 [@dyn 174] (gas: 4)\n 10522: a1 = 0x20190\n 10527: i32 a1 = a1 + 0\n 10529: a0 = 0\n 10531: jump @736\n      : @405 (gas: 8)\n 10534: u64 [a2 + 1408] = 0\n 10538: u64 [a2 + 1400] = 0\n 10542: u64 [a2 + 1392] = 0\n 10546: u64 [a2 + 1384] = 0\n 10550: a0 = s1 + 0x2000\n 10554: i32 a0 = a0 + 0xfffffffffffffdc0\n 10558: ecalli 15 // 'value_transferred'\n 10560: fallthrough\n      : @406 (gas: 10)\n 10561: a4 = s1 + 0x1858\n 10565: a5 = a4 + 0x500\n 10569: a0 = u64 [a5 + 0x78]\n 10572: a1 = u64 [a5 + 0x80]\n 10576: a2 = u64 [a5 + 0x70]\n 10579: a3 = u64 [a5 + 0x68]\n 10582: a1 = a1 | a2\n 10585: a0 = a0 | a3\n 10588: a0 = a0 | a1\n 10591: jump @408 if a0 == 0\n      : @407 (gas: 1)\n 10594: jump @740\n      : @408 (gas: 3)\n 10597: a0 = u64 [s1 + 0xd8]\n 10601: a0 = i32 [a0]\n 10603: jump @410 if a0 >u 3\n      : @409 (gas: 1)\n 10607: jump @741\n      : @410 (gas: 8)\n 10610: u64 [a4 + 1440] = 0\n 10614: u64 [a4 + 1432] = 0\n 10618: u64 [a4 + 1424] = 0\n 10622: u64 [a4 + 1416] = 0x14\n 10627: a0 = s1 + 0x7ff\n 10631: a0 = a0 + 0x401\n 10635: a1 = s1 + 0x1de0\n 10639: ra = 350, jump @6\n      : @411 [@dyn 175] (gas: 15)\n 10645: a1 = s1 + 0x7ff\n 10649: a1 = a1 + 0x59\n 10652: a2 = a1 + 0x300\n 10656: a0 = u64 [a2 + 0xc0]\n 10660: u64 [s1 + 0xd8] = a0\n 10664: a0 = u64 [a2 + 0xb8]\n 10668: u64 [s1 + 0xd0] = a0\n 10672: a0 = u64 [a2 + 0xb0]\n 10676: u64 [s1 + 0xc8] = a0\n 10680: a0 = u64 [a2 + 0xa8]\n 10684: u64 [s1 + 0xc0] = a0\n 10688: a0 = s1 + 0x7ff\n 10692: a0 = a0 + 0x3e1\n 10696: a1 = 0x40\n 10699: ra = 352, jump @2\n      : @412 [@dyn 176] (gas: 8)\n 10705: a3 = s1 + 0x7ff\n 10709: a3 = a3 + 0x59\n 10712: a5 = a3 + 0x300\n 10716: a0 = u64 [a5 + 0xa0]\n 10720: a1 = u64 [a5 + 0x98]\n 10724: a2 = u64 [a5 + 0x90]\n 10728: a4 = u64 [a5 + 0x88]\n 10732: t0 = 354, jump @880\n      : @413 [@dyn 177] (gas: 1)\n 10738: jump @505 if a0 != 0\n      : @414 (gas: 15)\n 10742: a0 = u64 [s1 + 0xc0]\n 10746: a2 = a3 + 0x300\n 10750: u64 [a2 + 0x68] = a0\n 10753: a0 = u64 [s1 + 0xc8]\n 10757: u64 [a2 + 0x70] = a0\n 10760: a0 = u64 [s1 + 0xd0]\n 10764: u64 [a2 + 0x78] = a0\n 10767: a1 = s1 + 0x7ff\n 10771: a1 = a1 + 0x3c1\n 10775: a0 = u64 [s1 + 0xd8]\n 10779: u64 [a2 + 0x80] = a0\n 10783: a0 = a4\n 10785: u64 [s1 + 0xd8] = a4\n 10789: ra = 0x28c\n 10793: jump @4\n      : @415 (gas: 8)\n 10796: u64 [a4 + 992] = 0\n 10800: u64 [a4 + 984] = 0\n 10804: u64 [a4 + 976] = 0\n 10808: u64 [a4 + 968] = 0\n 10812: a0 = s1 + 0x2000\n 10816: i32 a0 = a0 + 0x420\n 10820: ecalli 15 // 'value_transferred'\n 10822: fallthrough\n      : @416 (gas: 10)\n 10823: a4 = s1 + 0x2058\n 10827: a5 = a4 + 0x300\n 10831: a0 = u64 [a5 + 0xd8]\n 10835: a1 = u64 [a5 + 0xe0]\n 10839: a2 = u64 [a5 + 0xd0]\n 10843: a3 = u64 [a5 + 0xc8]\n 10847: a1 = a1 | a2\n 10850: a0 = a0 | a3\n 10853: a0 = a0 | a1\n 10856: jump @418 if a0 == 0\n      : @417 (gas: 1)\n 10859: jump @742\n      : @418 (gas: 3)\n 10862: a0 = u64 [s1 + 0xd8]\n 10866: a0 = i32 [a0]\n 10868: jump @420 if a0 >u 3\n      : @419 (gas: 1)\n 10872: jump @743\n      : @420 (gas: 7)\n 10875: u64 [a4 + 1024] = 0\n 10879: u64 [a4 + 1016] = 0\n 10883: u64 [a4 + 1008] = 0\n 10887: u64 [a4 + 1000] = 0x16\n 10892: a0 = s1 + 0x1700\n 10896: a1 = s1 + 0x2440\n 10900: ra = 356, jump @6\n      : @421 [@dyn 178] (gas: 3)\n 10906: t0 = 0x166\n 10910: a1 = s1 + 0x1058\n 10914: fallthrough\n      : @422 [@dyn 179] (gas: 10)\n 10915: a2 = a1 + 0x600\n 10919: a0 = u64 [a2 + 0xb8]\n 10923: u64 [s1 + 0xd8] = a0\n 10927: a0 = u64 [a2 + 0xb0]\n 10931: u64 [s1 + 0xd0] = a0\n 10935: a0 = u64 [a2 + 0xa8]\n 10939: u64 [s1 + 0xc8] = a0\n 10943: a0 = s1 + 0x16e0\n 10947: a1 = 0x40\n 10950: ra = 360, jump @2\n      : @423 [@dyn 180] (gas: 7)\n 10956: a3 = s1 + 0x1058\n 10960: a5 = a3 + 0x600\n 10964: a4 = u64 [a5 + 0xa0]\n 10968: a1 = u64 [a5 + 0x98]\n 10972: a2 = u64 [a5 + 0x90]\n 10976: a0 = u64 [a5 + 0x88]\n 10980: t0 = 362, jump @876\n      : @424 [@dyn 181] (gas: 1)\n 10986: jump @505 if a1 != 0\n      : @425 (gas: 20)\n 10990: a2 = u64 [s1 + 0xd0]\n 10994: a4 = a2 >> 0x8\n 10997: a5 = u64 [s1 + 0xd8]\n 11001: a1 = a5 << 0x38\n 11004: a4 = a4 | a1\n 11007: a1 = u64 [s1 + 0xc8]\n 11011: a1 = a1 >> 0x8\n 11014: a2 = a2 << 0x38\n 11017: a1 = a1 | a2\n 11020: a2 = a5 << 0x18\n 11023: a2 = a2 >> 0x20\n 11026: u64 [a3 + 1664] = 0\n 11030: a5 = a3 + 0x600\n 11034: u64 [a5 + 0x68] = a1\n 11037: u64 [a5 + 0x78] = a2\n 11040: a1 = s1 + 0x16c0\n 11044: u64 [a5 + 0x70] = a4\n 11047: u64 [s1 + 0xd8] = a0\n 11051: ra = 0x28c\n 11055: jump @4\n      : @426 (gas: 8)\n 11058: u64 [a2 + 1344] = 0\n 11062: u64 [a2 + 1336] = 0\n 11066: u64 [a2 + 1328] = 0\n 11070: u64 [a2 + 1320] = 0\n 11074: a0 = s1 + 0x2000\n 11078: i32 a0 = a0 + 0xfffffffffffffd80\n 11082: ecalli 15 // 'value_transferred'\n 11084: fallthrough\n      : @427 (gas: 10)\n 11085: a4 = s1 + 0x1858\n 11089: a5 = a4 + 0x500\n 11093: a0 = u64 [a5 + 0x38]\n 11096: a1 = u64 [a5 + 0x40]\n 11099: a2 = u64 [a5 + 0x30]\n 11102: a3 = u64 [a5 + 0x28]\n 11105: a1 = a1 | a2\n 11108: a0 = a0 | a3\n 11111: a0 = a0 | a1\n 11114: jump @429 if a0 == 0\n      : @428 (gas: 1)\n 11117: jump @744\n      : @429 (gas: 3)\n 11120: a0 = u64 [s1 + 0xd8]\n 11124: a0 = i32 [a0]\n 11126: jump @431 if a0 >u 3\n      : @430 (gas: 1)\n 11130: jump @745\n      : @431 (gas: 8)\n 11133: u64 [a4 + 1376] = 0\n 11137: u64 [a4 + 1368] = 0\n 11141: u64 [a4 + 1360] = 0\n 11145: u64 [a4 + 1352] = 0x12\n 11150: a0 = s1 + 0x7ff\n 11154: a0 = a0 + 0x3a1\n 11158: a1 = s1 + 0x1da0\n 11162: ra = 364, jump @6\n      : @432 [@dyn 182] (gas: 15)\n 11168: a1 = s1 + 0x7ff\n 11172: a1 = a1 + 0x59\n 11175: a2 = a1 + 0x300\n 11179: a0 = u64 [a2 + 0x60]\n 11182: u64 [s1 + 0xd8] = a0\n 11186: a0 = u64 [a2 + 0x58]\n 11189: u64 [s1 + 0xd0] = a0\n 11193: a0 = u64 [a2 + 0x50]\n 11196: u64 [s1 + 0xc8] = a0\n 11200: a0 = u64 [a2 + 0x48]\n 11203: u64 [s1 + 0xc0] = a0\n 11207: a0 = s1 + 0x7ff\n 11211: a0 = a0 + 0x381\n 11215: a1 = 0x40\n 11218: ra = 366, jump @2\n      : @433 [@dyn 183] (gas: 8)\n 11224: a3 = s1 + 0x7ff\n 11228: a3 = a3 + 0x59\n 11231: a5 = a3 + 0x300\n 11235: a0 = u64 [a5 + 0x40]\n 11238: a1 = u64 [a5 + 0x38]\n 11241: a2 = u64 [a5 + 0x30]\n 11244: a4 = u64 [a5 + 0x28]\n 11247: t0 = 368, jump @880\n      : @434 [@dyn 184] (gas: 1)\n 11253: jump @505 if a0 != 0\n      : @435 (gas: 15)\n 11257: a0 = u64 [s1 + 0xc0]\n 11261: a2 = a3 + 0x300\n 11265: u64 [a2 + 0x8] = a0\n 11268: a0 = u64 [s1 + 0xc8]\n 11272: u64 [a2 + 0x10] = a0\n 11275: a0 = u64 [s1 + 0xd0]\n 11279: u64 [a2 + 0x18] = a0\n 11282: a1 = s1 + 0x7ff\n 11286: a1 = a1 + 0x361\n 11290: a0 = u64 [s1 + 0xd8]\n 11294: u64 [a2 + 0x20] = a0\n 11297: a0 = a4\n 11299: u64 [s1 + 0xd8] = a4\n 11303: ra = 0x28c\n 11307: jump @4\n      : @436 (gas: 11)\n 11310: a0 = s1 + 0x1858\n 11314: u64 [a0 + 1984] = 0\n 11318: u64 [a0 + 1976] = 0\n 11322: u64 [a0 + 1968] = 0\n 11326: u64 [a0 + 1960] = 0\n 11330: a0 = s1 + 0x2000\n 11334: i32 a0 = a0 + 0\n 11336: ra = 0x172\n 11340: ecalli 15 // 'value_transferred'\n 11342: t0 = 0x174\n 11346: jump @895\n      : @437 [@dyn 185] (gas: 1)\n 11349: t0 = 372, jump @895\n      : @438 [@dyn 186] (gas: 1)\n 11355: t0 = 374, jump @898\n      : @439 [@dyn 187] (gas: 1)\n 11361: jump @441 if a0 == 0\n      : @440 (gas: 1)\n 11364: jump @746\n      : @441 (gas: 3)\n 11367: a0 = u64 [s1 + 0xd8]\n 11371: a0 = i32 [a0]\n 11373: jump @443 if a0 >u 3\n      : @442 (gas: 1)\n 11377: jump @747\n      : @443 (gas: 8)\n 11380: u64 [a4 + 2016] = 0\n 11384: u64 [a4 + 2008] = 0\n 11388: u64 [a4 + 2000] = 0\n 11392: u64 [a4 + 1992] = 0x15\n 11397: a0 = s1 + 0x7ff\n 11401: a0 = a0 + 0x781\n 11405: a1 = s1 + 0x2020\n 11409: ra = 376, jump @6\n      : @444 [@dyn 188] (gas: 15)\n 11415: a1 = s1 + 0x7ff\n 11419: a1 = a1 + 0x59\n 11422: a2 = a1 + 0x700\n 11426: a0 = u64 [a2 + 0x40]\n 11429: u64 [s1 + 0xd8] = a0\n 11433: a0 = u64 [a2 + 0x38]\n 11436: u64 [s1 + 0xd0] = a0\n 11440: a0 = u64 [a2 + 0x30]\n 11443: u64 [s1 + 0xc8] = a0\n 11447: a0 = u64 [a2 + 0x28]\n 11450: u64 [s1 + 0xc0] = a0\n 11454: a0 = s1 + 0x7ff\n 11458: a0 = a0 + 0x761\n 11462: a1 = 0x40\n 11465: ra = 378, jump @2\n      : @445 [@dyn 189] (gas: 8)\n 11471: a3 = s1 + 0x7ff\n 11475: a3 = a3 + 0x59\n 11478: a5 = a3 + 0x700\n 11482: a0 = u64 [a5 + 0x20]\n 11485: a1 = u64 [a5 + 0x18]\n 11488: a2 = u64 [a5 + 0x10]\n 11491: a4 = u64 [a5 + 0x8]\n 11494: t0 = 380, jump @880\n      : @446 [@dyn 190] (gas: 1)\n 11500: jump @505 if a0 != 0\n      : @447 (gas: 15)\n 11504: a0 = u64 [s1 + 0xc0]\n 11508: a1 = a3 + 0x600\n 11512: u64 [a1 + 0xe8] = a0\n 11516: a0 = u64 [s1 + 0xc8]\n 11520: u64 [a1 + 0xf0] = a0\n 11524: a0 = u64 [s1 + 0xd0]\n 11528: u64 [a1 + 0xf8] = a0\n 11532: a1 = s1 + 0x7ff\n 11536: a1 = a1 + 0x741\n 11540: a0 = u64 [s1 + 0xd8]\n 11544: u64 [a3 + 0x700] = a0\n 11548: a0 = a4\n 11550: u64 [s1 + 0xd8] = a4\n 11554: ra = 0x28c\n 11558: jump @4\n      : @448 (gas: 8)\n 11561: u64 [a3 + 2016] = 0\n 11565: u64 [a3 + 2008] = 0\n 11569: u64 [a3 + 2000] = 0\n 11573: u64 [a3 + 1992] = 0\n 11577: a0 = s1 + 0x2000\n 11581: i32 a0 = a0 + 0xfffffffffffff820\n 11585: ecalli 15 // 'value_transferred'\n 11587: fallthrough\n      : @449 (gas: 10)\n 11588: a3 = s1 + 0x1058\n 11592: a4 = a3 + 0x700\n 11596: a0 = u64 [a4 + 0xd8]\n 11600: a1 = u64 [a4 + 0xe0]\n 11604: a2 = u64 [a4 + 0xd0]\n 11608: a3 = u64 [a4 + 0xc8]\n 11612: a1 = a1 | a2\n 11615: a0 = a0 | a3\n 11618: a0 = a0 | a1\n 11621: jump @451 if a0 == 0\n      : @450 (gas: 1)\n 11624: jump @748\n      : @451 (gas: 4)\n 11627: a0 = u64 [s1 + 0xd8]\n 11631: a0 = i32 [a0]\n 11633: a2 = s1 + 0x1858\n 11637: jump @453 if a0 >u 3\n      : @452 (gas: 1)\n 11641: jump @749\n      : @453 (gas: 8)\n 11644: u64 [a2 + 0] = 0\n 11646: u64 [a2 + 4294967288] = 0\n 11649: u64 [a2 + 4294967280] = 0\n 11652: u64 [a2 + 4294967272] = 0x12\n 11656: a0 = s1 + 0x7ff\n 11660: a0 = a0 + 0x221\n 11664: a1 = s1 + 0x1840\n 11668: ra = 382, jump @6\n      : @454 [@dyn 191] (gas: 12)\n 11674: a3 = s1 + 0x7ff\n 11678: a3 = a3 + 0x59\n 11681: a4 = a3 + 0x100\n 11685: a0 = u64 [a4 + 0xe0]\n 11689: a1 = u64 [a4 + 0xd0]\n 11693: a2 = u64 [a4 + 0xc8]\n 11697: a3 = u64 [a4 + 0xd8]\n 11701: a0 = a0 | a1\n 11704: a1 = a2 ^ 0x10\n 11707: a1 = a1 | a3\n 11710: a0 = a0 | a1\n 11713: jump @521 if a0 != 0\n      : @455 (gas: 9)\n 11717: a1 = s1 + 0x1858\n 11721: u64 [a1 + 32] = 0\n 11724: u64 [a1 + 24] = 0\n 11727: u64 [a1 + 16] = 0\n 11730: u64 [a1 + 8] = 0x16\n 11734: a0 = s1 + 0x7ff\n 11738: a0 = a0 + 0x161\n 11742: a1 = s1 + 0x1860\n 11746: ra = 384, jump @6\n      : @456 [@dyn 192] (gas: 5)\n 11752: a2 = s1 + 0x7ff\n 11756: a2 = a2 + 0x59\n 11759: a0 = u64 [a2 + 0x108]\n 11763: a0 = a0 & 0xff\n 11767: jump @556 if a0 != 0\n      : @457 (gas: 13)\n 11771: a0 = u64 [a2 + 0x120]\n 11775: u64 [s1 + 0xb8] = a0\n 11779: a0 = u64 [a2 + 0x118]\n 11783: u64 [s1 + 0xb0] = a0\n 11787: a1 = s1 + 0x1858\n 11791: u64 [a1 + 64] = 0\n 11794: u64 [a1 + 56] = 0\n 11797: u64 [a1 + 48] = 0\n 11800: u64 [a1 + 40] = 0x15\n 11804: a0 = s1 + 0x7ff\n 11808: a0 = a0 + 0xa1\n 11812: a1 = s1 + 0x1880\n 11816: ra = 386, jump @6\n      : @458 [@dyn 193] (gas: 14)\n 11822: a1 = s1 + 0x7ff\n 11826: a1 = a1 + 0x59\n 11829: a0 = u64 [a1 + 0x60]\n 11832: u64 [s1 + 0xd8] = a0\n 11836: a0 = u64 [a1 + 0x58]\n 11839: u64 [s1 + 0xd0] = a0\n 11843: a0 = u64 [a1 + 0x50]\n 11846: u64 [s1 + 0xc8] = a0\n 11850: a0 = u64 [a1 + 0x48]\n 11853: u64 [s1 + 0xc0] = a0\n 11857: a0 = s1 + 0x2000\n 11861: i32 a0 = a0 + 0xfffffffffffff8a0\n 11865: ecalli 1 // 'block_number'\n 11867: fallthrough\n      : @459 (gas: 21)\n 11868: t1 = u64 [s1 + 0xc0]\n 11872: a5 = u64 [s1 + 0xc8]\n 11876: t0 = u64 [s1 + 0xd8]\n 11880: a2 = s1 + 0x1858\n 11884: a0 = u64 [a2 + 0x50]\n 11887: a1 = u64 [a2 + 0x48]\n 11890: t2 = u64 [a2 + 0x58]\n 11893: a3 = u64 [a2 + 0x60]\n 11896: a4 = a0 ^ a5\n 11899: a0 = a5 <u a0\n 11902: a1 = t1 <u a1\n 11905: a1 = a0 if a4 != 0\n 11908: a0 = a3 ^ t0\n 11911: a2 = t0 <u a3\n 11914: a3 = u64 [s1 + 0xd0]\n 11918: a4 = a3 <u t2\n 11921: a4 = a2 if a0 != 0\n 11924: a2 = t2 ^ a3\n 11927: a0 = a0 | a2\n 11930: a1 = a4 if a0 != 0\n 11933: jump @582 if a1 == 0\n      : @460 (gas: 8)\n 11937: a0 = a5 + 0x1\n 11940: a1 = t1 <u 0xffffffffffffff01\n 11944: a1 = a1 ^ 0x1\n 11947: a1 = 0 if a0 != 0\n 11949: a0 = a3 & t0\n 11952: a0 = a0 + 0x1\n 11955: a1 = 0 if a0 != 0\n 11957: jump @462 if a1 == 0\n      : @461 (gas: 1)\n 11960: jump @778\n      : @462 (gas: 16)\n 11963: a0 = t1 + 0xff\n 11967: u64 [s1 + 0xa0] = a0\n 11971: a0 = a0 <u t1\n 11974: a1 = a5 + a0\n 11977: u64 [s1 + 0x90] = a1\n 11981: a1 = a1 <u a5\n 11984: a1 = a0 if a0 == 0\n 11987: a1 = a1 + a3\n 11990: u64 [s1 + 0xa8] = a1\n 11994: a0 = a1 <u a3\n 11997: a0 = a0 + t0\n 12000: u64 [s1 + 0x98] = a0\n 12004: a0 = s1 + 0x2000\n 12008: i32 a0 = a0 + 0xfffffffffffff8c0\n 12012: ecalli 1 // 'block_number'\n 12014: fallthrough\n      : @463 (gas: 22)\n 12015: t0 = s1 + 0x1858\n 12019: a5 = t0\n 12021: a0 = u64 [a5 + 0x68]\n 12024: a1 = u64 [a5 + 0x70]\n 12027: a2 = u64 [a5 + 0x80]\n 12031: a3 = u64 [s1 + 0xa0]\n 12035: a0 = a3 <u a0\n 12038: a4 = u64 [s1 + 0x90]\n 12042: a3 = a1 ^ a4\n 12045: a1 = a4 <u a1\n 12048: a4 = u64 [a5 + 0x78]\n 12051: a1 = a0 if a3 == 0\n 12054: a3 = u64 [s1 + 0x98]\n 12058: a0 = a2 ^ a3\n 12061: a2 = a3 <u a2\n 12064: a5 = u64 [s1 + 0xa8]\n 12068: a3 = a5 <u a4\n 12071: a2 = a3 if a0 == 0\n 12074: a3 = a4 ^ a5\n 12077: a0 = a0 | a3\n 12080: a1 = a2 if a0 != 0\n 12083: jump @597 if a1 == 0\n      : @464 (gas: 3)\n 12087: a0 = s1 + 0x340\n 12091: a1 = 0x40\n 12094: ra = 388, jump @2\n      : @465 [@dyn 194] (gas: 6)\n 12100: a1 = s1 + 0x300\n 12104: a4 = u64 [a1 + 0x58]\n 12107: a5 = u64 [a1 + 0x50]\n 12110: a3 = u64 [a1 + 0x48]\n 12113: a0 = u64 [a1 + 0x40]\n 12116: t0 = 390, jump @879\n      : @466 [@dyn 195] (gas: 1)\n 12122: jump @505 if a1 != 0\n      : @467 (gas: 6)\n 12126: u64 [s1 + 816] = 0\n 12130: u64 [s1 + 808] = 0\n 12134: u64 [s1 + 800] = 0\n 12138: t0 = 0x188\n 12142: a2 = 0x8c379a000000000\n 12152: fallthrough\n      : @468 [@dyn 196] (gas: 7)\n 12153: a1 = s1 + 0x320\n 12157: u64 [s1 + 0x338] = a2\n 12161: u64 [s1 + 0xd8] = a0\n 12165: u64 [s1 + 0xd0] = a3\n 12169: u64 [s1 + 0xc8] = a4\n 12173: u64 [s1 + 0xc0] = a5\n 12177: ra = 394, jump @4\n      : @469 [@dyn 197] (gas: 5)\n 12183: a1 = u64 [s1 + 0xd8]\n 12187: a0 = u64 [s1 + 0xc8]\n 12191: a3 = u64 [s1 + 0xc0]\n 12195: a3 = a3 | a0\n 12198: t0 = 396, jump @873\n      : @470 [@dyn 198] (gas: 1)\n 12204: jump @505 if a0 == 0\n      : @471 (gas: 9)\n 12208: i32 a0 = a1 + 0x4\n 12211: u64 [s1 + 792] = 0\n 12215: u64 [s1 + 784] = 0\n 12219: u64 [s1 + 768] = 0x20\n 12224: a1 = s1 + 0x300\n 12228: u64 [s1 + 776] = 0\n 12232: u64 [s1 + 0xc8] = a3\n 12236: u64 [s1 + 0xc0] = a4\n 12240: ra = 398, jump @4\n      : @472 [@dyn 199] (gas: 1)\n 12246: t0 = 400, jump @874\n      : @473 [@dyn 200] (gas: 1)\n 12252: jump @505 if a0 == 0\n      : @474 (gas: 7)\n 12256: i32 a0 = a1 + 0x24\n 12259: u64 [s1 + 760] = 0\n 12263: u64 [s1 + 752] = 0\n 12267: u64 [s1 + 736] = 0x1c\n 12272: a1 = s1 + 0x2e0\n 12276: u64 [s1 + 744] = 0\n 12280: ra = 402, jump @4\n      : @475 [@dyn 201] (gas: 4)\n 12286: a2 = u64 [s1 + 0xd8]\n 12290: a0 = 0xffffffbc\n 12300: a0 = a2 <u a0\n 12303: t0 = 404, jump @878\n      : @476 [@dyn 202] (gas: 1)\n 12309: jump @505 if a0 == 0\n      : @477 (gas: 13)\n 12313: i32 a0 = a2 + 0x44\n 12316: a1 = u64 [0x20148]\n 12321: a2 = u64 [0x20150]\n 12326: a3 = u64 [0x20158]\n 12331: a4 = s1 + 0x200\n 12335: u64 [a4 + 0xd8] = a1\n 12339: u64 [a4 + 0xd0] = a2\n 12343: u64 [a4 + 0xc8] = a3\n 12347: a2 = 0x6e6e657200000000\n 12357: a1 = s1 + 0x2c0\n 12361: u64 [a4 + 0xc0] = a2\n 12365: ra = 0x270\n 12369: jump @4\n      : @478 (gas: 9)\n 12372: u64 [a2 + 1216] = 0\n 12376: u64 [a2 + 1208] = 0\n 12380: u64 [a2 + 1200] = 0\n 12384: u64 [a2 + 1192] = 0\n 12388: a0 = s1 + 0x2000\n 12392: i32 a0 = a0 + 0xfffffffffffffd00\n 12396: ra = 0x196\n 12400: ecalli 15 // 'value_transferred'\n 12402: fallthrough\n      : @479 [@dyn 203] (gas: 3)\n 12403: a4 = s1 + 0x1858\n 12407: a5 = a4 + 0x400\n 12411: t0 = 408, jump @898\n      : @480 [@dyn 204] (gas: 1)\n 12417: jump @482 if a0 == 0\n      : @481 (gas: 1)\n 12420: jump @750\n      : @482 (gas: 3)\n 12423: a0 = u64 [s1 + 0xd8]\n 12427: a0 = i32 [a0]\n 12429: jump @484 if a0 >u 3\n      : @483 (gas: 1)\n 12433: jump @751\n      : @484 (gas: 8)\n 12436: u64 [a4 + 1248] = 0\n 12440: u64 [a4 + 1240] = 0\n 12444: u64 [a4 + 1232] = 0\n 12448: u64 [a4 + 1224] = 0x13\n 12453: a0 = s1 + 0x7ff\n 12457: a0 = a0 + 0x2e1\n 12461: a1 = s1 + 0x1d20\n 12465: ra = 410, jump @6\n      : @485 [@dyn 205] (gas: 15)\n 12471: a1 = s1 + 0x7ff\n 12475: a1 = a1 + 0x59\n 12478: a2 = a1 + 0x200\n 12482: a0 = u64 [a2 + 0xa0]\n 12486: u64 [s1 + 0xd8] = a0\n 12490: a0 = u64 [a2 + 0x98]\n 12494: u64 [s1 + 0xd0] = a0\n 12498: a0 = u64 [a2 + 0x90]\n 12502: u64 [s1 + 0xc8] = a0\n 12506: a0 = u64 [a2 + 0x88]\n 12510: u64 [s1 + 0xc0] = a0\n 12514: a0 = s1 + 0x7ff\n 12518: a0 = a0 + 0x2c1\n 12522: a1 = 0x40\n 12525: ra = 412, jump @2\n      : @486 [@dyn 206] (gas: 8)\n 12531: a3 = s1 + 0x7ff\n 12535: a3 = a3 + 0x59\n 12538: a5 = a3 + 0x200\n 12542: a0 = u64 [a5 + 0x80]\n 12546: a1 = u64 [a5 + 0x78]\n 12549: a2 = u64 [a5 + 0x70]\n 12552: a4 = u64 [a5 + 0x68]\n 12555: t0 = 414, jump @880\n      : @487 [@dyn 207] (gas: 1)\n 12561: jump @505 if a0 != 0\n      : @488 (gas: 15)\n 12565: a0 = u64 [s1 + 0xc0]\n 12569: a2 = a3 + 0x200\n 12573: u64 [a2 + 0x48] = a0\n 12576: a0 = u64 [s1 + 0xc8]\n 12580: u64 [a2 + 0x50] = a0\n 12583: a0 = u64 [s1 + 0xd0]\n 12587: u64 [a2 + 0x58] = a0\n 12590: a1 = s1 + 0x7ff\n 12594: a1 = a1 + 0x2a1\n 12598: a0 = u64 [s1 + 0xd8]\n 12602: u64 [a2 + 0x60] = a0\n 12605: a0 = a4\n 12607: u64 [s1 + 0xd8] = a4\n 12611: ra = 0x28c\n 12615: jump @4\n      : @489 (gas: 11)\n 12618: a0 = s1 + 0x1858\n 12622: u64 [a0 + 1920] = 0\n 12626: u64 [a0 + 1912] = 0\n 12630: u64 [a0 + 1904] = 0\n 12634: u64 [a0 + 1896] = 0\n 12638: a0 = s1 + 0x2000\n 12642: i32 a0 = a0 + 0xffffffffffffffc0\n 12645: ra = 0x1a0\n 12649: ecalli 15 // 'value_transferred'\n 12651: t0 = 0x1a2\n 12655: jump @895\n      : @490 [@dyn 208] (gas: 1)\n 12658: t0 = 418, jump @895\n      : @491 [@dyn 209] (gas: 8)\n 12664: a0 = u64 [a5 + 0x78]\n 12667: a1 = u64 [a5 + 0x80]\n 12671: a2 = u64 [a5 + 0x70]\n 12674: a3 = u64 [a5 + 0x68]\n 12677: a1 = a1 | a2\n 12680: a0 = a0 | a3\n 12683: a0 = a0 | a1\n 12686: jump @493 if a0 == 0\n      : @492 (gas: 1)\n 12689: jump @752\n      : @493 (gas: 3)\n 12692: a0 = u64 [s1 + 0xd8]\n 12696: a0 = i32 [a0]\n 12698: jump @495 if a0 >u 3\n      : @494 (gas: 1)\n 12702: jump @753\n      : @495 (gas: 8)\n 12705: u64 [a4 + 1952] = 0\n 12709: u64 [a4 + 1944] = 0\n 12713: u64 [a4 + 1936] = 0\n 12717: u64 [a4 + 1928] = 0x17\n 12722: a0 = s1 + 0x7ff\n 12726: a0 = a0 + 0x721\n 12730: a1 = s1 + 0x1fe0\n 12734: ra = 420, jump @6\n      : @496 [@dyn 210] (gas: 13)\n 12740: a1 = s1 + 0x7ff\n 12744: a1 = a1 + 0x59\n 12747: a2 = a1 + 0x600\n 12751: a0 = u64 [a2 + 0xd8]\n 12755: u64 [s1 + 0xc8] = a0\n 12759: a0 = u64 [a2 + 0xd0]\n 12763: u64 [s1 + 0xd8] = a0\n 12767: a0 = u64 [a2 + 0xc8]\n 12771: u64 [s1 + 0xd0] = a0\n 12775: a0 = s1 + 0x7ff\n 12779: a0 = a0 + 0x701\n 12783: a1 = 0x40\n 12786: ra = 422, jump @2\n      : @497 [@dyn 211] (gas: 8)\n 12792: a3 = s1 + 0x7ff\n 12796: a3 = a3 + 0x59\n 12799: a5 = a3 + 0x600\n 12803: a4 = u64 [a5 + 0xc0]\n 12807: a1 = u64 [a5 + 0xb8]\n 12811: a2 = u64 [a5 + 0xb0]\n 12815: a0 = u64 [a5 + 0xa8]\n 12819: t0 = 424, jump @876\n      : @498 [@dyn 212] (gas: 1)\n 12825: jump @505 if a1 != 0\n      : @499 (gas: 15)\n 12829: a1 = u64 [s1 + 0xc8]\n 12833: a1 = a1 << 0x20\n 12836: a2 = a1 >> 0x20\n 12839: u64 [a3 + 1696] = 0\n 12843: a1 = u64 [s1 + 0xd0]\n 12847: a4 = a3 + 0x600\n 12851: u64 [a4 + 0x88] = a1\n 12855: a1 = u64 [s1 + 0xd8]\n 12859: u64 [a4 + 0x90] = a1\n 12863: a1 = s1 + 0x7ff\n 12867: a1 = a1 + 0x6e1\n 12871: u64 [a4 + 0x98] = a2\n 12875: u64 [s1 + 0xd8] = a0\n 12879: ra = 0x28c\n 12883: jump @4\n      : @500 (gas: 9)\n 12886: a0 = sp + 0xffffffffffffffe0\n 12889: a0 = a0 & 0xffffffffffffffe0\n 12892: sp = a0\n 12894: u64 [a0 + 24] = 0\n 12897: u64 [a0 + 16] = 0\n 12900: u64 [a0 + 8] = 0\n 12903: u64 [s1 + 0xd8] = a0\n 12907: u64 [a0 + 0] = 0\n 12909: fallthrough\n      : @501 (gas: 3)\n 12910: a0 = s1 + 0x1620\n 12914: a1 = 0x40\n 12917: ra = 426, jump @2\n      : @502 [@dyn 213] (gas: 7)\n 12923: a3 = s1 + 0x1058\n 12927: a5 = a3 + 0x500\n 12931: a4 = u64 [a5 + 0xe0]\n 12935: a1 = u64 [a5 + 0xd8]\n 12939: a2 = u64 [a5 + 0xd0]\n 12943: a0 = u64 [a5 + 0xc8]\n 12947: t0 = 428, jump @876\n      : @503 [@dyn 214] (gas: 1)\n 12953: jump @505 if a1 != 0\n      : @504 (gas: 1)\n 12956: jump @754\n      : @505 (gas: 1)\n 12959: trap\n      : @506 (gas: 3)\n 12960: a0 = s1 + 0x13a0\n 12964: a1 = 0x40\n 12967: ra = 430, jump @2\n      : @507 [@dyn 215] (gas: 2)\n 12973: a2 = s1 + 0x1058\n 12977: fallthrough\n      : @508 (gas: 13)\n 12978: t0 = u64 [a2 + 0x360]\n 12982: a1 = a2 + 0x300\n 12986: a5 = u64 [a1 + 0x58]\n 12989: a4 = u64 [a1 + 0x50]\n 12992: a0 = u64 [a1 + 0x48]\n 12995: a3 = a4 | t0\n 12998: a1 = a0 | a5\n 13001: a1 = a1 | a3\n 13004: a1 = a1 >> 0x20\n 13007: a3 = a3 | a5\n 13010: a3 = a3 << 0x20\n 13013: a1 = a1 | a3\n 13016: jump @505 if a1 != 0\n      : @509 (gas: 11)\n 13019: u64 [a2 + 824] = 0\n 13023: u64 [a2 + 816] = 0\n 13027: u64 [a2 + 808] = 0\n 13031: a3 = 0x8c379a000000000\n 13041: a1 = s1 + 0x1380\n 13045: u64 [a2 + 0x340] = a3\n 13049: u64 [s1 + 0xd8] = a0\n 13053: u64 [s1 + 0xd0] = a4\n 13057: u64 [s1 + 0xc0] = t0\n 13061: u64 [s1 + 0xc8] = a5\n 13065: ra = 432, jump @4\n      : @510 [@dyn 216] (gas: 5)\n 13071: a1 = u64 [s1 + 0xd8]\n 13075: a0 = u64 [s1 + 0xc8]\n 13079: a3 = u64 [s1 + 0xc0]\n 13083: a3 = a3 | a0\n 13086: t0 = 434, jump @873\n      : @511 [@dyn 217] (gas: 1)\n 13092: jump @505 if a0 == 0\n      : @512 (gas: 1)\n 13096: t0 = 436, jump @882\n      : @513 [@dyn 218] (gas: 8)\n 13102: u64 [a2 + 800] = 0\n 13106: u64 [a2 + 792] = 0\n 13110: u64 [a2 + 776] = 0x20\n 13115: a1 = s1 + 0x1360\n 13119: u64 [a2 + 784] = 0\n 13123: u64 [s1 + 0xc8] = a3\n 13127: u64 [s1 + 0xc0] = a4\n 13131: ra = 438, jump @4\n      : @514 [@dyn 219] (gas: 1)\n 13137: t0 = 440, jump @874\n      : @515 [@dyn 220] (gas: 1)\n 13143: jump @505 if a0 == 0\n      : @516 (gas: 1)\n 13147: t0 = 442, jump @896\n      : @517 [@dyn 221] (gas: 6)\n 13153: u64 [a3 + 768] = 0\n 13157: u64 [a3 + 760] = 0\n 13161: u64 [a3 + 744] = 0x13\n 13166: a1 = s1 + 0x1340\n 13170: u64 [a3 + 752] = 0\n 13174: ra = 444, jump @4\n      : @518 [@dyn 222] (gas: 1)\n 13180: t0 = 446, jump @875\n      : @519 [@dyn 223] (gas: 1)\n 13186: jump @505 if a0 == 0\n      : @520 (gas: 13)\n 13190: i32 a0 = a3 + 0x44\n 13193: a1 = u64 [0x20050]\n 13198: a2 = u64 [0x20058]\n 13203: a4 = s1 + 0x1058\n 13207: a3 = a4 + 0x200\n 13211: u64 [a3 + 0xe0] = a1\n 13215: u64 [a3 + 0xd8] = a2\n 13219: a1 = 0x6665650000000000\n 13229: u64 [a3 + 0xd0] = a1\n 13233: a1 = s1 + 0x1320\n 13237: u64 [a4 + 712] = 0\n 13241: ra = 0x270\n 13245: jump @4\n      : @521 (gas: 4)\n 13248: a0 = s1 + 0x7ff\n 13252: a0 = a0 + 0x201\n 13256: a1 = 0x40\n 13259: ra = 448, jump @2\n      : @522 [@dyn 224] (gas: 15)\n 13265: a4 = s1 + 0x7ff\n 13269: a4 = a4 + 0x59\n 13272: t0 = u64 [a4 + 0x1c0]\n 13276: a1 = a4 + 0x100\n 13280: a5 = u64 [a1 + 0xb8]\n 13284: a3 = u64 [a1 + 0xb0]\n 13288: a0 = u64 [a1 + 0xa8]\n 13292: a2 = a3 | t0\n 13295: a1 = a0 | a5\n 13298: a1 = a1 | a2\n 13301: a1 = a1 >> 0x20\n 13304: a2 = a2 | a5\n 13307: a2 = a2 << 0x20\n 13310: a1 = a1 | a2\n 13313: jump @505 if a1 != 0\n      : @523 (gas: 12)\n 13317: u64 [a4 + 408] = 0\n 13321: u64 [a4 + 400] = 0\n 13325: u64 [a4 + 392] = 0\n 13329: u64 [s1 + 0xd0] = a3\n 13333: a3 = 0x8c379a000000000\n 13343: a1 = s1 + 0x7ff\n 13347: a1 = a1 + 0x1e1\n 13351: u64 [a4 + 0x1a0] = a3\n 13355: u64 [s1 + 0xd8] = a0\n 13359: u64 [s1 + 0xc8] = t0\n 13363: u64 [s1 + 0xc0] = a5\n 13367: ra = 450, jump @4\n      : @524 [@dyn 225] (gas: 5)\n 13373: a1 = u64 [s1 + 0xd8]\n 13377: a0 = u64 [s1 + 0xc8]\n 13381: a3 = u64 [s1 + 0xc0]\n 13385: a3 = a3 | a0\n 13388: t0 = 452, jump @873\n      : @525 [@dyn 226] (gas: 1)\n 13394: jump @505 if a0 == 0\n      : @526 (gas: 12)\n 13398: i32 a0 = a1 + 0x4\n 13401: a2 = s1 + 0x7ff\n 13405: a2 = a2 + 0x59\n 13408: u64 [a2 + 384] = 0\n 13412: u64 [a2 + 376] = 0\n 13416: u64 [a2 + 360] = 0x20\n 13421: a1 = s1 + 0x7ff\n 13425: a1 = a1 + 0x1c1\n 13429: u64 [a2 + 368] = 0\n 13433: u64 [s1 + 0xc8] = a3\n 13437: u64 [s1 + 0xc0] = a4\n 13441: ra = 454, jump @4\n      : @527 [@dyn 227] (gas: 1)\n 13447: t0 = 456, jump @874\n      : @528 [@dyn 228] (gas: 1)\n 13453: jump @505 if a0 == 0\n      : @529 (gas: 10)\n 13457: i32 a0 = a1 + 0x24\n 13460: a3 = s1 + 0x7ff\n 13464: a3 = a3 + 0x59\n 13467: u64 [a3 + 352] = 0\n 13471: u64 [a3 + 344] = 0\n 13475: u64 [a3 + 328] = 0x11\n 13480: a1 = s1 + 0x7ff\n 13484: a1 = a1 + 0x1a1\n 13488: u64 [a3 + 336] = 0\n 13492: ra = 458, jump @4\n      : @530 [@dyn 229] (gas: 1)\n 13498: t0 = 460, jump @875\n      : @531 [@dyn 230] (gas: 1)\n 13504: jump @505 if a0 == 0\n      : @532 (gas: 15)\n 13508: i32 a0 = a3 + 0x44\n 13511: a1 = u64 [0x200b0]\n 13516: a2 = u64 [0x200b8]\n 13521: a4 = s1 + 0x7ff\n 13525: a4 = a4 + 0x59\n 13528: a3 = a4 + 0x100\n 13532: u64 [a3 + 0x40] = a1\n 13535: u64 [a3 + 0x38] = a2\n 13538: a1 = 0x6500000000000000\n 13548: u64 [a3 + 0x30] = a1\n 13551: a1 = s1 + 0x7ff\n 13555: a1 = a1 + 0x181\n 13559: u64 [a4 + 296] = 0\n 13563: ra = 0x270\n 13567: jump @4\n      : @533 (gas: 15)\n 13570: u64 [s1 + 472] = 0\n 13574: u64 [s1 + 464] = 0\n 13578: u64 [s1 + 456] = 0\n 13582: u64 [s1 + 448] = 0x200\n 13588: a0 = u64 [s1 + 0x40]\n 13591: u64 [s1 + 0x1e0] = a0\n 13595: a0 = u64 [s1 + 0x50]\n 13598: u64 [s1 + 0x1e8] = a0\n 13602: a0 = u64 [s1 + 0x58]\n 13605: u64 [s1 + 0x1f0] = a0\n 13609: a0 = s1 + 0x1e0\n 13613: a1 = s1 + 0x1c0\n 13617: a2 = u64 [s1 + 0x60]\n 13620: u64 [s1 + 0x1f8] = a2\n 13624: ra = 462, jump @798\n      : @534 [@dyn 231] (gas: 3)\n 13630: a0 = s1 + 0x1a0\n 13634: a1 = 0x40\n 13637: ra = 464, jump @2\n      : @535 [@dyn 232] (gas: 19)\n 13643: a3 = u64 [s1 + 0x40]\n 13646: a1 = s1 + 0x100\n 13650: a4 = u64 [a1 + 0xb8]\n 13654: t0 = u64 [s1 + 0x1b0]\n 13658: a2 = u64 [a1 + 0xa8]\n 13662: a0 = u64 [a1 + 0xa0]\n 13666: a5 = 0\n 13668: ra = 0\n 13670: t1 = 0\n 13672: u64 [s1 + 0x90] = a0\n 13676: u64 [s1 + 0xd0] = a0\n 13680: u64 [s1 + 0x78] = a2\n 13683: u64 [s1 + 0xc8] = a2\n 13687: u64 [s1 + 0x88] = t0\n 13691: t2 = t0\n 13693: t0 = 0\n 13695: u64 [s1 + 0x80] = a4\n 13699: u64 [s1 + 0xd8] = a4\n 13703: fallthrough\n      : @536 (gas: 6)\n 13704: a0 = a5 <u 0x10\n 13707: a0 = 0 if ra != 0\n 13709: u64 [s1 + 0xb8] = t0\n 13713: a1 = t1 | t0\n 13716: a0 = 0 if a1 != 0\n 13718: jump @594 if a0 == 0\n      : @537 (gas: 12)\n 13722: a2 = u64 [s1 + 0x58]\n 13725: a0 = a3 | a2\n 13728: a1 = u64 [s1 + 0x60]\n 13731: a4 = a3\n 13733: a3 = u64 [s1 + 0x50]\n 13736: a1 = a1 | a3\n 13739: a0 = a0 | a1\n 13742: a0 = a0 >> 0x20\n 13745: a1 = a1 | a2\n 13748: a1 = a1 << 0x20\n 13751: a0 = a0 | a1\n 13754: jump @505 if a0 != 0\n      : @538 (gas: 8)\n 13758: u64 [s1 + 0xa0] = t1\n 13762: u64 [s1 + 0xa8] = ra\n 13766: u64 [s1 + 0xb0] = a5\n 13770: a0 = s1 + 0x180\n 13774: u64 [s1 + 0x40] = a4\n 13777: a1 = a4\n 13779: u64 [s1 + 0xc0] = t2\n 13783: ra = 466, jump @2\n      : @539 [@dyn 233] (gas: 12)\n 13789: a4 = u64 [s1 + 0xc0]\n 13793: a0 = u64 [s1 + 0xd0]\n 13797: a2 = a0 | a4\n 13800: a3 = u64 [s1 + 0xd8]\n 13804: a5 = u64 [s1 + 0xc8]\n 13808: a1 = a5 | a3\n 13811: a2 = a2 | a1\n 13814: a2 = a2 >> 0x20\n 13817: a1 = a1 | a4\n 13820: a1 = a1 << 0x20\n 13823: a1 = a1 | a2\n 13826: jump @505 if a1 != 0\n      : @540 (gas: 17)\n 13830: u64 [s1 + 0xc8] = a5\n 13834: a4 = s1 + 0x100\n 13838: a5 = u64 [a4 + 0x90]\n 13842: a1 = u64 [a4 + 0x88]\n 13846: a2 = u64 [a4 + 0x80]\n 13850: u64 [s1 + 0xd8] = a3\n 13854: a3 = u64 [s1 + 0x68]\n 13857: a5 = a5 & a3\n 13860: a1 = a1 & 0xffffffffffffffff\n 13863: a2 = a2 & 0xffffffffffffffff\n 13866: u64 [s1 + 376] = 0\n 13870: u64 [a4 + 0x60] = a2\n 13873: u64 [a4 + 0x68] = a1\n 13876: a1 = s1 + 0x160\n 13880: u64 [a4 + 0x70] = a5\n 13883: u64 [s1 + 0xd0] = a0\n 13887: ra = 468, jump @4\n      : @541 [@dyn 234] (gas: 46)\n 13893: a1 = u64 [s1 + 0xd0]\n 13897: a0 = a1 + 0x20\n 13900: u64 [s1 + 0x98] = a0\n 13904: a2 = a0 <u a1\n 13907: a0 = u64 [s1 + 0xc8]\n 13911: t1 = a0 + a2\n 13914: a3 = t1 <u a0\n 13917: a3 = a2 if a2 == 0\n 13920: a0 = u64 [s1 + 0xc0]\n 13924: t2 = a0 + a3\n 13927: a3 = t2 <u a0\n 13930: a0 = u64 [s1 + 0xd8]\n 13934: a0 = a0 + a3\n 13937: u64 [s1 + 0xd8] = a0\n 13941: a0 = u64 [s1 + 0x40]\n 13944: a3 = a0 + 0x20\n 13947: a4 = a3 <u a0\n 13950: a0 = u64 [s1 + 0x50]\n 13953: a2 = a0 + a4\n 13956: a0 = a2 <u a0\n 13959: a0 = a4 if a4 == 0\n 13962: a1 = u64 [s1 + 0x58]\n 13965: a0 = a0 + a1\n 13968: a4 = a0 <u a1\n 13971: a1 = u64 [s1 + 0x60]\n 13974: a1 = a1 + a4\n 13977: u64 [s1 + 0x60] = a1\n 13980: a5 = u64 [s1 + 0xb0]\n 13984: a5 = a5 + 0x1\n 13987: a4 = a5 <u 0x1\n 13990: ra = u64 [s1 + 0xa8]\n 13994: ra = ra + a4\n 13997: a4 = a5 | ra\n 14000: a4 = a4 <u 0x1\n 14003: a1 = u64 [s1 + 0xa0]\n 14007: a4 = a4 + a1\n 14010: a1 = a4 <u a1\n 14013: t0 = u64 [s1 + 0xb8]\n 14017: t0 = t0 + a1\n 14020: a1 = u64 [s1 + 0x98]\n 14024: u64 [s1 + 0xd0] = a1\n 14028: u64 [s1 + 0xc8] = t1\n 14032: u64 [s1 + 0x50] = a2\n 14035: u64 [s1 + 0x58] = a0\n 14038: t1 = a4\n 14040: jump @536\n      : @542 (gas: 3)\n 14043: a0 = s1 + 0x1280\n 14047: a1 = 0x40\n 14050: ra = 470, jump @2\n      : @543 [@dyn 235] (gas: 2)\n 14056: a2 = s1 + 0x1058\n 14060: fallthrough\n      : @544 (gas: 13)\n 14061: t0 = u64 [a2 + 0x240]\n 14065: a1 = a2 + 0x200\n 14069: a5 = u64 [a1 + 0x38]\n 14072: a4 = u64 [a1 + 0x30]\n 14075: a0 = u64 [a1 + 0x28]\n 14078: a3 = a4 | t0\n 14081: a1 = a0 | a5\n 14084: a1 = a1 | a3\n 14087: a1 = a1 >> 0x20\n 14090: a3 = a3 | a5\n 14093: a3 = a3 << 0x20\n 14096: a1 = a1 | a3\n 14099: jump @505 if a1 != 0\n      : @545 (gas: 11)\n 14103: u64 [a2 + 536] = 0\n 14107: u64 [a2 + 528] = 0\n 14111: u64 [a2 + 520] = 0\n 14115: a3 = 0x8c379a000000000\n 14125: a1 = s1 + 0x1260\n 14129: u64 [a2 + 0x220] = a3\n 14133: u64 [s1 + 0xd8] = a0\n 14137: u64 [s1 + 0xd0] = a4\n 14141: u64 [s1 + 0xc0] = t0\n 14145: u64 [s1 + 0xc8] = a5\n 14149: ra = 472, jump @4\n      : @546 [@dyn 236] (gas: 5)\n 14155: a1 = u64 [s1 + 0xd8]\n 14159: a0 = u64 [s1 + 0xc8]\n 14163: a3 = u64 [s1 + 0xc0]\n 14167: a3 = a3 | a0\n 14170: t0 = 474, jump @873\n      : @547 [@dyn 237] (gas: 1)\n 14176: jump @505 if a0 == 0\n      : @548 (gas: 1)\n 14180: t0 = 476, jump @882\n      : @549 [@dyn 238] (gas: 8)\n 14186: u64 [a2 + 512] = 0\n 14190: u64 [a2 + 504] = 0\n 14194: u64 [a2 + 488] = 0x20\n 14199: a1 = s1 + 0x1240\n 14203: u64 [a2 + 496] = 0\n 14207: u64 [s1 + 0xc8] = a3\n 14211: u64 [s1 + 0xc0] = a4\n 14215: ra = 478, jump @4\n      : @550 [@dyn 239] (gas: 1)\n 14221: t0 = 480, jump @890\n      : @551 [@dyn 240] (gas: 1)\n 14227: jump @505 if a0 == 0\n      : @552 (gas: 8)\n 14231: i32 a0 = a1 + 0x24\n 14234: a2 = s1 + 0x1058\n 14238: u64 [a2 + 480] = 0\n 14242: u64 [a2 + 472] = 0\n 14246: u64 [a2 + 456] = 0x15\n 14251: a1 = s1 + 0x1220\n 14255: u64 [a2 + 464] = 0\n 14259: ra = 482, jump @4\n      : @553 [@dyn 241] (gas: 1)\n 14265: t0 = 484, jump @875\n      : @554 [@dyn 242] (gas: 1)\n 14271: jump @505 if a0 == 0\n      : @555 (gas: 13)\n 14275: i32 a0 = a3 + 0x44\n 14278: a1 = u64 [0x20060]\n 14283: a2 = u64 [0x20068]\n 14288: a4 = s1 + 0x1058\n 14292: a3 = a4 + 0x100\n 14296: u64 [a3 + 0xc0] = a1\n 14300: u64 [a3 + 0xb8] = a2\n 14304: a1 = 0x6563746564000000\n 14314: u64 [a3 + 0xb0] = a1\n 14318: a1 = s1 + 0x1200\n 14322: u64 [a4 + 424] = 0\n 14326: ra = 0x270\n 14330: jump @4\n      : @556 (gas: 4)\n 14333: a0 = s1 + 0x7ff\n 14337: a0 = a0 + 0x141\n 14341: a1 = 0x40\n 14344: ra = 486, jump @2\n      : @557 [@dyn 243] (gas: 14)\n 14350: a2 = s1 + 0x7ff\n 14354: a2 = a2 + 0x59\n 14357: t0 = u64 [a2 + 0x100]\n 14361: a5 = u64 [a2 + 0xf8]\n 14365: a4 = u64 [a2 + 0xf0]\n 14369: a0 = u64 [a2 + 0xe8]\n 14373: a3 = a4 | t0\n 14376: a1 = a0 | a5\n 14379: a1 = a1 | a3\n 14382: a1 = a1 >> 0x20\n 14385: a3 = a3 | a5\n 14388: a3 = a3 << 0x20\n 14391: a1 = a1 | a3\n 14394: jump @505 if a1 != 0\n      : @558 (gas: 12)\n 14398: u64 [a2 + 216] = 0\n 14402: u64 [a2 + 208] = 0\n 14406: u64 [a2 + 200] = 0\n 14410: a3 = 0x8c379a000000000\n 14420: a1 = s1 + 0x7ff\n 14424: a1 = a1 + 0x121\n 14428: u64 [a2 + 0xe0] = a3\n 14432: u64 [s1 + 0xd8] = a0\n 14436: u64 [s1 + 0xd0] = a4\n 14440: u64 [s1 + 0xc0] = t0\n 14444: u64 [s1 + 0xc8] = a5\n 14448: ra = 488, jump @4\n      : @559 [@dyn 244] (gas: 5)\n 14454: a1 = u64 [s1 + 0xd8]\n 14458: a0 = u64 [s1 + 0xc8]\n 14462: a3 = u64 [s1 + 0xc0]\n 14466: a3 = a3 | a0\n 14469: t0 = 490, jump @873\n      : @560 [@dyn 245] (gas: 1)\n 14475: jump @505 if a0 == 0\n      : @561 (gas: 13)\n 14479: i32 a0 = a1 + 0x4\n 14482: a2 = s1 + 0x7ff\n 14486: a2 = a2 + 0x59\n 14489: a5 = 0\n 14491: u64 [a2 + 192] = 0\n 14495: u64 [a2 + 184] = 0\n 14499: u64 [a2 + 168] = 0x20\n 14504: a1 = s1 + 0x7ff\n 14508: a1 = a1 + 0x101\n 14512: u64 [a2 + 176] = 0\n 14516: u64 [s1 + 0xc8] = a3\n 14520: u64 [s1 + 0xc0] = a4\n 14524: ra = 492, jump @4\n      : @562 [@dyn 246] (gas: 1)\n 14530: t0 = 494, jump @874\n      : @563 [@dyn 247] (gas: 1)\n 14536: jump @505 if a0 == 0\n      : @564 (gas: 11)\n 14540: i32 a0 = a1 + 0x24\n 14543: a3 = s1 + 0x7ff\n 14547: a3 = a3 + 0x59\n 14550: u64 [a3 + 160] = 0\n 14554: u64 [a3 + 152] = 0\n 14558: u64 [a3 + 144] = 0\n 14562: a4 = 0x19\n 14565: a1 = s1 + 0x7ff\n 14569: a1 = a1 + 0xe1\n 14573: u64 [a3 + 0x88] = a4\n 14577: ra = 496, jump @4\n      : @565 [@dyn 248] (gas: 1)\n 14583: t0 = 498, jump @875\n      : @566 [@dyn 249] (gas: 1)\n 14589: jump @505 if a0 == 0\n      : @567 (gas: 15)\n 14593: i32 a0 = a3 + 0x44\n 14596: a1 = u64 [0x200c0]\n 14601: a2 = u64 [0x200c8]\n 14606: a3 = u64 [0x200d0]\n 14611: a4 = s1 + 0x7ff\n 14615: a4 = a4 + 0x59\n 14618: u64 [a4 + 0x80] = a1\n 14622: u64 [a4 + 0x78] = a2\n 14625: u64 [a4 + 0x70] = a3\n 14628: a2 = 0x6400000000000000\n 14638: a1 = s1 + 0x7ff\n 14642: a1 = a1 + 0xc1\n 14646: u64 [a4 + 0x68] = a2\n 14649: ra = 0x270\n 14653: jump @4\n      : @568 (gas: 3)\n 14656: a0 = s1 + 0x11c0\n 14660: a1 = 0x40\n 14663: ra = 500, jump @2\n      : @569 [@dyn 250] (gas: 2)\n 14669: a2 = s1 + 0x1058\n 14673: fallthrough\n      : @570 (gas: 13)\n 14674: t0 = u64 [a2 + 0x180]\n 14678: a1 = a2 + 0x100\n 14682: a5 = u64 [a1 + 0x78]\n 14685: a4 = u64 [a1 + 0x70]\n 14688: a0 = u64 [a1 + 0x68]\n 14691: a3 = a4 | t0\n 14694: a1 = a0 | a5\n 14697: a1 = a1 | a3\n 14700: a1 = a1 >> 0x20\n 14703: a3 = a3 | a5\n 14706: a3 = a3 << 0x20\n 14709: a1 = a1 | a3\n 14712: jump @505 if a1 != 0\n      : @571 (gas: 11)\n 14716: u64 [a2 + 344] = 0\n 14720: u64 [a2 + 336] = 0\n 14724: u64 [a2 + 328] = 0\n 14728: a3 = 0x8c379a000000000\n 14738: a1 = s1 + 0x11a0\n 14742: u64 [a2 + 0x160] = a3\n 14746: u64 [s1 + 0xd8] = a0\n 14750: u64 [s1 + 0xd0] = a4\n 14754: u64 [s1 + 0xc0] = t0\n 14758: u64 [s1 + 0xc8] = a5\n 14762: ra = 502, jump @4\n      : @572 [@dyn 251] (gas: 5)\n 14768: a1 = u64 [s1 + 0xd8]\n 14772: a0 = u64 [s1 + 0xc8]\n 14776: a3 = u64 [s1 + 0xc0]\n 14780: a3 = a3 | a0\n 14783: t0 = 504, jump @873\n      : @573 [@dyn 252] (gas: 1)\n 14789: jump @505 if a0 == 0\n      : @574 (gas: 1)\n 14793: t0 = 506, jump @882\n      : @575 [@dyn 253] (gas: 8)\n 14799: u64 [a2 + 320] = 0\n 14803: u64 [a2 + 312] = 0\n 14807: u64 [a2 + 296] = 0x20\n 14812: a1 = s1 + 0x1180\n 14816: u64 [a2 + 304] = 0\n 14820: u64 [s1 + 0xc8] = a3\n 14824: u64 [s1 + 0xc0] = a4\n 14828: ra = 508, jump @4\n      : @576 [@dyn 254] (gas: 1)\n 14834: t0 = 510, jump @890\n      : @577 [@dyn 255] (gas: 1)\n 14840: jump @505 if a0 == 0\n      : @578 (gas: 8)\n 14844: i32 a0 = a1 + 0x24\n 14847: a2 = s1 + 0x1058\n 14851: u64 [a2 + 288] = 0\n 14855: u64 [a2 + 280] = 0\n 14859: u64 [a2 + 264] = 0x15\n 14864: a1 = s1 + 0x1160\n 14868: u64 [a2 + 272] = 0\n 14872: ra = 512, jump @4\n      : @579 [@dyn 256] (gas: 1)\n 14878: t0 = 514, jump @875\n      : @580 [@dyn 257] (gas: 1)\n 14884: jump @505 if a0 == 0\n      : @581 (gas: 12)\n 14888: i32 a0 = a3 + 0x44\n 14891: a1 = u64 [0x20070]\n 14896: a2 = u64 [0x20078]\n 14901: a4 = s1 + 0x1058\n 14905: u64 [a4 + 0x100] = a1\n 14909: u64 [a4 + 0xf8] = a2\n 14913: a1 = 0x6973686564000000\n 14923: u64 [a4 + 0xf0] = a1\n 14927: a1 = s1 + 0x1140\n 14931: u64 [a4 + 232] = 0\n 14935: ra = 0x270\n 14939: jump @4\n      : @582 (gas: 4)\n 14942: a0 = s1 + 0x7ff\n 14946: a0 = a0 + 0x81\n 14950: a1 = 0x40\n 14953: ra = 516, jump @2\n      : @583 [@dyn 258] (gas: 14)\n 14959: a4 = s1 + 0x7ff\n 14963: a4 = a4 + 0x59\n 14966: t0 = u64 [a4 + 0x40]\n 14969: a5 = u64 [a4 + 0x38]\n 14972: a3 = u64 [a4 + 0x30]\n 14975: a0 = u64 [a4 + 0x28]\n 14978: a2 = a3 | t0\n 14981: a1 = a0 | a5\n 14984: a1 = a1 | a2\n 14987: a1 = a1 >> 0x20\n 14990: a2 = a2 | a5\n 14993: a2 = a2 << 0x20\n 14996: a1 = a1 | a2\n 14999: jump @505 if a1 != 0\n      : @584 (gas: 12)\n 15003: u64 [a4 + 24] = 0\n 15006: u64 [a4 + 16] = 0\n 15009: u64 [a4 + 8] = 0\n 15012: u64 [s1 + 0xd0] = a3\n 15016: a3 = 0x8c379a000000000\n 15026: a1 = s1 + 0x7ff\n 15030: a1 = a1 + 0x61\n 15033: u64 [a4 + 0x20] = a3\n 15036: u64 [s1 + 0xd8] = a0\n 15040: u64 [s1 + 0xc8] = t0\n 15044: u64 [s1 + 0xc0] = a5\n 15048: ra = 518, jump @4\n      : @585 [@dyn 259] (gas: 5)\n 15054: a1 = u64 [s1 + 0xd8]\n 15058: a0 = u64 [s1 + 0xc8]\n 15062: a3 = u64 [s1 + 0xc0]\n 15066: a3 = a3 | a0\n 15069: t0 = 520, jump @873\n      : @586 [@dyn 260] (gas: 1)\n 15075: jump @505 if a0 == 0\n      : @587 (gas: 14)\n 15079: i32 a0 = a1 + 0x4\n 15082: a1 = s1 + 0x7ff\n 15086: a1 = a1 + 0x59\n 15089: u64 [a1 + 0] = 0\n 15091: u64 [a1 + 4294967288] = 0\n 15094: a2 = s1 + 0x1000\n 15098: u64 [a2 + 4294965312] = 0x20\n 15103: a1 = s1 + 0x7ff\n 15107: a1 = a1 + 0x41\n 15110: a2 = s1 + 0x1000\n 15114: u64 [a2 + 4294965320] = 0\n 15118: u64 [s1 + 0xc8] = a3\n 15122: u64 [s1 + 0xc0] = a4\n 15126: ra = 522, jump @4\n      : @588 [@dyn 261] (gas: 1)\n 15132: t0 = 524, jump @874\n      : @589 [@dyn 262] (gas: 1)\n 15138: jump @505 if a0 == 0\n      : @590 (gas: 12)\n 15142: i32 a0 = a1 + 0x24\n 15145: a1 = s1 + 0x1000\n 15149: u64 [a1 + 4294965304] = 0\n 15153: a1 = s1 + 0x1000\n 15157: u64 [a1 + 4294965296] = 0\n 15161: a2 = s1 + 0x1000\n 15165: u64 [a2 + 4294965280] = 0x13\n 15170: a1 = s1 + 0x7ff\n 15174: a1 = a1 + 0x21\n 15177: a2 = s1 + 0x1000\n 15181: u64 [a2 + 4294965288] = 0\n 15185: ra = 526, jump @4\n      : @591 [@dyn 263] (gas: 1)\n 15191: t0 = 528, jump @875\n      : @592 [@dyn 264] (gas: 1)\n 15197: jump @505 if a0 == 0\n      : @593 (gas: 16)\n 15201: i32 a0 = a3 + 0x44\n 15204: a1 = u64 [0x200d8]\n 15209: a2 = u64 [0x200e0]\n 15214: a3 = s1 + 0x1000\n 15218: u64 [a3 + 0xfffffffffffff818] = a1\n 15222: a1 = s1 + 0x1000\n 15226: u64 [a1 + 0xfffffffffffff810] = a2\n 15230: a1 = 0x6f636b0000000000\n 15240: a2 = s1 + 0x1000\n 15244: u64 [a2 + 0xfffffffffffff808] = a1\n 15248: a1 = s1 + 0x7ff\n 15252: a1 = a1 + 0x1\n 15255: a2 = s1 + 0x1000\n 15259: u64 [a2 + 4294965248] = 0\n 15263: ra = 0x270\n 15267: jump @4\n      : @594 (gas: 12)\n 15270: a0 = u64 [s1 + 0x90]\n 15274: a3 = u64 [s1 + 0x88]\n 15278: a2 = a0 | a3\n 15281: a1 = u64 [s1 + 0x80]\n 15285: a4 = u64 [s1 + 0x78]\n 15288: a1 = a1 | a4\n 15291: a2 = a2 | a1\n 15294: a2 = a2 >> 0x20\n 15297: a1 = a1 | a3\n 15300: a1 = a1 << 0x20\n 15303: a1 = a1 | a2\n 15306: jump @505 if a1 != 0\n      : @595 (gas: 2)\n 15310: a1 = 0x200\n 15314: ra = 530, jump @14\n      : @596 [@dyn 265] (gas: 5)\n 15320: i32 a1 = a0 + 0\n 15322: a2 = 0x200\n 15326: a0 = 0\n 15328: ecalli 12 // 'seal_return'\n 15330: jump @758\n      : @597 (gas: 35)\n 15333: a0 = u64 [s1 + 0xc0]\n 15337: a0 = a0 + 0x1\n 15340: a1 = a0 <u 0x1\n 15343: a2 = u64 [s1 + 0xc8]\n 15347: a1 = a1 + a2\n 15350: a2 = a0 | a1\n 15353: a2 = a2 <u 0x1\n 15356: a3 = u64 [s1 + 0xd0]\n 15360: a2 = a2 + a3\n 15363: a3 = a2 <u a3\n 15366: a4 = u64 [s1 + 0xd8]\n 15370: a3 = a3 + a4\n 15373: a4 = t0\n 15375: u64 [a4 + 0xa8] = a0\n 15379: u64 [a4 + 0xb0] = a1\n 15383: u64 [a4 + 0xb8] = a2\n 15387: u64 [a4 + 0xc0] = a3\n 15391: a0 = s1 + 0x2000\n 15395: i32 a0 = a0 + 0xfffffffffffff900\n 15399: a1 = s1 + 0x2000\n 15403: i32 a1 = a1 + 0xfffffffffffff8e0\n 15407: ecalli 0 // 'block_hash'\n 15408: a2 = s1 + 0x1858\n 15412: a0 = u8 [a2 + 0xa7]\n 15416: a0 = a0 & 0xf\n 15419: a1 = a0 + 0x2\n 15422: a0 = a1 <u a0\n 15425: u64 [a2 + 224] = 0\n 15429: u64 [a2 + 0xc8] = a1\n 15433: u64 [a2 + 0xd0] = a0\n 15437: a0 = 0 if a0 != 0\n 15439: u64 [a2 + 0xd8] = a0\n 15443: a0 = s1 + 0x7e0\n 15447: a1 = s1 + 0x1920\n 15451: ra = 532, jump @6\n      : @598 [@dyn 266] (gas: 31)\n 15457: a0 = u64 [s1 + 0x7e0]\n 15461: a1 = u64 [s1 + 0x7e8]\n 15465: a2 = u64 [s1 + 0x7f0]\n 15469: a3 = a0 >> 0x38\n 15472: a4 = a1 << 0x8\n 15475: a3 = a3 | a4\n 15478: a1 = a1 >> 0x38\n 15481: a2 = a2 << 0x8\n 15484: a1 = a1 | a2\n 15487: a0 = a0 << 0x8\n 15490: a1 = a1 << 0x18\n 15493: a1 = a1 >> 0x18\n 15496: a2 = u64 [s1 + 0xb0]\n 15500: a2 = a2 >> 0x28\n 15503: a2 = a2 << 0x28\n 15506: a1 = a1 | a2\n 15509: a0 = a0 + 0x1\n 15512: a4 = s1 + 0x1858\n 15516: u64 [a4 + 256] = 0\n 15520: u64 [a4 + 248] = 0\n 15524: u64 [a4 + 240] = 0\n 15528: u64 [a4 + 232] = 0x16\n 15533: a2 = u64 [s1 + 0xb8]\n 15537: a5 = a4 + 0x100\n 15541: u64 [a5 + 0x20] = a2\n 15544: u64 [a5 + 0x10] = a3\n 15547: u64 [a5 + 0x8] = a0\n 15550: u64 [a5 + 0x18] = a1\n 15553: a0 = s1 + 0x1940\n 15557: a1 = s1 + 0x1960\n 15561: ra = 534, jump @7\n      : @599 [@dyn 267] (gas: 8)\n 15567: a1 = s1 + 0x1858\n 15571: u64 [a1 + 320] = 0\n 15575: u64 [a1 + 312] = 0\n 15579: u64 [a1 + 304] = 0\n 15583: u64 [a1 + 296] = 0x14\n 15588: a0 = s1 + 0x7c0\n 15592: a1 = s1 + 0x1980\n 15596: ra = 536, jump @6\n      : @600 [@dyn 268] (gas: 17)\n 15602: a0 = u64 [s1 + 0x7d8]\n 15606: u64 [s1 + 0x30] = a0\n 15609: a0 = u64 [s1 + 0x7d0]\n 15613: u64 [s1 + 0x28] = a0\n 15616: a0 = u64 [s1 + 0x7c8]\n 15620: u64 [s1 + 0x38] = a0\n 15623: a0 = u64 [s1 + 0x7c0]\n 15627: u64 [s1 + 0x58] = a0\n 15630: a0 = s1 + 0x1858\n 15634: u64 [a0 + 352] = 0\n 15638: u64 [a0 + 344] = 0\n 15642: u64 [a0 + 336] = 0\n 15646: a1 = a0\n 15648: u64 [a1 + 328] = 0x1\n 15653: a0 = s1 + 0x7a0\n 15657: a1 = s1 + 0x19a0\n 15661: ra = 538, jump @6\n      : @601 [@dyn 269] (gas: 68)\n 15667: t2 = u64 [s1 + 0x7a0]\n 15671: a1 = s1 + 0x700\n 15675: a0 = u64 [a1 + 0xb8]\n 15679: u64 [s1 + 0xd8] = a0\n 15683: a3 = u64 [a1 + 0xb0]\n 15687: a5 = u64 [a1 + 0xa8]\n 15691: ra = u64 [s1 + 0x58]\n 15694: a1 = ra mulhu t2\n 15697: a0 = u64 [s1 + 0x38]\n 15700: a2 = a0 * t2\n 15703: a1 = a1 + a2\n 15706: a2 = a1 <u a2\n 15709: a4 = a0 mulhu t2\n 15712: t1 = a4 + a2\n 15715: a4 = ra * a5\n 15718: a1 = a1 + a4\n 15721: u64 [s1 + 0x20] = a1\n 15724: a1 = a1 <u a4\n 15727: a4 = ra mulhu a5\n 15730: a1 = a1 + a4\n 15733: t0 = t1 + a1\n 15736: a2 = a0 * a5\n 15739: a1 = a2 + t0\n 15742: u64 [s1 + 0xd0] = a1\n 15746: a4 = a1 <u a2\n 15749: a1 = t0 <u t1\n 15752: a2 = a0 mulhu a5\n 15755: a1 = a1 + a2\n 15758: a1 = a1 + a4\n 15761: u64 [s1 + 0xc8] = a1\n 15765: a1 = a0 * a3\n 15768: a2 = u64 [s1 + 0xd8]\n 15772: a2 = a2 * ra\n 15775: a1 = a1 + a2\n 15778: u64 [s1 + 0xc0] = a1\n 15782: t0 = u64 [s1 + 0x28]\n 15785: u64 [s1 + 0xb0] = a5\n 15789: a2 = a5 * t0\n 15792: a4 = u64 [s1 + 0x30]\n 15795: a5 = a4 * t2\n 15798: a5 = a5 + a2\n 15801: a2 = a3 * ra\n 15804: t1 = t0 * t2\n 15807: a2 = a2 + t1\n 15810: u64 [s1 + 0xb8] = a3\n 15814: a3 = a3 mulhu ra\n 15817: u64 [s1 + 0xa0] = a3\n 15821: a1 = u64 [s1 + 0xc0]\n 15825: a3 = a3 + a1\n 15828: a1 = t0 mulhu t2\n 15831: u64 [s1 + 0xc0] = a1\n 15835: a1 = a1 + a5\n 15838: a5 = a2 <u t1\n 15841: u64 [s1 + 0xa8] = a1\n 15845: a1 = a1 + a3\n 15848: t1 = a1 + a5\n 15851: a5 = a0 | a4\n 15854: a1 = ra | t0\n 15857: a1 = a1 | a5\n 15860: a0 = u64 [s1 + 0xd0]\n 15864: t0 = a0 + a2\n 15867: a4 = t0 <u a0\n 15870: a0 = u64 [s1 + 0xc8]\n 15874: t1 = t1 + a0\n 15877: t1 = t1 + a4\n 15880: u64 [s1 + 0x48] = t1\n 15883: u64 [s1 + 0x40] = t0\n 15886: jump @604 if a1 == 0\n      : @602 (gas: 48)\n 15890: a1 = t1 ^ a0\n 15893: a2 = u64 [s1 + 0x48]\n 15896: a2 = a2 <u a0\n 15899: a4 = a2 if a1 != 0\n 15902: a0 = u64 [s1 + 0xa0]\n 15906: a3 = a3 <u a0\n 15909: a1 = u64 [s1 + 0x38]\n 15912: a2 = a1 >u 0\n 15914: t0 = u64 [s1 + 0xd8]\n 15918: a5 = t0 >u 0\n 15920: a2 = a2 & a5\n 15923: a5 = u64 [s1 + 0x58]\n 15926: a5 = t0 mulhu a5\n 15929: a5 = a5 >u 0\n 15931: a2 = a2 | a5\n 15934: t1 = u64 [s1 + 0xb8]\n 15938: a5 = a1 mulhu t1\n 15941: a5 = a5 >u 0\n 15943: a2 = a2 | a5\n 15946: ra = a2 | a3\n 15949: a0 = u64 [s1 + 0xc0]\n 15953: a1 = u64 [s1 + 0xa8]\n 15957: a0 = a1 <u a0\n 15960: a2 = u64 [s1 + 0x30]\n 15963: a5 = a2 >u 0\n 15965: a3 = u64 [s1 + 0xb0]\n 15969: a1 = a3 >u 0\n 15971: a1 = a1 & a5\n 15974: a5 = a2 mulhu t2\n 15977: a5 = a5 >u 0\n 15979: a1 = a1 | a5\n 15982: a5 = u64 [s1 + 0x28]\n 15985: a3 = a3 mulhu a5\n 15988: a3 = a3 >u 0\n 15990: a1 = a1 | a3\n 15993: a0 = a0 | a1\n 15996: a1 = t1 | t0\n 15999: a3 = a5 | a2\n 16002: t0 = u64 [s1 + 0x40]\n 16005: a3 = a3 >u 0\n 16007: a2 = a1 >u 0\n 16009: a2 = a2 & a3\n 16012: a1 = a2 | a0\n 16015: t1 = u64 [s1 + 0x48]\n 16018: a1 = a1 | ra\n 16021: a1 = a1 | a4\n 16024: a1 = a1 & 0x1\n 16027: jump @604 if a1 == 0\n      : @603 (gas: 1)\n 16030: jump @788\n      : @604 (gas: 54)\n 16033: a0 = u64 [s1 + 0x58]\n 16036: a2 = a0 * t2\n 16039: u64 [s1 + 0x50] = a2\n 16042: a0 = a2 | t0\n 16045: t2 = u64 [s1 + 0x20]\n 16048: a1 = t2 | t1\n 16051: a0 = a0 | a1\n 16054: a0 = a0 <u 0x1\n 16057: u64 [s1 + 0xd8] = a0\n 16061: a0 = clz t0\n 16063: a0 = a0 + 0x40\n 16066: a4 = clz t1\n 16068: a4 = a0 if t1 == 0\n 16071: a0 = clz a2\n 16073: a0 = a0 + 0x40\n 16076: a1 = clz t2\n 16078: a1 = a0 if t2 == 0\n 16081: a0 = a1 + 0x80\n 16085: ra = t1\n 16087: a2 = t0 | t1\n 16090: a4 = a0 if a2 == 0\n 16093: a3 = a0 <u a1\n 16096: a3 = 0 if a2 != 0\n 16098: a5 = a3 >u 0\n 16100: a0 = a4 <u 0xf3\n 16104: a2 = a0 ^ 0x1\n 16107: a5 = a2 if a3 == 0\n 16110: a0 = a5 <u 0x1\n 16113: t1 = a0 + 0xffffffffffffffff\n 16116: a1 = -a5\n 16118: a3 = -a3\n 16120: a2 = a3 - a2\n 16123: a0 = 0xf2 - a4\n 16127: u64 [s1 + 0xc8] = a1\n 16131: a3 = a1 >u 0\n 16133: a4 = t1 >u 0\n 16135: a4 = a3 if t1 == 0\n 16138: a3 = a2 >u 0\n 16140: u64 [s1 + 0xd0] = a0\n 16144: a1 = a0 <u 0x100\n 16148: a1 = a1 ^ 0x1\n 16151: a1 = a3 if a2 != 0\n 16154: a1 = a4 if a5 != 0\n 16157: a0 = u64 [s1 + 0xd8]\n 16161: a1 = a1 | a0\n 16164: ra = 0 if a1 != 0\n 16166: t0 = 0 if a1 != 0\n 16168: u64 [s1 + 0xd8] = t0\n 16172: a5 = t2\n 16174: a5 = 0 if a1 != 0\n 16176: a0 = u64 [s1 + 0x50]\n 16179: a0 = 0 if a1 != 0\n 16181: a4 = u64 [s1 + 0x58]\n 16184: jump @619 if a1 != 0\n      : @605 (gas: 7)\n 16188: a1 = u64 [s1 + 0xd0]\n 16192: a1 = a1 ^ 0xff\n 16196: t0 = u64 [s1 + 0xc8]\n 16200: a1 = a1 | t0\n 16203: a3 = a2 | t1\n 16206: a1 = a1 | a3\n 16209: jump @619 if a1 == 0\n      : @606 (gas: 19)\n 16213: a3 = u64 [s1 + 0xd0]\n 16217: a0 = a3 + 0x1\n 16220: u64 [s1 + 0xd8] = a0\n 16224: a1 = a0 <u 0x1\n 16227: a1 = a1 + a2\n 16230: u64 [s1 + 0xb8] = a1\n 16234: a1 = a1 | a0\n 16237: a1 = a1 <u 0x1\n 16240: a1 = a1 + t0\n 16243: u64 [s1 + 0xa8] = a1\n 16247: a1 = a1 <u t0\n 16250: a1 = a1 + t1\n 16253: u64 [s1 + 0xb0] = a1\n 16257: a1 = 0xff - a3\n 16261: u64 [s1 + 0xc0] = a1\n 16265: a2 = 0x80 - a1\n 16269: a0 = u64 [s1 + 0x50]\n 16272: a1 = t2\n 16274: ra = 540, jump @900\n      : @607 [@dyn 270] (gas: 6)\n 16280: u64 [s1 + 0xc8] = a0\n 16284: u64 [s1 + 0x98] = a1\n 16288: a0 = u64 [s1 + 0x40]\n 16291: a1 = u64 [s1 + 0x48]\n 16294: a2 = u64 [s1 + 0xc0]\n 16298: ra = 542, jump @905\n      : @608 [@dyn 271] (gas: 9)\n 16304: u64 [s1 + 0xa0] = a0\n 16308: a0 = u64 [s1 + 0x98]\n 16312: a0 = a0 | a1\n 16315: u64 [s1 + 0x98] = a0\n 16319: a1 = u64 [s1 + 0xd0]\n 16323: a2 = 0x7f - a1\n 16326: a0 = u64 [s1 + 0x50]\n 16329: a1 = u64 [s1 + 0x20]\n 16332: ra = 544, jump @905\n      : @609 [@dyn 272] (gas: 18)\n 16338: a2 = u64 [s1 + 0xc0]\n 16342: a3 = a2 <u 0x80\n 16346: u64 [s1 + 0xd0] = a3\n 16350: a4 = u64 [s1 + 0x98]\n 16354: a1 = a4 if a3 != 0\n 16357: a4 = u64 [s1 + 0x48]\n 16360: a1 = a4 if a2 == 0\n 16363: u64 [s1 + 0x90] = a1\n 16367: a1 = u64 [s1 + 0xc8]\n 16371: a4 = u64 [s1 + 0xa0]\n 16375: a1 = a1 | a4\n 16378: a1 = a0 if a3 == 0\n 16381: a0 = u64 [s1 + 0x40]\n 16384: a1 = a0 if a2 == 0\n 16387: u64 [s1 + 0xc8] = a1\n 16391: a0 = u64 [s1 + 0x50]\n 16394: a1 = u64 [s1 + 0x20]\n 16397: ra = 546, jump @905\n      : @610 [@dyn 273] (gas: 13)\n 16403: a4 = u64 [s1 + 0xa8]\n 16407: a5 = u64 [s1 + 0xb0]\n 16411: a2 = u64 [s1 + 0xb8]\n 16415: a5 = a5 | a2\n 16418: a3 = u64 [s1 + 0xd8]\n 16422: a3 = a3 | a4\n 16425: a3 = a3 | a5\n 16428: a2 = u64 [s1 + 0xd0]\n 16432: a1 = 0 if a2 == 0\n 16434: u64 [s1 + 0xc0] = a1\n 16438: a0 = 0 if a2 == 0\n 16440: u64 [s1 + 0xd0] = a0\n 16444: jump @612 if a3 != 0\n      : @611 (gas: 4)\n 16447: a5 = 0\n 16449: u64 [s1 + 120] = 0\n 16452: ra = u64 [s1 + 0x90]\n 16456: jump @618\n      : @612 (gas: 6)\n 16459: u64 [s1 + 112] = 0x2710\n 16464: a0 = u64 [s1 + 0xd8]\n 16468: a2 = a0 + 0xffffffffffffff80\n 16471: a0 = u64 [s1 + 0x40]\n 16474: a1 = u64 [s1 + 0x48]\n 16477: ra = 548, jump @900\n      : @613 [@dyn 274] (gas: 6)\n 16483: u64 [s1 + 0x98] = a0\n 16487: u64 [s1 + 0xa0] = a1\n 16491: a0 = u64 [s1 + 0x50]\n 16494: a1 = u64 [s1 + 0x20]\n 16497: a2 = u64 [s1 + 0xd8]\n 16501: ra = 550, jump @900\n      : @614 [@dyn 275] (gas: 7)\n 16507: u64 [s1 + 0x80] = a0\n 16511: u64 [s1 + 0x88] = a1\n 16515: a1 = u64 [s1 + 0xd8]\n 16519: a2 = 0x80 - a1\n 16523: a0 = u64 [s1 + 0x40]\n 16526: a1 = u64 [s1 + 0x48]\n 16529: ra = 552, jump @905\n      : @615 [@dyn 276] (gas: 20)\n 16535: a2 = u64 [s1 + 0x88]\n 16539: a1 = a1 | a2\n 16542: a2 = u64 [s1 + 0xd8]\n 16546: a3 = a2 <u 0x80\n 16550: u64 [s1 + 0x88] = a3\n 16554: a4 = u64 [s1 + 0xa0]\n 16558: a1 = a4 if a3 == 0\n 16561: a4 = u64 [s1 + 0x20]\n 16564: a1 = a4 if a2 == 0\n 16567: u64 [s1 + 0xa0] = a1\n 16571: a1 = u64 [s1 + 0x80]\n 16575: a0 = a0 | a1\n 16578: a1 = u64 [s1 + 0x98]\n 16582: a0 = a1 if a3 == 0\n 16585: a1 = u64 [s1 + 0x50]\n 16588: a0 = a1 if a2 == 0\n 16591: u64 [s1 + 0x98] = a0\n 16595: a0 = u64 [s1 + 0x40]\n 16598: a1 = u64 [s1 + 0x48]\n 16601: ra = 554, jump @900\n      : @616 [@dyn 277] (gas: 12)\n 16607: a5 = 0\n 16609: a2 = u64 [s1 + 0x88]\n 16613: a1 = 0 if a2 == 0\n 16615: a0 = 0 if a2 == 0\n 16617: a4 = u64 [s1 + 0x70]\n 16620: a2 = a4 + 0xffffffffffffffff\n 16623: u64 [s1 + 0x68] = a2\n 16626: a2 = a4 >u 0\n 16628: a2 = a2 + 0xffffffffffffffff\n 16631: u64 [s1 + 0x60] = a2\n 16634: ra = u64 [s1 + 0x90]\n 16638: fallthrough\n      : @617 (gas: 92)\n 16639: u64 [s1 + 0x80] = a1\n 16643: u64 [s1 + 0x88] = a5\n 16647: u64 [s1 + 120] = 0\n 16650: a1 = u64 [s1 + 0x98]\n 16654: a2 = a1 >> 0x3f\n 16657: a5 = u64 [s1 + 0xa0]\n 16661: a3 = a5 << 0x1\n 16664: t1 = a3 | a2\n 16667: a2 = a1 << 0x1\n 16670: a4 = ra >> 0x3f\n 16673: a4 = a4 | a2\n 16676: u64 [s1 + 0x90] = a4\n 16680: a3 = u64 [s1 + 0x60]\n 16683: a1 = a3 ^ t1\n 16686: u64 [s1 + 0x98] = a1\n 16690: a1 = a3 <u t1\n 16693: a2 = u64 [s1 + 0x68]\n 16696: t0 = a2 <u a4\n 16699: a2 = u64 [s1 + 0x98]\n 16703: t0 = a1 if a2 != 0\n 16706: a1 = u64 [s1 + 0x80]\n 16710: a1 = a1 << 0x1\n 16713: a4 = a0 >> 0x3f\n 16716: a1 = a1 | a4\n 16719: u64 [s1 + 0x80] = a1\n 16723: a4 = a5 >> 0x3f\n 16726: a0 = a0 << 0x1\n 16729: a4 = a4 | a0\n 16732: a0 = ra << 0x1\n 16735: a1 = u64 [s1 + 0xc8]\n 16739: a5 = a1 >> 0x3f\n 16742: a0 = a0 | a5\n 16745: u64 [s1 + 0xa0] = a0\n 16749: a5 = a1 << 0x1\n 16752: a0 = u64 [s1 + 0xc0]\n 16756: a1 = a0 >> 0x3f\n 16759: a1 = a1 | a5\n 16762: a5 = a0 << 0x1\n 16765: a0 = u64 [s1 + 0xd0]\n 16769: ra = a0 >> 0x3f\n 16772: a5 = a5 | ra\n 16775: a0 = a0 << 0x1\n 16778: a2 = u64 [s1 + 0x88]\n 16782: a0 = a0 | a2\n 16785: u64 [s1 + 0xd0] = a0\n 16789: a0 = a5 | 0\n 16791: u64 [s1 + 0xc0] = a0\n 16795: a0 = a1 | 0\n 16797: u64 [s1 + 0xc8] = a0\n 16801: a0 = u64 [s1 + 0xa0]\n 16805: ra = a0 | 0\n 16807: a0 = a3 - a4\n 16810: a0 = a0 <u t0\n 16813: a1 = a3 <u a4\n 16816: t2 = u64 [s1 + 0x80]\n 16820: a5 = a3 - t2\n 16823: a5 = a5 - a1\n 16826: a5 = a5 - a0\n 16829: t0 = a5 >>a 0x3f\n 16832: a0 = u64 [s1 + 0x70]\n 16835: a0 = t0 & a0\n 16838: a2 = u64 [s1 + 0x90]\n 16842: a1 = a2 - a0\n 16845: u64 [s1 + 0x98] = a1\n 16849: a1 = a2 <u a0\n 16852: a0 = t1 - a1\n 16855: u64 [s1 + 0xa0] = a0\n 16859: a1 = 0 if t1 != 0\n 16861: a0 = a4 - a1\n 16864: a1 = a4 <u a1\n 16867: a1 = t2 - a1\n 16870: a3 = u64 [s1 + 0xd8]\n 16874: a5 = u64 [s1 + 0xb8]\n 16878: a2 = a3 | a5\n 16881: a2 = a2 <u 0x1\n 16884: a4 = u64 [s1 + 0xa8]\n 16888: t1 = a4 <u a2\n 16891: a4 = a4 - a2\n 16894: a2 = a3 <u 0x1\n 16897: a5 = a5 - a2\n 16900: a2 = u64 [s1 + 0xb0]\n 16904: a2 = a2 - t1\n 16907: a3 = a3 + 0xffffffffffffffff\n 16910: u64 [s1 + 0xb8] = a5\n 16914: u64 [s1 + 0xb0] = a2\n 16918: a2 = a2 | a5\n 16921: u64 [s1 + 0xd8] = a3\n 16925: a3 = a3 | a4\n 16928: a2 = a2 | a3\n 16931: a5 = t0 & 0x1\n 16934: u64 [s1 + 0xa8] = a4\n 16938: jump @617 if a2 != 0\n      : @618 (gas: 22)\n 16942: a2 = u64 [s1 + 0xc8]\n 16946: a0 = a2 >> 0x3f\n 16949: a1 = ra << 0x1\n 16952: t0 = a1 | a0\n 16955: a3 = u64 [s1 + 0xc0]\n 16959: a1 = a3 >> 0x3f\n 16962: a2 = a2 << 0x1\n 16965: a1 = a1 | a2\n 16968: a4 = u64 [s1 + 0xd0]\n 16972: a2 = a4 >> 0x3f\n 16975: a3 = a3 << 0x1\n 16978: a4 = a4 << 0x1\n 16981: a0 = a5 | a4\n 16984: a4 = u64 [s1 + 0x78]\n 16987: a2 = a2 | a4\n 16990: a5 = a2 | a3\n 16993: a1 = a1 | a4\n 16996: u64 [s1 + 0xd8] = a1\n 17000: ra = a4 | t0\n 17003: a4 = u64 [s1 + 0x58]\n 17006: t2 = u64 [s1 + 0x20]\n 17009: fallthrough\n      : @619 (gas: 19)\n 17010: a3 = a4 <u a0\n 17013: a1 = u64 [s1 + 0x38]\n 17016: a2 = a1 ^ a5\n 17019: t1 = a1 <u a5\n 17022: u64 [s1 + 0xb8] = a3\n 17026: t1 = a3 if a2 == 0\n 17029: a4 = u64 [s1 + 0x28]\n 17032: a2 = u64 [s1 + 0xd8]\n 17036: t0 = a4 <u a2\n 17039: a1 = u64 [s1 + 0x30]\n 17042: a3 = a1 ^ ra\n 17045: a1 = a1 <u ra\n 17048: u64 [s1 + 0xa8] = t0\n 17052: a1 = t0 if a3 == 0\n 17055: a2 = a2 ^ a4\n 17058: a2 = a2 | a3\n 17061: u64 [s1 + 0xb0] = t1\n 17065: a1 = t1 if a2 == 0\n 17068: jump @621 if a1 == 0\n      : @620 (gas: 1)\n 17071: jump @793\n      : @621 (gas: 27)\n 17074: u64 [s1 + 0xc0] = ra\n 17078: u64 [s1 + 0xc8] = a5\n 17082: u64 [s1 + 0xd0] = a0\n 17086: a2 = t2 >> 0x4\n 17089: a4 = u64 [s1 + 0x40]\n 17092: a1 = a4 << 0x3c\n 17095: a1 = a1 | a2\n 17098: a5 = a1 >u 0\n 17100: a2 = u64 [s1 + 0x50]\n 17103: a2 = a2 >> 0x4\n 17106: a3 = t2 << 0x3c\n 17109: a2 = a2 | a3\n 17112: a2 = a2 <u 0x271\n 17116: a2 = a2 ^ 0x1\n 17119: a2 = a5 if a1 != 0\n 17122: a0 = a4 >> 0x4\n 17125: a3 = u64 [s1 + 0x48]\n 17128: a1 = a3 << 0x3c\n 17131: a0 = a0 | a1\n 17134: a1 = a0 >u 0\n 17136: a3 = a3 >> 0x4\n 17139: a4 = a3 >u 0\n 17141: a4 = a1 if a3 == 0\n 17144: a0 = a0 | a3\n 17147: a4 = a2 if a0 == 0\n 17150: a2 = s1 + 0x1858\n 17154: jump @623 if a4 != 0\n      : @622 (gas: 14)\n 17157: a0 = 0x30190\n 17162: a1 = 0x20190\n 17167: a0 = a0 << 0x20\n 17170: a0 = a0 >> 0x20\n 17173: u64 [s1 + 0x98] = a0\n 17177: a1 = a1 << 0x20\n 17180: a1 = a1 >> 0x20\n 17183: u64 [s1 + 0xa0] = a1\n 17187: t0 = u64 [s1 + 0xd0]\n 17191: a5 = u64 [s1 + 0xc8]\n 17195: a3 = u64 [s1 + 0xc0]\n 17199: a1 = u64 [s1 + 0xd8]\n 17203: t1 = u64 [s1 + 0x58]\n 17206: jump @626\n      : @623 (gas: 7)\n 17209: u64 [a2 + 384] = 0\n 17213: u64 [a2 + 376] = 0\n 17217: u64 [a2 + 368] = 0\n 17221: u64 [a2 + 360] = 0x18\n 17226: a0 = s1 + 0x740\n 17230: a1 = s1 + 0x19c0\n 17234: ra = 556, jump @6\n      : @624 [@dyn 278] (gas: 73)\n 17240: a1 = s1 + 0x700\n 17244: a0 = u64 [a1 + 0x40]\n 17247: u64 [s1 + 0xa0] = a0\n 17251: a0 = u64 [a1 + 0x50]\n 17254: u64 [s1 + 0x98] = a0\n 17258: a0 = u64 [a1 + 0x48]\n 17261: u64 [s1 + 0x90] = a0\n 17265: ecalli 9 // 'ref_time_left'\n 17267: a1 = u64 [s1 + 0x90]\n 17271: a1 = reverse a1\n 17273: a2 = a1 << 0x20\n 17276: a3 = u64 [s1 + 0x98]\n 17280: a3 = reverse a3\n 17282: a3 = a3 >> 0x20\n 17285: a2 = a2 | a3\n 17288: a1 = a1 >> 0x20\n 17291: a3 = u64 [s1 + 0xa0]\n 17295: a3 = reverse a3\n 17297: a4 = 0x30190\n 17302: a5 = a3 << 0x20\n 17305: a1 = a1 | a5\n 17308: a3 = a3 >> 0x20\n 17311: u32 [0x301a0] = a3\n 17316: u64 [0x30198] = a1\n 17321: u64 [0x30190] = a2\n 17326: a1 = s1 + 0x1858\n 17330: a2 = u64 [s1 + 0xc0]\n 17334: u64 [a1 + 0x1a0] = a2\n 17338: a1 = s1 + 0x1858\n 17342: a2 = u64 [s1 + 0xd8]\n 17346: u64 [a1 + 0x198] = a2\n 17350: a1 = s1 + 0x1858\n 17354: a2 = u64 [s1 + 0xc8]\n 17358: u64 [a1 + 0x190] = a2\n 17362: a1 = s1 + 0x1858\n 17366: a2 = u64 [s1 + 0xd0]\n 17370: u64 [a1 + 0x188] = a2\n 17374: a1 = s1 + 0x1858\n 17378: u32 [a1 + 424] = 0\n 17382: a0 = a0 >u 0x8fc\n 17386: a1 = -a0\n 17388: a2 = s1 + 0x1858\n 17392: u64 [a2 + 0x1e0] = a1\n 17396: a2 = s1 + 0x1858\n 17400: u64 [a2 + 0x1d8] = a1\n 17404: a2 = s1 + 0x1858\n 17408: u64 [a2 + 0x1d0] = a1\n 17412: a2 = s1 + 0x1858\n 17416: u64 [a2 + 0x1c8] = a1\n 17420: a4 = a4 << 0x20\n 17423: a4 = a4 >> 0x20\n 17426: a0 = a0 << 0x23\n 17429: u64 [s1 + 0x98] = a4\n 17433: a0 = a0 | a4\n 17436: a1 = s1 + 0x19e0\n 17440: a1 = a1 << 0x20\n 17443: a1 = a1 >> 0x20\n 17446: a2 = 0x20190\n 17451: a3 = s1 + 0x1a20\n 17455: a3 = a3 << 0x20\n 17458: a3 = a3 | a1\n 17461: a2 = a2 << 0x20\n 17464: a4 = a2 >> 0x20\n 17467: a1 = s1 + 0x1a00\n 17471: a1 = a1 << 0x20\n 17474: a5 = a1 | a4\n 17477: a1 = 0xffffffffffffffff\n 17480: a2 = 0xffffffffffffffff\n 17483: u64 [s1 + 0xa0] = a4\n 17487: ecalli 2 // 'call'\n 17489: u64 [s1 + 0x90] = a0\n 17493: a0 = s1 + 0x720\n 17497: ra = 558, jump @807\n      : @625 [@dyn 279] (gas: 8)\n 17503: a1 = u64 [s1 + 0xd8]\n 17507: a3 = u64 [s1 + 0xc0]\n 17511: a5 = u64 [s1 + 0xc8]\n 17515: t0 = u64 [s1 + 0xd0]\n 17519: t1 = u64 [s1 + 0x58]\n 17522: a2 = s1 + 0x1858\n 17526: a0 = u64 [s1 + 0x90]\n 17530: jump @665 if a0 != 0\n      : @626 (gas: 26)\n 17534: a0 = u64 [s1 + 0x28]\n 17537: a4 = a0 - a1\n 17540: a1 = u64 [s1 + 0xb0]\n 17544: a0 = a4 - a1\n 17547: u64 [s1 + 0xd0] = a0\n 17551: a0 = a4 <u a1\n 17554: a1 = u64 [s1 + 0x30]\n 17557: a1 = a1 - a3\n 17560: a3 = u64 [s1 + 0xa8]\n 17564: a1 = a1 - a3\n 17567: a1 = a1 - a0\n 17570: u64 [s1 + 0xd8] = a1\n 17574: a0 = u64 [s1 + 0x38]\n 17577: a0 = a0 - a5\n 17580: a1 = u64 [s1 + 0xb8]\n 17584: a0 = a0 - a1\n 17587: u64 [s1 + 0xc8] = a0\n 17591: a0 = t1 - t0\n 17594: u64 [s1 + 0xc0] = a0\n 17598: u64 [a2 + 512] = 0\n 17602: u64 [a2 + 504] = 0\n 17606: u64 [a2 + 496] = 0\n 17610: u64 [a2 + 488] = 0x16\n 17615: a0 = s1 + 0x660\n 17619: a1 = s1 + 0x1a40\n 17623: ra = 560, jump @6\n      : @627 [@dyn 280] (gas: 67)\n 17629: a2 = s1 + 0x600\n 17633: a0 = u64 [a2 + 0x68]\n 17636: a1 = u64 [a2 + 0x60]\n 17639: a3 = u64 [a2 + 0x70]\n 17642: u64 [s1 + 0xb8] = a3\n 17646: a2 = a0 << 0x38\n 17649: a1 = a1 >> 0x8\n 17652: a1 = a1 | a2\n 17655: u64 [s1 + 0xb0] = a1\n 17659: a1 = a3 << 0x38\n 17662: a0 = a0 >> 0x8\n 17665: a0 = a0 | a1\n 17668: u64 [s1 + 0xa8] = a0\n 17672: ecalli 9 // 'ref_time_left'\n 17674: a1 = u64 [s1 + 0xa8]\n 17678: a1 = reverse a1\n 17680: a2 = a1 >> 0x20\n 17683: a3 = u64 [s1 + 0xb0]\n 17687: a3 = reverse a3\n 17689: a4 = a3 << 0x20\n 17692: a2 = a2 | a4\n 17695: a1 = a1 << 0x20\n 17698: a4 = u64 [s1 + 0xb8]\n 17702: a4 = reverse a4\n 17704: a4 = a4 << 0x8\n 17707: a4 = a4 >> 0x20\n 17710: a1 = a1 | a4\n 17713: a3 = a3 >> 0x20\n 17716: u32 [0x301a0] = a3\n 17721: u64 [0x30198] = a2\n 17726: u64 [0x30190] = a1\n 17731: a1 = u64 [s1 + 0xd8]\n 17735: a2 = s1 + 0x1858\n 17739: a3 = a2 + 0x200\n 17743: u64 [a3 + 0x20] = a1\n 17746: a1 = u64 [s1 + 0xd0]\n 17750: u64 [a3 + 0x18] = a1\n 17753: a1 = u64 [s1 + 0xc8]\n 17757: u64 [a3 + 0x10] = a1\n 17760: a1 = u64 [s1 + 0xc0]\n 17764: u64 [a3 + 0x8] = a1\n 17767: u32 [a2 + 552] = 0\n 17771: a0 = a0 >u 0x8fc\n 17775: a1 = -a0\n 17777: u64 [a3 + 0x60] = a1\n 17780: u64 [a3 + 0x58] = a1\n 17783: u64 [a3 + 0x50] = a1\n 17786: u64 [a3 + 0x48] = a1\n 17789: a0 = a0 << 0x23\n 17792: a1 = u64 [s1 + 0x98]\n 17796: a0 = a0 | a1\n 17799: a1 = s1 + 0x1a60\n 17803: a1 = a1 << 0x20\n 17806: a1 = a1 >> 0x20\n 17809: a2 = s1 + 0x1aa0\n 17813: a2 = a2 << 0x20\n 17816: a3 = a2 | a1\n 17819: a1 = s1 + 0x1a80\n 17823: a1 = a1 << 0x20\n 17826: a4 = u64 [s1 + 0xa0]\n 17830: a5 = a1 | a4\n 17833: a1 = 0xffffffffffffffff\n 17836: a2 = 0xffffffffffffffff\n 17839: ecalli 2 // 'call'\n 17841: u64 [s1 + 0xb8] = a0\n 17845: a0 = s1 + 0x640\n 17849: ra = 562, jump @807\n      : @628 [@dyn 281] (gas: 2)\n 17855: a0 = u64 [s1 + 0xb8]\n 17859: jump @647 if a0 != 0\n      : @629 (gas: 8)\n 17863: a1 = s1 + 0x1858\n 17867: u64 [a1 + 640] = 0\n 17871: u64 [a1 + 632] = 0\n 17875: u64 [a1 + 624] = 0\n 17879: u64 [a1 + 616] = 0x13\n 17884: a0 = s1 + 0x580\n 17888: a1 = s1 + 0x1ac0\n 17892: ra = 564, jump @6\n      : @630 [@dyn 282] (gas: 16)\n 17898: a0 = u64 [s1 + 0x598]\n 17902: u64 [s1 + 0x90] = a0\n 17906: a0 = u64 [s1 + 0x590]\n 17910: u64 [s1 + 0x98] = a0\n 17914: a0 = u64 [s1 + 0x588]\n 17918: u64 [s1 + 0xa0] = a0\n 17922: a0 = u64 [s1 + 0x580]\n 17926: u64 [s1 + 0xa8] = a0\n 17930: a1 = s1 + 0x1858\n 17934: u64 [a1 + 672] = 0\n 17938: u64 [a1 + 664] = 0\n 17942: u64 [a1 + 656] = 0\n 17946: u64 [a1 + 648] = 0x16\n 17951: a0 = s1 + 0x560\n 17955: a1 = s1 + 0x1ae0\n 17959: ra = 566, jump @6\n      : @631 [@dyn 283] (gas: 11)\n 17965: a0 = u64 [s1 + 0x578]\n 17969: u64 [s1 + 0x88] = a0\n 17973: a0 = u64 [s1 + 0x570]\n 17977: u64 [s1 + 0xb8] = a0\n 17981: a0 = u64 [s1 + 0x568]\n 17985: u64 [s1 + 0x80] = a0\n 17989: a0 = u64 [s1 + 0x560]\n 17993: u64 [s1 + 0x78] = a0\n 17996: a0 = s1 + 0x540\n 18000: a1 = 0x40\n 18003: ra = 568, jump @2\n      : @632 [@dyn 284] (gas: 13)\n 18009: a4 = s1 + 0x500\n 18013: a0 = u64 [a4 + 0x58]\n 18016: a1 = u64 [a4 + 0x50]\n 18019: a2 = u64 [a4 + 0x48]\n 18022: a3 = u64 [a4 + 0x40]\n 18025: a0 = a0 | a2\n 18028: a2 = a3 | a1\n 18031: a2 = a2 | a0\n 18034: a2 = a2 >> 0x20\n 18037: a0 = a0 | a1\n 18040: a0 = a0 << 0x20\n 18043: a0 = a0 | a2\n 18046: jump @634 if a0 == 0\n      : @633 (gas: 1)\n 18049: jump @505\n      : @634 (gas: 16)\n 18052: a0 = 0xffffff0000000000\n 18062: u64 [s1 + 0x70] = a0\n 18065: a0 = 0xffffffff00000000\n 18075: u64 [s1 + 0xb0] = a0\n 18079: a0 = u64 [s1 + 0xc0]\n 18083: u64 [s1 + 0x520] = a0\n 18087: a0 = u64 [s1 + 0xc8]\n 18091: u64 [s1 + 0x528] = a0\n 18095: a0 = u64 [s1 + 0xd0]\n 18099: u64 [s1 + 0x530] = a0\n 18103: a1 = s1 + 0x520\n 18107: a0 = u64 [s1 + 0xd8]\n 18111: u64 [s1 + 0x538] = a0\n 18115: a0 = a3\n 18117: u64 [s1 + 0xd8] = a3\n 18121: ra = 570, jump @4\n      : @635 [@dyn 285] (gas: 38)\n 18127: a0 = u64 [s1 + 0x78]\n 18130: a0 = a0 >> 0x8\n 18133: a2 = u64 [s1 + 0x80]\n 18137: a1 = a2 << 0x38\n 18140: a0 = a0 | a1\n 18143: a1 = a2 >> 0x8\n 18146: a3 = u64 [s1 + 0xb8]\n 18150: a2 = a3 << 0x38\n 18153: a1 = a1 | a2\n 18156: a2 = a3 << 0x18\n 18159: a2 = a2 >> 0x20\n 18162: u64 [s1 + 1240] = 0\n 18166: u64 [s1 + 0x4d0] = a2\n 18170: u64 [s1 + 0x4c8] = a1\n 18174: u64 [s1 + 0x4c0] = a0\n 18178: a0 = u64 [s1 + 0x90]\n 18182: u64 [s1 + 0x4f8] = a0\n 18186: a0 = u64 [s1 + 0x98]\n 18190: u64 [s1 + 0x4f0] = a0\n 18194: a0 = u64 [s1 + 0xa0]\n 18198: u64 [s1 + 0x4e8] = a0\n 18202: a0 = u64 [0x20108]\n 18207: a1 = u64 [0x20110]\n 18212: a2 = u64 [0x20118]\n 18217: a3 = u64 [s1 + 0xa8]\n 18221: u64 [s1 + 0x4e0] = a3\n 18225: a5 = s1 + 0x500\n 18229: u64 [a5 + 0x18] = a0\n 18232: u64 [a5 + 0x10] = a1\n 18235: u64 [a5 + 0x8] = a2\n 18238: a0 = u64 [0x20120]\n 18243: a1 = 0x20\n 18246: a2 = s1 + 0x500\n 18250: a3 = s1 + 0x4e0\n 18254: a4 = s1 + 0x4c0\n 18258: u64 [a5] = a0\n 18260: a0 = u64 [s1 + 0xd8]\n 18264: ra = 572, jump @10\n      : @636 [@dyn 286] (gas: 11)\n 18270: a0 = u64 [s1 + 0x90]\n 18274: u64 [s1 + 0x498] = a0\n 18278: a0 = u64 [s1 + 0x98]\n 18282: u64 [s1 + 0x490] = a0\n 18286: a0 = u64 [s1 + 0xa0]\n 18290: u64 [s1 + 0x488] = a0\n 18294: a0 = s1 + 0x4a0\n 18298: a1 = s1 + 0x480\n 18302: a2 = u64 [s1 + 0xa8]\n 18306: u64 [s1 + 0x480] = a2\n 18310: ra = 574, jump @864\n      : @637 [@dyn 287] (gas: 18)\n 18316: a4 = s1 + 0x400\n 18320: a0 = u64 [a4 + 0xa0]\n 18324: a1 = u64 [a4 + 0xa8]\n 18328: a2 = u64 [a4 + 0xb0]\n 18332: a3 = u64 [a4 + 0xb8]\n 18336: a5 = s1 + 0x1858\n 18340: u64 [a5 + 704] = 0\n 18344: u64 [a5 + 696] = 0\n 18348: u64 [a5 + 688] = 0\n 18352: u64 [a5 + 680] = 0x13\n 18357: a4 = a5 + 0x200\n 18361: u64 [a4 + 0xe0] = a3\n 18365: u64 [a4 + 0xd8] = a2\n 18369: u64 [a4 + 0xd0] = a1\n 18373: u64 [a4 + 0xc8] = a0\n 18377: a0 = s1 + 0x1b00\n 18381: a1 = s1 + 0x1b20\n 18385: ra = 576, jump @7\n      : @638 [@dyn 288] (gas: 12)\n 18391: a1 = s1 + 0x1858\n 18395: u64 [a1 + 768] = 0\n 18399: u64 [a1 + 760] = 0\n 18403: u64 [a1 + 752] = 0\n 18407: u64 [a1 + 744] = 0x12\n 18412: u64 [a1 + 800] = 0\n 18416: u64 [a1 + 792] = 0\n 18420: u64 [a1 + 784] = 0\n 18424: u64 [a1 + 776] = 0\n 18428: a0 = s1 + 0x1b40\n 18432: a1 = s1 + 0x1b60\n 18436: ra = 578, jump @7\n      : @639 [@dyn 289] (gas: 18)\n 18442: a0 = u64 [s1 + 0x70]\n 18445: a1 = u64 [s1 + 0xb8]\n 18449: a0 = a0 & a1\n 18452: a1 = u64 [s1 + 0x88]\n 18456: a1 = a1 & 0xffffffffffffffff\n 18459: a3 = s1 + 0x1858\n 18463: u64 [a3 + 832] = 0\n 18467: u64 [a3 + 824] = 0\n 18471: u64 [a3 + 816] = 0\n 18475: a4 = a3 + 0x300\n 18479: u64 [a4 + 40] = 0x16\n 18483: u64 [a4 + 0x60] = a1\n 18486: u64 [a4 + 0x58] = a0\n 18489: u64 [a3 + 848] = 0\n 18493: u64 [a3 + 840] = 0\n 18497: a0 = s1 + 0x1b80\n 18501: a1 = s1 + 0x1ba0\n 18505: ra = 580, jump @7\n      : @640 [@dyn 290] (gas: 12)\n 18511: a1 = s1 + 0x1858\n 18515: u64 [a1 + 896] = 0\n 18519: u64 [a1 + 888] = 0\n 18523: u64 [a1 + 880] = 0\n 18527: u64 [a1 + 872] = 0x15\n 18532: u64 [a1 + 928] = 0\n 18536: u64 [a1 + 920] = 0\n 18540: u64 [a1 + 912] = 0\n 18544: u64 [a1 + 904] = 0\n 18548: a0 = s1 + 0x1bc0\n 18552: a1 = s1 + 0x1be0\n 18556: ra = 582, jump @7\n      : @641 [@dyn 291] (gas: 12)\n 18562: a1 = s1 + 0x1858\n 18566: u64 [a1 + 960] = 0\n 18570: u64 [a1 + 952] = 0\n 18574: u64 [a1 + 944] = 0\n 18578: u64 [a1 + 936] = 0x14\n 18583: u64 [a1 + 992] = 0\n 18587: u64 [a1 + 984] = 0\n 18591: u64 [a1 + 976] = 0\n 18595: u64 [a1 + 968] = 0\n 18599: a0 = s1 + 0x1c00\n 18603: a1 = s1 + 0x1c20\n 18607: ra = 584, jump @7\n      : @642 [@dyn 292] (gas: 5)\n 18613: a2 = 0\n 18615: a3 = 0\n 18617: t0 = 0\n 18619: a4 = 0\n 18621: fallthrough\n      : @643 (gas: 5)\n 18622: a0 = a2 <u 0x10\n 18625: a0 = 0 if a3 != 0\n 18627: a1 = t0 | a4\n 18630: a0 = 0 if a1 != 0\n 18632: jump @684 if a0 == 0\n      : @644 (gas: 23)\n 18636: a0 = sp + 0xffffffffffffffe0\n 18639: a1 = a0 & 0xffffffffffffffe0\n 18642: u64 [s1 + 0xb8] = a1\n 18646: sp = a1\n 18648: a0 = a2 + 0x2\n 18651: a5 = a0 <u a2\n 18654: u64 [s1 + 0xd0] = a2\n 18658: a2 = a3 + a5\n 18661: u64 [s1 + 0xd8] = a3\n 18665: a3 = u64 [s1 + 0xd8]\n 18669: a3 = a2 <u a3\n 18672: a3 = a5 if a5 == 0\n 18675: a3 = a3 + t0\n 18678: a5 = a3 <u t0\n 18681: a5 = a5 + a4\n 18684: u64 [a1 + 0x8] = a2\n 18687: u64 [a1] = a0\n 18689: u64 [a1 + 0x10] = a3\n 18692: u64 [a1 + 0x18] = a5\n 18695: a0 = s1 + 0x460\n 18699: u64 [s1 + 0xc8] = a4\n 18703: u64 [s1 + 0xc0] = t0\n 18707: ra = 586, jump @6\n      : @645 [@dyn 293] (gas: 13)\n 18713: a0 = u64 [s1 + 0x470]\n 18717: a1 = u64 [s1 + 0x478]\n 18721: a2 = u64 [s1 + 0xb0]\n 18725: a0 = a0 & a2\n 18728: a1 = a1 & 0xffffffffffffffff\n 18731: a2 = s1 + 0x1858\n 18735: u64 [a2 + 1008] = 0\n 18739: u64 [a2 + 1000] = 0\n 18743: u64 [a2 + 0x400] = a1\n 18747: u64 [a2 + 0x3f8] = a0\n 18751: a1 = s1 + 0x1c40\n 18755: a0 = u64 [s1 + 0xb8]\n 18759: ra = 588, jump @7\n      : @646 [@dyn 294] (gas: 14)\n 18765: a4 = u64 [s1 + 0xc8]\n 18769: a3 = u64 [s1 + 0xd8]\n 18773: a2 = u64 [s1 + 0xd0]\n 18777: a2 = a2 + 0x1\n 18780: a0 = a2 <u 0x1\n 18783: a3 = a3 + a0\n 18786: a0 = a2 | a3\n 18789: a0 = a0 <u 0x1\n 18792: a1 = u64 [s1 + 0xc0]\n 18796: a0 = a0 + a1\n 18799: a1 = a0 <u a1\n 18802: a4 = a4 + a1\n 18805: t0 = a0\n 18807: jump @643\n      : @647 (gas: 3)\n 18810: a0 = s1 + 0x620\n 18814: a1 = 0x40\n 18817: ra = 590, jump @2\n      : @648 [@dyn 295] (gas: 6)\n 18823: a1 = s1 + 0x600\n 18827: a4 = u64 [a1 + 0x38]\n 18830: a5 = u64 [a1 + 0x30]\n 18833: a3 = u64 [a1 + 0x28]\n 18836: a0 = u64 [a1 + 0x20]\n 18839: t0 = 592, jump @879\n      : @649 [@dyn 296] (gas: 1)\n 18845: jump @651 if a1 == 0\n      : @650 (gas: 1)\n 18848: jump @505\n      : @651 (gas: 6)\n 18851: u64 [s1 + 1552] = 0\n 18855: u64 [s1 + 1544] = 0\n 18859: u64 [s1 + 1536] = 0\n 18863: t0 = 0x252\n 18867: a2 = 0x8c379a000000000\n 18877: fallthrough\n      : @652 [@dyn 297] (gas: 7)\n 18878: a1 = s1 + 0x600\n 18882: u64 [s1 + 0x618] = a2\n 18886: u64 [s1 + 0xd8] = a0\n 18890: u64 [s1 + 0xd0] = a3\n 18894: u64 [s1 + 0xc8] = a4\n 18898: u64 [s1 + 0xc0] = a5\n 18902: ra = 596, jump @4\n      : @653 [@dyn 298] (gas: 5)\n 18908: a1 = u64 [s1 + 0xd8]\n 18912: a0 = u64 [s1 + 0xc8]\n 18916: a3 = u64 [s1 + 0xc0]\n 18920: a3 = a3 | a0\n 18923: t0 = 598, jump @873\n      : @654 [@dyn 299] (gas: 1)\n 18929: jump @656 if a0 != 0\n      : @655 (gas: 1)\n 18932: jump @505\n      : @656 (gas: 9)\n 18935: i32 a0 = a1 + 0x4\n 18938: u64 [s1 + 1528] = 0\n 18942: u64 [s1 + 1520] = 0\n 18946: u64 [s1 + 1504] = 0x20\n 18951: a1 = s1 + 0x5e0\n 18955: u64 [s1 + 1512] = 0\n 18959: u64 [s1 + 0xc8] = a3\n 18963: u64 [s1 + 0xc0] = a4\n 18967: ra = 600, jump @4\n      : @657 [@dyn 300] (gas: 1)\n 18973: t0 = 602, jump @874\n      : @658 [@dyn 301] (gas: 1)\n 18979: jump @660 if a0 != 0\n      : @659 (gas: 1)\n 18982: jump @505\n      : @660 (gas: 7)\n 18985: i32 a0 = a1 + 0x24\n 18988: u64 [s1 + 1496] = 0\n 18992: u64 [s1 + 1488] = 0\n 18996: u64 [s1 + 1472] = 0x15\n 19001: a1 = s1 + 0x5c0\n 19005: u64 [s1 + 1480] = 0\n 19009: ra = 604, jump @4\n      : @661 [@dyn 302] (gas: 4)\n 19015: a2 = u64 [s1 + 0xd8]\n 19019: a0 = 0xffffffbc\n 19029: a0 = a2 <u a0\n 19032: t0 = 606, jump @878\n      : @662 [@dyn 303] (gas: 1)\n 19038: jump @664 if a0 != 0\n      : @663 (gas: 1)\n 19041: jump @505\n      : @664 (gas: 12)\n 19044: i32 a0 = a2 + 0x44\n 19047: a1 = u64 [0x200f8]\n 19052: a2 = u64 [0x20100]\n 19057: a3 = s1 + 0x500\n 19061: u64 [a3 + 0xb8] = a1\n 19065: u64 [a3 + 0xb0] = a2\n 19069: a1 = 0x61696c6564000000\n 19079: u64 [a3 + 0xa8] = a1\n 19083: a1 = s1 + 0x5a0\n 19087: u64 [s1 + 1440] = 0\n 19091: ra = 0x270\n 19095: jump @4\n      : @665 (gas: 3)\n 19098: a0 = s1 + 0x700\n 19102: a1 = 0x40\n 19105: ra = 608, jump @2\n      : @666 [@dyn 304] (gas: 6)\n 19111: a1 = s1 + 0x700\n 19115: a4 = u64 [a1 + 0x18]\n 19118: a5 = u64 [a1 + 0x10]\n 19121: a3 = u64 [a1 + 0x8]\n 19124: a0 = u64 [a1]\n 19126: t0 = 610, jump @879\n      : @667 [@dyn 305] (gas: 1)\n 19132: jump @669 if a1 == 0\n      : @668 (gas: 1)\n 19135: jump @505\n      : @669 (gas: 6)\n 19138: u64 [s1 + 1776] = 0\n 19142: u64 [s1 + 1768] = 0\n 19146: u64 [s1 + 1760] = 0\n 19150: t0 = 0x264\n 19154: a2 = 0x8c379a000000000\n 19164: fallthrough\n      : @670 [@dyn 306] (gas: 7)\n 19165: a1 = s1 + 0x6e0\n 19169: u64 [s1 + 0x6f8] = a2\n 19173: u64 [s1 + 0xd8] = a0\n 19177: u64 [s1 + 0xd0] = a3\n 19181: u64 [s1 + 0xc8] = a4\n 19185: u64 [s1 + 0xc0] = a5\n 19189: ra = 614, jump @4\n      : @671 [@dyn 307] (gas: 11)\n 19195: a2 = u64 [s1 + 0xd0]\n 19199: a1 = u64 [s1 + 0xd8]\n 19203: a0 = u64 [s1 + 0xc8]\n 19207: a3 = u64 [s1 + 0xc0]\n 19211: a3 = a3 | a0\n 19214: a4 = 0x100000000\n 19224: a0 = 0xfffffffc\n 19234: a0 = a1 <u a0\n 19237: a0 = 0 if a2 != 0\n 19239: a0 = 0 if a3 != 0\n 19241: jump @673 if a0 != 0\n      : @672 (gas: 1)\n 19244: jump @505\n      : @673 (gas: 9)\n 19247: i32 a0 = a1 + 0x4\n 19250: u64 [s1 + 1752] = 0\n 19254: u64 [s1 + 1744] = 0\n 19258: u64 [s1 + 1728] = 0x20\n 19263: a1 = s1 + 0x6c0\n 19267: u64 [s1 + 1736] = 0\n 19271: u64 [s1 + 0xc8] = a3\n 19275: u64 [s1 + 0xc0] = a4\n 19279: ra = 616, jump @4\n      : @674 [@dyn 308] (gas: 5)\n 19285: a2 = u64 [s1 + 0xd8]\n 19289: a0 = u64 [s1 + 0xc0]\n 19293: a0 = a0 + 0xffffffffffffffdc\n 19296: a0 = a2 <u a0\n 19299: t0 = 618, jump @878\n      : @675 [@dyn 309] (gas: 1)\n 19305: jump @677 if a0 != 0\n      : @676 (gas: 1)\n 19308: jump @505\n      : @677 (gas: 7)\n 19311: i32 a0 = a2 + 0x24\n 19314: u64 [s1 + 1720] = 0\n 19318: u64 [s1 + 1712] = 0\n 19322: u64 [s1 + 1696] = 0x13\n 19327: a1 = s1 + 0x6a0\n 19331: u64 [s1 + 1704] = 0\n 19335: ra = 620, jump @4\n      : @678 [@dyn 310] (gas: 4)\n 19341: a0 = 0xffffffbc\n 19351: a1 = u64 [s1 + 0xd8]\n 19355: a0 = a1 <u a0\n 19358: t0 = 622, jump @878\n      : @679 [@dyn 311] (gas: 1)\n 19364: jump @681 if a0 != 0\n      : @680 (gas: 1)\n 19367: jump @505\n      : @681 (gas: 12)\n 19370: a0 = u64 [s1 + 0xd8]\n 19374: i32 a0 = a0 + 0x44\n 19377: a1 = u64 [0x200e8]\n 19382: a2 = u64 [0x200f0]\n 19387: a3 = s1 + 0x600\n 19391: u64 [a3 + 0x98] = a1\n 19395: u64 [a3 + 0x90] = a2\n 19399: a1 = 0x6c65640000000000\n 19409: u64 [a3 + 0x88] = a1\n 19413: a1 = s1 + 0x680\n 19417: u64 [s1 + 1664] = 0\n 19421: ra = 624, jump @4\n      : @682 [@dyn 312] (gas: 3)\n 19427: a1 = 0x64\n 19430: a0 = u64 [s1 + 0xd8]\n 19434: ra = 626, jump @14\n      : @683 [@dyn 313] (gas: 6)\n 19440: i32 a1 = a0 + 0\n 19442: a0 = 0x1\n 19445: a2 = 0x64\n 19448: ecalli 12 // 'seal_return'\n 19450: a1 = s1 + 0x1858\n 19454: jump @685\n      : @684 (gas: 2)\n 19456: a1 = s1 + 0x1858\n 19460: fallthrough\n      : @685 (gas: 7)\n 19461: u64 [a1 + 1056] = 0\n 19465: u64 [a1 + 1048] = 0\n 19469: u64 [a1 + 1040] = 0\n 19473: u64 [a1 + 1032] = 0x13\n 19478: a0 = s1 + 0x440\n 19482: a1 = s1 + 0x1c60\n 19486: ra = 628, jump @6\n      : @686 [@dyn 314] (gas: 16)\n 19492: a0 = u64 [s1 + 0x458]\n 19496: u64 [s1 + 0xc0] = a0\n 19500: a0 = u64 [s1 + 0x450]\n 19504: u64 [s1 + 0xc8] = a0\n 19508: a0 = u64 [s1 + 0x448]\n 19512: u64 [s1 + 0xd0] = a0\n 19516: a0 = u64 [s1 + 0x440]\n 19520: u64 [s1 + 0xd8] = a0\n 19524: a0 = s1 + 0x1858\n 19528: u64 [a0 + 1088] = 0\n 19532: u64 [a0 + 1080] = 0\n 19536: u64 [a0 + 1072] = 0\n 19540: u64 [a0 + 1064] = 0\n 19544: a0 = s1 + 0x420\n 19548: a1 = s1 + 0x1c80\n 19552: ra = 630, jump @6\n      : @687 [@dyn 315] (gas: 11)\n 19558: a0 = u64 [s1 + 0x438]\n 19562: u64 [s1 + 0xb8] = a0\n 19566: a0 = u64 [s1 + 0x430]\n 19570: u64 [s1 + 0xb0] = a0\n 19574: a0 = u64 [s1 + 0x428]\n 19578: u64 [s1 + 0xa8] = a0\n 19582: a0 = u64 [s1 + 0x420]\n 19586: u64 [s1 + 0xa0] = a0\n 19590: a0 = s1 + 0x400\n 19594: a1 = 0x40\n 19597: ra = 632, jump @2\n      : @688 [@dyn 316] (gas: 6)\n 19603: a4 = s1 + 0x400\n 19607: a3 = u64 [a4 + 0x18]\n 19610: a1 = u64 [a4 + 0x10]\n 19613: a2 = u64 [a4 + 0x8]\n 19616: a0 = u64 [a4]\n 19618: t0 = 634, jump @883\n      : @689 [@dyn 317] (gas: 1)\n 19624: jump @691 if a1 == 0\n      : @690 (gas: 1)\n 19627: jump @505\n      : @691 (gas: 11)\n 19630: a1 = u64 [s1 + 0xa0]\n 19634: u64 [s1 + 0x3e0] = a1\n 19638: a1 = u64 [s1 + 0xa8]\n 19642: u64 [s1 + 0x3e8] = a1\n 19646: a1 = u64 [s1 + 0xb0]\n 19650: u64 [s1 + 0x3f0] = a1\n 19654: a1 = s1 + 0x3e0\n 19658: a2 = u64 [s1 + 0xb8]\n 19662: u64 [s1 + 0x3f8] = a2\n 19666: u64 [s1 + 0xb8] = a0\n 19670: ra = 636, jump @4\n      : @692 [@dyn 318] (gas: 22)\n 19676: a0 = u64 [s1 + 0xc0]\n 19680: a4 = s1 + 0x300\n 19684: u64 [a4 + 0xb8] = a0\n 19688: a0 = u64 [s1 + 0xc8]\n 19692: u64 [a4 + 0xb0] = a0\n 19696: a0 = u64 [s1 + 0xd0]\n 19700: u64 [a4 + 0xa8] = a0\n 19704: a0 = u64 [0x20128]\n 19709: a1 = u64 [0x20130]\n 19714: a2 = u64 [0x20138]\n 19719: a3 = u64 [s1 + 0xd8]\n 19723: u64 [a4 + 0xa0] = a3\n 19727: u64 [a4 + 0xd8] = a0\n 19731: u64 [a4 + 0xd0] = a1\n 19735: u64 [a4 + 0xc8] = a2\n 19739: a0 = u64 [0x20140]\n 19744: a1 = 0x20\n 19747: a2 = s1 + 0x3c0\n 19751: a3 = s1 + 0x3a0\n 19755: u64 [a4 + 0xc0] = a0\n 19759: a0 = u64 [s1 + 0xb8]\n 19763: ra = 638, jump @8\n      : @693 [@dyn 319] (gas: 4)\n 19769: a1 = 0x20190\n 19774: i32 a1 = a1 + 0\n 19776: a0 = 0\n 19778: jump @736\n      : @694 (gas: 4)\n 19781: a1 = 0x20190\n 19786: i32 a1 = a1 + 0\n 19788: a0 = 0x1\n 19791: jump @736\n      : @695 (gas: 4)\n 19794: a1 = 0x20190\n 19799: i32 a1 = a1 + 0\n 19801: a0 = 0x1\n 19804: jump @736\n      : @696 (gas: 4)\n 19807: a1 = 0x20190\n 19812: i32 a1 = a1 + 0\n 19814: a0 = 0x1\n 19817: jump @736\n      : @697 (gas: 4)\n 19820: a1 = 0x20190\n 19825: i32 a1 = a1 + 0\n 19827: a0 = 0x1\n 19830: jump @736\n      : @698 (gas: 21)\n 19833: a0 = s1 + 0x2000\n 19837: i32 a0 = a0 + 0x260\n 19841: a1 = 0x4\n 19844: ecalli 4 // 'call_data_load'\n 19846: a4 = s1 + 0x2058\n 19850: a5 = a4 + 0x200\n 19854: a0 = u64 [a5 + 0x8]\n 19857: a1 = u64 [a5 + 0x10]\n 19860: a2 = u64 [a5 + 0x18]\n 19863: a3 = u64 [a5 + 0x20]\n 19866: u64 [a4 + 576] = 0\n 19870: u64 [a4 + 568] = 0\n 19874: u64 [a4 + 560] = 0\n 19878: u64 [a4 + 552] = 0\n 19882: u64 [a5 + 0x60] = a3\n 19885: u64 [a5 + 0x58] = a2\n 19888: u64 [a5 + 0x50] = a1\n 19891: u64 [a5 + 0x48] = a0\n 19894: a0 = s1 + 0x2280\n 19898: a1 = s1 + 0x22a0\n 19902: ra = 640, jump @7\n      : @699 [@dyn 320] (gas: 4)\n 19908: a1 = 0x20190\n 19913: i32 a1 = a1 + 0\n 19915: a0 = 0\n 19917: jump @736\n      : @700 (gas: 4)\n 19920: a1 = 0x20190\n 19925: i32 a1 = a1 + 0\n 19927: a0 = 0x1\n 19930: jump @736\n      : @701 (gas: 4)\n 19933: a1 = 0x20190\n 19938: i32 a1 = a1 + 0\n 19940: a0 = 0x1\n 19943: jump @736\n      : @702 (gas: 4)\n 19946: a1 = 0x20190\n 19951: i32 a1 = a1 + 0\n 19953: a0 = 0x1\n 19956: jump @736\n      : @703 (gas: 4)\n 19959: a1 = 0x20190\n 19964: i32 a1 = a1 + 0\n 19966: a0 = 0x1\n 19969: jump @736\n      : @704 (gas: 4)\n 19972: a1 = 0x20190\n 19977: i32 a1 = a1 + 0\n 19979: a0 = 0x1\n 19982: jump @736\n      : @705 (gas: 4)\n 19985: a1 = 0x20190\n 19990: i32 a1 = a1 + 0\n 19992: a0 = 0x1\n 19995: jump @736\n      : @706 (gas: 12)\n 19998: a0 = s1 + 0x7ff\n 20002: a0 = a0 + 0x59\n 20005: u64 [a0 + 1112] = 0\n 20009: u64 [a0 + 1104] = 0\n 20013: u64 [a0 + 1096] = 0\n 20017: a2 = a0\n 20019: a0 = 0x4e487b7100000000\n 20029: a1 = s1 + 0x7ff\n 20033: a1 = a1 + 0x4a1\n 20037: u64 [a2 + 0x460] = a0\n 20041: a0 = 0\n 20043: ra = 642, jump @4\n      : @707 [@dyn 321] (gas: 11)\n 20049: a1 = s1 + 0x7ff\n 20053: a1 = a1 + 0x59\n 20056: u64 [a1 + 1088] = 0\n 20060: u64 [a1 + 1080] = 0\n 20064: u64 [a1 + 1064] = 0x32\n 20069: a2 = a1\n 20071: a0 = 0x4\n 20074: a1 = s1 + 0x7ff\n 20078: a1 = a1 + 0x481\n 20082: u64 [a2 + 1072] = 0\n 20086: ra = 644, jump @4\n      : @708 [@dyn 322] (gas: 2)\n 20092: a1 = i32 [0x2017c]\n 20097: jump @710 if a1 >u 63\n      : @709 (gas: 3)\n 20101: u32 [0x2017c] = 0x40\n 20107: a1 = 0x20190\n 20112: jump @764\n      : @710 (gas: 2)\n 20115: a1 = 0x20190\n 20120: jump @764\n      : @711 (gas: 4)\n 20123: a1 = 0x20190\n 20128: i32 a1 = a1 + 0\n 20130: a0 = 0x1\n 20133: jump @736\n      : @712 (gas: 4)\n 20136: a1 = 0x20190\n 20141: i32 a1 = a1 + 0\n 20143: a0 = 0x1\n 20146: jump @736\n      : @713 (gas: 4)\n 20149: a1 = 0x20190\n 20154: i32 a1 = a1 + 0\n 20156: a0 = 0x1\n 20159: jump @736\n      : @714 (gas: 4)\n 20162: a1 = 0x20190\n 20167: i32 a1 = a1 + 0\n 20169: a0 = 0x1\n 20172: jump @736\n      : @715 (gas: 4)\n 20175: a1 = 0x20190\n 20180: i32 a1 = a1 + 0\n 20182: a0 = 0x1\n 20185: jump @736\n      : @716 (gas: 4)\n 20188: a1 = 0x20190\n 20193: i32 a1 = a1 + 0\n 20195: a0 = 0x1\n 20198: jump @736\n      : @717 (gas: 4)\n 20201: a1 = 0x20190\n 20206: i32 a1 = a1 + 0\n 20208: a0 = 0x1\n 20211: jump @736\n      : @718 (gas: 4)\n 20214: a1 = 0x20190\n 20219: i32 a1 = a1 + 0\n 20221: a0 = 0x1\n 20224: jump @736\n      : @719 (gas: 9)\n 20227: a1 = s1 + 0x1858\n 20231: u64 [a1 + 1728] = 0\n 20235: u64 [a1 + 1720] = 0\n 20239: u64 [a1 + 1712] = 0\n 20243: u64 [a1 + 1704] = 0x18\n 20248: a0 = s1 + 0x7ff\n 20252: a0 = a0 + 0x5e1\n 20256: a1 = s1 + 0x1f00\n 20260: ra = 646, jump @6\n      : @720 [@dyn 323] (gas: 24)\n 20266: a1 = s1 + 0x7ff\n 20270: a1 = a1 + 0x59\n 20273: a0 = u32 [a1 + 0x59c]\n 20277: a1 = u64 [a1 + 0x5a0]\n 20281: a0 = a0 << 0x20\n 20284: a2 = u64 [s1 + 0xd8]\n 20288: a0 = a0 | a2\n 20291: a2 = u64 [s1 + 0xd0]\n 20295: a1 = a1 | a2\n 20298: a3 = s1 + 0x1858\n 20302: u64 [a3 + 1760] = 0\n 20306: u64 [a3 + 1752] = 0\n 20310: u64 [a3 + 1744] = 0\n 20314: a4 = a3 + 0x600\n 20318: u64 [a4 + 200] = 0x18\n 20323: a2 = u64 [s1 + 0xc0]\n 20327: u64 [a4 + 0xf0] = a2\n 20331: a2 = u64 [s1 + 0xc8]\n 20335: u64 [a4 + 0xe8] = a2\n 20339: u64 [a3 + 0x700] = a1\n 20343: u64 [a4 + 0xf8] = a0\n 20347: a0 = s1 + 0x1f20\n 20351: a1 = s1 + 0x1f40\n 20355: ra = 648, jump @7\n      : @721 [@dyn 324] (gas: 4)\n 20361: a1 = 0x20190\n 20366: i32 a1 = a1 + 0\n 20368: a0 = 0\n 20370: jump @736\n      : @722 (gas: 4)\n 20373: a1 = 0x20190\n 20378: i32 a1 = a1 + 0\n 20380: a0 = 0x1\n 20383: jump @736\n      : @723 (gas: 4)\n 20386: a1 = 0x20190\n 20391: i32 a1 = a1 + 0\n 20393: a0 = 0x1\n 20396: jump @736\n      : @724 (gas: 8)\n 20399: a1 = s1 + 0x2058\n 20403: u64 [a1 + 736] = 0\n 20407: u64 [a1 + 728] = 0\n 20411: u64 [a1 + 720] = 0\n 20415: u64 [a1 + 712] = 0x1\n 20420: a0 = s1 + 0x2320\n 20424: a1 = u64 [s1 + 0xd8]\n 20428: ra = 650, jump @7\n      : @725 [@dyn 325] (gas: 4)\n 20434: a1 = 0x20190\n 20439: i32 a1 = a1 + 0\n 20441: a0 = 0\n 20443: jump @736\n      : @726 (gas: 4)\n 20446: a1 = 0x20190\n 20451: i32 a1 = a1 + 0\n 20453: a0 = 0x1\n 20456: jump @736\n      : @727 (gas: 4)\n 20459: a1 = 0x20190\n 20464: i32 a1 = a1 + 0\n 20466: a0 = 0x1\n 20469: jump @736\n      : @728 (gas: 4)\n 20472: a1 = 0x20190\n 20477: i32 a1 = a1 + 0\n 20479: a0 = 0x1\n 20482: jump @736\n      : @729 (gas: 4)\n 20484: a1 = 0x20190\n 20489: i32 a1 = a1 + 0\n 20491: a0 = 0x1\n 20494: jump @736\n      : @730 (gas: 1)\n 20496: jump @734 if a0 != 120497692\n      : @731 (gas: 9)\n 20503: u64 [a3 + 1920] = 0\n 20507: u64 [a3 + 1912] = 0\n 20511: u64 [a3 + 1904] = 0\n 20515: u64 [a3 + 1896] = 0\n 20519: a0 = s1 + 0x1000\n 20523: i32 a0 = a0 + 0x7c0\n 20527: ecalli 15 // 'value_transferred'\n 20529: a3 = s1 + 0x1058\n 20533: fallthrough\n      : @732 (gas: 10)\n 20534: a5 = a3 + 0x700\n 20538: a0 = u64 [a5 + 0x78]\n 20541: a1 = u64 [a5 + 0x80]\n 20545: a2 = u64 [a5 + 0x70]\n 20548: a4 = a3\n 20550: a3 = u64 [a5 + 0x68]\n 20553: a1 = a1 | a2\n 20556: a0 = a0 | a3\n 20559: a0 = a0 | a1\n 20562: jump @765 if a0 == 0\n      : @733 (gas: 4)\n 20566: a1 = 0x20190\n 20571: i32 a1 = a1 + 0\n 20573: a0 = 0x1\n 20576: jump @736\n      : @734 (gas: 4)\n 20578: a1 = 0x20190\n 20583: i32 a1 = a1 + 0\n 20585: a0 = 0x1\n 20588: jump @736\n      : @735 (gas: 6)\n 20590: i32 a1 = a1 + 0\n 20592: a0 = 0x1\n 20595: a2 = 0\n 20597: ecalli 12 // 'seal_return'\n 20599: a1 = 0x20190\n 20604: jump @735\n      : @736 (gas: 4)\n 20606: a2 = 0\n 20608: ecalli 12 // 'seal_return'\n 20610: a1 = 0x20190\n 20615: jump @735\n      : @737 (gas: 2)\n 20617: a1 = 0x20190\n 20622: jump @735\n      : @738 (gas: 2)\n 20624: a1 = 0x20190\n 20629: jump @735\n      : @739 (gas: 2)\n 20631: a1 = 0x20190\n 20636: jump @735\n      : @740 (gas: 2)\n 20638: a1 = 0x20190\n 20643: jump @735\n      : @741 (gas: 2)\n 20645: a1 = 0x20190\n 20650: jump @735\n      : @742 (gas: 2)\n 20652: a1 = 0x20190\n 20657: jump @735\n      : @743 (gas: 2)\n 20659: a1 = 0x20190\n 20664: jump @735\n      : @744 (gas: 2)\n 20666: a1 = 0x20190\n 20671: jump @735\n      : @745 (gas: 2)\n 20673: a1 = 0x20190\n 20678: jump @735\n      : @746 (gas: 2)\n 20680: a1 = 0x20190\n 20685: jump @735\n      : @747 (gas: 2)\n 20687: a1 = 0x20190\n 20692: jump @735\n      : @748 (gas: 2)\n 20694: a1 = 0x20190\n 20699: jump @735\n      : @749 (gas: 2)\n 20701: a1 = 0x20190\n 20706: jump @735\n      : @750 (gas: 2)\n 20708: a1 = 0x20190\n 20713: jump @735\n      : @751 (gas: 2)\n 20715: a1 = 0x20190\n 20720: jump @735\n      : @752 (gas: 2)\n 20723: a1 = 0x20190\n 20728: jump @735\n      : @753 (gas: 2)\n 20731: a1 = 0x20190\n 20736: jump @735\n      : @754 (gas: 17)\n 20739: a5 = u64 [s1 + 0xd8]\n 20743: a4 = u64 [a5 + 0x10]\n 20746: a1 = u64 [a5 + 0x18]\n 20749: a2 = u64 [a5 + 0x8]\n 20752: t0 = a3\n 20754: a3 = u64 [a5]\n 20756: a1 = a1 | a2\n 20759: a3 = a3 | a4\n 20762: a1 = a1 | a3\n 20765: a1 = a1 >u 0\n 20767: u64 [t0 + 1472] = 0\n 20771: u64 [t0 + 1464] = 0\n 20775: u64 [t0 + 0x5a8] = a1\n 20779: a1 = s1 + 0x1600\n 20783: u64 [t0 + 1456] = 0\n 20787: u64 [s1 + 0xd8] = a0\n 20791: ra = 652, jump @4\n      : @755 [@dyn 326] (gas: 3)\n 20797: a1 = 0x20\n 20800: a0 = u64 [s1 + 0xd8]\n 20804: ra = 654, jump @14\n      : @756 [@dyn 327] (gas: 5)\n 20810: i32 a1 = a0 + 0\n 20812: a2 = 0x20\n 20815: a0 = 0\n 20817: ecalli 12 // 'seal_return'\n 20819: jump @758\n      : @757 (gas: 4)\n 20821: a2 = 0x20\n 20824: a0 = 0\n 20826: ecalli 12 // 'seal_return'\n 20828: fallthrough\n      : @758 (gas: 10)\n 20829: a0 = s1 + 0x1058\n 20833: u64 [a0 + 664] = 0\n 20837: u64 [a0 + 656] = 0\n 20841: u64 [a0 + 648] = 0\n 20845: a2 = a0\n 20847: a0 = 0x4e487b7100000000\n 20857: a1 = s1 + 0x12e0\n 20861: u64 [a2 + 0x2a0] = a0\n 20865: a0 = 0\n 20867: ra = 656, jump @4\n      : @759 [@dyn 328] (gas: 3)\n 20873: t0 = 0x292\n 20877: a1 = s1 + 0x1058\n 20881: fallthrough\n      : @760 [@dyn 329] (gas: 8)\n 20882: u64 [a1 + 640] = 0\n 20886: u64 [a1 + 632] = 0\n 20890: u64 [a1 + 616] = 0x32\n 20895: a2 = a1\n 20897: a0 = 0x4\n 20900: a1 = s1 + 0x12c0\n 20904: u64 [a2 + 624] = 0\n 20908: ra = 660, jump @4\n      : @761 [@dyn 330] (gas: 2)\n 20914: a1 = i32 [0x2017c]\n 20919: jump @763 if a1 >u 63\n      : @762 (gas: 3)\n 20923: u32 [0x2017c] = 0x40\n 20929: a1 = 0x20190\n 20934: jump @764\n      : @763 (gas: 2)\n 20936: a1 = 0x20190\n 20941: fallthrough\n      : @764 (gas: 5)\n 20942: i32 a1 = a1 + 0\n 20944: a0 = 0x1\n 20947: a2 = 0x24\n 20950: ecalli 12 // 'seal_return'\n 20952: fallthrough\n      : @765 (gas: 3)\n 20953: a0 = u64 [s1 + 0xd8]\n 20957: a0 = i32 [a0]\n 20959: jump @783 if a0 >u 3\n      : @766 (gas: 2)\n 20964: a1 = 0x20190\n 20969: jump @735\n      : @767 (gas: 10)\n 20972: a0 = s1 + 0x1058\n 20976: u64 [a0 + 1432] = 0\n 20980: u64 [a0 + 1424] = 0\n 20984: u64 [a0 + 1416] = 0\n 20988: a2 = a0\n 20990: a0 = 0x4e487b7100000000\n 21000: a1 = s1 + 0x15e0\n 21004: u64 [a2 + 0x5a0] = a0\n 21008: a0 = 0\n 21010: ra = 662, jump @4\n      : @768 [@dyn 331] (gas: 3)\n 21016: t0 = 0x298\n 21020: a1 = s1 + 0x1058\n 21024: fallthrough\n      : @769 [@dyn 332] (gas: 8)\n 21025: u64 [a1 + 1408] = 0\n 21029: u64 [a1 + 1400] = 0\n 21033: u64 [a1 + 1384] = 0x11\n 21038: a2 = a1\n 21040: a0 = 0x4\n 21043: a1 = s1 + 0x15c0\n 21047: u64 [a2 + 1392] = 0\n 21051: ra = 666, jump @4\n      : @770 [@dyn 333] (gas: 2)\n 21057: a1 = i32 [0x2017c]\n 21062: jump @772 if a1 >u 63\n      : @771 (gas: 3)\n 21066: u32 [0x2017c] = 0x40\n 21072: a1 = 0x20190\n 21077: jump @764\n      : @772 (gas: 2)\n 21080: a1 = 0x20190\n 21085: jump @764\n      : @773 (gas: 12)\n 21088: a0 = s1 + 0x7ff\n 21092: a0 = a0 + 0x59\n 21095: u64 [a0 + 1912] = 0\n 21099: u64 [a0 + 1904] = 0\n 21103: u64 [a0 + 1896] = 0\n 21107: a2 = a0\n 21109: a0 = 0x4e487b7100000000\n 21119: a1 = s1 + 0x7ff\n 21123: a1 = a1 + 0x7c1\n 21127: u64 [a2 + 0x780] = a0\n 21131: a0 = 0\n 21133: ra = 668, jump @4\n      : @774 [@dyn 334] (gas: 11)\n 21139: a1 = s1 + 0x7ff\n 21143: a1 = a1 + 0x59\n 21146: u64 [a1 + 1888] = 0\n 21150: u64 [a1 + 1880] = 0\n 21154: u64 [a1 + 1864] = 0x11\n 21159: a2 = a1\n 21161: a0 = 0x4\n 21164: a1 = s1 + 0x7ff\n 21168: a1 = a1 + 0x7a1\n 21172: u64 [a2 + 1872] = 0\n 21176: ra = 670, jump @4\n      : @775 [@dyn 335] (gas: 2)\n 21182: a1 = i32 [0x2017c]\n 21187: jump @777 if a1 >u 63\n      : @776 (gas: 3)\n 21191: u32 [0x2017c] = 0x40\n 21197: a1 = 0x20190\n 21202: jump @764\n      : @777 (gas: 2)\n 21205: a1 = 0x20190\n 21210: jump @764\n      : @778 (gas: 8)\n 21213: u64 [s1 + 688] = 0\n 21217: u64 [s1 + 680] = 0\n 21221: u64 [s1 + 672] = 0\n 21225: a0 = 0x4e487b7100000000\n 21235: a1 = s1 + 0x2a0\n 21239: u64 [s1 + 0x2b8] = a0\n 21243: a0 = 0\n 21245: ra = 672, jump @4\n      : @779 [@dyn 336] (gas: 7)\n 21251: u64 [s1 + 664] = 0\n 21255: u64 [s1 + 656] = 0\n 21259: u64 [s1 + 640] = 0x11\n 21264: a0 = 0x4\n 21267: a1 = s1 + 0x280\n 21271: u64 [s1 + 648] = 0\n 21275: ra = 674, jump @4\n      : @780 [@dyn 337] (gas: 2)\n 21281: a1 = i32 [0x2017c]\n 21286: jump @782 if a1 >u 63\n      : @781 (gas: 3)\n 21290: u32 [0x2017c] = 0x40\n 21296: a1 = 0x20190\n 21301: jump @764\n      : @782 (gas: 2)\n 21304: a1 = 0x20190\n 21309: jump @764\n      : @783 (gas: 7)\n 21312: u64 [a4 + 1952] = 0\n 21316: u64 [a4 + 1944] = 0\n 21320: u64 [a4 + 1936] = 0\n 21324: u64 [a4 + 1928] = 0\n 21328: a0 = s1 + 0x100\n 21332: a1 = s1 + 0x17e0\n 21336: ra = 676, jump @6\n      : @784 [@dyn 338] (gas: 12)\n 21342: a4 = s1 + 0x100\n 21346: a2 = u64 [a4]\n 21348: a0 = u64 [a4 + 0x8]\n 21351: a1 = u64 [a4 + 0x10]\n 21354: a3 = u64 [a4 + 0x18]\n 21357: u64 [s1 + 0xf8] = a3\n 21361: u64 [s1 + 0xf0] = a1\n 21365: u64 [s1 + 0xe8] = a0\n 21369: a0 = 0x80\n 21373: a1 = s1 + 0xe0\n 21377: u64 [s1 + 0xe0] = a2\n 21381: ra = 678, jump @4\n      : @785 [@dyn 339] (gas: 2)\n 21387: a1 = i32 [0x2017c]\n 21392: jump @787 if a1 >u 159\n      : @786 (gas: 4)\n 21397: u32 [0x2017c] = 0xa0\n 21404: a0 = 0x20190\n 21409: i32 a1 = a0 + 0x80\n 21413: jump @757\n      : @787 (gas: 3)\n 21416: a0 = 0x20190\n 21421: i32 a1 = a0 + 0x80\n 21425: jump @757\n      : @788 (gas: 8)\n 21428: u64 [s1 + 1936] = 0\n 21432: u64 [s1 + 1928] = 0\n 21436: u64 [s1 + 1920] = 0\n 21440: a0 = 0x4e487b7100000000\n 21450: a1 = s1 + 0x780\n 21454: u64 [s1 + 0x798] = a0\n 21458: a0 = 0\n 21460: ra = 680, jump @4\n      : @789 [@dyn 340] (gas: 7)\n 21466: u64 [s1 + 1912] = 0\n 21470: u64 [s1 + 1904] = 0\n 21474: u64 [s1 + 1888] = 0x11\n 21479: a0 = 0x4\n 21482: a1 = s1 + 0x760\n 21486: u64 [s1 + 1896] = 0\n 21490: ra = 682, jump @4\n      : @790 [@dyn 341] (gas: 2)\n 21496: a1 = i32 [0x2017c]\n 21501: jump @792 if a1 >u 63\n      : @791 (gas: 3)\n 21505: u32 [0x2017c] = 0x40\n 21511: a1 = 0x20190\n 21516: jump @764\n      : @792 (gas: 2)\n 21519: a1 = 0x20190\n 21524: jump @764\n      : @793 (gas: 8)\n 21527: u64 [s1 + 912] = 0\n 21531: u64 [s1 + 904] = 0\n 21535: u64 [s1 + 896] = 0\n 21539: a0 = 0x4e487b7100000000\n 21549: a1 = s1 + 0x380\n 21553: u64 [s1 + 0x398] = a0\n 21557: a0 = 0\n 21559: ra = 684, jump @4\n      : @794 [@dyn 342] (gas: 7)\n 21565: u64 [s1 + 888] = 0\n 21569: u64 [s1 + 880] = 0\n 21573: u64 [s1 + 864] = 0x11\n 21578: a0 = 0x4\n 21581: a1 = s1 + 0x360\n 21585: u64 [s1 + 872] = 0\n 21589: ra = 686, jump @4\n      : @795 [@dyn 343] (gas: 2)\n 21595: a1 = i32 [0x2017c]\n 21600: jump @797 if a1 >u 63\n      : @796 (gas: 3)\n 21604: u32 [0x2017c] = 0x40\n 21610: a1 = 0x20190\n 21615: jump @764\n      : @797 (gas: 2)\n 21618: a1 = 0x20190\n 21623: jump @764\n      : @798 (gas: 46)\n 21626: sp = sp + 0xffffffffffffff70\n 21630: u64 [sp + 0x88] = ra\n 21634: u64 [sp + 0x80] = s0\n 21638: u64 [sp + 0x78] = s1\n 21641: s0 = sp + 0x90\n 21645: sp = sp & 0xfffffffffffffff0\n 21648: t0 = a0\n 21650: a2 = u64 [a1]\n 21652: t2 = u64 [a0 + 0x8]\n 21655: a5 = u64 [a1 + 0x8]\n 21658: t1 = u64 [a0]\n 21660: a3 = a2 + 0x1f\n 21663: ra = a3 <u a2\n 21666: a2 = a5 + ra\n 21669: a3 = a3 & 0xffffffffffffffe0\n 21672: u64 [sp + 0x8] = t1\n 21675: t1 = t1 + a3\n 21678: a4 = t1 <u a3\n 21681: a3 = a2 + t2\n 21684: a3 = a3 + a4\n 21687: s1 = a3 ^ a2\n 21690: a0 = a3 <u a2\n 21693: a0 = a4 if s1 == 0\n 21696: a4 = u64 [t0 + 0x18]\n 21699: a5 = a2 <u a5\n 21702: s1 = u64 [a1 + 0x10]\n 21705: t0 = u64 [t0 + 0x10]\n 21708: a1 = u64 [a1 + 0x18]\n 21711: a5 = ra if ra == 0\n 21714: a5 = a5 + s1\n 21717: s1 = a5 <u s1\n 21720: a2 = a5 + t0\n 21723: a0 = a0 + a2\n 21726: a5 = a2 <u a5\n 21729: a2 = a0 <u a2\n 21732: a1 = a1 + a4\n 21735: a1 = a1 + s1\n 21738: a1 = a1 + a5\n 21741: a5 = a1 + a2\n 21744: a1 = a5 >u 0\n 21746: a2 = a0 >u 0\n 21748: a2 = a1 if a5 != 0\n 21751: a1 = a0 | a5\n 21754: s1 = a3 >u 0\n 21756: s1 = a2 if a1 != 0\n 21759: jump @802 if s1 != 0\n      : @799 (gas: 13)\n 21762: a1 = u64 [sp + 0x8]\n 21765: a1 = t1 <u a1\n 21768: a2 = a3 ^ t2\n 21771: s1 = a3 <u t2\n 21774: s1 = a1 if a2 == 0\n 21777: a1 = a0 <u t0\n 21780: a2 = a5 ^ a4\n 21783: a4 = a5 <u a4\n 21786: a4 = a1 if a2 == 0\n 21789: a1 = a0 ^ t0\n 21792: a1 = a1 | a2\n 21795: a4 = s1 if a1 == 0\n 21798: jump @802 if a4 != 0\n      : @800 (gas: 7)\n 21801: u64 [sp + 0x50] = t1\n 21804: u64 [sp + 0x58] = a3\n 21807: u64 [sp + 0x60] = a0\n 21810: a0 = 0x40\n 21813: a1 = sp + 0x50\n 21816: u64 [sp + 0x68] = a5\n 21819: ra = 688, jump @4\n      : @801 [@dyn 344] (gas: 6)\n 21825: sp = s0 + 0xffffffffffffff70\n 21829: ra = u64 [sp + 0x88]\n 21833: s0 = u64 [sp + 0x80]\n 21837: s1 = u64 [sp + 0x78]\n 21840: sp = sp + 0x90\n 21844: ret\n      : @802 (gas: 8)\n 21846: u64 [sp + 64] = 0\n 21849: u64 [sp + 56] = 0\n 21852: u64 [sp + 48] = 0\n 21855: a0 = 0x4e487b7100000000\n 21865: a1 = sp + 0x30\n 21868: u64 [sp + 0x48] = a0\n 21871: a0 = 0\n 21873: ra = 690, jump @4\n      : @803 [@dyn 345] (gas: 7)\n 21879: u64 [sp + 40] = 0\n 21882: u64 [sp + 32] = 0\n 21885: u64 [sp + 16] = 0x41\n 21889: a0 = 0x4\n 21892: a1 = sp + 0x10\n 21895: u64 [sp + 24] = 0\n 21898: ra = 692, jump @4\n      : @804 [@dyn 346] (gas: 2)\n 21904: a1 = i32 [0x2017c]\n 21909: jump @806 if a1 >u 63\n      : @805 (gas: 2)\n 21913: u32 [0x2017c] = 0x40\n 21919: fallthrough\n      : @806 (gas: 7)\n 21920: a1 = 0x20190\n 21925: i32 a1 = a1 + 0\n 21927: a0 = 0x1\n 21930: a2 = 0x24\n 21933: ra = 0x2b6\n 21937: ecalli 12 // 'seal_return'\n 21939: fallthrough\n      : @807 [@dyn 347] (gas: 9)\n 21940: sp = sp + 0xffffffffffffff20\n 21944: u64 [sp + 0xd8] = ra\n 21948: u64 [sp + 0xd0] = s0\n 21952: u64 [sp + 0xc8] = s1\n 21956: s0 = sp + 0xe0\n 21960: sp = sp & 0xffffffffffffffe0\n 21963: s1 = a0\n 21965: ecalli 11 // 'return_data_size'\n 21967: fallthrough\n      : @808 (gas: 1)\n 21968: jump @820 if a0 == 0\n      : @809 (gas: 6)\n 21972: u64 [sp + 0x18] = s1\n 21975: ecalli 11 // 'return_data_size'\n 21977: s1 = a0\n 21979: a0 = sp + 0xa0\n 21983: a1 = 0x40\n 21986: ra = 696, jump @2\n      : @810 [@dyn 348] (gas: 28)\n 21992: a2 = u64 [sp + 0xb8]\n 21996: a5 = u64 [sp + 0xb0]\n 22000: u64 [sp + 0x38] = a5\n 22003: t0 = u64 [sp + 0xa8]\n 22007: u64 [sp + 0x30] = t0\n 22010: t1 = u64 [sp + 0xa0]\n 22014: u64 [sp + 0x28] = t1\n 22017: a0 = s1 + 0x1f\n 22020: u64 [sp + 0x20] = s1\n 22023: a1 = a0 <u s1\n 22026: s1 = a2\n 22028: a0 = a0 & 0xffffffffffffffe0\n 22031: a2 = a0 + 0x20\n 22034: a0 = a2 <u a0\n 22037: a3 = a1 + a0\n 22040: a4 = a3 <u a1\n 22043: a4 = a0 if a0 == 0\n 22046: u64 [sp + 120] = 0\n 22049: u64 [sp + 0x60] = a2\n 22052: u64 [sp + 0x98] = s1\n 22056: u64 [sp + 0x90] = a5\n 22060: u64 [sp + 0x88] = t0\n 22064: u64 [sp + 0x80] = t1\n 22068: u64 [sp + 0x68] = a3\n 22071: a0 = sp + 0x80\n 22075: a1 = sp + 0x60\n 22078: u64 [sp + 0x70] = a4\n 22081: ra = 698, jump @798\n      : @811 [@dyn 349] (gas: 11)\n 22087: a0 = u64 [sp + 0x28]\n 22090: a2 = u64 [sp + 0x30]\n 22093: a2 = a2 | s1\n 22096: a3 = u64 [sp + 0x38]\n 22099: a1 = a0 | a3\n 22102: a1 = a1 | a2\n 22105: a1 = a1 >> 0x20\n 22108: a2 = a2 | a3\n 22111: a2 = a2 << 0x20\n 22114: a1 = a1 | a2\n 22117: jump @819 if a1 != 0\n      : @812 (gas: 7)\n 22121: u64 [sp + 88] = 0\n 22124: u64 [sp + 80] = 0\n 22127: u64 [sp + 72] = 0\n 22130: a1 = sp + 0x40\n 22133: a2 = u64 [sp + 0x20]\n 22136: u64 [sp + 0x40] = a2\n 22139: ra = 700, jump @4\n      : @813 [@dyn 350] (gas: 2)\n 22145: ecalli 11 // 'return_data_size'\n 22147: fallthrough\n      : @814 (gas: 10)\n 22148: a3 = u64 [sp + 0x28]\n 22151: u64 [sp + 0x20] = s1\n 22154: a1 = u64 [sp + 0x38]\n 22157: a1 = a1 | s1\n 22160: a2 = 0xffffffe0\n 22170: a2 = a3 <u a2\n 22173: a4 = u64 [sp + 0x30]\n 22176: a2 = 0 if a4 != 0\n 22178: a2 = 0 if a1 != 0\n 22180: jump @819 if a2 == 0\n      : @815 (gas: 3)\n 22183: s1 = a0\n 22185: a0 = a0 >> 0x20\n 22188: jump @819 if a0 != 0\n      : @816 (gas: 5)\n 22191: i32 a0 = a3 + 0x20\n 22194: i32 a1 = s1 + 0\n 22196: u64 [sp + 0x10] = a1\n 22199: a1 = s1\n 22201: ra = 702, jump @14\n      : @817 [@dyn 351] (gas: 6)\n 22207: u32 [sp + 0xc0] = s1\n 22211: i32 a0 = a0 + 0\n 22213: i32 a1 = sp + 0xc0\n 22217: a2 = 0\n 22219: ecalli 10 // 'return_data_copy'\n 22221: fallthrough\n      : @818 (gas: 8)\n 22222: a4 = u64 [sp + 0x28]\n 22225: a0 = i32 [sp + 0xc0]\n 22229: s1 = u64 [sp + 0x18]\n 22232: a1 = u64 [sp + 0x20]\n 22235: a2 = u64 [sp + 0x38]\n 22238: a3 = u64 [sp + 0x30]\n 22241: a5 = u64 [sp + 0x10]\n 22244: jump @821 if a0 >=u a5\n      : @819 (gas: 1)\n 22247: trap\n      : @820 (gas: 5)\n 22248: a3 = 0\n 22250: a2 = 0\n 22252: a1 = 0\n 22254: a4 = 0x60\n 22257: fallthrough\n      : @821 (gas: 5)\n 22258: u64 [s1] = a4\n 22260: u64 [s1 + 0x8] = a3\n 22263: u64 [s1 + 0x10] = a2\n 22266: u64 [s1 + 0x18] = a1\n 22269: t0 = 704, jump @897\n      : @822 [@dyn 352] (gas: 1)\n 22275: ret\n      : @823 [@dyn 353] (gas: 1)\n 22277: jump @826 if a0 == 0\n      : @824 (gas: 1)\n 22280: t0 = 708, jump @897\n      : @825 [@dyn 354] (gas: 1)\n 22286: ret\n      : @826 (gas: 3)\n 22288: a0 = sp + 0xa0\n 22292: a1 = 0x40\n 22295: ra = 710, jump @2\n      : @827 [@dyn 355] (gas: 1)\n 22301: t0 = 712, jump @885\n      : @828 [@dyn 356] (gas: 1)\n 22307: jump @839 if a0 != 0\n      : @829 (gas: 1)\n 22310: t0 = 714, jump @892\n      : @830 [@dyn 357] (gas: 1)\n 22316: ra = 716, jump @4\n      : @831 [@dyn 358] (gas: 1)\n 22322: t0 = 718, jump @884\n      : @832 [@dyn 359] (gas: 1)\n 22328: jump @839 if a0 == 0\n      : @833 (gas: 8)\n 22331: a0 = u64 [sp + 0x18]\n 22334: i32 a0 = a0 + 0x4\n 22337: u64 [sp + 120] = 0\n 22340: u64 [sp + 112] = 0\n 22343: u64 [sp + 96] = 0x20\n 22347: a1 = sp + 0x60\n 22350: u64 [sp + 104] = 0\n 22353: ra = 720, jump @4\n      : @834 [@dyn 360] (gas: 1)\n 22359: t0 = 722, jump @891\n      : @835 [@dyn 361] (gas: 1)\n 22365: jump @839 if a0 == 0\n      : @836 (gas: 8)\n 22368: s1 = u64 [sp + 0x18]\n 22371: i32 a0 = s1 + 0x24\n 22374: u64 [sp + 88] = 0\n 22377: u64 [sp + 80] = 0\n 22380: u64 [sp + 64] = 0x12\n 22384: a1 = sp + 0x40\n 22387: u64 [sp + 72] = 0\n 22390: ra = 724, jump @4\n      : @837 [@dyn 362] (gas: 1)\n 22396: t0 = 726, jump @888\n      : @838 [@dyn 363] (gas: 1)\n 22402: jump @840 if a0 != 0\n      : @839 (gas: 1)\n 22405: trap\n      : @840 (gas: 11)\n 22406: s1 = u64 [sp + 0x18]\n 22409: i32 a0 = s1 + 0x44\n 22412: a1 = u64 [0x20160]\n 22417: a2 = u64 [0x20168]\n 22422: u64 [sp + 0x38] = a1\n 22425: u64 [sp + 0x30] = a2\n 22428: a1 = 0x6578000000000000\n 22438: u64 [sp + 0x28] = a1\n 22441: a1 = sp + 0x20\n 22444: u64 [sp + 32] = 0\n 22447: ra = 728, jump @4\n      : @841 [@dyn 364] (gas: 3)\n 22453: a1 = 0x64\n 22456: a0 = s1\n 22458: ra = 730, jump @14\n      : @842 [@dyn 365] (gas: 7)\n 22464: i32 a1 = a0 + 0\n 22466: a0 = 0x1\n 22469: a2 = 0x64\n 22472: ra = 0x2dc\n 22476: ecalli 12 // 'seal_return'\n 22478: t0 = 0x2de\n 22482: jump @886\n      : @843 [@dyn 366] (gas: 1)\n 22485: t0 = 734, jump @886\n      : @844 [@dyn 367] (gas: 1)\n 22491: jump @847 if a0 == 0\n      : @845 (gas: 1)\n 22494: t0 = 736, jump @897\n      : @846 [@dyn 368] (gas: 1)\n 22500: ret\n      : @847 (gas: 3)\n 22502: a0 = sp + 0xa0\n 22506: a1 = 0x40\n 22509: ra = 738, jump @2\n      : @848 [@dyn 369] (gas: 1)\n 22515: t0 = 740, jump @885\n      : @849 [@dyn 370] (gas: 1)\n 22521: jump @860 if a0 != 0\n      : @850 (gas: 1)\n 22524: t0 = 742, jump @892\n      : @851 [@dyn 371] (gas: 1)\n 22530: ra = 744, jump @4\n      : @852 [@dyn 372] (gas: 1)\n 22536: t0 = 746, jump @884\n      : @853 [@dyn 373] (gas: 1)\n 22542: jump @860 if a0 == 0\n      : @854 (gas: 8)\n 22545: a0 = u64 [sp + 0x18]\n 22548: i32 a0 = a0 + 0x4\n 22551: u64 [sp + 120] = 0\n 22554: u64 [sp + 112] = 0\n 22557: u64 [sp + 96] = 0x20\n 22561: a1 = sp + 0x60\n 22564: u64 [sp + 104] = 0\n 22567: ra = 748, jump @4\n      : @855 [@dyn 374] (gas: 1)\n 22573: t0 = 750, jump @891\n      : @856 [@dyn 375] (gas: 1)\n 22579: jump @860 if a0 == 0\n      : @857 (gas: 8)\n 22582: s1 = u64 [sp + 0x18]\n 22585: i32 a0 = s1 + 0x24\n 22588: u64 [sp + 88] = 0\n 22591: u64 [sp + 80] = 0\n 22594: u64 [sp + 64] = 0x9\n 22598: a1 = sp + 0x40\n 22601: u64 [sp + 72] = 0\n 22604: ra = 752, jump @4\n      : @858 [@dyn 376] (gas: 1)\n 22610: t0 = 754, jump @888\n      : @859 [@dyn 377] (gas: 1)\n 22616: jump @861 if a0 != 0\n      : @860 (gas: 1)\n 22619: trap\n      : @861 (gas: 10)\n 22620: s1 = u64 [sp + 0x18]\n 22623: i32 a0 = s1 + 0x44\n 22626: a1 = u64 [0x20170]\n 22631: u64 [sp + 40] = 0\n 22634: u64 [sp + 0x38] = a1\n 22637: a1 = 0x7200000000000000\n 22647: u64 [sp + 0x30] = a1\n 22650: a1 = sp + 0x20\n 22653: u64 [sp + 32] = 0\n 22656: ra = 756, jump @4\n      : @862 [@dyn 378] (gas: 3)\n 22662: a1 = 0x64\n 22665: a0 = s1\n 22667: ra = 758, jump @14\n      : @863 [@dyn 379] (gas: 6)\n 22673: i32 a1 = a0 + 0\n 22675: a0 = 0x1\n 22678: a2 = 0x64\n 22681: ra = 0x2f8\n 22685: ecalli 12 // 'seal_return'\n 22687: fallthrough\n      : @864 [@dyn 380] (gas: 16)\n 22688: a2 = u64 [a1]\n 22690: t0 = u64 [a1 + 0x18]\n 22693: a3 = u64 [a1 + 0x8]\n 22696: a5 = u64 [a1 + 0x10]\n 22699: a4 = a2 + 0x1\n 22702: a2 = a4 <u 0x1\n 22705: a2 = a2 + a3\n 22708: a3 = a4 | a2\n 22711: a3 = a3 <u 0x1\n 22714: a3 = a3 + a5\n 22717: a5 = a3 <u a5\n 22720: a5 = a5 + t0\n 22723: t0 = a2 | a5\n 22726: a1 = a4 | a3\n 22729: a1 = a1 | t0\n 22732: jump @866 if a1 == 0\n      : @865 (gas: 5)\n 22735: u64 [a0] = a4\n 22737: u64 [a0 + 0x8] = a2\n 22740: u64 [a0 + 0x10] = a3\n 22743: u64 [a0 + 0x18] = a5\n 22746: ret\n      : @866 (gas: 13)\n 22748: sp = sp + 0xffffffffffffffb0\n 22751: u64 [sp + 0x48] = ra\n 22754: u64 [sp + 0x40] = s0\n 22757: s0 = sp + 0x50\n 22760: sp = sp & 0xfffffffffffffff0\n 22763: u64 [sp + 48] = 0\n 22766: u64 [sp + 40] = 0\n 22769: u64 [sp + 32] = 0\n 22772: a0 = 0x4e487b7100000000\n 22782: a1 = sp + 0x20\n 22785: u64 [sp + 0x38] = a0\n 22788: a0 = 0\n 22790: ra = 762, jump @4\n      : @867 [@dyn 381] (gas: 7)\n 22796: u64 [sp + 24] = 0\n 22799: u64 [sp + 16] = 0\n 22802: u64 [sp + 0] = 0x11\n 22805: a0 = 0x4\n 22808: a1 = sp\n 22810: u64 [sp + 8] = 0\n 22813: ra = 764, jump @4\n      : @868 [@dyn 382] (gas: 2)\n 22819: a1 = i32 [0x2017c]\n 22824: jump @870 if a1 >u 63\n      : @869 (gas: 2)\n 22828: u32 [0x2017c] = 0x40\n 22834: fallthrough\n      : @870 (gas: 8)\n 22835: a1 = 0x20190\n 22840: i32 a1 = a1 + 0\n 22842: a0 = 0x1\n 22845: a2 = 0x24\n 22848: ecalli 12 // 'seal_return'\n 22850: a0 = 0\n 22852: ra = 0x2fe\n 22856: jump @20\n      : @871 [export #0: 'call'] (gas: 2)\n 22859: a0 = 0\n 22861: ra = 766, jump @20\n      : @872 [@dyn 383] [export #1: 'deploy'] (gas: 2)\n 22867: a0 = 0x1\n 22870: ra = 768, jump @20\n      : @873 [@dyn 384] (gas: 7)\n 22876: a4 = 0x100000000\n 22886: a0 = 0xfffffffc\n 22896: a0 = a1 <u a0\n 22899: a2 = u64 [s1 + 0xd0]\n 22903: a0 = 0 if a2 != 0\n 22905: a0 = 0 if a3 != 0\n 22907: jump [t0]\n      : @874 (gas: 9)\n 22909: a3 = u64 [s1 + 0xc8]\n 22913: a2 = u64 [s1 + 0xd0]\n 22917: a1 = u64 [s1 + 0xd8]\n 22921: a0 = u64 [s1 + 0xc0]\n 22925: a0 = a0 + 0xffffffffffffffdc\n 22928: a0 = a1 <u a0\n 22931: a0 = 0 if a2 != 0\n 22933: a0 = 0 if a3 != 0\n 22935: jump [t0]\n      : @875 (gas: 8)\n 22937: a3 = u64 [s1 + 0xd8]\n 22941: a0 = 0xffffffbc\n 22951: a0 = a3 <u a0\n 22954: a1 = u64 [s1 + 0xd0]\n 22958: a0 = 0 if a1 != 0\n 22960: a1 = u64 [s1 + 0xc8]\n 22964: a0 = 0 if a1 != 0\n 22966: jump [t0]\n      : @876 (gas: 8)\n 22968: a4 = a4 | a2\n 22971: a2 = a0 | a1\n 22974: a2 = a2 | a4\n 22977: a2 = a2 >> 0x20\n 22980: a1 = a1 | a4\n 22983: a1 = a1 << 0x20\n 22986: a1 = a1 | a2\n 22989: jump [t0]\n      : @877 (gas: 14)\n 22991: a0 = u64 [a2 + 0x8]\n 22994: a1 = u64 [a2]\n 22996: a2 = i32 [a2 + 0x10]\n 22999: a0 = reverse a0\n 23001: a3 = a0 >> 0x20\n 23004: a1 = reverse a1\n 23006: a4 = a1 << 0x20\n 23009: a3 = a3 | a4\n 23012: a0 = a0 << 0x20\n 23015: a2 = reverse a2\n 23017: a2 = a2 >> 0x20\n 23020: a0 = a0 | a2\n 23023: a1 = a1 >> 0x20\n 23026: jump [t0]\n      : @878 (gas: 5)\n 23028: a1 = u64 [s1 + 0xd0]\n 23032: a0 = 0 if a1 != 0\n 23034: a1 = u64 [s1 + 0xc8]\n 23038: a0 = 0 if a1 != 0\n 23040: jump [t0]\n      : @879 (gas: 8)\n 23042: a2 = a3 | a4\n 23045: a1 = a0 | a5\n 23048: a1 = a1 | a2\n 23051: a1 = a1 >> 0x20\n 23054: a2 = a2 | a5\n 23057: a2 = a2 << 0x20\n 23060: a1 = a1 | a2\n 23063: jump [t0]\n      : @880 (gas: 8)\n 23065: a0 = a0 | a2\n 23068: a2 = a4 | a1\n 23071: a2 = a2 | a0\n 23074: a2 = a2 >> 0x20\n 23077: a0 = a0 | a1\n 23080: a0 = a0 << 0x20\n 23083: a0 = a0 | a2\n 23086: jump [t0]\n      : @881 (gas: 11)\n 23088: a1 = u64 [s1 + 0x78]\n 23091: a0 = u64 [s1 + 0x68]\n 23094: a3 = u64 [s1 + 0x60]\n 23097: a3 = a3 | a0\n 23100: a4 = 0x100000000\n 23110: a0 = 0xfffffffc\n 23120: a0 = a1 <u a0\n 23123: a2 = u64 [s1 + 0x70]\n 23126: a0 = 0 if a2 != 0\n 23128: a0 = 0 if a3 != 0\n 23130: jump [t0]\n      : @882 (gas: 4)\n 23132: i32 a0 = a1 + 0x4\n 23135: a1 = 0x1058\n 23139: a2 = s1 + a1\n 23142: jump [t0]\n      : @883 (gas: 8)\n 23144: a3 = a3 | a2\n 23147: a2 = a0 | a1\n 23150: a2 = a2 | a3\n 23153: a2 = a2 >> 0x20\n 23156: a1 = a1 | a3\n 23159: a1 = a1 << 0x20\n 23162: a1 = a1 | a2\n 23165: jump [t0]\n      : @884 (gas: 11)\n 23167: a2 = u64 [sp + 0x8]\n 23170: a2 = a2 | s1\n 23173: s1 = 0x100000000\n 23183: a0 = 0xfffffffc\n 23193: a1 = u64 [sp + 0x18]\n 23196: a0 = a1 <u a0\n 23199: a1 = u64 [sp + 0x10]\n 23202: a0 = 0 if a1 != 0\n 23204: u64 [sp + 0x8] = a2\n 23207: a0 = 0 if a2 != 0\n 23209: jump [t0]\n      : @885 (gas: 15)\n 23211: a2 = u64 [sp + 0xb8]\n 23215: s1 = u64 [sp + 0xb0]\n 23219: a0 = u64 [sp + 0xa8]\n 23223: a1 = u64 [sp + 0xa0]\n 23227: u64 [sp + 0x10] = a0\n 23230: u64 [sp + 0x8] = a2\n 23233: a0 = a0 | a2\n 23236: u64 [sp + 0x18] = a1\n 23239: a1 = a1 | s1\n 23242: a1 = a1 | a0\n 23245: a1 = a1 >> 0x20\n 23248: a0 = a0 | s1\n 23251: a0 = a0 << 0x20\n 23254: a0 = a0 | a1\n 23257: jump [t0]\n      : @886 (gas: 14)\n 23259: sp = sp + 0xffffffffffffff20\n 23263: u64 [sp + 0xd8] = ra\n 23267: u64 [sp + 0xd0] = s0\n 23271: u64 [sp + 0xc8] = s1\n 23275: s0 = sp + 0xe0\n 23279: sp = sp & 0xfffffffffffffff0\n 23282: a1 = u64 [a0 + 0x10]\n 23285: a2 = u64 [a0 + 0x18]\n 23288: a3 = u64 [a0 + 0x8]\n 23291: a0 = u64 [a0]\n 23293: a2 = a2 | a3\n 23296: a0 = a0 | a1\n 23299: a0 = a0 | a2\n 23302: jump [t0]\n      : @887 (gas: 8)\n 23304: a2 = u64 [s1 + 0x78]\n 23307: a0 = 0xffffffbc\n 23317: a0 = a2 <u a0\n 23320: a1 = u64 [s1 + 0x70]\n 23323: a0 = 0 if a1 != 0\n 23325: a1 = u64 [s1 + 0x68]\n 23328: a0 = 0 if a1 != 0\n 23330: jump [t0]\n      : @888 (gas: 7)\n 23332: a0 = 0xffffffbc\n 23342: a0 = s1 <u a0\n 23345: a1 = u64 [sp + 0x10]\n 23348: a0 = 0 if a1 != 0\n 23350: a1 = u64 [sp + 0x8]\n 23353: a0 = 0 if a1 != 0\n 23355: jump [t0]\n      : @889 (gas: 9)\n 23357: a3 = u64 [s1 + 0x68]\n 23360: a2 = u64 [s1 + 0x70]\n 23363: a1 = u64 [s1 + 0x78]\n 23366: a0 = u64 [s1 + 0x60]\n 23369: a0 = a0 + 0xffffffffffffffdc\n 23372: a0 = a1 <u a0\n 23375: a0 = 0 if a2 != 0\n 23377: a0 = 0 if a3 != 0\n 23379: jump [t0]\n      : @890 (gas: 9)\n 23381: a4 = u64 [s1 + 0xc8]\n 23385: a3 = u64 [s1 + 0xd0]\n 23389: a1 = u64 [s1 + 0xd8]\n 23393: a0 = u64 [s1 + 0xc0]\n 23397: a0 = a0 + 0xffffffffffffffdc\n 23400: a0 = a1 <u a0\n 23403: a0 = 0 if a3 != 0\n 23405: a0 = 0 if a4 != 0\n 23407: jump [t0]\n      : @891 (gas: 8)\n 23409: a0 = s1 + 0xffffffffffffffdc\n 23412: a1 = u64 [sp + 0x18]\n 23415: a0 = a1 <u a0\n 23418: a1 = u64 [sp + 0x10]\n 23421: a0 = 0 if a1 != 0\n 23423: a1 = u64 [sp + 0x8]\n 23426: a0 = 0 if a1 != 0\n 23428: jump [t0]\n      : @892 (gas: 8)\n 23430: u64 [sp + 144] = 0\n 23434: u64 [sp + 136] = 0\n 23438: u64 [sp + 128] = 0\n 23442: a0 = 0x8c379a000000000\n 23452: a1 = sp + 0x80\n 23456: u64 [sp + 0x98] = a0\n 23460: a0 = u64 [sp + 0x18]\n 23463: jump [t0]\n      : @893 (gas: 9)\n 23465: a0 = u64 [a2 + 0x8]\n 23468: a1 = i32 [a2 + 0x10]\n 23471: a2 = u64 [a2]\n 23473: a0 = reverse a0\n 23475: a3 = a0 << 0x20\n 23478: a1 = reverse a1\n 23480: a1 = a1 >> 0x20\n 23483: a1 = a1 | a3\n 23486: jump [t0]\n      : @894 (gas: 8)\n 23488: a0 = u64 [a4 + 0x58]\n 23491: a1 = u64 [a4 + 0x60]\n 23494: a2 = u64 [a4 + 0x50]\n 23497: a3 = u64 [a4 + 0x48]\n 23500: a1 = a1 | a2\n 23503: a0 = a0 | a3\n 23506: a0 = a0 | a1\n 23509: jump [t0]\n      : @895 (gas: 4)\n 23511: a0 = 0x1858\n 23515: a4 = s1 + a0\n 23518: a5 = a4 + 0x700\n 23522: jump [t0]\n      : @896 (gas: 4)\n 23524: i32 a0 = a1 + 0x24\n 23527: a1 = 0x1058\n 23531: a3 = s1 + a1\n 23534: jump [t0]\n      : @897 (gas: 6)\n 23536: sp = s0 + 0xffffffffffffff20\n 23540: ra = u64 [sp + 0xd8]\n 23544: s0 = u64 [sp + 0xd0]\n 23548: s1 = u64 [sp + 0xc8]\n 23552: sp = sp + 0xe0\n 23556: jump [t0]\n      : @898 (gas: 8)\n 23558: a0 = u64 [a5 + 0xb8]\n 23562: a1 = u64 [a5 + 0xc0]\n 23566: a2 = u64 [a5 + 0xb0]\n 23570: a3 = u64 [a5 + 0xa8]\n 23574: a1 = a1 | a2\n 23577: a0 = a0 | a3\n 23580: a0 = a0 | a1\n 23583: jump [t0]\n      : @899 (gas: 8)\n 23585: a0 = u64 [a5 + 0x18]\n 23588: a1 = u64 [a5 + 0x20]\n 23591: a2 = u64 [a5 + 0x10]\n 23594: a3 = u64 [a5 + 0x8]\n 23597: a1 = a1 | a2\n 23600: a0 = a0 | a3\n 23603: a0 = a0 | a1\n 23606: jump [t0]\n      : @900 (gas: 2)\n 23608: a3 = a2 & 0x40\n 23611: jump @904 if a3 != 0\n      : @901 (gas: 1)\n 23614: jump @903 if a2 == 0\n      : @902 (gas: 6)\n 23617: i32 a3 = 0x40 - a2\n 23620: a3 = a1 << a3\n 23623: a1 = a1 >> a2\n 23626: a0 = a0 >> a2\n 23629: a0 = a0 | a3\n 23632: ret\n      : @903 (gas: 1)\n 23634: ret\n      : @904 (gas: 4)\n 23636: a0 = a2 + 0xffffffffffffffc0\n 23639: a0 = a1 >> a0\n 23642: a1 = 0\n 23644: ret\n      : @905 (gas: 2)\n 23646: a3 = a2 & 0x40\n 23649: jump @909 if a3 != 0\n      : @906 (gas: 1)\n 23652: jump @908 if a2 == 0\n      : @907 (gas: 6)\n 23655: i32 a3 = 0x40 - a2\n 23658: a3 = a0 >> a3\n 23661: a0 = a0 << a2\n 23664: a1 = a1 << a2\n 23667: a1 = a1 | a3\n 23670: ret\n      : @908 (gas: 1)\n 23672: ret\n      : @909 (gas: 4)\n 23674: a1 = a2 + 0xffffffffffffffc0\n 23677: a1 = a0 << a1\n 23680: a0 = 0\n 23682: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"GRID_SIZE()":"7fc4eda8","canDetermineWinner()":"c336b9ca","currentGameId()":"536a3ddc","determineWinner()":"33b16d93","entryFee()":"072ea61c","finalSelectionBlock()":"95f7e7dd","gameFee()":"ea777eec","getGrid()":"134000c0","getTileOwner(uint256)":"71be7faf","grid(uint256)":"51d2cc8f","isGameComplete()":"789c20f9","owner()":"8da5cb5b","prizePool()":"719ce73e","selectTile(uint256)":"9793ed08","teamWallet()":"59927044","tilesSelected()":"5fb9c98c","updateEntryFee(uint256)":"aa182626","updateGameFee(uint256)":"b70a6dec","updateTeamWallet(address)":"7cb332bb","winner()":"dfbf53ae","winnerDetermined()":"7f1ad6f1"}},"irOptimized":"/// @use-src 0:\"contracts/PvPGrid.sol\"\nobject \"PvPGrid_480\" {\n    code {\n        {\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PvPGrid_480\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            let value := mload(_1)\n            let value_1 := mload(add(_1, 32))\n            let value_2 := mload(add(_1, 64))\n            let _2 := and(value_2, sub(shl(160, 1), 1))\n            if iszero(eq(value_2, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            sstore(/** @src 0:1136:1154  \"owner = msg.sender\" */ 0x17, /** @src 0:58:5060  \"contract PvPGrid {...\" */ or(and(sload(/** @src 0:1136:1154  \"owner = msg.sender\" */ 0x17), /** @src 0:58:5060  \"contract PvPGrid {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:1144:1154  \"msg.sender\" */ caller()))\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            sstore(/** @src 0:1164:1188  \"teamWallet = _teamWallet\" */ 0x18, /** @src 0:58:5060  \"contract PvPGrid {...\" */ or(and(sload(/** @src 0:1164:1188  \"teamWallet = _teamWallet\" */ 0x18), /** @src 0:58:5060  \"contract PvPGrid {...\" */ not(sub(shl(160, 1), 1))), _2))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ value)\n            sstore(1, value_1)\n            if /** @src 0:1264:1280  \"_gameFee <= 2000\" */ gt(value_1, /** @src 0:1276:1280  \"2000\" */ 0x07d0)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 12)\n                mstore(add(memPtr, 68), \"Fee too high\")\n                revert(memPtr, 100)\n            }\n            if /** @src 0:1326:1351  \"_teamWallet != address(0)\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ _2)\n            {\n                let memPtr_1 := mload(64)\n                mstore(memPtr_1, shl(229, 4594637))\n                mstore(add(memPtr_1, 4), 32)\n                mstore(add(memPtr_1, 36), 19)\n                mstore(add(memPtr_1, 68), \"Invalid team wallet\")\n                revert(memPtr_1, 100)\n            }\n            let _3 := sload(/** @src 0:3475:3490  \"currentGameId++\" */ 0x13)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            if eq(_3, not(0))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0x24)\n            }\n            sstore(/** @src 0:3475:3490  \"currentGameId++\" */ 0x13, /** @src 0:58:5060  \"contract PvPGrid {...\" */ add(_3, 1))\n            sstore(/** @src 0:3500:3517  \"tilesSelected = 0\" */ 0x12, /** @src -1:-1:-1 */ 0)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            sstore(/** @src 0:3527:3551  \"winnerDetermined = false\" */ 0x16, /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:3527:3551  \"winnerDetermined = false\" */ 0x16), /** @src 0:58:5060  \"contract PvPGrid {...\" */ not(sub(shl(168, 1), 1))))\n            sstore(/** @src 0:3590:3613  \"finalSelectionBlock = 0\" */ 0x15, /** @src -1:-1:-1 */ 0)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            sstore(/** @src 0:3623:3636  \"prizePool = 0\" */ 0x14, /** @src -1:-1:-1 */ 0)\n            /// @src 0:3686:3699  \"uint256 i = 0\"\n            let var_i := /** @src -1:-1:-1 */ 0\n            /// @src 0:3681:3766  \"for (uint256 i = 0; i < GRID_SIZE; i++) {...\"\n            for { }\n            /** @src 0:58:5060  \"contract PvPGrid {...\" */ 1\n            /// @src 0:3686:3699  \"uint256 i = 0\"\n            {\n                /// @src 0:3716:3719  \"i++\"\n                var_i := /** @src 0:58:5060  \"contract PvPGrid {...\" */ add(/** @src 0:3716:3719  \"i++\" */ var_i, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 1)\n            }\n            /// @src 0:3716:3719  \"i++\"\n            {\n                /// @src 0:3701:3714  \"i < GRID_SIZE\"\n                let _4 := iszero(lt(var_i, /** @src 0:143:145  \"16\" */ 0x10))\n                /// @src 0:3701:3714  \"i < GRID_SIZE\"\n                if _4 { break }\n                /// @src 0:143:145  \"16\"\n                _4 := /** @src -1:-1:-1 */ 0\n                /// @src 0:143:145  \"16\"\n                let slot := add(/** @src 0:3735:3739  \"grid\" */ 0x02, /** @src 0:143:145  \"16\" */ var_i)\n                sstore(slot, and(sload(slot), /** @src 0:58:5060  \"contract PvPGrid {...\" */ not(sub(shl(160, 1), 1))))\n            }\n            let _5 := sload(/** @src 0:3475:3490  \"currentGameId++\" */ 0x13)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            let _6 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\"\n            let _7 := /** @src 0:58:5060  \"contract PvPGrid {...\" */ mload(64)\n            /// @src 0:143:145  \"16\"\n            mstore(_7, _6)\n            /// @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\"\n            log2(_7, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 32, /** @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\" */ 0x1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73, _5)\n            /// @src 0:58:5060  \"contract PvPGrid {...\"\n            let _8 := mload(64)\n            let _9 := datasize(\"PvPGrid_480_deployed\")\n            codecopy(_8, dataoffset(\"PvPGrid_480_deployed\"), _9)\n            return(_8, _9)\n        }\n    }\n    /// @use-src 0:\"contracts/PvPGrid.sol\"\n    object \"PvPGrid_480_deployed\" {\n        code {\n            {\n                /// @src 0:58:5060  \"contract PvPGrid {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x072ea61c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(0))\n                        return(_1, 32)\n                    }\n                    case 0x134000c0 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let size := 0\n                        let _2 := 0\n                        _2 := 0\n                        size := 512\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, size)\n                        let size_1 := 0\n                        let _3 := 0\n                        _3 := 0\n                        size_1 := size\n                        calldatacopy(memPtr, calldatasize(), size)\n                        let pos := mload(64)\n                        let memPtr_1 := pos\n                        pos := pos\n                        let srcPtr := /** @src 0:4478:4482  \"grid\" */ 0x02\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let i := 0\n                        for { } lt(i, 16) { i := add(i, 1) }\n                        {\n                            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                            pos := add(pos, 0x20)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr_1, size)\n                        let pos_1 := mload(64)\n                        let memPos := pos_1\n                        pos_1 := pos_1\n                        let srcPtr_1 := memPtr_1\n                        let i_1 := 0\n                        for { } lt(i_1, 16) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), sub(shl(160, 1), 1)))\n                            pos_1 := add(pos_1, 0x20)\n                            srcPtr_1 := add(srcPtr_1, 0x20)\n                        }\n                        return(memPos, size)\n                    }\n                    case 0x33b16d93 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        if iszero(/** @src 0:2219:2245  \"tilesSelected == GRID_SIZE\" */ eq(/** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:2219:2232  \"tilesSelected\" */ 0x12), /** @src 0:143:145  \"16\" */ 0x10))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 17)\n                            mstore(add(memPtr_2, 68), \"Game not complete\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _4 := sload(/** @src 0:2286:2302  \"winnerDetermined\" */ 0x16)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if iszero(/** @src 0:2285:2302  \"!winnerDetermined\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ and(_4, 0xff)))\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 25)\n                            mstore(add(memPtr_3, 68), \"Winner already determined\")\n                            revert(memPtr_3, 100)\n                        }\n                        let _5 := sload(/** @src 0:2365:2384  \"finalSelectionBlock\" */ 0x15)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if iszero(/** @src 0:2350:2384  \"block.number > finalSelectionBlock\" */ gt(/** @src 0:2350:2362  \"block.number\" */ number(), /** @src 0:2350:2384  \"block.number > finalSelectionBlock\" */ _5))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 32)\n                            mstore(add(memPtr_4, 36), 19)\n                            mstore(add(memPtr_4, 68), \"Wait for next block\")\n                            revert(memPtr_4, 100)\n                        }\n                        let sum := add(_5, 0xff)\n                        if gt(_5, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        if /** @src 0:2426:2467  \"block.number <= finalSelectionBlock + 255\" */ gt(/** @src 0:2350:2362  \"block.number\" */ number(), /** @src 0:2426:2467  \"block.number <= finalSelectionBlock + 255\" */ sum)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 28)\n                            mstore(add(memPtr_5, 68), \"Too late to determine winner\")\n                            revert(memPtr_5, 100)\n                        }\n                        let sum_1 := add(_5, /** @src 0:2638:2639  \"1\" */ 0x01)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if gt(_5, sum_1)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let r := and(/** @src 0:2606:2640  \"blockhash(finalSelectionBlock + 1)\" */ blockhash(/** @src 0:2616:2639  \"finalSelectionBlock + 1\" */ sum_1), /** @src 0:58:5060  \"contract PvPGrid {...\" */ 15)\n                        if iszero(lt(r, /** @src 0:143:145  \"16\" */ 0x10))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 0:2286:2302  \"winnerDetermined\" */ 0x16, /** @src 0:58:5060  \"contract PvPGrid {...\" */ or(or(and(_4, shl(168, 0xffffffffffffffffffffff)), and(shl(8, sload(add(/** @src 0:2723:2727  \"grid\" */ 0x02, /** @src 0:58:5060  \"contract PvPGrid {...\" */ r))), sub(shl(168, 1), 256))), /** @src 0:2638:2639  \"1\" */ 0x01))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let _6 := sload(/** @src 0:2855:2864  \"prizePool\" */ 0x14)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let _7 := sload(/** @src 0:2638:2639  \"1\" */ 0x01)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let product := mul(_6, _7)\n                        if iszero(or(iszero(_6), eq(_7, div(product, _6))))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let r_1 := div(product, /** @src 0:2878:2883  \"10000\" */ 0x2710)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let diff := sub(_6, r_1)\n                        if gt(diff, _6)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        /// @src 0:2986:3149  \"if (platformFee > 0) {...\"\n                        if /** @src 0:2990:3005  \"platformFee > 0\" */ iszero(iszero(r_1))\n                        /// @src 0:2986:3149  \"if (platformFee > 0) {...\"\n                        {\n                            /// @src 0:3043:3082  \"teamWallet.call{value: platformFee}(\\\"\\\")\"\n                            let expr_component := call(gas(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:3043:3053  \"teamWallet\" */ 0x18), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1)), /** @src 0:3043:3082  \"teamWallet.call{value: platformFee}(\\\"\\\")\" */ r_1, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0, 0, 0, 0)\n                            /// @src 0:3043:3082  \"teamWallet.call{value: platformFee}(\\\"\\\")\"\n                            pop(extract_returndata())\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            if iszero(expr_component)\n                            {\n                                let memPtr_6 := mload(64)\n                                mstore(memPtr_6, shl(229, 4594637))\n                                mstore(add(memPtr_6, 4), 32)\n                                mstore(add(memPtr_6, 36), 19)\n                                mstore(add(memPtr_6, 68), \"Fee transfer failed\")\n                                revert(memPtr_6, 100)\n                            }\n                        }\n                        /// @src 0:3191:3226  \"winner.call{value: winnerPrize}(\\\"\\\")\"\n                        let expr_component_1 := call(gas(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(shr(8, sload(/** @src 0:2286:2302  \"winnerDetermined\" */ 0x16)), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1)), /** @src 0:3191:3226  \"winner.call{value: winnerPrize}(\\\"\\\")\" */ diff, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0, 0, 0, 0)\n                        /// @src 0:3191:3226  \"winner.call{value: winnerPrize}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if iszero(expr_component_1)\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), /** @src 0:2365:2384  \"finalSelectionBlock\" */ 0x15)\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            mstore(add(memPtr_7, 68), \"Prize transfer failed\")\n                            revert(memPtr_7, 100)\n                        }\n                        let _8 := sload(/** @src 0:3320:3333  \"currentGameId\" */ 0x13)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let _9 := sload(/** @src 0:2286:2302  \"winnerDetermined\" */ 0x16)\n                        /// @src 0:3306:3355  \"GameCompleted(currentGameId, winner, winnerPrize)\"\n                        let _10 := /** @src 0:58:5060  \"contract PvPGrid {...\" */ mload(64)\n                        mstore(_10, diff)\n                        /// @src 0:3306:3355  \"GameCompleted(currentGameId, winner, winnerPrize)\"\n                        log3(_10, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 32, /** @src 0:3306:3355  \"GameCompleted(currentGameId, winner, winnerPrize)\" */ 0xf6ae188cc6336ef5ad970d3c81cda5814b4c4902540924c6924debe94ece13eb, _8, /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(shr(8, _9), sub(shl(160, 1), 1)))\n                        sstore(/** @src 0:3320:3333  \"currentGameId\" */ 0x13, /** @src 0:3475:3490  \"currentGameId++\" */ increment_uint256(/** @src 0:58:5060  \"contract PvPGrid {...\" */ _8))\n                        sstore(/** @src 0:2219:2232  \"tilesSelected\" */ 0x12, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0)\n                        sstore(/** @src 0:2286:2302  \"winnerDetermined\" */ 0x16, /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(_9, shl(168, 0xffffffffffffffffffffff)))\n                        sstore(/** @src 0:2365:2384  \"finalSelectionBlock\" */ 0x15, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0)\n                        sstore(/** @src 0:2855:2864  \"prizePool\" */ 0x14, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0)\n                        /// @src 0:3686:3699  \"uint256 i = 0\"\n                        let var_i := /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0\n                        /// @src 0:3681:3766  \"for (uint256 i = 0; i < GRID_SIZE; i++) {...\"\n                        for { }\n                        /** @src 0:2638:2639  \"1\" */ 0x01\n                        /// @src 0:3686:3699  \"uint256 i = 0\"\n                        {\n                            /// @src 0:3716:3719  \"i++\"\n                            var_i := /** @src 0:58:5060  \"contract PvPGrid {...\" */ add(/** @src 0:3716:3719  \"i++\" */ var_i, /** @src 0:2638:2639  \"1\" */ 0x01)\n                        }\n                        /// @src 0:3716:3719  \"i++\"\n                        {\n                            /// @src 0:3701:3714  \"i < GRID_SIZE\"\n                            let _11 := iszero(lt(var_i, /** @src 0:143:145  \"16\" */ 0x10))\n                            /// @src 0:3701:3714  \"i < GRID_SIZE\"\n                            if _11 { break }\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            _11 := 0\n                            let slot := add(/** @src 0:2723:2727  \"grid\" */ 0x02, /** @src 0:58:5060  \"contract PvPGrid {...\" */ var_i)\n                            sstore(slot, and(sload(slot), shl(160, 0xffffffffffffffffffffffff)))\n                        }\n                        let _12 := sload(/** @src 0:3320:3333  \"currentGameId\" */ 0x13)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let _13 := sload(0)\n                        /// @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\"\n                        let _14 := /** @src 0:58:5060  \"contract PvPGrid {...\" */ mload(64)\n                        mstore(_14, _13)\n                        /// @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\"\n                        log2(_14, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 32, /** @src 0:3789:3828  \"NewGameStarted(currentGameId, entryFee)\" */ 0x1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73, _12)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        return(0, 0)\n                    }\n                    case 0x51d2cc8f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        /// @src 0:303:333  \"address[GRID_SIZE] public grid\"\n                        let _15 := iszero(lt(value, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0x10))\n                        /// @src 0:303:333  \"address[GRID_SIZE] public grid\"\n                        if _15\n                        {\n                            revert(/** @src 0:58:5060  \"contract PvPGrid {...\" */ 0, 0)\n                        }\n                        _15 := 0\n                        let value_1 := and(sload(add(/** @src 0:303:333  \"address[GRID_SIZE] public grid\" */ 2, /** @src 0:58:5060  \"contract PvPGrid {...\" */ value)), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, value_1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x536a3ddc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _16 := sload(/** @src 0:373:401  \"uint256 public currentGameId\" */ 19)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_2 := mload(64)\n                        mstore(memPos_2, _16)\n                        return(memPos_2, 32)\n                    }\n                    case 0x59927044 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_2 := and(sload(/** @src 0:611:636  \"address public teamWallet\" */ 24), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, value_2)\n                        return(memPos_3, 32)\n                    }\n                    case 0x5fb9c98c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _17 := sload(/** @src 0:339:367  \"uint256 public tilesSelected\" */ 18)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _17)\n                        return(memPos_4, 32)\n                    }\n                    case 0x719ce73e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _18 := sload(/** @src 0:407:431  \"uint256 public prizePool\" */ 20)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, _18)\n                        return(memPos_5, 32)\n                    }\n                    case 0x71be7faf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_3 := calldataload(4)\n                        /// @src 0:4590:4611  \"tileIndex < GRID_SIZE\"\n                        let _19 := lt(value_3, /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:4582:4634  \"require(tileIndex < GRID_SIZE, \\\"Invalid tile index\\\")\"\n                        require_helper_stringliteral_307f(/** @src 0:4590:4611  \"tileIndex < GRID_SIZE\" */ _19)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if iszero(_19)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        let value_4 := and(sload(add(/** @src 0:4651:4655  \"grid\" */ 0x02, /** @src 0:58:5060  \"contract PvPGrid {...\" */ value_3)), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, value_4)\n                        return(memPos_6, 32)\n                    }\n                    case 0x789c20f9 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:4748:4781  \"return tilesSelected == GRID_SIZE\"\n                        let var := /** @src 0:4755:4781  \"tilesSelected == GRID_SIZE\" */ eq(/** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:4755:4768  \"tilesSelected\" */ 0x12), /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, var)\n                        return(memPos_7, 32)\n                    }\n                    case 0x7cb332bb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        let _20 := and(value_5, sub(shl(160, 1), 1))\n                        if iszero(eq(value_5, _20)) { revert(0, 0) }\n                        /// @src 0:987:1028  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:995:1014  \"msg.sender == owner\" */ eq(/** @src 0:995:1005  \"msg.sender\" */ caller(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:1009:1014  \"owner\" */ 0x17), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))))\n                        if /** @src 0:4277:4301  \"_newWallet != address(0)\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ _20)\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), 14)\n                            mstore(add(memPtr_8, 68), \"Invalid wallet\")\n                            revert(memPtr_8, 100)\n                        }\n                        sstore(/** @src 0:4330:4353  \"teamWallet = _newWallet\" */ 0x18, /** @src 0:58:5060  \"contract PvPGrid {...\" */ or(and(sload(/** @src 0:4330:4353  \"teamWallet = _newWallet\" */ 0x18), /** @src 0:58:5060  \"contract PvPGrid {...\" */ shl(160, 0xffffffffffffffffffffffff)), _20))\n                        return(0, 0)\n                    }\n                    case 0x7f1ad6f1 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_6 := and(sload(/** @src 0:506:534  \"bool public winnerDetermined\" */ 22), /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0xff)\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, iszero(iszero(value_6)))\n                        return(memPos_8, 32)\n                    }\n                    case 0x7fc4eda8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        return(memPos_9, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_7 := and(sload(/** @src 0:585:605  \"address public owner\" */ 23), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, value_7)\n                        return(memPos_10, 32)\n                    }\n                    case 0x95f7e7dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _21 := sload(/** @src 0:466:500  \"uint256 public finalSelectionBlock\" */ 21)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_11 := mload(64)\n                        mstore(memPos_11, _21)\n                        return(memPos_11, 32)\n                    }\n                    case 0x9793ed08 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_8 := calldataload(4)\n                        if iszero(/** @src 0:1491:1512  \"msg.value == entryFee\" */ eq(/** @src 0:1491:1500  \"msg.value\" */ callvalue(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(0)))\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 19)\n                            mstore(add(memPtr_9, 68), \"Incorrect entry fee\")\n                            revert(memPtr_9, 100)\n                        }\n                        /// @src 0:1554:1575  \"tileIndex < GRID_SIZE\"\n                        let _22 := lt(value_8, /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:1546:1598  \"require(tileIndex < GRID_SIZE, \\\"Invalid tile index\\\")\"\n                        require_helper_stringliteral_307f(/** @src 0:1554:1575  \"tileIndex < GRID_SIZE\" */ _22)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let _23 := iszero(_22)\n                        if _23\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x32)\n                            revert(0, 0x24)\n                        }\n                        let slot_1 := add(/** @src 0:1616:1620  \"grid\" */ 0x02, /** @src 0:58:5060  \"contract PvPGrid {...\" */ value_8)\n                        if iszero(/** @src 0:1616:1645  \"grid[tileIndex] == address(0)\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:1616:1631  \"grid[tileIndex]\" */ slot_1), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))))\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 21)\n                            mstore(add(memPtr_10, 68), \"Tile already selected\")\n                            revert(memPtr_10, 100)\n                        }\n                        if iszero(/** @src 0:1689:1706  \"!winnerDetermined\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:1690:1706  \"winnerDetermined\" */ 0x16), /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0xff)))\n                        {\n                            let memPtr_11 := mload(64)\n                            mstore(memPtr_11, shl(229, 4594637))\n                            mstore(add(memPtr_11, 4), 32)\n                            mstore(add(memPtr_11, 36), 21)\n                            mstore(add(memPtr_11, 68), \"Game already finished\")\n                            revert(memPtr_11, 100)\n                        }\n                        _23 := 0\n                        sstore(slot_1, or(and(sload(slot_1), shl(160, 0xffffffffffffffffffffffff)), /** @src 0:1801:1811  \"msg.sender\" */ caller()))\n                        /// @src 0:1821:1836  \"tilesSelected++\"\n                        let _24 := increment_uint256(/** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:1821:1836  \"tilesSelected++\" */ 0x12))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        sstore(/** @src 0:1821:1836  \"tilesSelected++\" */ 0x12, /** @src 0:58:5060  \"contract PvPGrid {...\" */ _24)\n                        let _25 := sload(/** @src 0:1846:1868  \"prizePool += msg.value\" */ 0x14)\n                        let sum_2 := /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0\n                        sum_2 := add(_25, /** @src 0:1491:1500  \"msg.value\" */ callvalue())\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        if gt(_25, sum_2)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, 0x11)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 0:1846:1868  \"prizePool += msg.value\" */ 0x14, /** @src 0:58:5060  \"contract PvPGrid {...\" */ sum_2)\n                        let _26 := sload(/** @src 0:1905:1918  \"currentGameId\" */ 0x13)\n                        /// @src 0:1892:1942  \"TileSelected(currentGameId, msg.sender, tileIndex)\"\n                        let _27 := /** @src 0:58:5060  \"contract PvPGrid {...\" */ mload(64)\n                        mstore(_27, value_8)\n                        /// @src 0:1892:1942  \"TileSelected(currentGameId, msg.sender, tileIndex)\"\n                        log3(_27, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 32, /** @src 0:1892:1942  \"TileSelected(currentGameId, msg.sender, tileIndex)\" */ 0x19096bbaf57f25f25fc838b12784fb7497242fe3ca9d1c50f6990f13fe053810, _26, /** @src 0:1801:1811  \"msg.sender\" */ caller())\n                        /// @src 0:2004:2149  \"if (tilesSelected == GRID_SIZE) {...\"\n                        if /** @src 0:2008:2034  \"tilesSelected == GRID_SIZE\" */ eq(_24, /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:2004:2149  \"if (tilesSelected == GRID_SIZE) {...\"\n                        {\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            sstore(/** @src 0:2104:2138  \"finalSelectionBlock = block.number\" */ 0x15, /** @src 0:2126:2138  \"block.number\" */ number())\n                        }\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        return(0, 0)\n                    }\n                    case 0xaa182626 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 0:987:1028  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:995:1014  \"msg.sender == owner\" */ eq(/** @src 0:995:1005  \"msg.sender\" */ caller(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:1009:1014  \"owner\" */ 0x17), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))))\n                        if iszero(/** @src 0:3946:3964  \"tilesSelected == 0\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:3946:3959  \"tilesSelected\" */ 0x12)))\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            let memPtr_12 := mload(64)\n                            mstore(memPtr_12, shl(229, 4594637))\n                            mstore(add(memPtr_12, 4), 32)\n                            mstore(add(memPtr_12, 36), 16)\n                            mstore(add(memPtr_12, 68), \"Game in progress\")\n                            revert(memPtr_12, 100)\n                        }\n                        sstore(0, calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0xb70a6dec {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 0:987:1028  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 0:995:1014  \"msg.sender == owner\" */ eq(/** @src 0:995:1005  \"msg.sender\" */ caller(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:1009:1014  \"owner\" */ 0x17), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))))\n                        if /** @src 0:4107:4122  \"_newFee <= 2000\" */ gt(value_9, /** @src 0:4118:4122  \"2000\" */ 0x07d0)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        {\n                            let memPtr_13 := mload(64)\n                            mstore(memPtr_13, shl(229, 4594637))\n                            mstore(add(memPtr_13, 4), 32)\n                            mstore(add(memPtr_13, 36), 12)\n                            mstore(add(memPtr_13, 68), \"Fee too high\")\n                            revert(memPtr_13, 100)\n                        }\n                        sstore(1, value_9)\n                        return(0, 0)\n                    }\n                    case 0xc336b9ca {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 0:4874:4937  \"tilesSelected == GRID_SIZE && ...\"\n                        let expr := /** @src 0:4874:4900  \"tilesSelected == GRID_SIZE\" */ eq(/** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:4874:4887  \"tilesSelected\" */ 0x12), /** @src 0:143:145  \"16\" */ 0x10)\n                        /// @src 0:4874:4937  \"tilesSelected == GRID_SIZE && ...\"\n                        if expr\n                        {\n                            expr := /** @src 0:4920:4937  \"!winnerDetermined\" */ iszero(/** @src 0:58:5060  \"contract PvPGrid {...\" */ and(sload(/** @src 0:4921:4937  \"winnerDetermined\" */ 0x16), /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0xff))\n                        }\n                        /// @src 0:4874:4991  \"tilesSelected == GRID_SIZE && ...\"\n                        let expr_1 := expr\n                        if expr\n                        {\n                            expr_1 := /** @src 0:4957:4991  \"block.number > finalSelectionBlock\" */ gt(/** @src 0:4957:4969  \"block.number\" */ number(), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sload(/** @src 0:4972:4991  \"finalSelectionBlock\" */ 0x15))\n                        }\n                        /// @src 0:4874:5051  \"tilesSelected == GRID_SIZE && ...\"\n                        let expr_2 := expr_1\n                        if expr_1\n                        {\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            let _28 := sload(/** @src 0:5026:5045  \"finalSelectionBlock\" */ 0x15)\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            let sum_3 := add(_28, /** @src 0:5048:5051  \"255\" */ 0xff)\n                            /// @src 0:58:5060  \"contract PvPGrid {...\"\n                            if gt(_28, sum_3)\n                            {\n                                mstore(0, shl(224, 0x4e487b71))\n                                mstore(4, 0x11)\n                                revert(0, 0x24)\n                            }\n                            /// @src 0:4874:5051  \"tilesSelected == GRID_SIZE && ...\"\n                            expr_2 := /** @src 0:5010:5051  \"block.number <= finalSelectionBlock + 255\" */ iszero(gt(/** @src 0:5010:5022  \"block.number\" */ number(), /** @src 0:5010:5051  \"block.number <= finalSelectionBlock + 255\" */ sum_3))\n                        }\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, iszero(iszero(expr_2)))\n                        return(memPos_12, 32)\n                    }\n                    case 0xdfbf53ae {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_10 := and(shr(8, sload(/** @src 0:540:561  \"address public winner\" */ 22)), /** @src 0:58:5060  \"contract PvPGrid {...\" */ sub(shl(160, 1), 1))\n                        let memPos_13 := mload(64)\n                        mstore(memPos_13, value_10)\n                        return(memPos_13, 32)\n                    }\n                    case 0xea777eec {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _29 := sload(/** @src 0:192:214  \"uint256 public gameFee\" */ 1)\n                        /// @src 0:58:5060  \"contract PvPGrid {...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, _29)\n                        return(memPos_14, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ 0x24)\n                    }\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, add(and(add(_1, 31), not(31)), 0x20))\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 0:58:5060  \"contract PvPGrid {...\" */ returndatasize())\n                }\n            }\n            function require_helper_stringliteral_307f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Invalid tile index\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_c266(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 9)\n                    mstore(add(memPtr, 68), \"Not owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220c464974d62fefd13b0c3a7dbaf333e97c55b4389a6439c1d750eafc71ad2bcb164736f6c634300081e0033\"\n    }\n}\n","hash":"f5fab7f37fd850d65ebc967ba37ab3a58819c54abc08fc4f989ee746f81fcb20","factoryDependencies":{}}},"contracts/PvPGridEnhanced.sol":{"PvPGridEnhanced":{"abi":[{"inputs":[{"internalType":"uint256","name":"_entryFee","type":"uint256"},{"internalType":"uint256","name":"_gameFee","type":"uint256"},{"internalType":"address","name":"_teamWallet","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"winner","type":"address"},{"indexed":false,"internalType":"uint256","name":"prize","type":"uint256"}],"name":"GameCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"GameRefunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"entryFee","type":"uint256"}],"name":"NewGameStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"gameId","type":"uint256"},{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"tileIndex","type":"uint256"}],"name":"TileSelected","type":"event"},{"inputs":[],"name":"GRID_SIZE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentGameId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"determineWinner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"emergencyDetermineWinner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"entryFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gameFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"games","outputs":[{"internalType":"uint256","name":"tilesSelected","type":"uint256"},{"internalType":"uint256","name":"prizePool","type":"uint256"},{"internalType":"uint256","name":"finalSelectionBlock","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"bool","name":"winnerDetermined","type":"bool"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAvailableTiles","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentGrid","outputs":[{"internalType":"address[16]","name":"","type":"address[16]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGameInfo","outputs":[{"internalType":"uint256","name":"tilesSelected","type":"uint256"},{"internalType":"uint256","name":"prizePool","type":"uint256"},{"internalType":"bool","name":"isComplete","type":"bool"},{"internalType":"bool","name":"winnerDetermined","type":"bool"},{"internalType":"address","name":"winner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"gameId","type":"uint256"}],"name":"getGrid","outputs":[{"internalType":"address[16]","name":"","type":"address[16]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"}],"name":"getPlayerTileCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"playerGamesPlayed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"playerWins","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tileIndexes","type":"uint256[]"}],"name":"selectMultipleTiles","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tileIndex","type":"uint256"}],"name":"selectTile","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bool","name":"_paused","type":"bool"}],"name":"setPaused","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"teamWallet","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateEntryFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_newFee","type":"uint256"}],"name":"updateGameFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_minPlayers","type":"uint256"}],"name":"updateMinPlayers","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_newWallet","type":"address"}],"name":"updateTeamWallet","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.2.0+commit.e94432e.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_entryFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gameFee\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_teamWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prize\",\"type\":\"uint256\"}],\"name\":\"GameCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"GameRefunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"entryFee\",\"type\":\"uint256\"}],\"name\":\"NewGameStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tileIndex\",\"type\":\"uint256\"}],\"name\":\"TileSelected\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GRID_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentGameId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"determineWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyDetermineWinner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gameFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"games\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tilesSelected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"finalSelectionBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"winnerDetermined\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAvailableTiles\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentGrid\",\"outputs\":[{\"internalType\":\"address[16]\",\"name\":\"\",\"type\":\"address[16]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGameInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tilesSelected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"prizePool\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isComplete\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"winnerDetermined\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"gameId\",\"type\":\"uint256\"}],\"name\":\"getGrid\",\"outputs\":[{\"internalType\":\"address[16]\",\"name\":\"\",\"type\":\"address[16]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"getPlayerTileCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerGamesPlayed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerWins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tileIndexes\",\"type\":\"uint256[]\"}],\"name\":\"selectMultipleTiles\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tileIndex\",\"type\":\"uint256\"}],\"name\":\"selectTile\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateEntryFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"updateGameFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minPlayers\",\"type\":\"uint256\"}],\"name\":\"updateMinPlayers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newWallet\",\"type\":\"address\"}],\"name\":\"updateTeamWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PvPGridEnhanced.sol\":\"PvPGridEnhanced\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIfxa[r]EscLMVcul [j]Trpeulxa[r]cLgvifMCTUca[r]LSsTFOtfDnca[r]IulcscCTUtgvifMx[scCTUt] TOntnfDIulgvifMjmul[jul] VcTOcul jmul:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PvPGridEnhanced.sol\":{\"keccak256\":\"0x502e3b28b7b8dad464d8588e70a00f32ce152c6d42ab78d359dab3bb0a314dee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80cadd137e2a6bb7d577acd2047aaf41f51219630667904f0b646832e8514886\",\"dweb:/ipfs/Qmao292ThHB8bGhVkTzEP92J8X898S73cgwQczgFWJei1D\"]}},\"version\":1}","solc_version":"0.8.30+commit.73712a01.Emscripten.clang"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 600/66192 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 15747\n// Code size = 56670 bytes\n\n      : @0 (gas: 1)\n     0: jump @14 if a0 == a1\n      : @1 (gas: 9)\n     3: a3 = a1 << 0x20\n     6: a3 = a3 >> 0x20\n     9: a4 = a0 << 0x20\n    12: a4 = a4 >> 0x20\n    15: a4 = a4 + a2\n    18: a3 = a3 - a4\n    21: a4 = a2 << 0x1\n    24: a4 = -a4\n    26: jump @7 if a4 >=u a3\n      : @2 (gas: 1)\n    29: jump @11 if a0 >=u a1\n      : @3 (gas: 1)\n    32: jump @14 if a2 == 0\n      : @4 (gas: 3)\n    35: a2 = a2 + a0\n    38: a3 = a0\n    40: fallthrough\n      : @5 (gas: 6)\n    41: a4 = u8 [a1]\n    43: a1 = a1 + 0x1\n    46: a5 = a3 + 0x1\n    49: u8 [a3] = a4\n    51: a3 = a5\n    53: jump @5 if a5 != a2\n      : @6 (gas: 1)\n    56: jump @14\n      : @7 (gas: 1)\n    58: jump @14 if a2 == 0\n      : @8 (gas: 3)\n    61: a2 = a2 + a0\n    64: a3 = a0\n    66: fallthrough\n      : @9 (gas: 6)\n    67: a4 = u8 [a1]\n    69: a1 = a1 + 0x1\n    72: a5 = a3 + 0x1\n    75: u8 [a3] = a4\n    77: a3 = a5\n    79: jump @9 if a5 != a2\n      : @10 (gas: 1)\n    82: jump @14\n      : @11 (gas: 1)\n    84: jump @14 if a2 == 0\n      : @12 (gas: 2)\n    87: i32 a3 = a2 + 0xffffffffffffffff\n    90: fallthrough\n      : @13 (gas: 7)\n    91: a4 = a1 + a3\n    94: a4 = u8 [a4]\n    96: a2 = a2 + 0xffffffffffffffff\n    99: a5 = a0 + a3\n   102: u8 [a5] = a4\n   104: i32 a3 = a3 + 0xffffffffffffffff\n   107: jump @13 if a2 != 0\n      : @14 (gas: 1)\n   110: ret\n      : @15 (gas: 2)\n   112: a1 = i32 [0x20260]\n   117: jump @123 if a1 == 0\n      : @16 (gas: 4)\n   121: a0 = 0x30290\n   126: i32 a0 = a0 + 0\n   128: ecalli 15 // 'set_immutable_data'\n   130: jump @123\n      : @17 (gas: 8)\n   133: sp = sp + 0xfffffffffffffff0\n   136: u64 [sp + 0x8] = ra\n   139: u64 [sp] = s0\n   141: a2 = a1\n   143: s0 = a0\n   145: a1 = 0x20\n   148: a0 = a2\n   150: ra = 2, jump @32\n      : @18 [@dyn 1] (gas: 100)\n   155: a1 = u8 [a0 + 0x1]\n   158: a2 = u8 [a0]\n   160: a3 = u8 [a0 + 0x2]\n   163: a4 = u8 [a0 + 0x3]\n   166: a1 = a1 << 0x8\n   169: a1 = a1 | a2\n   172: a3 = a3 << 0x10\n   175: a4 = a4 << 0x18\n   178: a3 = a3 | a4\n   181: a1 = a1 | a3\n   184: a2 = u8 [a0 + 0x5]\n   187: a3 = u8 [a0 + 0x4]\n   190: a4 = u8 [a0 + 0x6]\n   193: a5 = u8 [a0 + 0x7]\n   196: a2 = a2 << 0x8\n   199: a2 = a2 | a3\n   202: a4 = a4 << 0x10\n   205: a5 = a5 << 0x18\n   208: a4 = a4 | a5\n   211: a2 = a2 | a4\n   214: a2 = a2 << 0x20\n   217: t0 = a2 | a1\n   220: a2 = u8 [a0 + 0x9]\n   223: a3 = u8 [a0 + 0x8]\n   226: a4 = u8 [a0 + 0xa]\n   229: a5 = u8 [a0 + 0xb]\n   232: a2 = a2 << 0x8\n   235: a2 = a2 | a3\n   238: a4 = a4 << 0x10\n   241: a5 = a5 << 0x18\n   244: a4 = a4 | a5\n   247: a2 = a2 | a4\n   250: a3 = u8 [a0 + 0xd]\n   253: a4 = u8 [a0 + 0xc]\n   256: a5 = u8 [a0 + 0xe]\n   259: a1 = u8 [a0 + 0xf]\n   262: a3 = a3 << 0x8\n   265: a3 = a3 | a4\n   268: a5 = a5 << 0x10\n   271: a1 = a1 << 0x18\n   274: a1 = a1 | a5\n   277: a1 = a1 | a3\n   280: a1 = a1 << 0x20\n   283: t1 = a1 | a2\n   286: a1 = u8 [a0 + 0x11]\n   289: a3 = u8 [a0 + 0x10]\n   292: a4 = u8 [a0 + 0x12]\n   295: a5 = u8 [a0 + 0x13]\n   298: a1 = a1 << 0x8\n   301: a1 = a1 | a3\n   304: a4 = a4 << 0x10\n   307: a5 = a5 << 0x18\n   310: a4 = a4 | a5\n   313: a1 = a1 | a4\n   316: a3 = u8 [a0 + 0x15]\n   319: a4 = u8 [a0 + 0x14]\n   322: a5 = u8 [a0 + 0x16]\n   325: a2 = u8 [a0 + 0x17]\n   328: a3 = a3 << 0x8\n   331: a3 = a3 | a4\n   334: a5 = a5 << 0x10\n   337: a2 = a2 << 0x18\n   340: a2 = a2 | a5\n   343: a2 = a2 | a3\n   346: a2 = a2 << 0x20\n   349: a3 = a2 | a1\n   352: a1 = u8 [a0 + 0x19]\n   355: a2 = u8 [a0 + 0x18]\n   358: a4 = u8 [a0 + 0x1a]\n   361: a5 = u8 [a0 + 0x1b]\n   364: a1 = a1 << 0x8\n   367: a1 = a1 | a2\n   370: a4 = a4 << 0x10\n   373: a5 = a5 << 0x18\n   376: a4 = a4 | a5\n   379: a1 = a1 | a4\n   382: a2 = u8 [a0 + 0x1d]\n   385: a4 = u8 [a0 + 0x1c]\n   388: a5 = u8 [a0 + 0x1e]\n   391: a0 = u8 [a0 + 0x1f]\n   394: a2 = a2 << 0x8\n   397: a2 = a2 | a4\n   400: a5 = a5 << 0x10\n   403: a0 = a0 << 0x18\n   406: a0 = a0 | a5\n   409: a0 = a0 | a2\n   412: a0 = a0 << 0x20\n   415: a0 = a0 | a1\n   418: a0 = reverse a0\n   420: a1 = reverse a3\n   422: a2 = reverse t1\n   424: a3 = reverse t0\n   426: u64 [s0 + 0x18] = a3\n   429: u64 [s0 + 0x10] = a2\n   432: u64 [s0 + 0x8] = a1\n   435: u64 [s0] = a0\n   437: ra = u64 [sp + 0x8]\n   440: s0 = u64 [sp]\n   442: sp = sp + 0x10\n   445: ret\n      : @19 (gas: 12)\n   447: sp = sp + 0xffffffffffffffd8\n   450: u64 [sp + 0x20] = ra\n   453: u64 [sp + 0x18] = s0\n   456: u64 [sp + 0x10] = s1\n   459: a2 = u64 [a1]\n   461: u64 [sp + 0x8] = a2\n   464: a2 = u64 [a1 + 0x8]\n   467: u64 [sp] = a2\n   469: s0 = u64 [a1 + 0x10]\n   472: s1 = u64 [a1 + 0x18]\n   475: a1 = 0x20\n   478: ra = 4, jump @32\n      : @20 [@dyn 2] (gas: 71)\n   483: a1 = reverse s1\n   485: a2 = reverse s0\n   487: a3 = u64 [sp]\n   489: a3 = reverse a3\n   491: a4 = u64 [sp + 0x8]\n   494: a4 = reverse a4\n   496: u8 [a0 + 0x18] = a4\n   499: u8 [a0 + 0x10] = a3\n   502: u8 [a0 + 0x8] = a2\n   505: u8 [a0] = a1\n   507: a5 = a4 >> 0x38\n   510: u8 [a0 + 0x1f] = a5\n   513: a5 = a4 >> 0x30\n   516: u8 [a0 + 0x1e] = a5\n   519: a5 = a4 >> 0x28\n   522: u8 [a0 + 0x1d] = a5\n   525: a5 = a4 >> 0x20\n   528: u8 [a0 + 0x1c] = a5\n   531: a5 = a4 >> 0x18\n   534: u8 [a0 + 0x1b] = a5\n   537: a5 = a4 >> 0x10\n   540: u8 [a0 + 0x1a] = a5\n   543: a4 = a4 >> 0x8\n   546: u8 [a0 + 0x19] = a4\n   549: a4 = a3 >> 0x38\n   552: u8 [a0 + 0x17] = a4\n   555: a4 = a3 >> 0x30\n   558: u8 [a0 + 0x16] = a4\n   561: a4 = a3 >> 0x28\n   564: u8 [a0 + 0x15] = a4\n   567: a4 = a3 >> 0x20\n   570: u8 [a0 + 0x14] = a4\n   573: a4 = a3 >> 0x18\n   576: u8 [a0 + 0x13] = a4\n   579: a4 = a3 >> 0x10\n   582: u8 [a0 + 0x12] = a4\n   585: a3 = a3 >> 0x8\n   588: u8 [a0 + 0x11] = a3\n   591: a3 = a2 >> 0x38\n   594: u8 [a0 + 0xf] = a3\n   597: a3 = a2 >> 0x30\n   600: u8 [a0 + 0xe] = a3\n   603: a3 = a2 >> 0x28\n   606: u8 [a0 + 0xd] = a3\n   609: a3 = a2 >> 0x20\n   612: u8 [a0 + 0xc] = a3\n   615: a3 = a2 >> 0x18\n   618: u8 [a0 + 0xb] = a3\n   621: a3 = a2 >> 0x10\n   624: u8 [a0 + 0xa] = a3\n   627: a2 = a2 >> 0x8\n   630: u8 [a0 + 0x9] = a2\n   633: a2 = a1 >> 0x38\n   636: u8 [a0 + 0x7] = a2\n   639: a2 = a1 >> 0x30\n   642: u8 [a0 + 0x6] = a2\n   645: a2 = a1 >> 0x28\n   648: u8 [a0 + 0x5] = a2\n   651: a2 = a1 >> 0x20\n   654: u8 [a0 + 0x4] = a2\n   657: a2 = a1 >> 0x18\n   660: u8 [a0 + 0x3] = a2\n   663: a2 = a1 >> 0x10\n   666: u8 [a0 + 0x2] = a2\n   669: a1 = a1 >> 0x8\n   672: u8 [a0 + 0x1] = a1\n   675: ra = u64 [sp + 0x20]\n   678: s0 = u64 [sp + 0x18]\n   681: s1 = u64 [sp + 0x10]\n   684: sp = sp + 0x28\n   687: ret\n      : @21 (gas: 32)\n   689: sp = sp + 0xffffffffffffffa0\n   692: u64 [sp + 0x58] = ra\n   695: u64 [sp + 0x50] = s0\n   698: u64 [sp + 0x48] = s1\n   701: s0 = sp + 0x60\n   704: sp = sp & 0xffffffffffffffe0\n   707: s1 = a0\n   709: a0 = u64 [a1 + 0x18]\n   712: a2 = u64 [a1 + 0x10]\n   715: a3 = u64 [a1 + 0x8]\n   718: a1 = u64 [a1]\n   720: a0 = reverse a0\n   722: a2 = reverse a2\n   724: a3 = reverse a3\n   726: a1 = reverse a1\n   728: u64 [sp + 0x18] = a1\n   731: u64 [sp + 0x10] = a3\n   734: u64 [sp + 0x8] = a2\n   737: u64 [sp] = a0\n   739: u64 [sp + 56] = 0\n   742: u64 [sp + 48] = 0\n   745: u64 [sp + 40] = 0\n   748: u64 [sp + 32] = 0\n   751: u32 [sp + 64] = 0x20\n   755: i32 a1 = sp + 0\n   757: i32 a3 = sp + 0x20\n   760: i32 a4 = sp + 0x40\n   763: a2 = 0xffffffffffffffff\n   766: a0 = 0\n   768: ra = 0x6\n   771: ecalli 8 // 'get_storage'\n   773: fallthrough\n      : @22 [@dyn 3] (gas: 5)\n   774: a0 = u64 [sp + 0x38]\n   777: a1 = u64 [sp + 0x30]\n   780: a2 = u64 [sp + 0x28]\n   783: a3 = u64 [sp + 0x20]\n   786: t0 = 8, jump @2012\n      : @23 [@dyn 4] (gas: 5)\n   792: u64 [s1 + 0x18] = a3\n   795: u64 [s1 + 0x10] = a2\n   798: u64 [s1 + 0x8] = a1\n   801: u64 [s1] = a0\n   803: t0 = 10, jump @2026\n      : @24 [@dyn 5] (gas: 1)\n   809: ret\n      : @25 (gas: 40)\n   811: sp = sp + 0xffffffffffffffa0\n   814: u64 [sp + 0x58] = ra\n   817: u64 [sp + 0x50] = s0\n   820: s0 = sp + 0x60\n   823: sp = sp & 0xffffffffffffffe0\n   826: t0 = u64 [a0]\n   828: a3 = u64 [a0 + 0x8]\n   831: a4 = u64 [a0 + 0x10]\n   834: a0 = u64 [a0 + 0x18]\n   837: t1 = u64 [a1]\n   839: a2 = u64 [a1 + 0x8]\n   842: a5 = u64 [a1 + 0x10]\n   845: a1 = u64 [a1 + 0x18]\n   848: t2 = reverse a0\n   850: a4 = reverse a4\n   852: a3 = reverse a3\n   854: a0 = reverse t0\n   856: t0 = reverse a1\n   858: a5 = reverse a5\n   860: a2 = reverse a2\n   862: a1 = reverse t1\n   864: u64 [sp + 0x18] = a0\n   867: u64 [sp + 0x10] = a3\n   870: u64 [sp + 0x8] = a4\n   873: u64 [sp] = t2\n   875: u64 [sp + 0x38] = a1\n   878: u64 [sp + 0x30] = a2\n   881: u64 [sp + 0x28] = a5\n   884: u64 [sp + 0x20] = t0\n   887: i32 a1 = sp + 0\n   889: i32 a3 = sp + 0x20\n   892: a2 = 0xffffffffffffffff\n   895: a4 = 0x20\n   898: a0 = 0\n   900: ecalli 16 // 'set_storage'\n   902: sp = s0 + 0xffffffffffffffa0\n   905: ra = u64 [sp + 0x58]\n   908: s0 = u64 [sp + 0x50]\n   911: sp = sp + 0x60\n   914: ret\n      : @26 (gas: 24)\n   916: sp = sp + 0xffffffffffffff60\n   920: u64 [sp + 0x98] = ra\n   924: u64 [sp + 0x90] = s0\n   928: u64 [sp + 0x88] = s1\n   932: s0 = sp + 0xa0\n   936: sp = sp & 0xffffffffffffffe0\n   939: a4 = u64 [a3]\n   941: u64 [sp + 0x38] = a4\n   944: a4 = u64 [a3 + 0x8]\n   947: u64 [sp + 0x30] = a4\n   950: a4 = u64 [a3 + 0x10]\n   953: u64 [sp + 0x28] = a4\n   956: a3 = u64 [a3 + 0x18]\n   959: u64 [sp + 0x20] = a3\n   962: a3 = u64 [a2]\n   964: u64 [sp + 0x18] = a3\n   967: a3 = u64 [a2 + 0x8]\n   970: u64 [sp + 0x10] = a3\n   973: a3 = u64 [a2 + 0x10]\n   976: u64 [sp + 0x8] = a3\n   979: a2 = u64 [a2 + 0x18]\n   982: u64 [sp] = a2\n   984: s1 = a1\n   986: ra = 12, jump @32\n      : @27 [@dyn 6] (gas: 35)\n   991: a1 = u64 [sp]\n   993: a1 = reverse a1\n   995: a2 = u64 [sp + 0x8]\n   998: a2 = reverse a2\n  1000: a3 = u64 [sp + 0x10]\n  1003: a3 = reverse a3\n  1005: a4 = u64 [sp + 0x18]\n  1008: a4 = reverse a4\n  1010: u64 [sp + 0x58] = a4\n  1013: u64 [sp + 0x50] = a3\n  1016: u64 [sp + 0x48] = a2\n  1019: u64 [sp + 0x40] = a1\n  1022: a1 = u64 [sp + 0x20]\n  1025: a1 = reverse a1\n  1027: a2 = u64 [sp + 0x28]\n  1030: a2 = reverse a2\n  1032: a3 = u64 [sp + 0x30]\n  1035: a3 = reverse a3\n  1037: a4 = u64 [sp + 0x38]\n  1040: a4 = reverse a4\n  1042: u64 [sp + 0x78] = a4\n  1045: u64 [sp + 0x70] = a3\n  1048: u64 [sp + 0x68] = a2\n  1051: u64 [sp + 0x60] = a1\n  1054: i32 a2 = a0 + 0\n  1056: i32 a3 = s1 + 0\n  1058: i32 a0 = sp + 0x40\n  1061: a1 = 0x2\n  1064: ecalli 7 // 'deposit_event'\n  1066: sp = s0 + 0xffffffffffffff60\n  1070: ra = u64 [sp + 0x98]\n  1074: s0 = u64 [sp + 0x90]\n  1078: s1 = u64 [sp + 0x88]\n  1082: sp = sp + 0xa0\n  1086: ret\n      : @28 (gas: 33)\n  1088: sp = sp + 0xffffffffffffff20\n  1092: u64 [sp + 0xd8] = ra\n  1096: u64 [sp + 0xd0] = s0\n  1100: u64 [sp + 0xc8] = s1\n  1104: s0 = sp + 0xe0\n  1108: sp = sp & 0xffffffffffffffe0\n  1111: a5 = u64 [a4]\n  1113: u64 [sp + 0x40] = a5\n  1116: a5 = u64 [a4 + 0x8]\n  1119: u64 [sp + 0x48] = a5\n  1122: a5 = u64 [a4 + 0x10]\n  1125: u64 [sp + 0x50] = a5\n  1128: a4 = u64 [a4 + 0x18]\n  1131: u64 [sp + 0x58] = a4\n  1134: t0 = 0xe\n  1137: a4 = u64 [a3]\n  1139: u64 [sp + 0x18] = a4\n  1142: a4 = u64 [a3 + 0x8]\n  1145: u64 [sp + 0x20] = a4\n  1148: a4 = u64 [a3 + 0x10]\n  1151: u64 [sp + 0x28] = a4\n  1154: a3 = u64 [a3 + 0x18]\n  1157: u64 [sp + 0x30] = a3\n  1160: s1 = u64 [a2]\n  1162: a3 = u64 [a2 + 0x8]\n  1165: u64 [sp] = a3\n  1167: a3 = u64 [a2 + 0x10]\n  1170: u64 [sp + 0x8] = a3\n  1173: a2 = u64 [a2 + 0x18]\n  1176: u64 [sp + 0x10] = a2\n  1179: u64 [sp + 56] = 0x20\n  1183: ra = 0x10\n  1186: jump @32\n      : @29 [@dyn 7] (gas: 2)\n  1189: u64 [sp + 0x38] = a1\n  1192: ra = 16, jump @32\n      : @30 [@dyn 8] (gas: 41)\n  1196: a1 = reverse s1\n  1198: u64 [sp + 0x78] = a1\n  1201: a1 = u64 [sp]\n  1203: a1 = reverse a1\n  1205: u64 [sp + 0x70] = a1\n  1208: a1 = u64 [sp + 0x8]\n  1211: a1 = reverse a1\n  1213: u64 [sp + 0x68] = a1\n  1216: a1 = u64 [sp + 0x10]\n  1219: a1 = reverse a1\n  1221: u64 [sp + 0x60] = a1\n  1224: a1 = u64 [sp + 0x18]\n  1227: a1 = reverse a1\n  1229: u64 [sp + 0x98] = a1\n  1233: a1 = u64 [sp + 0x20]\n  1236: a1 = reverse a1\n  1238: u64 [sp + 0x90] = a1\n  1242: a1 = u64 [sp + 0x28]\n  1245: a1 = reverse a1\n  1247: u64 [sp + 0x88] = a1\n  1251: a1 = u64 [sp + 0x30]\n  1254: a1 = reverse a1\n  1256: u64 [sp + 0x80] = a1\n  1260: a1 = u64 [sp + 0x40]\n  1263: a1 = reverse a1\n  1265: u64 [sp + 0xb8] = a1\n  1269: a1 = u64 [sp + 0x48]\n  1272: a1 = reverse a1\n  1274: u64 [sp + 0xb0] = a1\n  1278: a1 = u64 [sp + 0x50]\n  1281: a1 = reverse a1\n  1283: u64 [sp + 0xa8] = a1\n  1287: a1 = u64 [sp + 0x58]\n  1290: a1 = reverse a1\n  1292: u64 [sp + 0xa0] = a1\n  1296: i32 a2 = a0 + 0\n  1298: a3 = i32 [sp + 0x38]\n  1301: i32 a0 = sp + 0x60\n  1304: a1 = 0x3\n  1307: ecalli 7 // 'deposit_event'\n  1309: t0 = 18, jump @1976\n      : @31 [@dyn 9] (gas: 1)\n  1315: ret\n      : @32 (gas: 2)\n  1317: i32 a2 = a0 >> 0x10\n  1320: jump @37 if a2 != 0\n      : @33 (gas: 4)\n  1323: a1 = a1 + a0\n  1326: i32 a1 = a1 + 0x1f\n  1329: a1 = a1 & 0xffffffffffffffe0\n  1332: jump @37 if a1 >u 65536\n      : @34 (gas: 3)\n  1338: a2 = 0x2025c\n  1343: a3 = i32 [0x2025c]\n  1348: jump @36 if a3 >=u a1\n      : @35 (gas: 2)\n  1351: u32 [0x2025c] = a1\n  1356: fallthrough\n      : @36 (gas: 4)\n  1357: a1 = 0x20270\n  1362: i32 a0 = a0 + 0\n  1364: a0 = a0 + a1\n  1367: ret\n      : @37 (gas: 1)\n  1369: trap\n      : @38 (gas: 6)\n  1370: sp = sp + 0xfffffffffffffff0\n  1373: u64 [sp + 0x8] = ra\n  1376: u64 [sp] = s0\n  1378: s0 = a0 & 0x1\n  1381: ecalli 5 // 'call_data_size'\n  1383: fallthrough\n      : @39 (gas: 2)\n  1384: u32 [0x20258] = a0\n  1389: jump @41 if s0 == 0\n      : @40 (gas: 1)\n  1392: ra = 20, jump @42\n      : @41 [@dyn 10] (gas: 18)\n  1396: ra = 0x16\n  1399: sp = sp + 0xfffffffffffffe10\n  1403: u64 [sp + 0x1e8] = ra\n  1407: u64 [sp + 0x1e0] = s0\n  1411: u64 [sp + 0x1d8] = s1\n  1415: s0 = sp + 0x1f0\n  1419: sp = sp + 0xffffffffffffbe30\n  1423: sp = sp & 0xffffffffffffffe0\n  1426: s1 = sp\n  1428: a2 = s1 + 0x30b8\n  1432: u64 [a2 + 64] = 0\n  1435: u64 [a2 + 56] = 0\n  1438: u64 [a2 + 40] = 0x80\n  1443: a0 = 0x40\n  1446: a1 = s1 + 0x30e0\n  1450: u64 [a2 + 48] = 0\n  1453: ra = 0x80\n  1457: jump @19\n      : @42 [@dyn 11] (gas: 15)\n  1460: sp = sp + 0xfffffffffffff960\n  1464: a0 = sp + 0x600\n  1468: u64 [a0 + 0x98] = ra\n  1472: u64 [a0 + 0x90] = s0\n  1476: u64 [a0 + 0x88] = s1\n  1480: s0 = sp + 0x6a0\n  1484: sp = sp & 0xffffffffffffffe0\n  1487: s1 = sp\n  1489: u64 [s1 + 1048] = 0\n  1493: u64 [s1 + 1040] = 0\n  1497: u64 [s1 + 1032] = 0\n  1501: u64 [s1 + 1024] = 0\n  1505: i32 a0 = s1 + 0x400\n  1509: ecalli 17 // 'value_transferred'\n  1511: fallthrough\n      : @43 (gas: 9)\n  1512: a4 = s1 + 0x400\n  1516: a0 = u64 [a4 + 0x10]\n  1519: a1 = u64 [a4 + 0x18]\n  1522: a2 = u64 [a4 + 0x8]\n  1525: a3 = u64 [a4]\n  1527: a1 = a1 | a2\n  1530: a0 = a0 | a3\n  1533: a0 = a0 | a1\n  1536: jump @112 if a0 != 0\n      : @44 (gas: 17)\n  1540: a0 = i32 [0x20258]\n  1545: u64 [s1 + 0x78] = a0\n  1548: a0 = a0 << 0x20\n  1551: a0 = a0 >> 0x20\n  1554: a0 = a0 + 0x1f\n  1557: a0 = a0 & 0xffffffffffffffe0\n  1560: a1 = a0 + 0x80\n  1564: a0 = a1 <u a0\n  1567: a2 = s1 + 0x300\n  1571: u64 [a2 + 0xe0] = a1\n  1575: u64 [a2 + 0xe8] = a0\n  1579: a0 = 0 if a0 != 0\n  1581: u64 [a2 + 0xf0] = a0\n  1585: a0 = 0x40\n  1588: a1 = s1 + 0x3e0\n  1592: u64 [s1 + 1016] = 0\n  1596: ra = 24, jump @19\n      : @45 [@dyn 12] (gas: 3)\n  1601: a0 = 0x80\n  1605: a1 = u64 [s1 + 0x78]\n  1608: ra = 26, jump @32\n      : @46 [@dyn 13] (gas: 5)\n  1613: i32 a0 = a0 + 0\n  1615: a1 = u64 [s1 + 0x78]\n  1618: a2 = 0\n  1620: ecalli 3 // 'call_data_copy'\n  1622: fallthrough\n      : @47 (gas: 2)\n  1623: a1 = u64 [s1 + 0x78]\n  1626: jump @113 if a1 <=u 95\n      : @48 (gas: 7)\n  1631: a0 = sp + 0xffffffffffffffe0\n  1634: a0 = a0 & 0xffffffffffffffe0\n  1637: u64 [s1 + 0x78] = a0\n  1640: sp = a0\n  1642: a0 = s1 + 0x3c0\n  1646: a1 = 0x80\n  1650: ra = 28, jump @17\n      : @49 [@dyn 14] (gas: 16)\n  1655: a0 = u64 [s1 + 0x3d0]\n  1659: a1 = u64 [s1 + 0x3d8]\n  1663: a2 = u64 [s1 + 0x3c0]\n  1667: a3 = u64 [s1 + 0x3c8]\n  1671: a4 = u64 [s1 + 0x78]\n  1674: u64 [a4 + 0x10] = a0\n  1677: u64 [a4 + 0x18] = a1\n  1680: u64 [a4] = a2\n  1682: u64 [a4 + 0x8] = a3\n  1685: a0 = sp + 0xffffffffffffffe0\n  1688: a0 = a0 & 0xffffffffffffffe0\n  1691: u64 [s1 + 0x70] = a0\n  1694: sp = a0\n  1696: a0 = s1 + 0x3a0\n  1700: a1 = 0xa0\n  1704: ra = 30, jump @17\n      : @50 [@dyn 15] (gas: 16)\n  1709: a0 = u64 [s1 + 0x3b0]\n  1713: a1 = u64 [s1 + 0x3b8]\n  1717: a3 = u64 [s1 + 0x3a0]\n  1721: a2 = u64 [s1 + 0x3a8]\n  1725: u64 [s1 + 0x50] = a0\n  1728: a4 = u64 [s1 + 0x70]\n  1731: u64 [a4 + 0x10] = a0\n  1734: u64 [s1 + 0x48] = a1\n  1737: u64 [a4 + 0x18] = a1\n  1740: u64 [s1 + 0x38] = a3\n  1743: u64 [a4] = a3\n  1745: u64 [s1 + 0x40] = a2\n  1748: u64 [a4 + 0x8] = a2\n  1751: a0 = s1 + 0x380\n  1755: a1 = 0xc0\n  1759: ra = 32, jump @17\n      : @51 [@dyn 16] (gas: 12)\n  1764: a1 = u64 [s1 + 0x390]\n  1768: a2 = u64 [s1 + 0x398]\n  1772: a0 = 0x100000000\n  1782: a0 = a0 ^ a1\n  1785: a0 = a0 | a2\n  1788: u64 [s1 + 0x68] = a1\n  1791: a1 = a1 >> 0x20\n  1794: a1 = a1 <u 0x1\n  1797: u64 [s1 + 0x30] = a2\n  1800: a1 = 0 if a2 != 0\n  1802: a1 = 0 if a0 == 0\n  1804: jump @114 if a1 == 0\n      : @52 (gas: 15)\n  1808: a0 = u64 [s1 + 0x388]\n  1812: u64 [s1 + 0x60] = a0\n  1815: a0 = u64 [s1 + 0x380]\n  1819: u64 [s1 + 0x58] = a0\n  1822: u64 [s1 + 1080] = 0\n  1826: u64 [s1 + 1072] = 0\n  1830: u64 [s1 + 1064] = 0\n  1834: u64 [s1 + 1056] = 0x2\n  1839: u64 [s1 + 1112] = 0\n  1843: u64 [s1 + 1104] = 0\n  1847: u64 [s1 + 1096] = 0\n  1851: u64 [s1 + 1088] = 0x2\n  1856: a0 = s1 + 0x420\n  1860: a1 = s1 + 0x440\n  1864: ra = 34, jump @25\n      : @53 [@dyn 17] (gas: 8)\n  1869: a0 = 0x30270\n  1874: u64 [s1 + 0x28] = a0\n  1877: i32 a0 = a0 + 0\n  1879: ra = 0x24\n  1882: ecalli 6 // 'caller'\n  1884: a2 = u64 [s1 + 0x28]\n  1887: t0 = 0x26\n  1890: jump @2020\n      : @54 [@dyn 18] (gas: 2)\n  1894: a2 = u64 [s1 + 0x28]\n  1897: t0 = 38, jump @2020\n      : @55 [@dyn 19] (gas: 15)\n  1903: u64 [s1 + 0x28] = a1\n  1906: a0 = a0 >> 0x20\n  1909: a1 = reverse a2\n  1911: a2 = a1 << 0x20\n  1914: a0 = a0 | a2\n  1917: u64 [s1 + 0x20] = a0\n  1920: a1 = a1 >> 0x20\n  1923: u64 [s1 + 0x18] = a1\n  1926: u64 [s1 + 1144] = 0\n  1930: u64 [s1 + 1136] = 0\n  1934: u64 [s1 + 1128] = 0\n  1938: u64 [s1 + 1120] = 0x7\n  1943: a0 = s1 + 0x360\n  1947: a1 = s1 + 0x460\n  1951: ra = 40, jump @21\n      : @56 [@dyn 20] (gas: 18)\n  1956: a0 = u32 [s1 + 0x374]\n  1960: a0 = a0 << 0x20\n  1963: a1 = u64 [s1 + 0x378]\n  1967: a2 = u64 [s1 + 0x18]\n  1970: a0 = a0 | a2\n  1973: u64 [s1 + 1176] = 0\n  1977: u64 [s1 + 1168] = 0\n  1981: u64 [s1 + 1160] = 0\n  1985: u64 [s1 + 1152] = 0x7\n  1990: u64 [s1 + 0x4b8] = a1\n  1994: a1 = u64 [s1 + 0x20]\n  1997: u64 [s1 + 0x4a8] = a1\n  2001: a1 = u64 [s1 + 0x28]\n  2004: u64 [s1 + 0x4a0] = a1\n  2008: u64 [s1 + 0x4b0] = a0\n  2012: a0 = s1 + 0x480\n  2016: a1 = s1 + 0x4a0\n  2020: ra = 42, jump @25\n      : @57 [@dyn 21] (gas: 7)\n  2025: u64 [s1 + 1240] = 0\n  2029: u64 [s1 + 1232] = 0\n  2033: u64 [s1 + 1224] = 0\n  2037: u64 [s1 + 1216] = 0x8\n  2042: a0 = s1 + 0x340\n  2046: a1 = s1 + 0x4c0\n  2050: ra = 44, jump @21\n      : @58 [@dyn 22] (gas: 20)\n  2055: a0 = u32 [s1 + 0x354]\n  2059: a1 = u64 [s1 + 0x358]\n  2063: a0 = a0 << 0x20\n  2066: a2 = u64 [s1 + 0x68]\n  2069: a0 = a0 | a2\n  2072: a2 = u64 [s1 + 0x30]\n  2075: a1 = a1 | a2\n  2078: u64 [s1 + 1272] = 0\n  2082: u64 [s1 + 1264] = 0\n  2086: u64 [s1 + 1256] = 0\n  2090: u64 [s1 + 1248] = 0x8\n  2095: a2 = u64 [s1 + 0x60]\n  2098: u64 [s1 + 0x508] = a2\n  2102: a2 = u64 [s1 + 0x58]\n  2105: u64 [s1 + 0x500] = a2\n  2109: u64 [s1 + 0x518] = a1\n  2113: u64 [s1 + 0x510] = a0\n  2117: a0 = s1 + 0x4e0\n  2121: a1 = s1 + 0x500\n  2125: ra = 46, jump @25\n      : @59 [@dyn 23] (gas: 7)\n  2130: u64 [s1 + 1336] = 0\n  2134: u64 [s1 + 1328] = 0\n  2138: u64 [s1 + 1320] = 0\n  2142: u64 [s1 + 1312] = 0\n  2146: a0 = s1 + 0x520\n  2150: a1 = u64 [s1 + 0x78]\n  2153: ra = 48, jump @25\n      : @60 [@dyn 24] (gas: 7)\n  2158: u64 [s1 + 1368] = 0\n  2162: u64 [s1 + 1360] = 0\n  2166: u64 [s1 + 1352] = 0\n  2170: u64 [s1 + 1344] = 0x1\n  2175: a0 = s1 + 0x540\n  2179: a1 = u64 [s1 + 0x70]\n  2182: ra = 50, jump @25\n      : @61 [@dyn 25] (gas: 9)\n  2187: a0 = u64 [s1 + 0x38]\n  2190: a0 = a0 <u 0x7d1\n  2194: a1 = u64 [s1 + 0x40]\n  2197: a0 = 0 if a1 != 0\n  2199: a1 = u64 [s1 + 0x50]\n  2202: a2 = u64 [s1 + 0x48]\n  2205: a1 = a1 | a2\n  2208: a0 = 0 if a1 != 0\n  2210: jump @75 if a0 != 0\n      : @62 (gas: 3)\n  2214: a0 = s1 + 0x100\n  2218: a1 = 0x40\n  2221: ra = 52, jump @17\n      : @63 [@dyn 26] (gas: 6)\n  2226: a1 = s1 + 0x100\n  2230: a4 = u64 [a1 + 0x18]\n  2233: a5 = u64 [a1 + 0x10]\n  2236: a3 = u64 [a1 + 0x8]\n  2239: a0 = u64 [a1]\n  2241: t0 = 54, jump @1987\n      : @64 [@dyn 27] (gas: 1)\n  2247: jump @111 if a1 != 0\n      : @65 (gas: 11)\n  2251: u64 [s1 + 240] = 0\n  2255: u64 [s1 + 232] = 0\n  2259: u64 [s1 + 224] = 0\n  2263: a2 = 0x8c379a000000000\n  2273: a1 = s1 + 0xe0\n  2277: u64 [s1 + 0xf8] = a2\n  2281: u64 [s1 + 0x78] = a0\n  2284: u64 [s1 + 0x70] = a3\n  2287: u64 [s1 + 0x68] = a4\n  2290: u64 [s1 + 0x60] = a5\n  2293: ra = 56, jump @19\n      : @66 [@dyn 28] (gas: 1)\n  2298: t0 = 58, jump @1998\n      : @67 [@dyn 29] (gas: 1)\n  2304: jump @111 if a0 == 0\n      : @68 (gas: 9)\n  2308: i32 a0 = a1 + 0x4\n  2311: u64 [s1 + 216] = 0\n  2315: u64 [s1 + 208] = 0\n  2319: u64 [s1 + 192] = 0x20\n  2324: a1 = s1 + 0xc0\n  2328: u64 [s1 + 200] = 0\n  2332: u64 [s1 + 0x68] = a3\n  2335: u64 [s1 + 0x60] = a4\n  2338: ra = 60, jump @19\n      : @69 [@dyn 30] (gas: 5)\n  2343: a3 = u64 [s1 + 0x68]\n  2346: a2 = u64 [s1 + 0x70]\n  2349: a1 = u64 [s1 + 0x78]\n  2352: a0 = u64 [s1 + 0x60]\n  2355: t0 = 62, jump @1964\n      : @70 [@dyn 31] (gas: 1)\n  2361: jump @111 if a0 == 0\n      : @71 (gas: 7)\n  2365: i32 a0 = a1 + 0x24\n  2368: u64 [s1 + 184] = 0\n  2372: u64 [s1 + 176] = 0\n  2376: u64 [s1 + 160] = 0xc\n  2381: a1 = s1 + 0xa0\n  2385: u64 [s1 + 168] = 0\n  2389: ra = 64, jump @19\n      : @72 [@dyn 32] (gas: 1)\n  2394: t0 = 66, jump @2008\n      : @73 [@dyn 33] (gas: 1)\n  2400: jump @111 if a0 == 0\n      : @74 (gas: 10)\n  2404: i32 a0 = a2 + 0x44\n  2407: a1 = u64 [0x20030]\n  2412: u64 [s1 + 136] = 0\n  2416: u64 [s1 + 0x98] = a1\n  2420: a1 = 0x6869676800000000\n  2430: u64 [s1 + 0x90] = a1\n  2434: a1 = s1 + 0x80\n  2438: u64 [s1 + 128] = 0\n  2442: ra = 0x54\n  2445: jump @19\n      : @75 (gas: 8)\n  2448: a0 = u64 [s1 + 0x68]\n  2451: a0 = a0 << 0x20\n  2454: a0 = a0 >> 0x20\n  2457: a1 = u64 [s1 + 0x60]\n  2460: a2 = u64 [s1 + 0x58]\n  2463: a1 = a1 | a2\n  2466: a0 = a0 | a1\n  2469: jump @92 if a0 != 0\n      : @76 (gas: 3)\n  2473: a0 = s1 + 0x1a0\n  2477: a1 = 0x40\n  2480: ra = 68, jump @17\n      : @77 [@dyn 34] (gas: 6)\n  2485: a1 = s1 + 0x100\n  2489: a4 = u64 [a1 + 0xb8]\n  2493: a5 = u64 [a1 + 0xb0]\n  2497: a3 = u64 [a1 + 0xa8]\n  2501: a0 = u64 [a1 + 0xa0]\n  2505: t0 = 70, jump @1987\n      : @78 [@dyn 35] (gas: 1)\n  2511: jump @111 if a1 != 0\n      : @79 (gas: 11)\n  2515: u64 [s1 + 400] = 0\n  2519: u64 [s1 + 392] = 0\n  2523: u64 [s1 + 384] = 0\n  2527: a2 = 0x8c379a000000000\n  2537: a1 = s1 + 0x180\n  2541: u64 [s1 + 0x198] = a2\n  2545: u64 [s1 + 0x78] = a0\n  2548: u64 [s1 + 0x70] = a3\n  2551: u64 [s1 + 0x68] = a4\n  2554: u64 [s1 + 0x60] = a5\n  2557: ra = 72, jump @19\n      : @80 [@dyn 36] (gas: 1)\n  2562: t0 = 74, jump @1998\n      : @81 [@dyn 37] (gas: 1)\n  2568: jump @111 if a0 == 0\n      : @82 (gas: 9)\n  2572: i32 a0 = a1 + 0x4\n  2575: u64 [s1 + 376] = 0\n  2579: u64 [s1 + 368] = 0\n  2583: u64 [s1 + 352] = 0x20\n  2588: a1 = s1 + 0x160\n  2592: u64 [s1 + 360] = 0\n  2596: u64 [s1 + 0x68] = a3\n  2599: u64 [s1 + 0x60] = a4\n  2602: ra = 76, jump @19\n      : @83 [@dyn 38] (gas: 5)\n  2607: a3 = u64 [s1 + 0x68]\n  2610: a2 = u64 [s1 + 0x70]\n  2613: a1 = u64 [s1 + 0x78]\n  2616: a0 = u64 [s1 + 0x60]\n  2619: t0 = 78, jump @1964\n      : @84 [@dyn 39] (gas: 1)\n  2625: jump @111 if a0 == 0\n      : @85 (gas: 7)\n  2629: i32 a0 = a1 + 0x24\n  2632: u64 [s1 + 344] = 0\n  2636: u64 [s1 + 336] = 0\n  2640: u64 [s1 + 320] = 0x13\n  2645: a1 = s1 + 0x140\n  2649: u64 [s1 + 328] = 0\n  2653: ra = 80, jump @19\n      : @86 [@dyn 40] (gas: 1)\n  2658: t0 = 82, jump @2008\n      : @87 [@dyn 41] (gas: 1)\n  2664: jump @111 if a0 == 0\n      : @88 (gas: 11)\n  2668: i32 a0 = a2 + 0x44\n  2671: a1 = u64 [0x20020]\n  2676: a2 = u64 [0x20028]\n  2681: a3 = s1 + 0x100\n  2685: u64 [a3 + 0x38] = a1\n  2688: u64 [a3 + 0x30] = a2\n  2691: a1 = 0x6c65740000000000\n  2701: u64 [a3 + 0x28] = a1\n  2704: a1 = s1 + 0x120\n  2708: u64 [s1 + 288] = 0\n  2712: ra = 84, jump @19\n      : @89 [@dyn 42] (gas: 3)\n  2717: a1 = 0x64\n  2720: a0 = u64 [s1 + 0x78]\n  2723: ra = 86, jump @32\n      : @90 [@dyn 43] (gas: 1)\n  2728: t0 = 88, jump @1995\n      : @91 [@dyn 44] (gas: 2)\n  2734: ecalli 14 // 'seal_return'\n  2736: fallthrough\n      : @92 (gas: 11)\n  2737: u64 [s1 + 1400] = 0\n  2741: u64 [s1 + 1392] = 0\n  2745: u64 [s1 + 1384] = 0\n  2749: u64 [s1 + 1376] = 0x9\n  2754: u64 [s1 + 1432] = 0\n  2758: u64 [s1 + 1424] = 0\n  2762: u64 [s1 + 1416] = 0\n  2766: u64 [s1 + 1408] = 0x1\n  2771: a0 = s1 + 0x560\n  2775: a1 = s1 + 0x580\n  2779: ra = 90, jump @25\n      : @93 [@dyn 45] (gas: 7)\n  2784: u64 [s1 + 1464] = 0\n  2788: u64 [s1 + 1456] = 0\n  2792: u64 [s1 + 1448] = 0\n  2796: u64 [s1 + 1440] = 0x4\n  2801: a0 = s1 + 0x320\n  2805: a1 = s1 + 0x5a0\n  2809: ra = 92, jump @21\n      : @94 [@dyn 46] (gas: 17)\n  2814: a4 = s1 + 0x300\n  2818: a0 = u64 [a4 + 0x20]\n  2821: a1 = u64 [a4 + 0x38]\n  2824: a2 = u64 [a4 + 0x28]\n  2827: a3 = u64 [a4 + 0x30]\n  2830: a4 = a0 + 0x1\n  2833: a0 = a4 <u 0x1\n  2836: a2 = a2 + a0\n  2839: a0 = a4 | a2\n  2842: a0 = a0 <u 0x1\n  2845: a5 = a3 + a0\n  2848: a0 = a5 <u a3\n  2851: a3 = a1 + a0\n  2854: a0 = a2 | a3\n  2857: a1 = a4 | a5\n  2860: a0 = a0 | a1\n  2863: jump @115 if a0 == 0\n      : @95 (gas: 17)\n  2867: a1 = sp + 0xffffffffffffffe0\n  2870: a1 = a1 & 0xffffffffffffffe0\n  2873: sp = a1\n  2875: u64 [a1 + 0x18] = a3\n  2878: u64 [a1 + 0x10] = a5\n  2881: u64 [a1 + 0x8] = a2\n  2884: u64 [a1] = a4\n  2886: u64 [s1 + 1496] = 0\n  2890: u64 [s1 + 1488] = 0\n  2894: u64 [s1 + 1480] = 0\n  2898: u64 [s1 + 1472] = 0x4\n  2903: a0 = s1 + 0x5c0\n  2907: u64 [s1 + 0x78] = a4\n  2910: u64 [s1 + 0x70] = a2\n  2913: u64 [s1 + 0x68] = a5\n  2916: u64 [s1 + 0x60] = a3\n  2919: ra = 94, jump @25\n      : @96 [@dyn 47] (gas: 12)\n  2924: a0 = u64 [s1 + 0x60]\n  2927: a2 = s1 + 0x300\n  2931: u64 [a2 + 0x18] = a0\n  2934: a0 = u64 [s1 + 0x68]\n  2937: u64 [a2 + 0x10] = a0\n  2940: a0 = u64 [s1 + 0x70]\n  2943: u64 [a2 + 0x8] = a0\n  2946: a1 = s1 + 0x300\n  2950: a0 = u64 [s1 + 0x78]\n  2953: u64 [a2] = a0\n  2955: a0 = 0\n  2957: ra = 96, jump @19\n      : @97 [@dyn 48] (gas: 7)\n  2962: u64 [s1 + 760] = 0\n  2966: u64 [s1 + 752] = 0\n  2970: u64 [s1 + 736] = 0x3\n  2975: a0 = 0x20\n  2978: a1 = s1 + 0x2e0\n  2982: u64 [s1 + 744] = 0\n  2986: ra = 98, jump @19\n      : @98 [@dyn 49] (gas: 2)\n  2991: a1 = i32 [0x2025c]\n  2996: jump @100 if a1 >u 63\n      : @99 (gas: 2)\n  3000: u32 [0x2025c] = 0x40\n  3006: fallthrough\n      : @100 (gas: 51)\n  3007: a0 = sp + 0xffffffffffffffe0\n  3010: a2 = a0 & 0xffffffffffffffe0\n  3013: u64 [s1 + 0x78] = a2\n  3016: sp = a2\n  3018: a0 = 0x20270\n  3023: i32 a0 = a0 + 0\n  3025: i32 a2 = a2 + 0\n  3027: a1 = 0x40\n  3030: ecalli 9 // 'hash_keccak_256'\n  3032: a3 = u64 [s1 + 0x78]\n  3035: a0 = u64 [a3]\n  3037: a1 = u64 [a3 + 0x8]\n  3040: a2 = u64 [a3 + 0x10]\n  3043: a3 = u64 [a3 + 0x18]\n  3046: a0 = reverse a0\n  3048: u64 [s1 + 0x78] = a0\n  3051: a0 = reverse a1\n  3053: u64 [s1 + 0x70] = a0\n  3056: a0 = reverse a2\n  3058: u64 [s1 + 0x68] = a0\n  3061: a0 = reverse a3\n  3063: u64 [s1 + 0x60] = a0\n  3066: i32 a0 = s1 + 0x5e0\n  3070: ecalli 10 // 'now'\n  3072: t0 = u64 [s1 + 0x5e0]\n  3076: t1 = u64 [s1 + 0x5e8]\n  3080: t2 = u64 [s1 + 0x5f0]\n  3084: a3 = u64 [s1 + 0x5f8]\n  3088: a0 = u64 [s1 + 0x60]\n  3091: a4 = a0 + 0x14\n  3094: a5 = a4 <u a0\n  3097: a1 = u64 [s1 + 0x68]\n  3100: a0 = a1 + a5\n  3103: a1 = a0 <u a1\n  3106: a1 = a5 if a5 == 0\n  3109: a2 = u64 [s1 + 0x70]\n  3112: a1 = a1 + a2\n  3115: a5 = a1 <u a2\n  3118: a2 = u64 [s1 + 0x78]\n  3121: a5 = a5 + a2\n  3124: u64 [s1 + 0x600] = a4\n  3128: u64 [s1 + 0x608] = a0\n  3132: u64 [s1 + 0x610] = a1\n  3136: u64 [s1 + 0x618] = a5\n  3140: u64 [s1 + 0x638] = a3\n  3144: u64 [s1 + 0x630] = t2\n  3148: u64 [s1 + 0x628] = t1\n  3152: u64 [s1 + 0x620] = t0\n  3156: a0 = s1 + 0x600\n  3160: a1 = s1 + 0x620\n  3164: ra = 100, jump @25\n      : @101 [@dyn 50] (gas: 7)\n  3169: u64 [s1 + 1624] = 0\n  3173: u64 [s1 + 1616] = 0\n  3177: u64 [s1 + 1608] = 0\n  3181: u64 [s1 + 1600] = 0x4\n  3186: a0 = s1 + 0x2c0\n  3190: a1 = s1 + 0x640\n  3194: ra = 102, jump @21\n      : @102 [@dyn 51] (gas: 15)\n  3199: a0 = u64 [s1 + 0x2d8]\n  3203: u64 [s1 + 0x60] = a0\n  3206: a0 = u64 [s1 + 0x2d0]\n  3210: u64 [s1 + 0x68] = a0\n  3213: a0 = u64 [s1 + 0x2c8]\n  3217: u64 [s1 + 0x70] = a0\n  3220: a0 = u64 [s1 + 0x2c0]\n  3224: u64 [s1 + 0x78] = a0\n  3227: u64 [s1 + 1656] = 0\n  3231: u64 [s1 + 1648] = 0\n  3235: u64 [s1 + 1640] = 0\n  3239: u64 [s1 + 1632] = 0\n  3243: a0 = s1 + 0x2a0\n  3247: a1 = s1 + 0x660\n  3251: ra = 104, jump @21\n      : @103 [@dyn 52] (gas: 11)\n  3256: a0 = u64 [s1 + 0x2b8]\n  3260: u64 [s1 + 0x58] = a0\n  3263: a0 = u64 [s1 + 0x2b0]\n  3267: u64 [s1 + 0x50] = a0\n  3270: a0 = u64 [s1 + 0x2a8]\n  3274: u64 [s1 + 0x48] = a0\n  3277: a0 = u64 [s1 + 0x2a0]\n  3281: u64 [s1 + 0x40] = a0\n  3284: a0 = s1 + 0x280\n  3288: a1 = 0x40\n  3291: ra = 106, jump @17\n      : @104 [@dyn 53] (gas: 6)\n  3296: a4 = s1 + 0x200\n  3300: a3 = u64 [a4 + 0x98]\n  3304: a1 = u64 [a4 + 0x90]\n  3308: a2 = u64 [a4 + 0x88]\n  3312: a0 = u64 [a4 + 0x80]\n  3316: t0 = 108, jump @1996\n      : @105 [@dyn 54] (gas: 1)\n  3322: jump @111 if a1 != 0\n      : @106 (gas: 11)\n  3326: a1 = u64 [s1 + 0x40]\n  3329: u64 [s1 + 0x260] = a1\n  3333: a1 = u64 [s1 + 0x48]\n  3336: u64 [s1 + 0x268] = a1\n  3340: a1 = u64 [s1 + 0x50]\n  3343: u64 [s1 + 0x270] = a1\n  3347: a1 = s1 + 0x260\n  3351: a2 = u64 [s1 + 0x58]\n  3354: u64 [s1 + 0x278] = a2\n  3358: u64 [s1 + 0x58] = a0\n  3361: ra = 110, jump @19\n      : @107 [@dyn 55] (gas: 21)\n  3366: a0 = u64 [s1 + 0x60]\n  3369: u64 [s1 + 0x238] = a0\n  3373: a0 = u64 [s1 + 0x68]\n  3376: u64 [s1 + 0x230] = a0\n  3380: a0 = u64 [s1 + 0x70]\n  3383: u64 [s1 + 0x228] = a0\n  3387: a0 = u64 [0x20000]\n  3392: a1 = u64 [0x20008]\n  3397: a2 = u64 [0x20010]\n  3402: a3 = u64 [s1 + 0x78]\n  3405: u64 [s1 + 0x220] = a3\n  3409: u64 [s1 + 0x258] = a0\n  3413: u64 [s1 + 0x250] = a1\n  3417: u64 [s1 + 0x248] = a2\n  3421: a0 = u64 [0x20018]\n  3426: a1 = 0x20\n  3429: a2 = s1 + 0x240\n  3433: a3 = s1 + 0x220\n  3437: u64 [s1 + 0x240] = a0\n  3441: a0 = u64 [s1 + 0x58]\n  3444: ra = 112, jump @26\n      : @108 [@dyn 56] (gas: 3)\n  3449: a0 = s1 + 0x200\n  3453: a1 = 0x40\n  3456: ra = 114, jump @17\n      : @109 [@dyn 57] (gas: 6)\n  3461: a4 = s1 + 0x200\n  3465: a3 = u64 [a4 + 0x18]\n  3468: a1 = u64 [a4 + 0x10]\n  3471: a2 = u64 [a4 + 0x8]\n  3474: a0 = u64 [a4]\n  3476: t0 = 116, jump @1996\n      : @110 [@dyn 58] (gas: 1)\n  3482: jump @121 if a1 == 0\n      : @111 (gas: 1)\n  3486: trap\n      : @112 (gas: 6)\n  3487: a1 = 0x20270\n  3492: i32 a1 = a1 + 0\n  3494: a0 = 0x1\n  3497: a2 = 0\n  3499: ecalli 14 // 'seal_return'\n  3501: jump @115\n      : @113 (gas: 6)\n  3503: a1 = 0x20270\n  3508: i32 a1 = a1 + 0\n  3510: a0 = 0x1\n  3513: a2 = 0\n  3515: ecalli 14 // 'seal_return'\n  3517: jump @115\n      : @114 (gas: 6)\n  3519: a1 = 0x20270\n  3524: i32 a1 = a1 + 0\n  3526: a0 = 0x1\n  3529: a2 = 0\n  3531: ecalli 14 // 'seal_return'\n  3533: fallthrough\n      : @115 (gas: 6)\n  3534: u64 [s1 + 496] = 0\n  3538: u64 [s1 + 488] = 0\n  3542: u64 [s1 + 480] = 0\n  3546: t0 = 0x76\n  3549: a0 = 0x4e487b7100000000\n  3559: fallthrough\n      : @116 [@dyn 59] (gas: 4)\n  3560: a1 = s1 + 0x1e0\n  3564: u64 [s1 + 0x1f8] = a0\n  3568: a0 = 0\n  3570: ra = 120, jump @19\n      : @117 [@dyn 60] (gas: 7)\n  3575: u64 [s1 + 472] = 0\n  3579: u64 [s1 + 464] = 0\n  3583: u64 [s1 + 448] = 0x11\n  3588: a0 = 0x4\n  3591: a1 = s1 + 0x1c0\n  3595: u64 [s1 + 456] = 0\n  3599: ra = 122, jump @19\n      : @118 [@dyn 61] (gas: 2)\n  3604: a1 = i32 [0x2025c]\n  3609: jump @120 if a1 >u 63\n      : @119 (gas: 2)\n  3613: u32 [0x2025c] = 0x40\n  3619: fallthrough\n      : @120 (gas: 8)\n  3620: a1 = 0x20270\n  3625: i32 a1 = a1 + 0\n  3627: a0 = 0x1\n  3630: a2 = 0x24\n  3633: ecalli 14 // 'seal_return'\n  3635: u64 [s1 + 0x78] = a0\n  3638: ra = 0x7c\n  3641: jump @32\n      : @121 (gas: 2)\n  3644: u64 [s1 + 0x78] = a0\n  3647: ra = 124, jump @32\n      : @122 [@dyn 62] (gas: 5)\n  3652: i32 a0 = a0 + 0\n  3654: a1 = 0\n  3656: a2 = 0\n  3658: ecalli 3 // 'call_data_copy'\n  3660: jump @15\n      : @123 (gas: 3)\n  3663: a0 = u64 [s1 + 0x78]\n  3666: a1 = 0\n  3668: ra = 126, jump @32\n      : @124 [@dyn 63] (gas: 5)\n  3673: i32 a1 = a0 + 0\n  3675: a0 = 0\n  3677: a2 = 0\n  3679: ecalli 14 // 'seal_return'\n  3681: jump @115\n      : @125 [@dyn 64] (gas: 4)\n  3684: a0 = 0x20258\n  3689: u64 [s1 + 0x138] = a0\n  3693: a0 = i32 [0x20258]\n  3698: jump @127 if a0 >=u 4\n      : @126 (gas: 1)\n  3702: jump @1266\n      : @127 (gas: 8)\n  3705: a0 = s1 + 0x3000\n  3709: i32 a0 = a0 + 0x100\n  3713: a1 = 0\n  3715: ra = 0x82\n  3719: ecalli 4 // 'call_data_load'\n  3721: t0 = 0x84\n  3725: a3 = s1 + 0x30b8\n  3729: jump @129\n      : @128 [@dyn 65] (gas: 3)\n  3731: t0 = 0x84\n  3735: a3 = s1 + 0x30b8\n  3739: fallthrough\n      : @129 [@dyn 66] (gas: 2)\n  3740: a0 = i32 [a3 + 0x64]\n  3743: jump @131 if a0 != 2335308681\n      : @130 (gas: 1)\n  3750: jump @810\n      : @131 (gas: 1)\n  3753: jump @133 if a0 != 2376452955\n      : @132 (gas: 1)\n  3760: jump @651\n      : @133 (gas: 2)\n  3763: a2 = s1 + 0x38b8\n  3767: jump @135 if a0 != 2404364232\n      : @134 (gas: 1)\n  3774: jump @610\n      : @135 (gas: 1)\n  3777: jump @137 if a0 != 2543054088\n      : @136 (gas: 1)\n  3784: jump @841\n      : @137 (gas: 2)\n  3787: a4 = s1 + 0x40b8\n  3791: jump @139 if a0 != 2853709350\n      : @138 (gas: 1)\n  3798: jump @715\n      : @139 (gas: 1)\n  3801: jump @141 if a0 != 3070914028\n      : @140 (gas: 1)\n  3808: jump @582\n      : @141 (gas: 1)\n  3811: jump @203 if a0 == 3248441637\n      : @142 (gas: 1)\n  3819: jump @144 if a0 != 3368156330\n      : @143 (gas: 1)\n  3826: jump @437\n      : @144 (gas: 1)\n  3829: jump @253 if a0 == 3730383667\n      : @145 (gas: 1)\n  3837: jump @147 if a0 != 3933699820\n      : @146 (gas: 1)\n  3844: jump @663\n      : @147 (gas: 1)\n  3847: jump @149 if a0 != 4076725131\n      : @148 (gas: 1)\n  3854: jump @343\n      : @149 (gas: 1)\n  3857: jump @151 if a0 != 293231504\n      : @150 (gas: 1)\n  3864: jump @285\n      : @151 (gas: 1)\n  3867: jump @153 if a0 != 661702805\n      : @152 (gas: 1)\n  3874: jump @756\n      : @153 (gas: 1)\n  3877: jump @155 if a0 != 661997429\n      : @154 (gas: 1)\n  3884: jump @375\n      : @155 (gas: 1)\n  3887: jump @157 if a0 != 817300627\n      : @156 (gas: 1)\n  3894: jump @767\n      : @157 (gas: 1)\n  3897: jump @159 if a0 != 969432063\n      : @158 (gas: 1)\n  3904: jump @476\n      : @159 (gas: 1)\n  3907: jump @161 if a0 != 1205982544\n      : @160 (gas: 1)\n  3914: jump @677\n      : @161 (gas: 1)\n  3917: jump @163 if a0 != 1399471580\n      : @162 (gas: 1)\n  3924: jump @638\n      : @163 (gas: 1)\n  3927: jump @165 if a0 != 1502769220\n      : @164 (gas: 1)\n  3934: jump @331\n      : @165 (gas: 1)\n  3937: jump @167 if a0 != 1553423035\n      : @166 (gas: 1)\n  3944: jump @464\n      : @167 (gas: 1)\n  3947: jump @169 if a0 != 1763039112\n      : @168 (gas: 1)\n  3954: jump @404\n      : @169 (gas: 1)\n  3957: jump @171 if a0 == 2092118715\n      : @170 (gas: 1)\n  3964: jump @570\n      : @171 (gas: 9)\n  3967: u64 [a2 + 832] = 0\n  3971: u64 [a2 + 824] = 0\n  3975: u64 [a2 + 816] = 0\n  3979: u64 [a2 + 808] = 0\n  3983: a0 = s1 + 0x4000\n  3987: i32 a0 = a0 + 0xfffffffffffffbe0\n  3991: ra = 0x86\n  3995: ecalli 17 // 'value_transferred'\n  3997: fallthrough\n      : @172 [@dyn 67] (gas: 10)\n  3998: a3 = s1 + 0x38b8\n  4002: a4 = a3 + 0x300\n  4006: a0 = u64 [a4 + 0x38]\n  4009: a1 = u64 [a4 + 0x40]\n  4012: a2 = u64 [a4 + 0x30]\n  4015: a3 = u64 [a4 + 0x28]\n  4018: a1 = a1 | a2\n  4021: a0 = a0 | a3\n  4024: a0 = a0 | a1\n  4027: jump @174 if a0 == 0\n      : @173 (gas: 1)\n  4030: jump @1174\n      : @174 (gas: 1)\n  4033: t0 = 136, jump @1994\n      : @175 [@dyn 68] (gas: 1)\n  4040: jump @177 if a1 <u a0\n      : @176 (gas: 1)\n  4043: jump @1175\n      : @177 (gas: 6)\n  4046: a0 = s1 + 0x4000\n  4050: i32 a0 = a0 + 0xfffffffffffffc00\n  4054: a1 = 0x4\n  4057: ra = 0x8a\n  4061: ecalli 4 // 'call_data_load'\n  4063: fallthrough\n      : @178 [@dyn 69] (gas: 4)\n  4064: a2 = s1 + 0x38b8\n  4068: a1 = u64 [a2 + 0x358]\n  4072: a3 = u64 [a2 + 0x360]\n  4076: t0 = 140, jump @1979\n      : @179 [@dyn 70] (gas: 1)\n  4083: jump @181 if a1 != 0\n      : @180 (gas: 1)\n  4086: jump @1176\n      : @181 (gas: 12)\n  4089: a1 = a2 + 0x300\n  4093: a0 = u64 [a1 + 0x50]\n  4096: u64 [s1 + 0x120] = a0\n  4100: a0 = u64 [a1 + 0x48]\n  4103: u64 [s1 + 0x128] = a0\n  4107: u64 [a2 + 896] = 0\n  4111: u64 [a2 + 888] = 0\n  4115: u64 [a2 + 880] = 0\n  4119: u64 [a1 + 104] = 0x7\n  4123: a0 = s1 + 0x1cc0\n  4127: a1 = s1 + 0x3c20\n  4131: ra = 142, jump @21\n      : @182 [@dyn 71] (gas: 15)\n  4137: a0 = s1 + 0x18b8\n  4141: a1 = u64 [a0 + 0x410]\n  4145: u64 [s1 + 0x118] = a1\n  4149: a1 = u64 [a0 + 0x408]\n  4153: u64 [s1 + 0x110] = a1\n  4157: a0 = u32 [a0 + 0x418]\n  4161: u64 [s1 + 0x108] = a0\n  4165: a0 = 0x30270\n  4170: u64 [s1 + 0x100] = a0\n  4174: i32 a0 = a0 + 0\n  4176: ra = 0x90\n  4180: ecalli 6 // 'caller'\n  4182: a2 = u64 [s1 + 0x100]\n  4186: t0 = 0x92\n  4190: jump @1961\n      : @183 [@dyn 72] (gas: 2)\n  4194: a2 = u64 [s1 + 0x100]\n  4198: t0 = 146, jump @1961\n      : @184 [@dyn 73] (gas: 18)\n  4205: a2 = u64 [s1 + 0x108]\n  4209: a1 = a1 ^ a2\n  4212: a2 = u64 [s1 + 0x110]\n  4216: a0 = a0 ^ a2\n  4219: a0 = a0 | a1\n  4222: a1 = u64 [s1 + 0x118]\n  4226: a1 = a1 ^ a3\n  4229: a0 = a0 | a1\n  4232: a0 = a0 <u 0x1\n  4235: a1 = s1 + 0x18b8\n  4239: u64 [a1 + 1024] = 0\n  4243: u64 [a1 + 1016] = 0\n  4247: u64 [a1 + 0x3e8] = a0\n  4251: a0 = s1 + 0x1ca0\n  4255: u64 [a1 + 1008] = 0\n  4259: ra = 0x94\n  4263: t0 = 0x562\n  4267: jump @1953\n      : @185 [@dyn 74] (gas: 9)\n  4271: a3 = s1 + 0x100\n  4275: a0 = u64 [a3 + 0x38]\n  4278: a1 = u64 [a3 + 0x28]\n  4281: a0 = a0 | a1\n  4284: a1 = u64 [a3 + 0x30]\n  4287: a2 = u64 [a3 + 0x20]\n  4290: a1 = a1 | a2\n  4293: a0 = a0 | a1\n  4296: jump @187 if a0 == 0\n      : @186 (gas: 1)\n  4299: jump @1177\n      : @187 (gas: 3)\n  4302: a0 = s1 + 0x1c60\n  4306: a1 = 0x40\n  4309: ra = 150, jump @17\n      : @188 [@dyn 75] (gas: 14)\n  4315: a4 = s1 + 0x18b8\n  4319: t0 = u64 [a4 + 0x3c0]\n  4323: a1 = a4 + 0x300\n  4327: a5 = u64 [a1 + 0xb8]\n  4331: a3 = u64 [a1 + 0xb0]\n  4335: a0 = u64 [a1 + 0xa8]\n  4339: a2 = a3 | t0\n  4342: a1 = a0 | a5\n  4345: a1 = a1 | a2\n  4348: a1 = a1 >> 0x20\n  4351: a2 = a2 | a5\n  4354: a2 = a2 << 0x20\n  4357: a1 = a1 | a2\n  4360: jump @190 if a1 == 0\n      : @189 (gas: 1)\n  4363: jump @1123\n      : @190 (gas: 11)\n  4366: u64 [a4 + 920] = 0\n  4370: u64 [a4 + 912] = 0\n  4374: u64 [a4 + 904] = 0\n  4378: u64 [s1 + 0x130] = a3\n  4382: a3 = 0x8c379a000000000\n  4392: a1 = s1 + 0x1c40\n  4396: u64 [a4 + 0x3a0] = a3\n  4400: u64 [s1 + 0x138] = a0\n  4404: u64 [s1 + 0x128] = t0\n  4408: u64 [s1 + 0x120] = a5\n  4412: ra = 152, jump @19\n      : @191 [@dyn 76] (gas: 6)\n  4418: a5 = s1 + 0x100\n  4422: a1 = u64 [a5 + 0x38]\n  4425: a0 = u64 [a5 + 0x28]\n  4428: a3 = u64 [a5 + 0x20]\n  4431: a3 = a3 | a0\n  4434: t0 = 154, jump @1957\n      : @192 [@dyn 77] (gas: 1)\n  4441: jump @194 if a0 != 0\n      : @193 (gas: 1)\n  4444: jump @1123\n      : @194 (gas: 10)\n  4447: i32 a0 = a1 + 0x4\n  4450: a2 = s1 + 0x18b8\n  4454: u64 [a2 + 896] = 0\n  4458: u64 [a2 + 888] = 0\n  4462: u64 [a2 + 872] = 0x20\n  4467: a1 = s1 + 0x1c20\n  4471: u64 [a2 + 880] = 0\n  4475: u64 [s1 + 0x128] = a3\n  4479: u64 [s1 + 0x120] = a4\n  4483: ra = 156, jump @19\n      : @195 [@dyn 78] (gas: 1)\n  4489: t0 = 158, jump @1955\n      : @196 [@dyn 79] (gas: 1)\n  4496: jump @198 if a0 != 0\n      : @197 (gas: 1)\n  4499: jump @1123\n      : @198 (gas: 8)\n  4502: i32 a0 = a1 + 0x24\n  4505: a3 = s1 + 0x18b8\n  4509: u64 [a3 + 864] = 0\n  4513: u64 [a3 + 856] = 0\n  4517: u64 [a3 + 840] = 0xe\n  4522: a1 = s1 + 0x1c00\n  4526: u64 [a3 + 848] = 0\n  4530: ra = 160, jump @19\n      : @199 [@dyn 80] (gas: 1)\n  4536: t0 = 162, jump @1956\n      : @200 [@dyn 81] (gas: 1)\n  4543: jump @202 if a0 != 0\n      : @201 (gas: 1)\n  4546: jump @1123\n      : @202 (gas: 11)\n  4549: i32 a0 = a3 + 0x44\n  4552: a1 = u64 [0x20038]\n  4557: a2 = u64 [0x200a8]\n  4562: a4 = s1 + 0x18b8\n  4566: u64 [a4 + 0x340] = a1\n  4570: u64 [a4 + 816] = 0\n  4574: u64 [a4 + 0x338] = a2\n  4578: a1 = s1 + 0x1be0\n  4582: u64 [a4 + 808] = 0\n  4586: ra = 0x404\n  4590: jump @19\n      : @203 (gas: 9)\n  4593: u64 [a4 + 288] = 0\n  4597: u64 [a4 + 280] = 0\n  4601: u64 [a4 + 272] = 0\n  4605: u64 [a4 + 264] = 0\n  4609: a0 = s1 + 0x4000\n  4613: i32 a0 = a0 + 0x1c0\n  4617: ra = 0xa4\n  4621: ecalli 17 // 'value_transferred'\n  4623: fallthrough\n      : @204 [@dyn 82] (gas: 3)\n  4624: a4 = s1 + 0x40b8\n  4628: a5 = a4 + 0x100\n  4632: t0 = 166, jump @2029\n      : @205 [@dyn 83] (gas: 1)\n  4639: jump @207 if a0 == 0\n      : @206 (gas: 1)\n  4642: jump @1180\n      : @207 (gas: 3)\n  4645: a0 = u64 [s1 + 0x138]\n  4649: a0 = i32 [a0]\n  4651: jump @209 if a0 >u 3\n      : @208 (gas: 1)\n  4655: jump @1181\n      : @209 (gas: 7)\n  4658: u64 [a4 + 320] = 0\n  4662: u64 [a4 + 312] = 0\n  4666: u64 [a4 + 304] = 0\n  4670: u64 [a4 + 296] = 0x4\n  4675: a0 = s1 + 0x2d00\n  4679: a1 = s1 + 0x41e0\n  4683: ra = 168, jump @21\n      : @210 [@dyn 84] (gas: 13)\n  4689: a4 = s1 + 0x28b8\n  4693: a5 = a4 + 0x400\n  4697: a0 = u64 [a5 + 0x48]\n  4700: a1 = u64 [a5 + 0x50]\n  4703: a2 = u64 [a5 + 0x58]\n  4706: a3 = u64 [a5 + 0x60]\n  4709: u64 [a5 + 0x40] = a3\n  4712: u64 [a5 + 0x38] = a2\n  4715: u64 [a5 + 0x30] = a1\n  4718: a1 = s1 + 0x2ce0\n  4722: u64 [a5 + 0x28] = a0\n  4725: a0 = 0\n  4727: ra = 170, jump @19\n      : @211 [@dyn 85] (gas: 3)\n  4733: t0 = 0xac\n  4737: a1 = s1 + 0x28b8\n  4741: fallthrough\n      : @212 [@dyn 86] (gas: 8)\n  4742: u64 [a1 + 1056] = 0\n  4746: u64 [a1 + 1048] = 0\n  4750: u64 [a1 + 1032] = 0x3\n  4755: a2 = a1\n  4757: a0 = 0x20\n  4760: a1 = s1 + 0x2cc0\n  4764: u64 [a2 + 1040] = 0\n  4768: ra = 174, jump @19\n      : @213 [@dyn 87] (gas: 3)\n  4774: a2 = 0x2025c\n  4779: a0 = i32 [0x2025c]\n  4784: jump @215 if a0 >u 63\n      : @214 (gas: 2)\n  4788: u32 [0x2025c] = 0x40\n  4794: fallthrough\n      : @215 (gas: 41)\n  4795: u64 [s1 + 0x128] = a2\n  4799: a0 = sp + 0xffffffffffffffe0\n  4802: a2 = a0 & 0xffffffffffffffe0\n  4805: u64 [s1 + 0x130] = a2\n  4809: sp = a2\n  4811: a0 = 0x20270\n  4816: i32 a0 = a0 + 0\n  4818: i32 a2 = a2 + 0\n  4820: a1 = 0x40\n  4823: u64 [s1 + 0x120] = a0\n  4827: ecalli 9 // 'hash_keccak_256'\n  4829: a3 = u64 [s1 + 0x130]\n  4833: a0 = u64 [a3]\n  4835: a1 = u64 [a3 + 0x8]\n  4838: a2 = u64 [a3 + 0x10]\n  4841: a3 = u64 [a3 + 0x18]\n  4844: a4 = reverse a0\n  4846: a5 = reverse a1\n  4848: a2 = reverse a2\n  4850: a0 = reverse a3\n  4852: t0 = a0 + 0x11\n  4855: u64 [s1 + 0x70] = a0\n  4858: a1 = t0 <u a0\n  4861: a0 = a2 + a1\n  4864: u64 [s1 + 0x78] = a2\n  4867: a3 = a0 <u a2\n  4870: a3 = a1 if a1 == 0\n  4873: a3 = a3 + a5\n  4876: u64 [s1 + 0x80] = a5\n  4880: a1 = a3 <u a5\n  4883: u64 [s1 + 0x88] = a4\n  4887: a1 = a1 + a4\n  4890: a4 = s1 + 0x40b8\n  4894: u64 [a4 + 0x148] = t0\n  4898: a2 = a4 + 0x100\n  4902: u64 [a2 + 0x50] = a0\n  4905: u64 [a2 + 0x58] = a3\n  4908: u64 [a2 + 0x60] = a1\n  4911: a0 = s1 + 0x2ca0\n  4915: a1 = s1 + 0x4200\n  4919: ra = 176, jump @21\n      : @216 [@dyn 88] (gas: 15)\n  4925: ra = s1 + 0x28b8\n  4929: t0 = u64 [ra + 0x3e8]\n  4933: a1 = u64 [ra + 0x400]\n  4937: t2 = u64 [ra + 0x3f0]\n  4941: a4 = u64 [ra + 0x3f8]\n  4945: a0 = t0 <u 0x11\n  4948: t1 = a0 ^ 0x1\n  4951: a5 = t2 >u 0\n  4953: a5 = t1 if t2 == 0\n  4956: a0 = a4 >u 0\n  4958: a2 = a1 >u 0\n  4960: a2 = a0 if a1 == 0\n  4963: a3 = a4 | a1\n  4966: a2 = a5 if a3 == 0\n  4969: jump @218 if a2 == 0\n      : @217 (gas: 1)\n  4972: jump @1182\n      : @218 (gas: 21)\n  4975: a2 = -a4\n  4977: a3 = a2 - a5\n  4980: a2 = a2 <u a5\n  4983: a0 = a0 + a1\n  4986: a0 = -a0\n  4988: a2 = a0 - a2\n  4991: a0 = 0x10 - t0\n  4994: t1 = t1 + t2\n  4997: a1 = -t1\n  4999: u64 [s1 + 0x130] = a0\n  5003: a4 = ra + 0x300\n  5007: u64 [a4 + 0xa8] = a0\n  5011: u64 [s1 + 0x118] = a1\n  5015: u64 [a4 + 0xb0] = a1\n  5019: u64 [s1 + 0x128] = a3\n  5023: u64 [a4 + 0xb8] = a3\n  5027: a0 = s1 + 0x2c80\n  5031: a1 = s1 + 0x2c60\n  5035: u64 [s1 + 0x120] = a2\n  5039: u64 [a4 + 0xc0] = a2\n  5043: ra = 178, jump @1913\n      : @219 [@dyn 89] (gas: 3)\n  5050: t0 = 0xb4\n  5054: a1 = s1 + 0x28b8\n  5058: fallthrough\n      : @220 [@dyn 90] (gas: 12)\n  5059: a2 = a1 + 0x300\n  5063: a0 = u64 [a2 + 0xc8]\n  5067: u64 [s1 + 0x110] = a0\n  5071: a0 = u64 [a2 + 0xd0]\n  5075: u64 [s1 + 0x108] = a0\n  5079: a0 = u64 [a2 + 0xd8]\n  5083: u64 [s1 + 0x100] = a0\n  5087: a0 = u64 [a2 + 0xe0]\n  5091: u64 [s1 + 0xf8] = a0\n  5095: a0 = s1 + 0x2c40\n  5099: a1 = 0x40\n  5102: ra = 182, jump @17\n      : @221 [@dyn 91] (gas: 26)\n  5108: a0 = s1 + 0x28b8\n  5112: a1 = u64 [a0 + 0x3a0]\n  5116: u64 [s1 + 0x60] = a1\n  5119: a4 = u64 [a0 + 0x398]\n  5123: u64 [s1 + 0x58] = a4\n  5126: a3 = u64 [a0 + 0x390]\n  5130: u64 [s1 + 0x50] = a3\n  5133: a5 = u64 [a0 + 0x388]\n  5137: u64 [s1 + 0x68] = a5\n  5140: a2 = u64 [s1 + 0xf8]\n  5144: u64 [a0 + 0x360] = a2\n  5148: a2 = u64 [s1 + 0x100]\n  5152: u64 [a0 + 0x358] = a2\n  5156: a2 = u64 [s1 + 0x108]\n  5160: u64 [a0 + 0x350] = a2\n  5164: a2 = u64 [s1 + 0x110]\n  5168: u64 [a0 + 0x348] = a2\n  5172: a2 = a0 + 0x300\n  5176: u64 [a2 + 0x80] = a1\n  5180: u64 [a2 + 0x78] = a4\n  5183: u64 [a2 + 0x70] = a3\n  5186: a2 = a0\n  5188: a0 = s1 + 0x2c20\n  5192: a1 = s1 + 0x2c00\n  5196: u64 [a2 + 0x368] = a5\n  5200: ra = 184, jump @1336\n      : @222 [@dyn 92] (gas: 6)\n  5206: a3 = u64 [s1 + 0x58]\n  5209: a0 = u64 [s1 + 0x68]\n  5212: a1 = u64 [s1 + 0x60]\n  5215: a2 = u64 [s1 + 0x50]\n  5218: a2 = a2 | a1\n  5221: t0 = 186, jump @2024\n      : @223 [@dyn 93] (gas: 1)\n  5228: jump @225 if a1 == 0\n      : @224 (gas: 1)\n  5231: jump @1123\n      : @225 (gas: 12)\n  5234: a2 = s1 + 0x28b8\n  5238: a1 = u64 [s1 + 0x130]\n  5242: a4 = a2 + 0x300\n  5246: u64 [a4 + 0x28] = a1\n  5249: a1 = u64 [s1 + 0x118]\n  5253: u64 [a4 + 0x30] = a1\n  5256: a1 = u64 [s1 + 0x128]\n  5260: u64 [a4 + 0x38] = a1\n  5263: a1 = s1 + 0x2be0\n  5267: a3 = u64 [s1 + 0x120]\n  5271: u64 [a4 + 0x40] = a3\n  5274: ra = 188, jump @19\n      : @226 [@dyn 94] (gas: 14)\n  5280: a3 = s1 + 0x28b8\n  5284: a4 = s1 + 0x100\n  5288: a0 = u64 [a4 + 0x20]\n  5291: u64 [a3 + 0x300] = a0\n  5295: a0 = u64 [a4 + 0x28]\n  5298: a5 = a3 + 0x200\n  5302: u64 [a5 + 0xf8] = a0\n  5306: a0 = u64 [a4 + 0x18]\n  5309: u64 [a5 + 0xf0] = a0\n  5313: a0 = s1 + 0x2bc0\n  5317: a1 = s1 + 0x2ba0\n  5321: a2 = u64 [a4 + 0x30]\n  5324: u64 [a5 + 0xe8] = a2\n  5328: ra = 190, jump @1913\n      : @227 [@dyn 95] (gas: 2)\n  5335: a3 = s1 + 0x28b8\n  5339: fallthrough\n      : @228 (gas: 26)\n  5340: a4 = a3 + 0x300\n  5344: a0 = u64 [a4 + 0x8]\n  5347: a1 = u64 [a4 + 0x20]\n  5350: a2 = u64 [a4 + 0x10]\n  5353: a3 = u64 [a4 + 0x18]\n  5356: t0 = a0 + 0xffffffffffffffe0\n  5359: a0 = t0 <u a0\n  5362: a4 = a2 + a0\n  5365: a4 = a4 + 0xffffffffffffffff\n  5368: a5 = a4 ^ a2\n  5371: a2 = a4 <u a2\n  5374: a2 = a0 if a5 == 0\n  5377: a0 = a3 + 0xffffffffffffffff\n  5380: a2 = a2 + a0\n  5383: a0 = a2 <u a0\n  5386: a3 = a3 <u 0x1\n  5389: a1 = a1 - a3\n  5392: a0 = a0 + a1\n  5395: a1 = t0 | a2\n  5398: a0 = a0 | a4\n  5401: a1 = a1 | a0\n  5404: a1 = a1 >> 0x20\n  5407: a0 = a0 | a2\n  5410: a0 = a0 << 0x20\n  5413: a0 = a0 | a1\n  5416: jump @230 if a0 == 0\n      : @229 (gas: 1)\n  5419: jump @1123\n      : @230 (gas: 10)\n  5422: a2 = u64 [s1 + 0x60]\n  5425: a4 = u64 [s1 + 0x58]\n  5428: a0 = a4 | a2\n  5431: a1 = 0xffffffe0\n  5441: a5 = u64 [s1 + 0x68]\n  5444: a1 = a5 <u a1\n  5447: a3 = u64 [s1 + 0x50]\n  5450: a1 = 0 if a3 != 0\n  5452: a1 = 0 if a0 != 0\n  5454: jump @232 if a1 != 0\n      : @231 (gas: 1)\n  5457: jump @1123\n      : @232 (gas: 24)\n  5460: a0 = a5\n  5462: a5 = a3\n  5464: a3 = a2\n  5466: a2 = a0 + 0x20\n  5469: a0 = a2 <u a0\n  5472: a1 = a5 + a0\n  5475: u64 [s1 + 0x40] = a1\n  5478: a1 = a1 <u a5\n  5481: a1 = a0 if a0 == 0\n  5484: a1 = a1 + a4\n  5487: u64 [s1 + 0x30] = a1\n  5490: a0 = a1 <u a4\n  5493: a1 = u64 [s1 + 0x138]\n  5497: a1 = i32 [a1]\n  5499: u64 [s1 + 0x138] = a1\n  5503: a0 = a0 + a3\n  5506: u64 [s1 + 0x48] = a0\n  5509: a0 = 0xffffffff\n  5519: u64 [s1 + 0xf8] = a0\n  5523: u64 [s1 + 0x38] = a2\n  5526: a0 = a2\n  5528: a1 = t0\n  5530: u64 [s1 + 0x130] = t0\n  5534: ra = 192, jump @32\n      : @233 [@dyn 96] (gas: 14)\n  5540: i32 a0 = a0 + 0\n  5542: a1 = i32 [s1 + 0x130]\n  5546: a2 = u64 [s1 + 0x138]\n  5550: ecalli 3 // 'call_data_copy'\n  5552: a3 = s1 + 0x28b8\n  5556: t1 = 0\n  5558: ra = 0\n  5560: u64 [s1 + 152] = 0\n  5564: u64 [s1 + 144] = 0\n  5568: t2 = 0\n  5570: a5 = 0\n  5572: t0 = 0\n  5574: a4 = 0\n  5576: fallthrough\n      : @234 (gas: 10)\n  5577: a0 = a5 >u 0\n  5579: a1 = t2 <u 0x10\n  5582: a1 = a1 ^ 0x1\n  5585: a1 = a0 if a5 != 0\n  5588: a0 = t0 >u 0\n  5590: a2 = a4 >u 0\n  5592: a2 = a0 if a4 == 0\n  5595: a0 = t0 | a4\n  5598: a2 = a1 if a0 == 0\n  5601: jump @236 if a2 == 0\n      : @235 (gas: 1)\n  5604: jump @1084\n      : @236 (gas: 27)\n  5607: u64 [s1 + 0x120] = ra\n  5611: u64 [s1 + 0x128] = t1\n  5615: a0 = sp + 0xffffffffffffffe0\n  5618: a0 = a0 & 0xffffffffffffffe0\n  5621: u64 [s1 + 0xf0] = a0\n  5625: sp = a0\n  5627: u64 [s1 + 0x108] = a4\n  5631: u64 [a3 + 0x1c0] = a4\n  5635: u64 [s1 + 0x100] = t0\n  5639: u64 [a3 + 0x1b8] = t0\n  5643: u64 [s1 + 0x110] = a5\n  5647: u64 [a3 + 0x1b0] = a5\n  5651: u64 [s1 + 0x118] = t2\n  5655: u64 [a3 + 0x1a8] = t2\n  5659: a0 = u64 [s1 + 0x88]\n  5663: a5 = a3 + 0x100\n  5667: u64 [a5 + 0xe0] = a0\n  5671: a0 = u64 [s1 + 0x80]\n  5675: u64 [a5 + 0xd8] = a0\n  5679: a0 = u64 [s1 + 0x78]\n  5682: u64 [a5 + 0xd0] = a0\n  5686: a0 = s1 + 0x2aa0\n  5690: a1 = s1 + 0x2a80\n  5694: a2 = s1 + 0x2a60\n  5698: a4 = u64 [s1 + 0x70]\n  5701: u64 [a5 + 0xc8] = a4\n  5705: ra = 194, jump @1467\n      : @237 [@dyn 97] (gas: 23)\n  5712: a3 = s1 + 0x28b8\n  5716: a2 = a3 + 0x200\n  5720: a0 = u64 [a2 + 0x20]\n  5723: u64 [s1 + 0x130] = a0\n  5727: a0 = u64 [a2 + 0x18]\n  5730: u64 [s1 + 0xe8] = a0\n  5734: a0 = u64 [a2 + 0x10]\n  5737: u64 [s1 + 0xe0] = a0\n  5741: a0 = u64 [a2 + 0x8]\n  5744: u64 [s1 + 0x138] = a0\n  5748: a4 = a3 + 0x100\n  5752: a0 = u64 [a4 + 0xf8]\n  5756: a1 = u64 [a2]\n  5758: a2 = u64 [a4 + 0xe8]\n  5762: a3 = u64 [a4 + 0xf0]\n  5766: a4 = u64 [s1 + 0xf0]\n  5770: u64 [a4 + 0x10] = a0\n  5773: u64 [a4 + 0x18] = a1\n  5776: u64 [a4] = a2\n  5778: u64 [a4 + 0x8] = a3\n  5781: a1 = a4\n  5783: a0 = s1 + 0x2a40\n  5787: ra = 196, jump @21\n      : @238 [@dyn 98] (gas: 26)\n  5793: a1 = s1 + 0x28b8\n  5797: a2 = a1 + 0x100\n  5801: a0 = u64 [a2 + 0x88]\n  5805: u64 [s1 + 0xd8] = a0\n  5809: a0 = u64 [a2 + 0x90]\n  5813: u64 [s1 + 0xd0] = a0\n  5817: a0 = u64 [a2 + 0x98]\n  5821: u64 [s1 + 0xc8] = a0\n  5825: a0 = u64 [a2 + 0xa0]\n  5829: u64 [s1 + 0xc0] = a0\n  5833: a5 = u64 [s1 + 0x138]\n  5837: a0 = a5 >> 0x3d\n  5840: a2 = u64 [s1 + 0xe0]\n  5844: a1 = a2 << 0x3\n  5847: a0 = a0 | a1\n  5850: a1 = a2 >> 0x3d\n  5853: a3 = u64 [s1 + 0xe8]\n  5857: a2 = a3 << 0x3\n  5860: a1 = a1 | a2\n  5863: a2 = a3 >> 0x3d\n  5866: a3 = u64 [s1 + 0x130]\n  5870: a3 = a3 << 0x3\n  5873: a2 = a2 | a3\n  5876: a5 = a5 << 0x3\n  5879: u64 [s1 + 0x130] = a5\n  5883: t0 = 198, jump @1966\n      : @239 [@dyn 99] (gas: 5)\n  5890: u64 [s1 + 0xf0] = a4\n  5894: i32 a2 = a5 + 0xffffffffffffff80\n  5897: a0 = 0xffffffffffffffff\n  5900: a1 = 0xffffffffffffffff\n  5903: ra = 200, jump @2043\n      : @240 [@dyn 100] (gas: 8)\n  5910: u64 [s1 + 0xe0] = a0\n  5914: u64 [s1 + 0xe8] = a1\n  5918: a0 = u64 [s1 + 0x138]\n  5922: i32 a2 = a0 << 0x3\n  5925: u64 [s1 + 0x138] = a2\n  5929: a0 = u64 [s1 + 0xf8]\n  5933: a1 = 0\n  5935: ra = 202, jump @2043\n      : @241 [@dyn 101] (gas: 7)\n  5942: u64 [s1 + 0xb0] = a0\n  5946: u64 [s1 + 0xb8] = a1\n  5950: a1 = u64 [s1 + 0x130]\n  5954: i32 a2 = 0x80 - a1\n  5958: a0 = 0xffffffffffffffff\n  5961: a1 = 0xffffffffffffffff\n  5964: ra = 204, jump @2038\n      : @242 [@dyn 102] (gas: 6)\n  5971: u64 [s1 + 0xa0] = a0\n  5975: u64 [s1 + 0xa8] = a1\n  5979: a0 = 0xffffffffffffffff\n  5982: a1 = 0xffffffffffffffff\n  5985: a2 = u64 [s1 + 0x138]\n  5989: ra = 206, jump @2043\n      : @243 [@dyn 103] (gas: 3)\n  5996: t0 = u64 [s1 + 0xf8]\n  6000: a2 = u64 [s1 + 0xf0]\n  6004: jump @246 if a2 != 0\n      : @244 (gas: 28)\n  6007: a2 = u64 [s1 + 0xb0]\n  6011: a3 = u64 [s1 + 0xa0]\n  6015: a2 = a2 | a3\n  6018: t1 = u64 [s1 + 0x130]\n  6022: a3 = t1 <u 0x80\n  6026: a4 = u64 [s1 + 0xe0]\n  6030: a2 = a4 if a3 == 0\n  6033: a4 = u64 [s1 + 0xb8]\n  6037: a5 = u64 [s1 + 0xa8]\n  6041: a4 = a4 | a5\n  6044: a5 = u64 [s1 + 0xe8]\n  6048: a4 = a5 if a3 == 0\n  6051: a2 = t0 if t1 == 0\n  6054: a4 = 0 if t1 == 0\n  6056: a0 = 0 if a3 == 0\n  6058: a1 = 0 if a3 == 0\n  6060: a3 = u64 [s1 + 0xc0]\n  6064: a3 = a3 & a4\n  6067: a4 = u64 [s1 + 0xc8]\n  6071: a2 = a2 & a4\n  6074: a4 = u64 [s1 + 0xd0]\n  6078: a1 = a1 & a4\n  6081: a4 = u64 [s1 + 0xd8]\n  6085: a0 = a0 & a4\n  6088: a0 = a0 | a2\n  6091: a1 = a1 | a3\n  6094: a0 = a0 | a1\n  6097: jump @246 if a0 == 0\n      : @245 (gas: 9)\n  6100: a3 = s1 + 0x28b8\n  6104: t2 = u64 [s1 + 0x118]\n  6108: a0 = s1 + 0x100\n  6112: a5 = u64 [a0 + 0x10]\n  6115: t1 = u64 [s1 + 0x128]\n  6119: a4 = u64 [a0 + 0x8]\n  6122: ra = u64 [s1 + 0x120]\n  6126: a1 = u64 [a0]\n  6128: jump @252\n      : @246 (gas: 22)\n  6131: a4 = s1 + 0x28b8\n  6135: a0 = u64 [s1 + 0x128]\n  6139: a5 = a4 + 0x100\n  6143: u64 [a5 + 0x28] = a0\n  6146: a0 = u64 [s1 + 0x68]\n  6149: u64 [a5 + 0x48] = a0\n  6152: a0 = u64 [s1 + 0x120]\n  6156: u64 [a5 + 0x30] = a0\n  6159: a0 = u64 [s1 + 0x50]\n  6162: u64 [a5 + 0x50] = a0\n  6165: a0 = u64 [s1 + 0x98]\n  6169: u64 [a5 + 0x38] = a0\n  6172: a0 = u64 [s1 + 0x58]\n  6175: u64 [a5 + 0x58] = a0\n  6178: a0 = u64 [s1 + 0x90]\n  6182: u64 [a5 + 0x40] = a0\n  6185: a0 = s1 + 0x2a20\n  6189: a1 = s1 + 0x2a00\n  6193: a2 = s1 + 0x29e0\n  6197: a3 = u64 [s1 + 0x60]\n  6200: u64 [a5 + 0x60] = a3\n  6203: ra = 208, jump @1921\n      : @247 [@dyn 104] (gas: 14)\n  6210: a4 = s1 + 0x28b8\n  6214: a5 = a4 + 0x100\n  6218: a1 = u64 [a5 + 0x80]\n  6222: a2 = u64 [a5 + 0x78]\n  6225: a3 = u64 [a5 + 0x70]\n  6228: a0 = u64 [a5 + 0x68]\n  6231: a1 = a1 | a3\n  6234: a3 = a0 | a2\n  6237: a3 = a3 | a1\n  6240: a3 = a3 >> 0x20\n  6243: a1 = a1 | a2\n  6246: a1 = a1 << 0x20\n  6249: a1 = a1 | a3\n  6252: jump @249 if a1 == 0\n      : @248 (gas: 1)\n  6255: jump @1123\n      : @249 (gas: 11)\n  6258: a1 = u64 [s1 + 0x118]\n  6262: a3 = a4 + 0x100\n  6266: u64 [a3 + 0x8] = a1\n  6269: a1 = u64 [s1 + 0x110]\n  6273: u64 [a3 + 0x10] = a1\n  6276: a1 = u64 [s1 + 0x100]\n  6280: u64 [a3 + 0x18] = a1\n  6283: a1 = s1 + 0x29c0\n  6287: a2 = u64 [s1 + 0x108]\n  6291: u64 [a3 + 0x20] = a2\n  6294: ra = 210, jump @19\n      : @250 [@dyn 105] (gas: 15)\n  6300: a0 = s1 + 0x28b8\n  6304: a1 = u64 [s1 + 0x90]\n  6308: u64 [a0 + 0xe0] = a1\n  6312: a0 = s1 + 0x28b8\n  6316: a1 = u64 [s1 + 0x98]\n  6320: u64 [a0 + 0xd8] = a1\n  6324: a0 = s1 + 0x28b8\n  6328: a1 = u64 [s1 + 0x120]\n  6332: u64 [a0 + 0xd0] = a1\n  6336: a0 = s1 + 0x29a0\n  6340: a1 = s1 + 0x2980\n  6344: a2 = s1 + 0x28b8\n  6348: a3 = u64 [s1 + 0x128]\n  6352: u64 [a2 + 0xc8] = a3\n  6356: ra = 212, jump @1511\n      : @251 [@dyn 106] (gas: 13)\n  6363: a0 = s1 + 0x100\n  6367: a1 = u64 [a0]\n  6369: a4 = u64 [a0 + 0x8]\n  6372: a5 = u64 [a0 + 0x10]\n  6375: t2 = u64 [s1 + 0x118]\n  6379: a3 = s1 + 0x28b8\n  6383: a0 = u64 [a3 + 0x100]\n  6387: u64 [s1 + 0x90] = a0\n  6391: a0 = u64 [a3 + 0xf8]\n  6395: u64 [s1 + 0x98] = a0\n  6399: ra = u64 [a3 + 0xf0]\n  6403: t1 = u64 [a3 + 0xe8]\n  6407: fallthrough\n      : @252 (gas: 9)\n  6408: t2 = t2 + 0x1\n  6411: a0 = t2 <u 0x1\n  6414: a5 = a5 + a0\n  6417: a0 = t2 | a5\n  6420: a0 = a0 <u 0x1\n  6423: t0 = a1 + a0\n  6426: a1 = t0 <u a1\n  6429: a4 = a4 + a1\n  6432: jump @234\n      : @253 (gas: 11)\n  6435: u64 [a4 + 480] = 0\n  6439: u64 [a4 + 472] = 0\n  6443: u64 [a4 + 464] = 0\n  6447: u64 [a4 + 456] = 0\n  6451: a0 = s1 + 0x4000\n  6455: i32 a0 = a0 + 0x280\n  6459: ra = 0xd6\n  6463: ecalli 17 // 'value_transferred'\n  6465: a0 = 0x4000\n  6469: t0 = 0xd8\n  6473: jump @2014\n      : @254 [@dyn 107] (gas: 2)\n  6477: a0 = 0x4000\n  6481: t0 = 216, jump @2014\n      : @255 [@dyn 108] (gas: 1)\n  6488: t0 = 218, jump @2034\n      : @256 [@dyn 109] (gas: 1)\n  6495: jump @258 if a0 == 0\n      : @257 (gas: 1)\n  6498: jump @1189\n      : @258 (gas: 3)\n  6501: a0 = u64 [s1 + 0x138]\n  6505: a0 = i32 [a0]\n  6507: jump @260 if a0 >u 3\n      : @259 (gas: 1)\n  6511: jump @1190\n      : @260 (gas: 3)\n  6514: a0 = s1 + 0x2f80\n  6518: a1 = 0x40\n  6521: ra = 220, jump @17\n      : @261 [@dyn 110] (gas: 20)\n  6527: a2 = s1 + 0x28b8\n  6531: a1 = u64 [a2 + 0x6e0]\n  6535: u64 [s1 + 0x130] = a1\n  6539: a3 = u64 [a2 + 0x6d8]\n  6543: u64 [s1 + 0x128] = a3\n  6547: a4 = u64 [a2 + 0x6d0]\n  6551: u64 [s1 + 0x120] = a4\n  6555: a5 = u64 [a2 + 0x6c8]\n  6559: u64 [s1 + 0x118] = a5\n  6563: u64 [a2 + 1696] = 0\n  6567: u64 [a2 + 1688] = 0\n  6571: u64 [a2 + 1680] = 0\n  6575: u64 [a2 + 1672] = 0x200\n  6581: u64 [a2 + 0x6c0] = a1\n  6585: u64 [a2 + 0x6b8] = a3\n  6589: u64 [a2 + 0x6b0] = a4\n  6593: a0 = s1 + 0x2f60\n  6597: a1 = s1 + 0x2f40\n  6601: u64 [a2 + 0x6a8] = a5\n  6605: ra = 222, jump @1336\n      : @262 [@dyn 111] (gas: 1)\n  6611: t0 = 224, jump @2006\n      : @263 [@dyn 112] (gas: 1)\n  6618: jump @265 if a0 == 0\n      : @264 (gas: 1)\n  6621: jump @1123\n      : @265 (gas: 6)\n  6624: a0 = u64 [s1 + 0x138]\n  6628: a0 = i32 [a0]\n  6630: u64 [s1 + 0x138] = a0\n  6634: a1 = 0x200\n  6638: a0 = a2\n  6640: ra = 226, jump @32\n      : @266 [@dyn 113] (gas: 12)\n  6646: i32 a0 = a0 + 0\n  6648: a1 = 0x200\n  6652: a2 = u64 [s1 + 0x138]\n  6656: ecalli 3 // 'call_data_copy'\n  6658: a1 = s1 + 0x40b8\n  6662: u64 [a1 + 512] = 0\n  6666: u64 [a1 + 504] = 0\n  6670: u64 [a1 + 496] = 0\n  6674: u64 [a1 + 488] = 0x4\n  6679: a0 = s1 + 0x2f20\n  6683: a1 = s1 + 0x42a0\n  6687: ra = 228, jump @21\n      : @267 [@dyn 114] (gas: 13)\n  6693: a4 = s1 + 0x28b8\n  6697: a5 = a4 + 0x600\n  6701: a0 = u64 [a5 + 0x68]\n  6704: a1 = u64 [a5 + 0x70]\n  6707: a2 = u64 [a5 + 0x78]\n  6710: a3 = u64 [a5 + 0x80]\n  6714: u64 [a5 + 0x60] = a3\n  6717: u64 [a5 + 0x58] = a2\n  6720: u64 [a5 + 0x50] = a1\n  6723: a1 = s1 + 0x2f00\n  6727: u64 [a5 + 0x48] = a0\n  6730: a0 = 0\n  6732: ra = 230, jump @19\n      : @268 [@dyn 115] (gas: 3)\n  6738: t0 = 0xe8\n  6742: a1 = s1 + 0x28b8\n  6746: fallthrough\n      : @269 [@dyn 116] (gas: 8)\n  6747: u64 [a1 + 1600] = 0\n  6751: u64 [a1 + 1592] = 0\n  6755: u64 [a1 + 1576] = 0x3\n  6760: a2 = a1\n  6762: a0 = 0x20\n  6765: a1 = s1 + 0x2ee0\n  6769: u64 [a2 + 1584] = 0\n  6773: ra = 234, jump @19\n      : @270 [@dyn 117] (gas: 2)\n  6779: a1 = i32 [0x2025c]\n  6784: jump @272 if a1 >u 63\n      : @271 (gas: 3)\n  6788: a1 = 0x40\n  6791: u32 [0x2025c] = a1\n  6796: fallthrough\n      : @272 (gas: 3)\n  6797: a0 = 0xffffffff\n  6807: u64 [s1 + 0xc0] = a0\n  6811: t0 = 236, jump @1975\n      : @273 [@dyn 118] (gas: 8)\n  6818: a0 = 0x20270\n  6823: i32 a0 = a0 + 0\n  6825: i32 a2 = a2 + 0\n  6827: a1 = 0x40\n  6830: ra = 0xee\n  6834: ecalli 9 // 'hash_keccak_256'\n  6836: t0 = 0xf0\n  6840: jump @1981\n      : @274 [@dyn 119] (gas: 1)\n  6844: t0 = 240, jump @1981\n      : @275 [@dyn 120] (gas: 3)\n  6851: a0 = s1 + 0x2ec0\n  6855: a1 = 0x40\n  6858: ra = 242, jump @17\n      : @276 [@dyn 121] (gas: 34)\n  6864: a3 = u64 [s1 + 0x108]\n  6868: t1 = u64 [s1 + 0x110]\n  6872: a5 = u64 [s1 + 0x118]\n  6876: a0 = s1 + 0x28b8\n  6880: a2 = a0 + 0x600\n  6884: a1 = u64 [a2 + 0x20]\n  6887: u64 [s1 + 0xa0] = a1\n  6891: a1 = u64 [a2 + 0x18]\n  6894: u64 [s1 + 0xa8] = a1\n  6898: a1 = u64 [a2 + 0x10]\n  6901: u64 [s1 + 0xb0] = a1\n  6905: t2 = u64 [a0 + 0x608]\n  6909: a0 = sp + 0xffffffffffffffe0\n  6912: a1 = a0 & 0xffffffffffffffe0\n  6915: sp = a1\n  6917: ra = 0\n  6919: t0 = 0\n  6921: a2 = 0\n  6923: a4 = 0\n  6925: u64 [a1 + 0x18] = a3\n  6928: a0 = u64 [s1 + 0x100]\n  6932: u64 [a1 + 0x10] = a0\n  6935: u64 [a1 + 0x8] = t1\n  6938: u64 [a1] = a5\n  6940: u64 [s1 + 0x98] = t2\n  6944: u64 [s1 + 0x130] = t2\n  6948: a0 = u64 [s1 + 0xb0]\n  6952: u64 [s1 + 0x128] = a0\n  6956: a0 = u64 [s1 + 0xa8]\n  6960: u64 [s1 + 0x138] = a0\n  6964: a0 = u64 [s1 + 0xa0]\n  6968: u64 [s1 + 0x120] = a0\n  6972: u64 [s1 + 0xb8] = a1\n  6976: fallthrough\n      : @277 (gas: 6)\n  6977: a0 = ra <u 0x10\n  6980: a0 = 0 if t0 != 0\n  6982: u64 [s1 + 0xf8] = a2\n  6986: a2 = a2 | a4\n  6989: a0 = 0 if a2 != 0\n  6991: jump @279 if a0 != 0\n      : @278 (gas: 1)\n  6994: jump @998\n      : @279 (gas: 8)\n  6997: u64 [s1 + 0xe0] = a4\n  7001: u64 [s1 + 0xe8] = t0\n  7005: u64 [s1 + 0xf0] = ra\n  7009: a0 = s1 + 0x2de0\n  7013: u64 [s1 + 0x118] = a5\n  7017: u64 [s1 + 0x110] = t1\n  7021: u64 [s1 + 0x108] = a3\n  7025: ra = 244, jump @21\n      : @280 [@dyn 122] (gas: 13)\n  7031: a4 = s1 + 0x100\n  7035: a2 = u64 [a4 + 0x38]\n  7038: a5 = u64 [a4 + 0x30]\n  7041: a0 = a5 | a2\n  7044: a1 = u64 [a4 + 0x20]\n  7047: a3 = u64 [a4 + 0x28]\n  7050: a1 = a1 | a3\n  7053: a0 = a0 | a1\n  7056: a0 = a0 >> 0x20\n  7059: a1 = a1 | a2\n  7062: a1 = a1 << 0x20\n  7065: a0 = a0 | a1\n  7068: jump @282 if a0 == 0\n      : @281 (gas: 1)\n  7071: jump @1123\n      : @282 (gas: 20)\n  7074: a0 = s1 + 0x28b8\n  7078: u64 [s1 + 0x128] = a3\n  7082: a3 = a0\n  7084: a0 = u64 [a0 + 0x538]\n  7088: a1 = u64 [a3 + 0x530]\n  7092: u64 [s1 + 0x138] = a2\n  7096: a2 = u64 [a3 + 0x528]\n  7100: a4 = u64 [s1 + 0xc0]\n  7104: a0 = a0 & a4\n  7107: a1 = a1 & 0xffffffffffffffff\n  7110: a2 = a2 & 0xffffffffffffffff\n  7113: u64 [a3 + 1312] = 0\n  7117: a4 = a3 + 0x500\n  7121: u64 [a4 + 0x8] = a2\n  7124: u64 [a4 + 0x10] = a1\n  7127: a1 = s1 + 0x2dc0\n  7131: u64 [a4 + 0x18] = a0\n  7134: a0 = a5\n  7136: u64 [s1 + 0x130] = a5\n  7140: ra = 246, jump @19\n      : @283 [@dyn 123] (gas: 1)\n  7146: t0 = 248, jump @1962\n      : @284 [@dyn 124] (gas: 24)\n  7153: t0 = u64 [s1 + 0xe8]\n  7157: t0 = t0 + a4\n  7160: a4 = ra | t0\n  7163: a4 = a4 <u 0x1\n  7166: a5 = u64 [s1 + 0xf8]\n  7170: a2 = a5 + a4\n  7173: a5 = a2 <u a5\n  7176: a4 = u64 [s1 + 0xe0]\n  7180: a4 = a4 + a5\n  7183: a1 = u64 [s1 + 0xb8]\n  7187: u64 [a1 + 0x8] = t1\n  7190: u64 [a1] = t2\n  7192: u64 [a1 + 0x10] = a0\n  7195: u64 [a1 + 0x18] = a3\n  7198: a5 = s1 + 0x100\n  7202: u64 [a5] = a0\n  7204: a0 = u64 [s1 + 0xd8]\n  7208: u64 [a5 + 0x30] = a0\n  7211: a0 = u64 [s1 + 0xd0]\n  7215: u64 [a5 + 0x28] = a0\n  7218: a0 = u64 [s1 + 0xc8]\n  7222: u64 [a5 + 0x38] = a0\n  7225: a5 = t2\n  7227: jump @277\n      : @285 (gas: 10)\n  7230: u64 [a3 + 192] = 0\n  7234: u64 [a3 + 184] = 0\n  7238: u64 [a3 + 176] = 0\n  7242: u64 [a3 + 168] = 0\n  7246: a0 = s1 + 0x3000\n  7250: i32 a0 = a0 + 0x160\n  7254: ra = 0xfa\n  7258: ecalli 17 // 'value_transferred'\n  7260: a3 = s1 + 0x30b8\n  7264: jump @287\n      : @286 [@dyn 125] (gas: 2)\n  7266: a3 = s1 + 0x30b8\n  7270: fallthrough\n      : @287 (gas: 8)\n  7271: a0 = u64 [a3 + 0xb8]\n  7275: a1 = u64 [a3 + 0xc0]\n  7279: a2 = u64 [a3 + 0xb0]\n  7283: a3 = u64 [a3 + 0xa8]\n  7287: a1 = a1 | a2\n  7290: a0 = a0 | a3\n  7293: a0 = a0 | a1\n  7296: jump @289 if a0 == 0\n      : @288 (gas: 1)\n  7299: jump @1191\n      : @289 (gas: 1)\n  7302: t0 = 252, jump @1994\n      : @290 [@dyn 126] (gas: 1)\n  7309: jump @292 if a1 <u a0\n      : @291 (gas: 1)\n  7312: jump @1192\n      : @292 (gas: 7)\n  7315: a0 = s1 + 0x3000\n  7319: i32 a0 = a0 + 0x180\n  7323: a1 = 0x4\n  7326: ecalli 4 // 'call_data_load'\n  7328: t0 = 0xfe\n  7332: a3 = s1 + 0x30b8\n  7336: fallthrough\n      : @293 [@dyn 127] (gas: 11)\n  7337: a0 = u64 [a3 + 0xc8]\n  7341: a1 = u64 [a3 + 0xd0]\n  7345: a2 = u64 [a3 + 0xd8]\n  7349: a3 = u64 [a3 + 0xe0]\n  7353: u64 [s1 + 0x338] = a3\n  7357: u64 [s1 + 0x330] = a2\n  7361: u64 [s1 + 0x328] = a1\n  7365: a1 = s1 + 0x320\n  7369: u64 [s1 + 0x320] = a0\n  7373: a0 = 0\n  7375: ra = 256, jump @19\n      : @294 [@dyn 128] (gas: 7)\n  7381: u64 [s1 + 792] = 0\n  7385: u64 [s1 + 784] = 0\n  7389: u64 [s1 + 768] = 0x3\n  7394: a0 = 0x20\n  7397: a1 = s1 + 0x300\n  7401: u64 [s1 + 776] = 0\n  7405: ra = 258, jump @19\n      : @295 [@dyn 129] (gas: 2)\n  7411: a1 = i32 [0x2025c]\n  7416: jump @297 if a1 >u 63\n      : @296 (gas: 4)\n  7420: a1 = 0x40\n  7423: u32 [0x2025c] = a1\n  7428: t0 = 0x104\n  7432: jump @1975\n      : @297 (gas: 1)\n  7436: t0 = 260, jump @1975\n      : @298 [@dyn 130] (gas: 8)\n  7443: a0 = 0x20270\n  7448: i32 a0 = a0 + 0\n  7450: i32 a2 = a2 + 0\n  7452: a1 = 0x40\n  7455: ra = 0x106\n  7459: ecalli 9 // 'hash_keccak_256'\n  7461: t0 = 0x108\n  7465: jump @1982\n      : @299 [@dyn 131] (gas: 1)\n  7469: t0 = 264, jump @1982\n      : @300 [@dyn 132] (gas: 16)\n  7476: t0 = a0 + 0x11\n  7479: a1 = t0 <u a0\n  7482: a0 = a2 + a1\n  7485: a3 = a0 <u a2\n  7488: a3 = a1 if a1 == 0\n  7491: a3 = a3 + a5\n  7494: a1 = a3 <u a5\n  7497: a1 = a1 + a4\n  7500: a4 = s1 + 0x30b8\n  7504: u64 [a4 + 0xe8] = t0\n  7508: u64 [a4 + 0xf0] = a0\n  7512: u64 [a4 + 0xf8] = a3\n  7516: u64 [a4 + 0x100] = a1\n  7520: a0 = s1 + 0x2e0\n  7524: a1 = s1 + 0x31a0\n  7528: ra = 266, jump @21\n      : @301 [@dyn 133] (gas: 11)\n  7534: a0 = u64 [s1 + 0x2f8]\n  7538: u64 [s1 + 0x118] = a0\n  7542: a0 = u64 [s1 + 0x2f0]\n  7546: u64 [s1 + 0x110] = a0\n  7550: a0 = u64 [s1 + 0x2e8]\n  7554: u64 [s1 + 0x108] = a0\n  7558: a0 = u64 [s1 + 0x2e0]\n  7562: u64 [s1 + 0x100] = a0\n  7566: a1 = u64 [s1 + 0x128]\n  7570: a0 = a1 + 0x12\n  7573: t0 = 268, jump @1965\n      : @302 [@dyn 134] (gas: 7)\n  7580: u64 [a5 + 0x20] = a1\n  7583: u64 [a5 + 0x18] = a3\n  7586: u64 [a5 + 0x10] = a2\n  7589: u64 [a5 + 0x8] = a0\n  7592: a0 = s1 + 0x2c0\n  7596: a1 = s1 + 0x31c0\n  7600: ra = 270, jump @21\n      : @303 [@dyn 135] (gas: 11)\n  7606: a0 = u64 [s1 + 0x2d8]\n  7610: u64 [s1 + 0xf8] = a0\n  7614: a0 = u64 [s1 + 0x2d0]\n  7618: u64 [s1 + 0xf0] = a0\n  7622: a0 = u64 [s1 + 0x2c8]\n  7626: u64 [s1 + 0xe8] = a0\n  7630: a0 = u64 [s1 + 0x2c0]\n  7634: u64 [s1 + 0xe0] = a0\n  7638: a1 = u64 [s1 + 0x128]\n  7642: a0 = a1 + 0x13\n  7645: t0 = 272, jump @1965\n      : @304 [@dyn 136] (gas: 7)\n  7652: u64 [a5 + 0x40] = a1\n  7655: u64 [a5 + 0x38] = a3\n  7658: u64 [a5 + 0x30] = a2\n  7661: u64 [a5 + 0x28] = a0\n  7664: a0 = s1 + 0x2a0\n  7668: a1 = s1 + 0x31e0\n  7672: ra = 274, jump @21\n      : @305 [@dyn 137] (gas: 11)\n  7678: a0 = u64 [s1 + 0x2b8]\n  7682: u64 [s1 + 0xd8] = a0\n  7686: a0 = u64 [s1 + 0x2b0]\n  7690: u64 [s1 + 0xd0] = a0\n  7694: a0 = u64 [s1 + 0x2a8]\n  7698: u64 [s1 + 0xc8] = a0\n  7702: a0 = u64 [s1 + 0x2a0]\n  7706: u64 [s1 + 0xc0] = a0\n  7710: a1 = u64 [s1 + 0x128]\n  7714: a0 = a1 + 0x14\n  7717: t0 = 276, jump @1965\n      : @306 [@dyn 138] (gas: 7)\n  7724: u64 [a5 + 0x60] = a1\n  7727: u64 [a5 + 0x58] = a3\n  7730: u64 [a5 + 0x50] = a2\n  7733: u64 [a5 + 0x48] = a0\n  7736: a0 = s1 + 0x280\n  7740: a1 = s1 + 0x3200\n  7744: ra = 278, jump @21\n      : @307 [@dyn 139] (gas: 10)\n  7750: a0 = u64 [s1 + 0x298]\n  7754: u64 [s1 + 0xb8] = a0\n  7758: a0 = u64 [s1 + 0x290]\n  7762: u64 [s1 + 0xb0] = a0\n  7766: a5 = s1 + 0x100\n  7770: a1 = u64 [a5 + 0x28]\n  7773: a0 = a1 + 0x15\n  7776: a1 = a0 <u a1\n  7779: a3 = u64 [a5 + 0x20]\n  7782: t0 = 280, jump @1990\n      : @308 [@dyn 140] (gas: 18)\n  7789: a1 = u64 [s1 + 0x288]\n  7793: u64 [a5 + 0x28] = a1\n  7796: a1 = u64 [a5 + 0x30]\n  7799: a3 = a3 + a1\n  7802: a1 = a3 <u a1\n  7805: a4 = u64 [a5 + 0x38]\n  7808: a1 = a1 + a4\n  7811: a4 = u64 [s1 + 0x280]\n  7815: u64 [a5 + 0x20] = a4\n  7818: a4 = s1 + 0x30b8\n  7822: a5 = a4 + 0x100\n  7826: u64 [a5 + 0x80] = a1\n  7830: u64 [a5 + 0x78] = a3\n  7833: u64 [a5 + 0x70] = a2\n  7836: u64 [a5 + 0x68] = a0\n  7839: a0 = s1 + 0x260\n  7843: a1 = s1 + 0x3220\n  7847: ra = 282, jump @21\n      : @309 [@dyn 141] (gas: 9)\n  7853: a0 = u64 [s1 + 0x270]\n  7857: u64 [s1 + 0xa0] = a0\n  7861: a0 = u64 [s1 + 0x268]\n  7865: u64 [s1 + 0x98] = a0\n  7869: a0 = u64 [s1 + 0x260]\n  7873: u64 [s1 + 0xa8] = a0\n  7877: a0 = s1 + 0x240\n  7881: a1 = 0x40\n  7884: ra = 284, jump @17\n      : @310 [@dyn 142] (gas: 6)\n  7890: a1 = s1 + 0x200\n  7894: a4 = u64 [a1 + 0x58]\n  7897: a5 = u64 [a1 + 0x50]\n  7900: a3 = u64 [a1 + 0x48]\n  7903: a0 = u64 [a1 + 0x40]\n  7906: t0 = 286, jump @1987\n      : @311 [@dyn 143] (gas: 1)\n  7913: jump @313 if a1 == 0\n      : @312 (gas: 1)\n  7916: jump @1123\n      : @313 (gas: 14)\n  7919: a1 = u64 [s1 + 0x100]\n  7923: u64 [s1 + 0x220] = a1\n  7927: a1 = u64 [s1 + 0x108]\n  7931: u64 [s1 + 0x228] = a1\n  7935: a1 = u64 [s1 + 0x110]\n  7939: u64 [s1 + 0x230] = a1\n  7943: a1 = s1 + 0x220\n  7947: a2 = u64 [s1 + 0x118]\n  7951: u64 [s1 + 0x238] = a2\n  7955: u64 [s1 + 0x138] = a0\n  7959: u64 [s1 + 0x130] = a3\n  7963: u64 [s1 + 0x118] = a4\n  7967: u64 [s1 + 0x110] = a5\n  7971: ra = 288, jump @19\n      : @314 [@dyn 144] (gas: 12)\n  7977: a5 = s1 + 0x100\n  7981: a1 = u64 [a5 + 0x38]\n  7984: a0 = u64 [a5 + 0x18]\n  7987: a3 = u64 [a5 + 0x10]\n  7990: a3 = a3 | a0\n  7993: a4 = 0x100000000\n  8003: a0 = 0xffffffe0\n  8013: a0 = a1 <u a0\n  8016: a2 = u64 [a5 + 0x30]\n  8019: a0 = 0 if a2 != 0\n  8021: a0 = 0 if a3 != 0\n  8023: jump @316 if a0 != 0\n      : @315 (gas: 1)\n  8026: jump @1123\n      : @316 (gas: 14)\n  8029: i32 a0 = a1 + 0x20\n  8032: a1 = u64 [s1 + 0xe0]\n  8036: a5 = s1 + 0x200\n  8040: u64 [a5] = a1\n  8042: a1 = u64 [s1 + 0xe8]\n  8046: u64 [a5 + 0x8] = a1\n  8049: a1 = u64 [s1 + 0xf0]\n  8053: u64 [a5 + 0x10] = a1\n  8056: a1 = s1 + 0x200\n  8060: a2 = u64 [s1 + 0xf8]\n  8064: u64 [a5 + 0x18] = a2\n  8067: u64 [s1 + 0x118] = a3\n  8071: u64 [s1 + 0x110] = a4\n  8075: ra = 290, jump @19\n      : @317 [@dyn 145] (gas: 10)\n  8081: a3 = s1 + 0x100\n  8085: a1 = u64 [a3 + 0x38]\n  8088: a0 = u64 [a3 + 0x10]\n  8091: a0 = a0 + 0xffffffffffffffc0\n  8094: a0 = a1 <u a0\n  8097: a2 = u64 [a3 + 0x30]\n  8100: a0 = 0 if a2 != 0\n  8102: a2 = u64 [a3 + 0x18]\n  8105: a0 = 0 if a2 != 0\n  8107: jump @319 if a0 != 0\n      : @318 (gas: 1)\n  8110: jump @1123\n      : @319 (gas: 11)\n  8113: i32 a0 = a1 + 0x40\n  8116: a1 = u64 [s1 + 0xc0]\n  8120: u64 [s1 + 0x1e0] = a1\n  8124: a1 = u64 [s1 + 0xc8]\n  8128: u64 [s1 + 0x1e8] = a1\n  8132: a1 = u64 [s1 + 0xd0]\n  8136: u64 [s1 + 0x1f0] = a1\n  8140: a1 = s1 + 0x1e0\n  8144: a2 = u64 [s1 + 0xd8]\n  8148: u64 [s1 + 0x1f8] = a2\n  8152: ra = 292, jump @19\n      : @320 [@dyn 146] (gas: 10)\n  8158: a4 = s1 + 0x100\n  8162: a1 = u64 [a4 + 0x38]\n  8165: a3 = 0x100000000\n  8175: a0 = 0xffffffa0\n  8185: a0 = a1 <u a0\n  8188: a2 = u64 [a4 + 0x30]\n  8191: a0 = 0 if a2 != 0\n  8193: a2 = u64 [a4 + 0x18]\n  8196: a0 = 0 if a2 != 0\n  8198: jump @322 if a0 != 0\n      : @321 (gas: 1)\n  8201: jump @1123\n      : @322 (gas: 12)\n  8204: i32 a0 = a1 + 0x60\n  8207: a1 = u64 [s1 + 0x120]\n  8211: u64 [s1 + 0x1c0] = a1\n  8215: a1 = u64 [s1 + 0x128]\n  8219: u64 [s1 + 0x1c8] = a1\n  8223: a1 = u64 [s1 + 0xb0]\n  8227: u64 [s1 + 0x1d0] = a1\n  8231: a1 = s1 + 0x1c0\n  8235: a2 = u64 [s1 + 0xb8]\n  8239: u64 [s1 + 0x1d8] = a2\n  8243: u64 [s1 + 0x128] = a3\n  8247: ra = 294, jump @19\n      : @323 [@dyn 147] (gas: 10)\n  8253: a1 = s1 + 0x100\n  8257: a4 = u64 [a1 + 0x18]\n  8260: a3 = u64 [a1 + 0x30]\n  8263: a2 = u64 [a1 + 0x38]\n  8266: a0 = u64 [a1 + 0x28]\n  8269: a0 = a0 + 0xffffffffffffff80\n  8272: a0 = a2 <u a0\n  8275: a0 = 0 if a3 != 0\n  8277: a0 = 0 if a4 != 0\n  8279: jump @325 if a0 != 0\n      : @324 (gas: 1)\n  8282: jump @1123\n      : @325 (gas: 9)\n  8285: a0 = u8 [s1 + 0xa8]\n  8289: a1 = a0 >u 0\n  8291: i32 a0 = a2 + 0x80\n  8295: u64 [s1 + 440] = 0\n  8299: u64 [s1 + 432] = 0\n  8303: u64 [s1 + 0x1a0] = a1\n  8307: a1 = s1 + 0x1a0\n  8311: u64 [s1 + 424] = 0\n  8315: ra = 296, jump @19\n      : @326 [@dyn 148] (gas: 9)\n  8321: a2 = s1 + 0x100\n  8325: a4 = u64 [a2 + 0x38]\n  8328: a0 = 0xffffff60\n  8338: a0 = a4 <u a0\n  8341: a1 = u64 [a2 + 0x30]\n  8344: a0 = 0 if a1 != 0\n  8346: a1 = u64 [a2 + 0x18]\n  8349: a0 = 0 if a1 != 0\n  8351: jump @328 if a0 != 0\n      : @327 (gas: 1)\n  8354: jump @1123\n      : @328 (gas: 18)\n  8357: a5 = u64 [s1 + 0x98]\n  8361: a0 = a5 >> 0x8\n  8364: a3 = u64 [s1 + 0xa0]\n  8368: a1 = a3 << 0x38\n  8371: a2 = a0 | a1\n  8374: a0 = u64 [s1 + 0xa8]\n  8378: a0 = a0 >> 0x8\n  8381: a1 = a5 << 0x38\n  8384: a1 = a1 | a0\n  8387: a0 = a3 << 0x18\n  8390: a3 = a0 >> 0x20\n  8393: i32 a0 = a4 + 0xa0\n  8397: u64 [s1 + 408] = 0\n  8401: u64 [s1 + 0x180] = a1\n  8405: u64 [s1 + 0x190] = a3\n  8409: a1 = s1 + 0x180\n  8413: u64 [s1 + 0x188] = a2\n  8417: ra = 298, jump @19\n      : @329 [@dyn 149] (gas: 3)\n  8423: a1 = 0xc0\n  8427: a0 = u64 [s1 + 0x138]\n  8431: ra = 300, jump @32\n      : @330 [@dyn 150] (gas: 7)\n  8437: i32 a1 = a0 + 0\n  8439: a2 = 0xc0\n  8443: a0 = 0\n  8445: ra = 0x340\n  8449: ecalli 14 // 'seal_return'\n  8451: t0 = 0x342\n  8455: jump @1994\n      : @331 (gas: 10)\n  8459: u64 [a2 + 608] = 0\n  8463: u64 [a2 + 600] = 0\n  8467: u64 [a2 + 592] = 0\n  8471: u64 [a2 + 584] = 0\n  8475: a0 = s1 + 0x4000\n  8479: i32 a0 = a0 + 0xfffffffffffffb00\n  8483: ra = 0x12e\n  8487: ecalli 17 // 'value_transferred'\n  8489: t0 = 0x130\n  8493: jump @2036\n      : @332 [@dyn 151] (gas: 1)\n  8497: t0 = 304, jump @2036\n      : @333 [@dyn 152] (gas: 8)\n  8504: a0 = u64 [a5 + 0x58]\n  8507: a1 = u64 [a5 + 0x60]\n  8510: a2 = u64 [a5 + 0x50]\n  8513: a3 = u64 [a5 + 0x48]\n  8516: a1 = a1 | a2\n  8519: a0 = a0 | a3\n  8522: a0 = a0 | a1\n  8525: jump @335 if a0 == 0\n      : @334 (gas: 1)\n  8528: jump @1193\n      : @335 (gas: 3)\n  8531: a0 = u64 [s1 + 0x138]\n  8535: a0 = i32 [a0]\n  8537: jump @337 if a0 >u 3\n      : @336 (gas: 1)\n  8541: jump @1194\n      : @337 (gas: 7)\n  8544: u64 [a4 + 640] = 0\n  8548: u64 [a4 + 632] = 0\n  8552: u64 [a4 + 624] = 0\n  8556: u64 [a4 + 616] = 0x8\n  8561: a0 = s1 + 0x1a60\n  8565: a1 = s1 + 0x3b20\n  8569: ra = 306, jump @21\n      : @338 [@dyn 153] (gas: 12)\n  8575: a1 = s1 + 0x18b8\n  8579: a2 = a1 + 0x100\n  8583: a0 = u64 [a2 + 0xb8]\n  8587: a1 = s1 + 0x100\n  8591: u64 [a1 + 0x28] = a0\n  8594: a0 = u64 [a2 + 0xb0]\n  8598: u64 [a1 + 0x38] = a0\n  8601: a0 = u64 [a2 + 0xa8]\n  8605: u64 [a1 + 0x30] = a0\n  8608: a0 = s1 + 0x1a40\n  8612: a1 = 0x40\n  8615: ra = 308, jump @17\n      : @339 [@dyn 154] (gas: 7)\n  8621: a3 = s1 + 0x18b8\n  8625: a5 = a3 + 0x100\n  8629: a4 = u64 [a5 + 0xa0]\n  8633: a1 = u64 [a5 + 0x98]\n  8637: a2 = u64 [a5 + 0x90]\n  8641: a0 = u64 [a5 + 0x88]\n  8645: t0 = 310, jump @2000\n      : @340 [@dyn 155] (gas: 1)\n  8652: jump @342 if a1 == 0\n      : @341 (gas: 1)\n  8655: jump @1123\n      : @342 (gas: 15)\n  8658: a4 = s1 + 0x100\n  8662: a1 = u64 [a4 + 0x28]\n  8665: a1 = a1 << 0x20\n  8668: a2 = a1 >> 0x20\n  8671: u64 [a3 + 384] = 0\n  8675: a1 = u64 [a4 + 0x30]\n  8678: a5 = a3 + 0x100\n  8682: u64 [a5 + 0x68] = a1\n  8685: a1 = u64 [a4 + 0x38]\n  8688: u64 [a5 + 0x70] = a1\n  8691: a1 = s1 + 0x1a20\n  8695: u64 [a5 + 0x78] = a2\n  8698: u64 [s1 + 0x138] = a0\n  8702: ra = 0x33c\n  8706: jump @19\n      : @343 (gas: 9)\n  8709: u64 [a4 + 608] = 0\n  8713: u64 [a4 + 600] = 0\n  8717: u64 [a4 + 592] = 0\n  8721: u64 [a4 + 584] = 0\n  8725: a0 = s1 + 0x4000\n  8729: i32 a0 = a0 + 0x300\n  8733: ra = 0x138\n  8737: ecalli 17 // 'value_transferred'\n  8739: fallthrough\n      : @344 [@dyn 156] (gas: 10)\n  8740: a3 = s1 + 0x40b8\n  8744: a4 = a3 + 0x200\n  8748: a0 = u64 [a4 + 0x58]\n  8751: a1 = u64 [a4 + 0x60]\n  8754: a2 = u64 [a4 + 0x50]\n  8757: a3 = u64 [a4 + 0x48]\n  8760: a1 = a1 | a2\n  8763: a0 = a0 | a3\n  8766: a0 = a0 | a1\n  8769: jump @346 if a0 == 0\n      : @345 (gas: 1)\n  8772: jump @1195\n      : @346 (gas: 1)\n  8775: t0 = 314, jump @1994\n      : @347 [@dyn 157] (gas: 1)\n  8782: jump @349 if a1 <u a0\n      : @348 (gas: 1)\n  8785: jump @1196\n      : @349 (gas: 6)\n  8788: a0 = s1 + 0x4000\n  8792: i32 a0 = a0 + 0x320\n  8796: a1 = 0x4\n  8799: ra = 0x13c\n  8803: ecalli 4 // 'call_data_load'\n  8805: fallthrough\n      : @350 [@dyn 158] (gas: 4)\n  8806: a2 = s1 + 0x40b8\n  8810: a1 = u64 [a2 + 0x278]\n  8814: a3 = u64 [a2 + 0x280]\n  8818: t0 = 318, jump @1979\n      : @351 [@dyn 159] (gas: 1)\n  8825: jump @353 if a1 != 0\n      : @352 (gas: 1)\n  8828: jump @1197\n      : @353 (gas: 12)\n  8831: a1 = a2 + 0x200\n  8835: a0 = u64 [a1 + 0x70]\n  8838: u64 [s1 + 0x128] = a0\n  8842: a0 = u64 [a1 + 0x68]\n  8845: u64 [s1 + 0x120] = a0\n  8849: u64 [a2 + 672] = 0\n  8853: u64 [a2 + 664] = 0\n  8857: u64 [a2 + 656] = 0\n  8861: u64 [a1 + 136] = 0x7\n  8866: a0 = s1 + 0x30c0\n  8870: a1 = s1 + 0x4340\n  8874: ra = 320, jump @21\n      : @354 [@dyn 160] (gas: 17)\n  8880: a1 = s1 + 0x30b8\n  8884: a0 = u64 [a1 + 0x20]\n  8887: u64 [s1 + 0xf8] = a0\n  8891: a0 = u64 [a1 + 0x18]\n  8894: u64 [s1 + 0x118] = a0\n  8898: a0 = u64 [a1 + 0x10]\n  8901: u64 [s1 + 0x110] = a0\n  8905: a0 = u64 [a1 + 0x8]\n  8908: u64 [s1 + 0x108] = a0\n  8912: a0 = 0x30270\n  8917: u64 [s1 + 0x100] = a0\n  8921: i32 a0 = a0 + 0\n  8923: ra = 0x142\n  8927: ecalli 6 // 'caller'\n  8929: a2 = u64 [s1 + 0x100]\n  8933: t0 = 0x144\n  8937: jump @1961\n      : @355 [@dyn 161] (gas: 2)\n  8941: a2 = u64 [s1 + 0x100]\n  8945: t0 = 324, jump @1961\n      : @356 [@dyn 162] (gas: 20)\n  8952: a2 = u64 [s1 + 0x118]\n  8956: a2 = a2 << 0x20\n  8959: a2 = a2 >> 0x20\n  8962: a1 = a1 ^ a2\n  8965: a2 = u64 [s1 + 0x108]\n  8969: a0 = a0 ^ a2\n  8972: a0 = a0 | a1\n  8975: a1 = u64 [s1 + 0x110]\n  8979: a1 = a1 ^ a3\n  8982: a0 = a0 | a1\n  8985: a0 = a0 <u 0x1\n  8988: a1 = s1 + 0x30b8\n  8992: u64 [a1 + 0] = 0\n  8994: u64 [a1 + 4294967288] = 0\n  8997: u64 [a1 + 0xffffffffffffffe8] = a0\n  9000: a0 = s1 + 0x30a0\n  9004: u64 [a1 + 4294967280] = 0\n  9007: ra = 0x146\n  9011: t0 = 0x562\n  9015: jump @1953\n      : @357 [@dyn 163] (gas: 9)\n  9019: a1 = s1 + 0x100\n  9023: a5 = u64 [a1 + 0x20]\n  9026: a4 = u64 [a1 + 0x28]\n  9029: a2 = u64 [a1 + 0x38]\n  9032: a0 = a5 | a2\n  9035: a3 = u64 [a1 + 0x30]\n  9038: a1 = a4 | a3\n  9041: a0 = a0 | a1\n  9044: jump @359 if a0 == 0\n      : @358 (gas: 1)\n  9047: jump @1198\n      : @359 (gas: 3)\n  9050: a0 = s1 + 0x3080\n  9054: a1 = 0x40\n  9057: ra = 328, jump @17\n      : @360 [@dyn 164] (gas: 14)\n  9063: a2 = s1 + 0x28b8\n  9067: t0 = u64 [a2 + 0x7e0]\n  9071: a1 = a2 + 0x700\n  9075: a5 = u64 [a1 + 0xd8]\n  9079: a4 = u64 [a1 + 0xd0]\n  9083: a0 = u64 [a1 + 0xc8]\n  9087: a3 = a4 | t0\n  9090: a1 = a0 | a5\n  9093: a1 = a1 | a3\n  9096: a1 = a1 >> 0x20\n  9099: a3 = a3 | a5\n  9102: a3 = a3 << 0x20\n  9105: a1 = a1 | a3\n  9108: jump @362 if a1 == 0\n      : @361 (gas: 1)\n  9111: jump @1123\n      : @362 (gas: 11)\n  9114: u64 [a2 + 1976] = 0\n  9118: u64 [a2 + 1968] = 0\n  9122: u64 [a2 + 1960] = 0\n  9126: a3 = 0x8c379a000000000\n  9136: a1 = s1 + 0x3060\n  9140: u64 [a2 + 0x7c0] = a3\n  9144: u64 [s1 + 0x138] = a0\n  9148: u64 [s1 + 0x130] = a4\n  9152: u64 [s1 + 0x120] = t0\n  9156: u64 [s1 + 0x128] = a5\n  9160: ra = 330, jump @19\n      : @363 [@dyn 165] (gas: 6)\n  9166: a5 = s1 + 0x100\n  9170: a1 = u64 [a5 + 0x38]\n  9173: a0 = u64 [a5 + 0x28]\n  9176: a3 = u64 [a5 + 0x20]\n  9179: a3 = a3 | a0\n  9182: t0 = 332, jump @1957\n      : @364 [@dyn 166] (gas: 1)\n  9189: jump @366 if a0 != 0\n      : @365 (gas: 1)\n  9192: jump @1123\n      : @366 (gas: 10)\n  9195: i32 a0 = a1 + 0x4\n  9198: a2 = s1 + 0x28b8\n  9202: u64 [a2 + 1952] = 0\n  9206: u64 [a2 + 1944] = 0\n  9210: u64 [a2 + 1928] = 0x20\n  9215: a1 = s1 + 0x3040\n  9219: u64 [a2 + 1936] = 0\n  9223: u64 [s1 + 0x128] = a3\n  9227: u64 [s1 + 0x120] = a4\n  9231: ra = 334, jump @19\n      : @367 [@dyn 167] (gas: 1)\n  9237: t0 = 336, jump @1955\n      : @368 [@dyn 168] (gas: 1)\n  9244: jump @370 if a0 != 0\n      : @369 (gas: 1)\n  9247: jump @1123\n      : @370 (gas: 8)\n  9250: i32 a0 = a1 + 0x24\n  9253: a3 = s1 + 0x28b8\n  9257: u64 [a3 + 1920] = 0\n  9261: u64 [a3 + 1912] = 0\n  9265: u64 [a3 + 1896] = 0xf\n  9270: a1 = s1 + 0x3020\n  9274: u64 [a3 + 1904] = 0\n  9278: ra = 338, jump @19\n      : @371 [@dyn 169] (gas: 1)\n  9284: t0 = 340, jump @1956\n      : @372 [@dyn 170] (gas: 1)\n  9291: jump @374 if a0 != 0\n      : @373 (gas: 1)\n  9294: jump @1123\n      : @374 (gas: 11)\n  9297: i32 a0 = a3 + 0x44\n  9300: a1 = u64 [0x20038]\n  9305: a2 = u64 [0x20040]\n  9310: a4 = s1 + 0x28b8\n  9314: u64 [a4 + 0x760] = a1\n  9318: u64 [a4 + 1872] = 0\n  9322: u64 [a4 + 0x758] = a2\n  9326: a1 = s1 + 0x3000\n  9330: u64 [a4 + 1864] = 0\n  9334: ra = 0x404\n  9338: jump @19\n      : @375 (gas: 9)\n  9341: u64 [a3 + 672] = 0\n  9345: u64 [a3 + 664] = 0\n  9349: u64 [a3 + 656] = 0\n  9353: u64 [a3 + 648] = 0\n  9357: a0 = s1 + 0x3000\n  9361: i32 a0 = a0 + 0x340\n  9365: ra = 0x156\n  9369: ecalli 17 // 'value_transferred'\n  9371: fallthrough\n      : @376 [@dyn 171] (gas: 10)\n  9372: a3 = s1 + 0x30b8\n  9376: a4 = a3 + 0x200\n  9380: a0 = u64 [a4 + 0x98]\n  9384: a1 = u64 [a4 + 0xa0]\n  9388: a2 = u64 [a4 + 0x90]\n  9392: a3 = u64 [a4 + 0x88]\n  9396: a1 = a1 | a2\n  9399: a0 = a0 | a3\n  9402: a0 = a0 | a1\n  9405: jump @378 if a0 == 0\n      : @377 (gas: 1)\n  9408: jump @1200\n      : @378 (gas: 1)\n  9411: t0 = 344, jump @1994\n      : @379 [@dyn 172] (gas: 1)\n  9418: jump @381 if a1 <u a0\n      : @380 (gas: 1)\n  9421: jump @1201\n      : @381 (gas: 3)\n  9424: a0 = s1 + 0x5a0\n  9428: a1 = 0x40\n  9431: ra = 346, jump @17\n      : @382 [@dyn 173] (gas: 20)\n  9437: a5 = s1 + 0x500\n  9441: a1 = u64 [a5 + 0xb8]\n  9445: u64 [s1 + 0x130] = a1\n  9449: a2 = u64 [a5 + 0xb0]\n  9453: u64 [s1 + 0x128] = a2\n  9457: a3 = u64 [a5 + 0xa8]\n  9461: u64 [s1 + 0x120] = a3\n  9465: a4 = u64 [a5 + 0xa0]\n  9469: u64 [s1 + 0x118] = a4\n  9473: u64 [s1 + 1400] = 0\n  9477: u64 [s1 + 1392] = 0\n  9481: u64 [s1 + 1384] = 0\n  9485: u64 [a5 + 96] = 0x200\n  9490: u64 [a5 + 0x98] = a1\n  9494: u64 [a5 + 0x90] = a2\n  9498: u64 [a5 + 0x88] = a3\n  9502: a0 = s1 + 0x580\n  9506: a1 = s1 + 0x560\n  9510: u64 [a5 + 0x80] = a4\n  9514: ra = 348, jump @1336\n      : @383 [@dyn 174] (gas: 1)\n  9520: t0 = 350, jump @2006\n      : @384 [@dyn 175] (gas: 1)\n  9527: jump @386 if a0 == 0\n      : @385 (gas: 1)\n  9530: jump @1123\n      : @386 (gas: 6)\n  9533: a0 = u64 [s1 + 0x138]\n  9537: a0 = i32 [a0]\n  9539: u64 [s1 + 0x138] = a0\n  9543: a1 = 0x200\n  9547: a0 = a2\n  9549: ra = 352, jump @32\n      : @387 [@dyn 176] (gas: 21)\n  9555: i32 a0 = a0 + 0\n  9557: a1 = 0x200\n  9561: a2 = u64 [s1 + 0x138]\n  9565: ecalli 3 // 'call_data_copy'\n  9567: a0 = s1 + 0x3000\n  9571: i32 a0 = a0 + 0x360\n  9575: a1 = 0x4\n  9578: ecalli 4 // 'call_data_load'\n  9580: a3 = s1 + 0x30b8\n  9584: a4 = a3 + 0x200\n  9588: a0 = u64 [a4 + 0xa8]\n  9592: a1 = u64 [a4 + 0xb0]\n  9596: a2 = u64 [a4 + 0xb8]\n  9600: a3 = u64 [a4 + 0xc0]\n  9604: u64 [s1 + 0x558] = a3\n  9608: u64 [s1 + 0x550] = a2\n  9612: u64 [s1 + 0x548] = a1\n  9616: a1 = s1 + 0x540\n  9620: u64 [s1 + 0x540] = a0\n  9624: a0 = 0\n  9626: ra = 354, jump @19\n      : @388 [@dyn 177] (gas: 7)\n  9632: u64 [s1 + 1336] = 0\n  9636: u64 [s1 + 1328] = 0\n  9640: u64 [s1 + 1312] = 0x3\n  9645: a0 = 0x20\n  9648: a1 = s1 + 0x520\n  9652: u64 [s1 + 1320] = 0\n  9656: ra = 356, jump @19\n      : @389 [@dyn 178] (gas: 2)\n  9662: a1 = i32 [0x2025c]\n  9667: jump @391 if a1 >u 63\n      : @390 (gas: 3)\n  9671: a1 = 0x40\n  9674: u32 [0x2025c] = a1\n  9679: fallthrough\n      : @391 (gas: 3)\n  9680: a0 = 0xffffffff\n  9690: u64 [s1 + 0xc0] = a0\n  9694: t0 = 358, jump @1975\n      : @392 [@dyn 179] (gas: 8)\n  9701: a0 = 0x20270\n  9706: i32 a0 = a0 + 0\n  9708: i32 a2 = a2 + 0\n  9710: a1 = 0x40\n  9713: ra = 0x168\n  9717: ecalli 9 // 'hash_keccak_256'\n  9719: t0 = 0x16a\n  9723: jump @1981\n      : @393 [@dyn 180] (gas: 1)\n  9727: t0 = 362, jump @1981\n      : @394 [@dyn 181] (gas: 3)\n  9734: a0 = s1 + 0x500\n  9738: a1 = 0x40\n  9741: ra = 364, jump @17\n      : @395 [@dyn 182] (gas: 33)\n  9747: a3 = u64 [s1 + 0x108]\n  9751: t1 = u64 [s1 + 0x110]\n  9755: a5 = u64 [s1 + 0x118]\n  9759: a1 = s1 + 0x500\n  9763: a0 = u64 [a1 + 0x18]\n  9766: u64 [s1 + 0xa0] = a0\n  9770: a0 = u64 [a1 + 0x10]\n  9773: u64 [s1 + 0xa8] = a0\n  9777: a0 = u64 [a1 + 0x8]\n  9780: u64 [s1 + 0xb0] = a0\n  9784: t2 = u64 [s1 + 0x500]\n  9788: a0 = sp + 0xffffffffffffffe0\n  9791: a1 = a0 & 0xffffffffffffffe0\n  9794: sp = a1\n  9796: ra = 0\n  9798: t0 = 0\n  9800: a2 = 0\n  9802: a4 = 0\n  9804: u64 [a1 + 0x18] = a3\n  9807: a0 = u64 [s1 + 0x100]\n  9811: u64 [a1 + 0x10] = a0\n  9814: u64 [a1 + 0x8] = t1\n  9817: u64 [a1] = a5\n  9819: u64 [s1 + 0x98] = t2\n  9823: u64 [s1 + 0x130] = t2\n  9827: a0 = u64 [s1 + 0xb0]\n  9831: u64 [s1 + 0x128] = a0\n  9835: a0 = u64 [s1 + 0xa8]\n  9839: u64 [s1 + 0x138] = a0\n  9843: a0 = u64 [s1 + 0xa0]\n  9847: u64 [s1 + 0x120] = a0\n  9851: u64 [s1 + 0xb8] = a1\n  9855: fallthrough\n      : @396 (gas: 6)\n  9856: a0 = ra <u 0x10\n  9859: a0 = 0 if t0 != 0\n  9861: u64 [s1 + 0xf8] = a2\n  9865: a2 = a2 | a4\n  9868: a0 = 0 if a2 != 0\n  9870: jump @398 if a0 != 0\n      : @397 (gas: 1)\n  9873: jump @1005\n      : @398 (gas: 8)\n  9876: u64 [s1 + 0xe0] = a4\n  9880: u64 [s1 + 0xe8] = t0\n  9884: u64 [s1 + 0xf0] = ra\n  9888: a0 = s1 + 0x420\n  9892: u64 [s1 + 0x118] = a5\n  9896: u64 [s1 + 0x110] = t1\n  9900: u64 [s1 + 0x108] = a3\n  9904: ra = 366, jump @21\n      : @399 [@dyn 183] (gas: 13)\n  9910: a5 = s1 + 0x100\n  9914: a2 = u64 [a5 + 0x38]\n  9917: a0 = u64 [a5 + 0x30]\n  9920: a3 = a0 | a2\n  9923: a1 = u64 [a5 + 0x20]\n  9926: a4 = u64 [a5 + 0x28]\n  9929: a1 = a1 | a4\n  9932: a3 = a3 | a1\n  9935: a3 = a3 >> 0x20\n  9938: a1 = a1 | a2\n  9941: a1 = a1 << 0x20\n  9944: a1 = a1 | a3\n  9947: jump @401 if a1 == 0\n      : @400 (gas: 1)\n  9950: jump @1123\n      : @401 (gas: 17)\n  9953: u64 [s1 + 0x128] = a4\n  9957: a5 = s1 + 0x400\n  9961: a4 = u64 [a5 + 0x30]\n  9964: a1 = u64 [a5 + 0x28]\n  9967: u64 [s1 + 0x138] = a2\n  9971: a2 = u64 [a5 + 0x20]\n  9974: a3 = u64 [s1 + 0xc0]\n  9978: a4 = a4 & a3\n  9981: a1 = a1 & 0xffffffffffffffff\n  9984: a2 = a2 & 0xffffffffffffffff\n  9987: u64 [s1 + 1048] = 0\n  9991: u64 [a5] = a2\n  9993: u64 [a5 + 0x8] = a1\n  9996: a1 = s1 + 0x400\n 10000: u64 [a5 + 0x10] = a4\n 10003: u64 [s1 + 0x130] = a0\n 10007: ra = 368, jump @19\n      : @402 [@dyn 184] (gas: 1)\n 10013: t0 = 370, jump @1962\n      : @403 [@dyn 185] (gas: 24)\n 10020: t0 = u64 [s1 + 0xe8]\n 10024: t0 = t0 + a4\n 10027: a4 = ra | t0\n 10030: a4 = a4 <u 0x1\n 10033: a5 = u64 [s1 + 0xf8]\n 10037: a2 = a5 + a4\n 10040: a5 = a2 <u a5\n 10043: a4 = u64 [s1 + 0xe0]\n 10047: a4 = a4 + a5\n 10050: a1 = u64 [s1 + 0xb8]\n 10054: u64 [a1 + 0x8] = t1\n 10057: u64 [a1] = t2\n 10059: u64 [a1 + 0x10] = a0\n 10062: u64 [a1 + 0x18] = a3\n 10065: a5 = s1 + 0x100\n 10069: u64 [a5] = a0\n 10071: a0 = u64 [s1 + 0xd8]\n 10075: u64 [a5 + 0x30] = a0\n 10078: a0 = u64 [s1 + 0xd0]\n 10082: u64 [a5 + 0x28] = a0\n 10085: a0 = u64 [s1 + 0xc8]\n 10089: u64 [a5 + 0x38] = a0\n 10092: a5 = t2\n 10094: jump @396\n      : @404 (gas: 9)\n 10097: u64 [a2 + 736] = 0\n 10101: u64 [a2 + 728] = 0\n 10105: u64 [a2 + 720] = 0\n 10109: u64 [a2 + 712] = 0\n 10113: a0 = s1 + 0x4000\n 10117: i32 a0 = a0 + 0xfffffffffffffb80\n 10121: ra = 0x174\n 10125: ecalli 17 // 'value_transferred'\n 10127: fallthrough\n      : @405 [@dyn 186] (gas: 3)\n 10128: a3 = s1 + 0x38b8\n 10132: a4 = a3 + 0x200\n 10136: t0 = 374, jump @2034\n      : @406 [@dyn 187] (gas: 1)\n 10143: jump @408 if a0 == 0\n      : @407 (gas: 1)\n 10146: jump @1202\n      : @408 (gas: 1)\n 10149: t0 = 376, jump @1994\n      : @409 [@dyn 188] (gas: 1)\n 10156: jump @411 if a1 <u a0\n      : @410 (gas: 1)\n 10159: jump @1203\n      : @411 (gas: 6)\n 10162: a0 = s1 + 0x4000\n 10166: i32 a0 = a0 + 0xfffffffffffffba0\n 10170: a1 = 0x4\n 10173: ra = 0x17a\n 10177: ecalli 4 // 'call_data_load'\n 10179: fallthrough\n      : @412 [@dyn 189] (gas: 4)\n 10180: a2 = s1 + 0x38b8\n 10184: a1 = u64 [a2 + 0x2f8]\n 10188: a3 = u64 [a2 + 0x300]\n 10192: t0 = 380, jump @1979\n      : @413 [@dyn 190] (gas: 1)\n 10199: jump @415 if a1 != 0\n      : @414 (gas: 1)\n 10202: jump @1204\n      : @415 (gas: 11)\n 10205: a0 = u64 [a2 + 0x2f0]\n 10209: u64 [s1 + 0x120] = a0\n 10213: a0 = u64 [a2 + 0x2e8]\n 10217: u64 [s1 + 0x128] = a0\n 10221: u64 [a2 + 800] = 0\n 10225: u64 [a2 + 792] = 0\n 10229: u64 [a2 + 784] = 0\n 10233: u64 [a2 + 776] = 0x4\n 10238: a0 = s1 + 0x1bc0\n 10242: a1 = s1 + 0x3bc0\n 10246: ra = 382, jump @21\n      : @416 [@dyn 191] (gas: 14)\n 10252: a4 = s1 + 0x18b8\n 10256: a5 = a4 + 0x300\n 10260: a0 = u64 [a5 + 0x8]\n 10263: a1 = u64 [a5 + 0x10]\n 10266: a2 = u64 [a5 + 0x18]\n 10269: a3 = u64 [a5 + 0x20]\n 10272: u64 [a5] = a3\n 10274: a3 = a4 + 0x200\n 10278: u64 [a3 + 0xf8] = a2\n 10282: u64 [a3 + 0xf0] = a1\n 10286: a1 = s1 + 0x1ba0\n 10290: u64 [a3 + 0xe8] = a0\n 10294: a0 = 0\n 10296: ra = 384, jump @19\n      : @417 [@dyn 192] (gas: 3)\n 10302: t0 = 0x182\n 10306: a1 = s1 + 0x18b8\n 10310: fallthrough\n      : @418 [@dyn 193] (gas: 8)\n 10311: u64 [a1 + 736] = 0\n 10315: u64 [a1 + 728] = 0\n 10319: u64 [a1 + 712] = 0x3\n 10324: a2 = a1\n 10326: a0 = 0x20\n 10329: a1 = s1 + 0x1b80\n 10333: u64 [a2 + 720] = 0\n 10337: ra = 388, jump @19\n      : @419 [@dyn 194] (gas: 3)\n 10343: a1 = 0x2025c\n 10348: a0 = i32 [0x2025c]\n 10353: jump @421 if a0 >u 63\n      : @420 (gas: 2)\n 10357: u32 [0x2025c] = 0x40\n 10363: fallthrough\n      : @421 (gas: 13)\n 10364: a0 = sp + 0xffffffffffffffe0\n 10367: a2 = a0 & 0xffffffffffffffe0\n 10370: u64 [s1 + 0x108] = a2\n 10374: sp = a2\n 10376: a0 = 0x20270\n 10381: i32 a0 = a0 + 0\n 10383: i32 a2 = a2 + 0\n 10385: u64 [s1 + 0x118] = a1\n 10389: a1 = 0x40\n 10392: u64 [s1 + 0x110] = a0\n 10396: ra = 0x186\n 10400: ecalli 9 // 'hash_keccak_256'\n 10402: fallthrough\n      : @422 [@dyn 195] (gas: 6)\n 10403: a3 = u64 [s1 + 0x108]\n 10407: a0 = u64 [a3]\n 10409: a1 = u64 [a3 + 0x8]\n 10412: a2 = u64 [a3 + 0x10]\n 10415: a3 = u64 [a3 + 0x18]\n 10418: t0 = 392, jump @2012\n      : @423 [@dyn 196] (gas: 29)\n 10425: a4 = a3 + 0x10\n 10428: u64 [s1 + 0x100] = a4\n 10432: a3 = a4 <u a3\n 10435: a4 = a2 + a3\n 10438: u64 [s1 + 0xf8] = a4\n 10442: a2 = a4 <u a2\n 10445: a2 = a3 if a3 == 0\n 10448: a2 = a2 + a1\n 10451: u64 [s1 + 0xf0] = a2\n 10455: a1 = a2 <u a1\n 10458: a0 = a0 + a1\n 10461: u64 [s1 + 0xe8] = a0\n 10465: a0 = sp + 0xffffffffffffffe0\n 10468: a0 = a0 & 0xffffffffffffffe0\n 10471: u64 [s1 + 0x108] = a0\n 10475: sp = a0\n 10477: a2 = s1 + 0x18b8\n 10481: a0 = u64 [s1 + 0x130]\n 10485: a3 = a2 + 0x200\n 10489: u64 [a3 + 0xc0] = a0\n 10493: a0 = u64 [s1 + 0x138]\n 10497: u64 [a3 + 0xb8] = a0\n 10501: a0 = u64 [s1 + 0x120]\n 10505: u64 [a3 + 0xb0] = a0\n 10509: a1 = s1 + 0x1b60\n 10513: a0 = u64 [s1 + 0x128]\n 10517: u64 [a3 + 0xa8] = a0\n 10521: a0 = 0\n 10523: ra = 394, jump @19\n      : @424 [@dyn 197] (gas: 3)\n 10529: t0 = 0x18c\n 10533: a1 = s1 + 0x18b8\n 10537: fallthrough\n      : @425 [@dyn 198] (gas: 13)\n 10538: a0 = u64 [s1 + 0xe8]\n 10542: a2 = a1 + 0x200\n 10546: u64 [a2 + 0xa0] = a0\n 10550: a0 = u64 [s1 + 0xf0]\n 10554: u64 [a2 + 0x98] = a0\n 10558: a0 = u64 [s1 + 0xf8]\n 10562: u64 [a2 + 0x90] = a0\n 10566: a3 = a1\n 10568: a0 = 0x20\n 10571: a1 = s1 + 0x1b40\n 10575: a2 = u64 [s1 + 0x100]\n 10579: u64 [a3 + 0x288] = a2\n 10583: ra = 398, jump @19\n      : @426 [@dyn 199] (gas: 3)\n 10589: a1 = u64 [s1 + 0x118]\n 10593: a0 = i32 [a1]\n 10595: jump @428 if a0 >u 63\n      : @427 (gas: 2)\n 10599: u32 [a1 + 0] = 0x40\n 10602: fallthrough\n      : @428 (gas: 12)\n 10603: a0 = sp + 0xffffffffffffffe0\n 10606: a0 = a0 & 0xffffffffffffffe0\n 10609: u64 [s1 + 0x138] = a0\n 10613: sp = a0\n 10615: i32 a2 = a0 + 0\n 10617: a1 = 0x40\n 10620: a0 = u64 [s1 + 0x110]\n 10624: ra = 0x190\n 10628: ecalli 9 // 'hash_keccak_256'\n 10630: a3 = u64 [s1 + 0x138]\n 10634: t0 = 0x192\n 10638: jump @1974\n      : @429 [@dyn 200] (gas: 2)\n 10642: a3 = u64 [s1 + 0x138]\n 10646: t0 = 402, jump @1974\n      : @430 [@dyn 201] (gas: 7)\n 10653: a1 = u64 [s1 + 0x108]\n 10657: u64 [a1 + 0x18] = a3\n 10660: u64 [a1 + 0x10] = a2\n 10663: u64 [a1 + 0x8] = a4\n 10666: u64 [a1] = a0\n 10668: a0 = s1 + 0x1b20\n 10672: ra = 404, jump @21\n      : @431 [@dyn 202] (gas: 3)\n 10678: t0 = 0x196\n 10682: a1 = s1 + 0x18b8\n 10686: fallthrough\n      : @432 [@dyn 203] (gas: 13)\n 10687: a2 = a1 + 0x200\n 10691: a0 = u64 [a2 + 0x80]\n 10695: a1 = s1 + 0x100\n 10699: u64 [a1 + 0x38] = a0\n 10702: a0 = u64 [a2 + 0x78]\n 10705: u64 [a1 + 0x30] = a0\n 10708: a0 = u64 [a2 + 0x70]\n 10711: u64 [a1 + 0x28] = a0\n 10714: a0 = u64 [a2 + 0x68]\n 10717: u64 [a1 + 0x20] = a0\n 10720: a0 = s1 + 0x1b00\n 10724: a1 = 0x40\n 10727: ra = 408, jump @17\n      : @433 [@dyn 204] (gas: 7)\n 10733: a3 = s1 + 0x18b8\n 10737: a5 = a3 + 0x200\n 10741: a0 = u64 [a5 + 0x60]\n 10744: a1 = u64 [a5 + 0x58]\n 10747: a2 = u64 [a5 + 0x50]\n 10750: a4 = u64 [a5 + 0x48]\n 10753: t0 = 410, jump @1986\n      : @434 [@dyn 205] (gas: 1)\n 10760: jump @436 if a0 == 0\n      : @435 (gas: 1)\n 10763: jump @1123\n      : @436 (gas: 15)\n 10766: a2 = s1 + 0x100\n 10770: a0 = u64 [a2 + 0x20]\n 10773: a5 = a3 + 0x200\n 10777: u64 [a5 + 0x28] = a0\n 10780: a0 = u64 [a2 + 0x28]\n 10783: u64 [a5 + 0x30] = a0\n 10786: a0 = u64 [a2 + 0x30]\n 10789: u64 [a5 + 0x38] = a0\n 10792: a1 = s1 + 0x1ae0\n 10796: a0 = u64 [a2 + 0x38]\n 10799: u64 [a5 + 0x40] = a0\n 10802: a0 = a4\n 10804: u64 [s1 + 0x138] = a4\n 10808: ra = 0x33c\n 10812: jump @19\n      : @437 (gas: 11)\n 10815: u64 [a4 + 384] = 0\n 10819: u64 [a4 + 376] = 0\n 10823: u64 [a4 + 368] = 0\n 10827: u64 [a4 + 360] = 0\n 10831: a0 = s1 + 0x4000\n 10835: i32 a0 = a0 + 0x220\n 10839: ra = 0x19c\n 10843: ecalli 17 // 'value_transferred'\n 10845: a0 = 0x4000\n 10849: t0 = 0x19e\n 10853: jump @2014\n      : @438 [@dyn 206] (gas: 2)\n 10857: a0 = 0x4000\n 10861: t0 = 414, jump @2014\n      : @439 [@dyn 207] (gas: 8)\n 10868: a0 = u64 [a4 + 0x78]\n 10871: a1 = u64 [a4 + 0x80]\n 10875: a2 = u64 [a4 + 0x70]\n 10878: a3 = u64 [a4 + 0x68]\n 10881: a1 = a1 | a2\n 10884: a0 = a0 | a3\n 10887: a0 = a0 | a1\n 10890: jump @441 if a0 == 0\n      : @440 (gas: 1)\n 10893: jump @1205\n      : @441 (gas: 1)\n 10896: t0 = 416, jump @1994\n      : @442 [@dyn 208] (gas: 1)\n 10903: jump @444 if a1 <u a0\n      : @443 (gas: 1)\n 10906: jump @1206\n      : @444 (gas: 6)\n 10909: a0 = s1 + 0x4000\n 10913: i32 a0 = a0 + 0x240\n 10917: a1 = 0x4\n 10920: ra = 0x1a2\n 10924: ecalli 4 // 'call_data_load'\n 10926: fallthrough\n      : @445 [@dyn 209] (gas: 4)\n 10927: a4 = s1 + 0x40b8\n 10931: a1 = u64 [a4 + 0x198]\n 10935: a0 = u64 [a4 + 0x1a0]\n 10939: t0 = 420, jump @2016\n      : @446 [@dyn 210] (gas: 1)\n 10946: jump @448 if a3 != 0\n      : @447 (gas: 1)\n 10949: jump @1207\n      : @448 (gas: 11)\n 10952: a2 = u64 [a4 + 0x190]\n 10956: a3 = u64 [a4 + 0x188]\n 10960: a4 = s1 + 0x28b8\n 10964: a5 = a4 + 0x400\n 10968: u64 [a5 + 0xe8] = a3\n 10972: u64 [a5 + 0xf0] = a2\n 10976: u64 [a5 + 0xf8] = a1\n 10980: a1 = s1 + 0x2da0\n 10984: u64 [a4 + 0x500] = a0\n 10988: a0 = 0\n 10990: ra = 422, jump @19\n      : @449 [@dyn 211] (gas: 3)\n 10996: t0 = 0x1a8\n 11000: a1 = s1 + 0x28b8\n 11004: fallthrough\n      : @450 [@dyn 212] (gas: 8)\n 11005: u64 [a1 + 1248] = 0\n 11009: u64 [a1 + 1240] = 0\n 11013: u64 [a1 + 1224] = 0x6\n 11018: a2 = a1\n 11020: a0 = 0x20\n 11023: a1 = s1 + 0x2d80\n 11027: u64 [a2 + 1232] = 0\n 11031: ra = 426, jump @19\n      : @451 [@dyn 213] (gas: 2)\n 11037: a1 = i32 [0x2025c]\n 11042: jump @453 if a1 >u 63\n      : @452 (gas: 4)\n 11046: a1 = 0x40\n 11049: u32 [0x2025c] = a1\n 11054: t0 = 0x1ac\n 11058: jump @1975\n      : @453 (gas: 1)\n 11062: t0 = 428, jump @1975\n      : @454 [@dyn 214] (gas: 8)\n 11069: a0 = 0x20270\n 11074: i32 a0 = a0 + 0\n 11076: i32 a2 = a2 + 0\n 11078: a1 = 0x40\n 11081: ra = 0x1ae\n 11085: ecalli 9 // 'hash_keccak_256'\n 11087: t0 = 0x1b0\n 11091: jump @2002\n      : @455 [@dyn 215] (gas: 1)\n 11095: t0 = 432, jump @2002\n      : @456 [@dyn 216] (gas: 10)\n 11102: i32 a4 = a4 + 0xb8\n 11106: a4 = a4 + s1\n 11109: a5 = a4 + 0x100\n 11113: u64 [a5 + 0xc0] = a3\n 11117: u64 [a5 + 0xb8] = a2\n 11121: u64 [a5 + 0xb0] = a1\n 11125: u64 [a5 + 0xa8] = a0\n 11129: a0 = s1 + 0x2d60\n 11133: a1 = s1 + 0x4260\n 11137: ra = 434, jump @21\n      : @457 [@dyn 217] (gas: 2)\n 11143: a0 = 0x3000\n 11147: t0 = 436, jump @1997\n      : @458 [@dyn 218] (gas: 3)\n 11154: a0 = s1 + 0x2d40\n 11158: a1 = 0x40\n 11161: ra = 438, jump @17\n      : @459 [@dyn 219] (gas: 7)\n 11167: a3 = s1 + 0x28b8\n 11171: a5 = a3 + 0x400\n 11175: a0 = u64 [a5 + 0xa0]\n 11179: a1 = u64 [a5 + 0x98]\n 11183: a2 = u64 [a5 + 0x90]\n 11187: a4 = u64 [a5 + 0x88]\n 11191: t0 = 440, jump @1986\n      : @460 [@dyn 220] (gas: 1)\n 11198: jump @462 if a0 == 0\n      : @461 (gas: 1)\n 11201: jump @1123\n      : @462 (gas: 1)\n 11204: t0 = 442, jump @2030\n      : @463 [@dyn 221] (gas: 2)\n 11211: a0 = 0x3000\n 11215: jump @836\n      : @464 (gas: 10)\n 11218: u64 [a2 + 672] = 0\n 11222: u64 [a2 + 664] = 0\n 11226: u64 [a2 + 656] = 0\n 11230: u64 [a2 + 648] = 0\n 11234: a0 = s1 + 0x4000\n 11238: i32 a0 = a0 + 0xfffffffffffffb40\n 11242: ra = 0x1bc\n 11246: ecalli 17 // 'value_transferred'\n 11248: t0 = 0x1be\n 11252: jump @2036\n      : @465 [@dyn 222] (gas: 1)\n 11256: t0 = 446, jump @2036\n      : @466 [@dyn 223] (gas: 8)\n 11263: a0 = u64 [a5 + 0x98]\n 11267: a1 = u64 [a5 + 0xa0]\n 11271: a2 = u64 [a5 + 0x90]\n 11275: a3 = u64 [a5 + 0x88]\n 11279: a1 = a1 | a2\n 11282: a0 = a0 | a3\n 11285: a0 = a0 | a1\n 11288: jump @468 if a0 == 0\n      : @467 (gas: 1)\n 11291: jump @1208\n      : @468 (gas: 3)\n 11294: a0 = u64 [s1 + 0x138]\n 11298: a0 = i32 [a0]\n 11300: jump @470 if a0 >u 3\n      : @469 (gas: 1)\n 11304: jump @1209\n      : @470 (gas: 7)\n 11307: u64 [a4 + 704] = 0\n 11311: u64 [a4 + 696] = 0\n 11315: u64 [a4 + 688] = 0\n 11319: u64 [a4 + 680] = 0x8\n 11324: a0 = s1 + 0x1ac0\n 11328: a1 = s1 + 0x3b60\n 11332: ra = 448, jump @21\n      : @471 [@dyn 224] (gas: 6)\n 11338: a0 = s1 + 0x18b8\n 11342: a0 = u64 [a0 + 0x218]\n 11346: u64 [s1 + 0x138] = a0\n 11350: a0 = s1 + 0x1aa0\n 11354: a1 = 0x40\n 11357: ra = 450, jump @17\n      : @472 [@dyn 225] (gas: 7)\n 11363: a3 = s1 + 0x18b8\n 11367: a4 = u64 [a3 + 0x200]\n 11371: a5 = a3 + 0x100\n 11375: a1 = u64 [a5 + 0xf8]\n 11379: a2 = u64 [a5 + 0xf0]\n 11383: a0 = u64 [a5 + 0xe8]\n 11387: t0 = 452, jump @2000\n      : @473 [@dyn 226] (gas: 1)\n 11394: jump @475 if a1 == 0\n      : @474 (gas: 1)\n 11397: jump @1123\n      : @475 (gas: 12)\n 11400: a1 = 0xff00000000\n 11410: a2 = u64 [s1 + 0x138]\n 11414: a1 = a1 & a2\n 11417: a1 = a1 >u 0\n 11419: u64 [a3 + 480] = 0\n 11423: u64 [a3 + 472] = 0\n 11427: u64 [a3 + 0x1c8] = a1\n 11431: a1 = s1 + 0x1a80\n 11435: u64 [a3 + 464] = 0\n 11439: u64 [s1 + 0x138] = a0\n 11443: ra = 0x33c\n 11447: jump @19\n      : @476 (gas: 8)\n 11450: u64 [a3 + 1696] = 0\n 11454: u64 [a3 + 1688] = 0\n 11458: u64 [a3 + 1680] = 0\n 11462: u64 [a3 + 1672] = 0\n 11466: a0 = s1 + 0x3000\n 11470: i32 a0 = a0 + 0x740\n 11474: ecalli 17 // 'value_transferred'\n 11476: fallthrough\n      : @477 (gas: 10)\n 11477: a4 = s1 + 0x30b8\n 11481: a5 = a4 + 0x600\n 11485: a0 = u64 [a5 + 0x98]\n 11489: a1 = u64 [a5 + 0xa0]\n 11493: a2 = u64 [a5 + 0x90]\n 11497: a3 = u64 [a5 + 0x88]\n 11501: a1 = a1 | a2\n 11504: a0 = a0 | a3\n 11507: a0 = a0 | a1\n 11510: jump @479 if a0 == 0\n      : @478 (gas: 1)\n 11513: jump @1210\n      : @479 (gas: 3)\n 11516: a0 = u64 [s1 + 0x138]\n 11520: a0 = i32 [a0]\n 11522: jump @481 if a0 >u 3\n      : @480 (gas: 1)\n 11526: jump @1211\n      : @481 (gas: 7)\n 11529: u64 [a4 + 1728] = 0\n 11533: u64 [a4 + 1720] = 0\n 11537: u64 [a4 + 1712] = 0\n 11541: u64 [a4 + 1704] = 0x7\n 11546: a0 = s1 + 0x1840\n 11550: a1 = s1 + 0x3760\n 11554: ra = 454, jump @21\n      : @482 [@dyn 227] (gas: 2)\n 11560: a0 = 0x1000\n 11564: t0 = 456, jump @2003\n      : @483 [@dyn 228] (gas: 8)\n 11571: a0 = 0x30270\n 11576: u64 [s1 + 0xb8] = a0\n 11580: i32 a0 = a0 + 0\n 11582: ra = 0x1ca\n 11586: ecalli 6 // 'caller'\n 11588: a2 = u64 [s1 + 0xb8]\n 11592: t0 = 0x1cc\n 11596: jump @1961\n      : @484 [@dyn 229] (gas: 2)\n 11600: a2 = u64 [s1 + 0xb8]\n 11604: t0 = 460, jump @1961\n      : @485 [@dyn 230] (gas: 19)\n 11611: a4 = s1 + 0x100\n 11615: a2 = u64 [a4 + 0x28]\n 11618: a1 = a1 ^ a2\n 11621: a2 = u64 [a4 + 0x30]\n 11624: a0 = a0 ^ a2\n 11627: a0 = a0 | a1\n 11630: a1 = u64 [a4 + 0x38]\n 11633: a1 = a1 ^ a3\n 11636: a0 = a0 | a1\n 11639: a0 = a0 <u 0x1\n 11642: a1 = s1 + 0x10b8\n 11646: u64 [a1 + 1920] = 0\n 11650: u64 [a1 + 1912] = 0\n 11654: u64 [a1 + 0x768] = a0\n 11658: a0 = s1 + 0x1820\n 11662: u64 [a1 + 1904] = 0\n 11666: ra = 0x1ce\n 11670: t0 = 0x562\n 11674: jump @1953\n      : @486 [@dyn 231] (gas: 8)\n 11678: a0 = s1 + 0x30b8\n 11682: u64 [a0 + 1760] = 0\n 11686: u64 [a0 + 1752] = 0\n 11690: u64 [a0 + 1744] = 0\n 11694: u64 [a0 + 1736] = 0x9\n 11699: a0 = s1 + 0x1800\n 11703: a1 = s1 + 0x3780\n 11707: ra = 464, jump @21\n      : @487 [@dyn 232] (gas: 7)\n 11713: a4 = s1 + 0x10b8\n 11717: a5 = a4 + 0x700\n 11721: a0 = u64 [a5 + 0x60]\n 11724: a1 = u64 [a5 + 0x50]\n 11727: a2 = u64 [a5 + 0x48]\n 11730: a3 = u64 [a5 + 0x58]\n 11733: t0 = 466, jump @2011\n      : @488 [@dyn 233] (gas: 8)\n 11740: u64 [a4 + 1856] = 0\n 11744: u64 [a4 + 1848] = 0\n 11748: u64 [a5 + 0x28] = a0\n 11751: a0 = s1 + 0x17e0\n 11755: u64 [a4 + 1840] = 0\n 11759: ra = 0x1d4\n 11763: t0 = 0x5b0\n 11767: jump @1953\n      : @489 [@dyn 234] (gas: 12)\n 11771: a1 = s1 + 0x30b8\n 11775: u64 [a1 + 1792] = 0\n 11779: u64 [a1 + 1784] = 0\n 11783: u64 [a1 + 1776] = 0\n 11787: u64 [a1 + 1768] = 0x9\n 11792: u64 [a1 + 1824] = 0\n 11796: u64 [a1 + 1816] = 0\n 11800: u64 [a1 + 1808] = 0\n 11804: u64 [a1 + 1800] = 0x2\n 11809: a0 = s1 + 0x37a0\n 11813: a1 = s1 + 0x37c0\n 11817: ra = 470, jump @25\n      : @490 [@dyn 235] (gas: 9)\n 11823: a0 = s1 + 0x30b8\n 11827: u64 [a0 + 1856] = 0\n 11831: u64 [a0 + 1848] = 0\n 11835: u64 [a0 + 1840] = 0\n 11839: a1 = a0\n 11841: u64 [a1 + 1832] = 0x4\n 11846: a0 = s1 + 0x17c0\n 11850: a1 = s1 + 0x37e0\n 11854: ra = 472, jump @21\n      : @491 [@dyn 236] (gas: 18)\n 11860: a4 = s1 + 0x10b8\n 11864: a5 = a4 + 0x700\n 11868: a0 = u64 [a5 + 0x20]\n 11871: a1 = u64 [a5 + 0x18]\n 11874: a2 = u64 [a5 + 0x10]\n 11877: a3 = u64 [a5 + 0x8]\n 11880: u64 [s1 + 0xf0] = a0\n 11884: u64 [a5] = a0\n 11886: u64 [s1 + 0xe8] = a1\n 11890: a5 = a4 + 0x600\n 11894: u64 [a5 + 0xf8] = a1\n 11898: u64 [s1 + 0xe0] = a2\n 11902: u64 [a5 + 0xf0] = a2\n 11906: a1 = s1 + 0x17a0\n 11910: u64 [s1 + 0xd8] = a3\n 11914: u64 [a5 + 0xe8] = a3\n 11918: a0 = 0\n 11920: ra = 474, jump @19\n      : @492 [@dyn 237] (gas: 2)\n 11926: a1 = s1 + 0x10b8\n 11930: t0 = 476, jump @2027\n      : @493 [@dyn 238] (gas: 3)\n 11937: a1 = s1 + 0x1780\n 11941: u64 [a2 + 1744] = 0\n 11945: ra = 478, jump @19\n      : @494 [@dyn 239] (gas: 4)\n 11951: a2 = 0x2025c\n 11956: a0 = i32 [0x2025c]\n 11961: a1 = 0x3f\n 11964: jump @496 if a1 <u a0\n      : @495 (gas: 4)\n 11967: u32 [0x2025c] = 0x40\n 11973: u64 [s1 + 0xd0] = a2\n 11977: t0 = 0x1e0\n 11981: jump @1975\n      : @496 (gas: 2)\n 11985: u64 [s1 + 0xd0] = a2\n 11989: t0 = 480, jump @1975\n      : @497 [@dyn 240] (gas: 37)\n 11996: a0 = 0x20270\n 12001: u64 [s1 + 0xa8] = a0\n 12005: i32 a0 = a0 + 0\n 12007: i32 a2 = a2 + 0\n 12009: a1 = 0x40\n 12012: u64 [s1 + 0xa0] = a0\n 12016: ecalli 9 // 'hash_keccak_256'\n 12018: a3 = u64 [s1 + 0x138]\n 12022: a0 = u64 [a3]\n 12024: a1 = u64 [a3 + 0x8]\n 12027: a2 = u64 [a3 + 0x10]\n 12030: a3 = u64 [a3 + 0x18]\n 12033: a4 = reverse a0\n 12035: u64 [s1 + 0x138] = a4\n 12039: a5 = reverse a1\n 12041: u64 [s1 + 0x130] = a5\n 12045: a2 = reverse a2\n 12047: u64 [s1 + 0x128] = a2\n 12051: a0 = reverse a3\n 12053: u64 [s1 + 0x120] = a0\n 12057: t0 = a0 + 0x11\n 12060: a1 = t0 <u a0\n 12063: a0 = a2 + a1\n 12066: a3 = a0 <u a2\n 12069: a3 = a1 if a1 == 0\n 12072: a3 = a3 + a5\n 12075: a1 = a3 <u a5\n 12078: a1 = a1 + a4\n 12081: a4 = s1 + 0x30b8\n 12085: u64 [a4 + 0x748] = t0\n 12089: a2 = a4 + 0x700\n 12093: u64 [a2 + 0x50] = a0\n 12096: u64 [a2 + 0x58] = a3\n 12099: u64 [a2 + 0x60] = a1\n 12102: a0 = s1 + 0x1760\n 12106: a1 = s1 + 0x3800\n 12110: ra = 482, jump @21\n      : @498 [@dyn 241] (gas: 19)\n 12116: a4 = s1 + 0x10b8\n 12120: a5 = a4 + 0x600\n 12124: a0 = u64 [a5 + 0xc0]\n 12128: a1 = u64 [a5 + 0xb0]\n 12132: a2 = u64 [a5 + 0xa8]\n 12136: a3 = u64 [a5 + 0xb8]\n 12140: a0 = a0 | a1\n 12143: a1 = a2 ^ 0x10\n 12146: a1 = a1 | a3\n 12149: a0 = a0 | a1\n 12152: a0 = a0 <u 0x1\n 12155: u64 [a4 + 1696] = 0\n 12159: u64 [a4 + 1688] = 0\n 12163: u64 [a5 + 0x88] = a0\n 12167: a0 = s1 + 0x1740\n 12171: u64 [a4 + 1680] = 0\n 12175: ra = 0x1e4\n 12179: t0 = 0x676\n 12183: jump @1953\n      : @499 [@dyn 242] (gas: 26)\n 12187: a0 = sp + 0xffffffffffffffe0\n 12190: a1 = a0 & 0xffffffffffffffe0\n 12193: sp = a1\n 12195: a0 = u64 [s1 + 0x120]\n 12199: a3 = a0 + 0x15\n 12202: a0 = a3 <u a0\n 12205: a2 = u64 [s1 + 0x128]\n 12209: a4 = a2 + a0\n 12212: a2 = a4 <u a2\n 12215: a2 = a0 if a0 == 0\n 12218: a0 = u64 [s1 + 0x130]\n 12222: a2 = a2 + a0\n 12225: a0 = a2 <u a0\n 12228: a5 = u64 [s1 + 0x138]\n 12232: a0 = a0 + a5\n 12235: u64 [s1 + 0x90] = a0\n 12239: u64 [a1 + 0x18] = a0\n 12242: u64 [s1 + 0x98] = a2\n 12246: u64 [a1 + 0x10] = a2\n 12249: u64 [s1 + 0xc0] = a4\n 12253: u64 [a1 + 0x8] = a4\n 12256: u64 [s1 + 0xc8] = a3\n 12260: u64 [a1] = a3\n 12262: a0 = s1 + 0x1720\n 12266: u64 [s1 + 0xb0] = a1\n 12270: ra = 486, jump @21\n      : @500 [@dyn 243] (gas: 11)\n 12276: a1 = s1 + 0x10b8\n 12280: a0 = u8 [a1 + 0x668]\n 12284: a0 = a0 <u 0x1\n 12287: u64 [a1 + 1632] = 0\n 12291: u64 [a1 + 1624] = 0\n 12295: u64 [a1 + 0x648] = a0\n 12299: a0 = s1 + 0x1700\n 12303: u64 [a1 + 1616] = 0\n 12307: ra = 0x1e8\n 12311: t0 = 0x698\n 12315: jump @1953\n      : @501 [@dyn 244] (gas: 6)\n 12319: a5 = s1 + 0x100\n 12323: a1 = u64 [a5 + 0x20]\n 12326: a0 = a1 + 0x13\n 12329: a1 = a0 <u a1\n 12332: a3 = u64 [a5 + 0x28]\n 12335: t0 = 490, jump @1990\n      : @502 [@dyn 245] (gas: 14)\n 12342: a1 = u64 [a5 + 0x30]\n 12345: a3 = a3 + a1\n 12348: a1 = a3 <u a1\n 12351: a4 = u64 [a5 + 0x38]\n 12354: a1 = a1 + a4\n 12357: a4 = s1 + 0x30b8\n 12361: a5 = a4 + 0x700\n 12365: u64 [a5 + 0x80] = a1\n 12369: u64 [a5 + 0x78] = a3\n 12372: u64 [a5 + 0x70] = a2\n 12375: u64 [a5 + 0x68] = a0\n 12378: a0 = s1 + 0x16e0\n 12382: a1 = s1 + 0x3820\n 12386: ra = 492, jump @21\n      : @503 [@dyn 246] (gas: 2)\n 12392: a1 = s1 + 0x10b8\n 12396: fallthrough\n      : @504 (gas: 13)\n 12397: a4 = a1 + 0x600\n 12401: a2 = u64 [a4 + 0x30]\n 12404: a3 = u64 [a4 + 0x28]\n 12407: a0 = u64 [a4 + 0x40]\n 12410: a1 = u64 [a4 + 0x38]\n 12413: a4 = a2 + 0x1\n 12416: a5 = a3 <u 0xffffffffffffff01\n 12420: a5 = a5 ^ 0x1\n 12423: a5 = 0 if a4 != 0\n 12425: a4 = a1 & a0\n 12428: a4 = a4 + 0x1\n 12431: a5 = 0 if a4 != 0\n 12433: jump @506 if a5 == 0\n      : @505 (gas: 1)\n 12436: jump @1212\n      : @506 (gas: 39)\n 12439: a4 = a3 + 0xff\n 12443: u64 [s1 + 0x110] = a4\n 12447: a3 = a4 <u a3\n 12450: a4 = a2 + a3\n 12453: u64 [s1 + 0x100] = a4\n 12457: a2 = a4 <u a2\n 12460: a2 = a3 if a3 == 0\n 12463: a2 = a2 + a1\n 12466: u64 [s1 + 0x118] = a2\n 12470: a1 = a2 <u a1\n 12473: a0 = a0 + a1\n 12476: u64 [s1 + 0x108] = a0\n 12480: a0 = s1 + 0x4000\n 12484: i32 a0 = a0 + 0xfffffffffffff840\n 12488: ecalli 1 // 'block_number'\n 12490: a4 = s1 + 0x30b8\n 12494: a0 = u64 [a4 + 0x788]\n 12498: a1 = u64 [a4 + 0x790]\n 12502: a2 = u64 [a4 + 0x7a0]\n 12506: a3 = u64 [s1 + 0x110]\n 12510: a0 = a3 <u a0\n 12513: a5 = u64 [s1 + 0x100]\n 12517: a3 = a1 ^ a5\n 12520: a5 = a5 <u a1\n 12523: a1 = u64 [a4 + 0x798]\n 12527: a5 = a0 if a3 == 0\n 12530: a3 = u64 [s1 + 0x108]\n 12534: a0 = a2 ^ a3\n 12537: a2 = a3 <u a2\n 12540: a4 = u64 [s1 + 0x118]\n 12544: a3 = a4 <u a1\n 12547: a2 = a3 if a0 == 0\n 12550: a1 = a1 ^ a4\n 12553: a0 = a0 | a1\n 12556: a5 = a2 if a0 != 0\n 12559: u64 [s1 + 0x118] = a5\n 12563: a0 = s1 + 0x16c0\n 12567: a1 = 0x40\n 12570: ra = 494, jump @17\n      : @507 [@dyn 247] (gas: 8)\n 12576: t0 = s1 + 0x10b8\n 12580: a1 = t0 + 0x600\n 12584: a2 = u64 [a1 + 0x20]\n 12587: a5 = u64 [a1 + 0x18]\n 12590: a4 = u64 [a1 + 0x10]\n 12593: a0 = u64 [a1 + 0x8]\n 12596: a1 = u64 [s1 + 0x118]\n 12600: jump @509 if a1 != 0\n      : @508 (gas: 1)\n 12603: jump @948\n      : @509 (gas: 20)\n 12606: a1 = a0 + 0x20\n 12609: u64 [s1 + 0x118] = a1\n 12613: u64 [s1 + 0x110] = a0\n 12617: a0 = a1 <u a0\n 12620: a1 = a4 + a0\n 12623: u64 [s1 + 0x88] = a1\n 12627: u64 [s1 + 0x108] = a4\n 12631: a1 = a1 <u a4\n 12634: a1 = a0 if a0 == 0\n 12637: a1 = a1 + a5\n 12640: u64 [s1 + 0x78] = a1\n 12643: u64 [s1 + 0x100] = a5\n 12647: a0 = a1 <u a5\n 12650: u64 [s1 + 0xf8] = a2\n 12654: a0 = a0 + a2\n 12657: u64 [s1 + 0x80] = a0\n 12661: a0 = s1 + 0x4000\n 12665: i32 a0 = a0 + 0xfffffffffffff860\n 12669: ecalli 10 // 'now'\n 12671: fallthrough\n      : @510 (gas: 12)\n 12672: a5 = u64 [s1 + 0x118]\n 12676: a2 = u64 [s1 + 0x78]\n 12679: a0 = a5 | a2\n 12682: a1 = u64 [s1 + 0x88]\n 12686: a3 = u64 [s1 + 0x80]\n 12690: a1 = a1 | a3\n 12693: a0 = a0 | a1\n 12696: a0 = a0 >> 0x20\n 12699: a1 = a1 | a2\n 12702: a1 = a1 << 0x20\n 12705: a0 = a0 | a1\n 12708: jump @512 if a0 == 0\n      : @511 (gas: 1)\n 12711: jump @1123\n      : @512 (gas: 3)\n 12714: t0 = 0x1f0\n 12718: a3 = s1 + 0x30b8\n 12722: fallthrough\n      : @513 [@dyn 248] (gas: 14)\n 12723: a4 = a3 + 0x700\n 12727: a0 = u64 [a4 + 0xa8]\n 12731: a1 = u64 [a4 + 0xb0]\n 12735: a2 = u64 [a4 + 0xb8]\n 12739: a3 = u64 [a4 + 0xc0]\n 12743: a4 = s1 + 0x10b8\n 12747: u64 [a4 + 0x580] = a3\n 12751: a3 = a4 + 0x500\n 12755: u64 [a3 + 0x78] = a2\n 12758: u64 [a3 + 0x70] = a1\n 12761: a1 = s1 + 0x1620\n 12765: u64 [a3 + 0x68] = a0\n 12768: a0 = a5\n 12770: ra = 498, jump @19\n      : @514 [@dyn 249] (gas: 6)\n 12776: a4 = s1 + 0x100\n 12780: a1 = u64 [a4 + 0x10]\n 12783: a0 = a1 + 0x40\n 12786: a1 = a0 <u a1\n 12789: a3 = u64 [a4 + 0x8]\n 12792: t0 = 500, jump @1990\n      : @515 [@dyn 250] (gas: 4)\n 12799: a1 = u64 [a4]\n 12801: a3 = a3 + a1\n 12804: a1 = a3 <u a1\n 12807: t0 = 502, jump @2037\n      : @516 [@dyn 251] (gas: 1)\n 12814: jump @518 if a1 == 0\n      : @517 (gas: 1)\n 12817: jump @1123\n      : @518 (gas: 8)\n 12820: a2 = s1 + 0x10b8\n 12824: u64 [a2 + 1376] = 0\n 12828: u64 [a2 + 1368] = 0\n 12832: a1 = 0x8e1bc9bf04000\n 12842: u64 [a2 + 0x548] = a1\n 12846: a1 = s1 + 0x1600\n 12850: u64 [a2 + 1360] = 0\n 12854: ra = 504, jump @19\n      : @519 [@dyn 252] (gas: 7)\n 12860: a0 = s1 + 0x100\n 12864: a4 = u64 [a0]\n 12866: a3 = u64 [a0 + 0x8]\n 12869: a1 = u64 [a0 + 0x10]\n 12872: a0 = a1 + 0x60\n 12875: a1 = a0 <u a1\n 12878: t0 = 506, jump @1990\n      : @520 [@dyn 253] (gas: 3)\n 12885: a3 = a3 + a4\n 12888: a1 = a3 <u a4\n 12891: t0 = 508, jump @2037\n      : @521 [@dyn 254] (gas: 1)\n 12898: jump @523 if a1 == 0\n      : @522 (gas: 1)\n 12901: jump @1123\n      : @523 (gas: 12)\n 12904: a1 = u64 [s1 + 0xd8]\n 12908: a3 = s1 + 0x10b8\n 12912: a4 = a3 + 0x500\n 12916: u64 [a4 + 0x28] = a1\n 12919: a1 = u64 [s1 + 0xe0]\n 12923: u64 [a4 + 0x30] = a1\n 12926: a1 = u64 [s1 + 0xe8]\n 12930: u64 [a4 + 0x38] = a1\n 12933: a1 = s1 + 0x15e0\n 12937: a2 = u64 [s1 + 0xf0]\n 12941: u64 [a4 + 0x40] = a2\n 12944: ra = 510, jump @19\n      : @524 [@dyn 255] (gas: 13)\n 12950: a5 = u64 [s1 + 0xf8]\n 12954: a1 = s1 + 0x100\n 12958: a4 = u64 [a1]\n 12960: a3 = u64 [a1 + 0x8]\n 12963: a0 = u64 [a1 + 0x10]\n 12966: a2 = a0 | a4\n 12969: a1 = a3 | a5\n 12972: a2 = a2 | a1\n 12975: a2 = a2 >> 0x20\n 12978: a1 = a1 | a4\n 12981: a1 = a1 << 0x20\n 12984: a1 = a1 | a2\n 12987: jump @526 if a1 == 0\n      : @525 (gas: 1)\n 12990: jump @1123\n      : @526 (gas: 8)\n 12993: a2 = s1 + 0x10b8\n 12997: u64 [a2 + 1312] = 0\n 13001: u64 [a2 + 1304] = 0\n 13005: u64 [a2 + 1296] = 0\n 13009: t0 = 0x60\n 13012: a1 = s1 + 0x15c0\n 13016: u64 [a2 + 0x508] = t0\n 13020: ra = 512, jump @19\n      : @527 [@dyn 256] (gas: 18)\n 13026: a1 = s1 + 0x10b8\n 13030: u64 [a1 + 1248] = 0\n 13034: u64 [a1 + 1240] = 0\n 13038: u64 [a1 + 1232] = 0\n 13042: a2 = a1 + 0x400\n 13046: u64 [a2 + 200] = 0x80\n 13052: a0 = u64 [s1 + 0xf8]\n 13056: u64 [a1 + 0x500] = a0\n 13060: a0 = u64 [s1 + 0x100]\n 13064: u64 [a2 + 0xf8] = a0\n 13068: a0 = u64 [s1 + 0x108]\n 13072: u64 [a2 + 0xf0] = a0\n 13076: a3 = a1\n 13078: a0 = s1 + 0x15a0\n 13082: a1 = s1 + 0x1580\n 13086: a2 = u64 [s1 + 0x110]\n 13090: u64 [a3 + 0x4e8] = a2\n 13094: ra = 514, jump @1336\n      : @528 [@dyn 257] (gas: 7)\n 13100: a0 = sp + 0xffffffffffffffe0\n 13103: a0 = a0 & 0xffffffffffffffe0\n 13106: u64 [s1 + 0x108] = a0\n 13110: sp = a0\n 13112: a0 = s1 + 0x1560\n 13116: a1 = u64 [s1 + 0x110]\n 13120: ra = 516, jump @17\n      : @529 [@dyn 258] (gas: 3)\n 13126: t0 = 0x206\n 13130: a1 = s1 + 0x10b8\n 13134: fallthrough\n      : @530 [@dyn 259] (gas: 13)\n 13135: a3 = a1 + 0x400\n 13139: a0 = u64 [a3 + 0xc0]\n 13143: a4 = u64 [a3 + 0xb8]\n 13147: a2 = u64 [a3 + 0xb0]\n 13151: a1 = u64 [a3 + 0xa8]\n 13155: a0 = a0 | a2\n 13158: a2 = a1 | a4\n 13161: a2 = a2 | a0\n 13164: a2 = a2 >> 0x20\n 13167: a0 = a0 | a4\n 13170: a0 = a0 << 0x20\n 13173: a0 = a0 | a2\n 13176: jump @532 if a0 == 0\n      : @531 (gas: 1)\n 13179: jump @1123\n      : @532 (gas: 3)\n 13182: a0 = u64 [s1 + 0x118]\n 13186: u64 [s1 + 0x118] = a1\n 13190: ra = 520, jump @32\n      : @533 [@dyn 260] (gas: 30)\n 13196: a1 = sp + 0xffffffffffffffe0\n 13199: a2 = a1 & 0xffffffffffffffe0\n 13202: u64 [s1 + 0x110] = a2\n 13206: sp = a2\n 13208: i32 a0 = a0 + 0\n 13210: a1 = i32 [s1 + 0x118]\n 13214: i32 a2 = a2 + 0\n 13216: ecalli 9 // 'hash_keccak_256'\n 13218: a0 = u64 [s1 + 0x110]\n 13222: a0 = u8 [a0 + 0x1f]\n 13225: a0 = a0 & 0xf\n 13228: a1 = s1 + 0x10b8\n 13232: u64 [a1 + 1088] = 0\n 13236: u64 [a1 + 1080] = 0\n 13240: u64 [a1 + 1072] = 0\n 13244: a2 = a1 + 0x400\n 13248: u64 [a2 + 0x28] = a0\n 13251: a0 = u64 [s1 + 0x138]\n 13255: u64 [a2 + 0x60] = a0\n 13258: a0 = u64 [s1 + 0x130]\n 13262: u64 [a2 + 0x58] = a0\n 13265: a0 = u64 [s1 + 0x128]\n 13269: u64 [a2 + 0x50] = a0\n 13272: a4 = a1\n 13274: a0 = s1 + 0x1520\n 13278: a1 = s1 + 0x1500\n 13282: a2 = s1 + 0x14e0\n 13286: a3 = u64 [s1 + 0x120]\n 13290: u64 [a4 + 0x448] = a3\n 13294: ra = 522, jump @1467\n      : @534 [@dyn 261] (gas: 21)\n 13300: a1 = s1 + 0x10b8\n 13304: a4 = a1 + 0x400\n 13308: a0 = u64 [a4 + 0xa0]\n 13312: u64 [s1 + 0xf8] = a0\n 13316: a0 = u64 [a4 + 0x98]\n 13320: u64 [s1 + 0xe8] = a0\n 13324: a0 = u64 [a4 + 0x90]\n 13328: u64 [s1 + 0xe0] = a0\n 13332: a0 = u64 [a4 + 0x88]\n 13336: u64 [s1 + 0xf0] = a0\n 13340: a0 = u64 [a4 + 0x78]\n 13343: a5 = u64 [a4 + 0x80]\n 13347: a2 = u64 [a4 + 0x68]\n 13350: a3 = u64 [a4 + 0x70]\n 13353: a1 = u64 [s1 + 0x108]\n 13357: u64 [a1 + 0x10] = a0\n 13360: u64 [a1 + 0x18] = a5\n 13363: u64 [a1] = a2\n 13365: u64 [a1 + 0x8] = a3\n 13368: a0 = s1 + 0x14c0\n 13372: ra = 524, jump @21\n      : @535 [@dyn 262] (gas: 37)\n 13378: a2 = s1 + 0x10b8\n 13382: a3 = a2 + 0x400\n 13386: a1 = u64 [a3 + 0x8]\n 13389: u64 [s1 + 0x118] = a1\n 13393: a0 = u64 [a3 + 0x10]\n 13396: u64 [s1 + 0x110] = a0\n 13400: a0 = u64 [a3 + 0x18]\n 13403: u64 [s1 + 0x108] = a0\n 13407: a1 = u64 [a3 + 0x20]\n 13410: u64 [s1 + 0x100] = a1\n 13414: a4 = u64 [s1 + 0xf0]\n 13418: a2 = a4 >> 0x3d\n 13421: a3 = u64 [s1 + 0xe0]\n 13425: a5 = a3 << 0x3\n 13428: t1 = a5 | a2\n 13431: a3 = a3 >> 0x3d\n 13434: a5 = u64 [s1 + 0xe8]\n 13438: a2 = a5 << 0x3\n 13441: t0 = a2 | a3\n 13444: a2 = a5 >> 0x3d\n 13447: a3 = u64 [s1 + 0xf8]\n 13451: a3 = a3 << 0x3\n 13454: a2 = a2 | a3\n 13457: a5 = a4 << 0x3\n 13460: u64 [s1 + 0xf8] = a5\n 13464: a3 = t1 >u 0\n 13466: a4 = a5 <u 0x100\n 13470: a4 = a4 ^ 0x1\n 13473: a4 = a3 if t1 != 0\n 13476: t1 = a2 >u 0\n 13478: a3 = t0 >u 0\n 13480: a3 = t1 if a2 != 0\n 13483: a2 = t0 | a2\n 13486: a4 = a3 if a2 != 0\n 13489: u64 [s1 + 0xe8] = a4\n 13493: i32 a2 = a5 + 0xffffffffffffff80\n 13496: ra = 526, jump @2038\n      : @536 [@dyn 263] (gas: 8)\n 13503: u64 [s1 + 0xe0] = a0\n 13507: u64 [s1 + 0xd8] = a1\n 13511: a0 = u64 [s1 + 0xf0]\n 13515: i32 a2 = a0 << 0x3\n 13518: u64 [s1 + 0xf0] = a2\n 13522: a0 = u64 [s1 + 0x118]\n 13526: a1 = u64 [s1 + 0x110]\n 13530: ra = 528, jump @2038\n      : @537 [@dyn 264] (gas: 7)\n 13537: u64 [s1 + 0x80] = a0\n 13541: u64 [s1 + 0x88] = a1\n 13545: a1 = u64 [s1 + 0xf8]\n 13549: i32 a2 = 0x80 - a1\n 13553: a0 = u64 [s1 + 0x108]\n 13557: a1 = u64 [s1 + 0x100]\n 13561: ra = 530, jump @2043\n      : @538 [@dyn 265] (gas: 21)\n 13568: a3 = u64 [s1 + 0x88]\n 13572: a3 = a3 | a1\n 13575: a2 = u64 [s1 + 0xf8]\n 13579: a4 = a2 <u 0x80\n 13583: u64 [s1 + 0x88] = a4\n 13587: a1 = u64 [s1 + 0xd8]\n 13591: a3 = a1 if a4 == 0\n 13594: a1 = u64 [s1 + 0x110]\n 13598: a3 = a1 if a2 == 0\n 13601: u64 [s1 + 0x110] = a3\n 13605: a1 = u64 [s1 + 0x80]\n 13609: a1 = a1 | a0\n 13612: a0 = u64 [s1 + 0xe0]\n 13616: a1 = a0 if a4 == 0\n 13619: a0 = u64 [s1 + 0x118]\n 13623: a1 = a0 if a2 == 0\n 13626: u64 [s1 + 0x118] = a1\n 13630: a0 = u64 [s1 + 0x108]\n 13634: a1 = u64 [s1 + 0x100]\n 13638: a2 = u64 [s1 + 0xf0]\n 13642: ra = 532, jump @2038\n      : @539 [@dyn 266] (gas: 29)\n 13649: a1 = 0\n 13651: a2 = u64 [s1 + 0x88]\n 13655: a0 = 0 if a2 == 0\n 13657: a0 = a0 << 0x20\n 13660: a0 = a0 >> 0x20\n 13663: a2 = u64 [s1 + 0xe8]\n 13667: a4 = u64 [s1 + 0x118]\n 13671: a4 = 0 if a2 != 0\n 13673: a5 = u64 [s1 + 0x110]\n 13677: a5 = 0 if a2 != 0\n 13679: a0 = 0 if a2 != 0\n 13681: a1 = 0 if a2 == 0\n 13683: a2 = u64 [s1 + 0x90]\n 13687: a3 = s1 + 0x10b8\n 13691: u64 [a3 + 0x400] = a2\n 13695: a2 = u64 [s1 + 0x98]\n 13699: u64 [a3 + 0x3f8] = a2\n 13703: a2 = u64 [s1 + 0xc0]\n 13707: u64 [a3 + 0x3f0] = a2\n 13711: a2 = u64 [s1 + 0xc8]\n 13715: u64 [a3 + 0x3e8] = a2\n 13719: a2 = a3 + 0x300\n 13723: u64 [a2 + 0xe0] = a1\n 13727: u64 [a2 + 0xd8] = a0\n 13731: u64 [a2 + 0xd0] = a5\n 13735: a0 = s1 + 0x14a0\n 13739: a1 = s1 + 0x1480\n 13743: u64 [a2 + 0xc8] = a4\n 13747: ra = 534, jump @1567\n      : @540 [@dyn 267] (gas: 7)\n 13753: a0 = sp + 0xffffffffffffffe0\n 13756: a0 = a0 & 0xffffffffffffffe0\n 13759: u64 [s1 + 0x118] = a0\n 13763: sp = a0\n 13765: a0 = s1 + 0x1460\n 13769: a1 = u64 [s1 + 0xb0]\n 13773: ra = 536, jump @21\n      : @541 [@dyn 268] (gas: 19)\n 13779: a0 = s1 + 0x10b8\n 13783: a2 = a0 + 0x300\n 13787: a1 = u64 [a2 + 0xa8]\n 13791: u64 [s1 + 0x110] = a1\n 13795: a4 = u64 [a2 + 0xb0]\n 13799: u64 [s1 + 0x100] = a4\n 13803: a3 = u64 [a2 + 0xb8]\n 13807: u64 [s1 + 0x108] = a3\n 13811: a0 = u64 [a2 + 0xc0]\n 13815: a1 = a1 & 0xffffffffffffff00\n 13819: a1 = a1 | 0x1\n 13822: a2 = u64 [s1 + 0x118]\n 13826: u64 [a2 + 0x10] = a3\n 13829: u64 [a2 + 0x18] = a0\n 13832: u64 [a2 + 0x8] = a4\n 13835: u64 [a2] = a1\n 13837: a1 = a2\n 13839: a0 = u64 [s1 + 0xb0]\n 13843: ra = 538, jump @25\n      : @542 [@dyn 269] (gas: 20)\n 13849: a2 = u64 [s1 + 0x100]\n 13853: a0 = a2 << 0x38\n 13856: a1 = u64 [s1 + 0x110]\n 13860: a1 = a1 >> 0x8\n 13863: a0 = a0 | a1\n 13866: a3 = u64 [s1 + 0x108]\n 13870: a1 = a3 << 0x38\n 13873: a2 = a2 >> 0x8\n 13876: a1 = a1 | a2\n 13879: a2 = a3 << 0x18\n 13882: a2 = a2 >> 0x20\n 13885: a3 = s1 + 0x10b8\n 13889: u64 [a3 + 928] = 0\n 13893: a4 = a3 + 0x300\n 13897: u64 [a4 + 0x98] = a2\n 13901: u64 [a4 + 0x90] = a1\n 13905: a1 = s1 + 0x1440\n 13909: u64 [a4 + 0x88] = a0\n 13913: a0 = 0\n 13915: ra = 540, jump @19\n      : @543 [@dyn 270] (gas: 3)\n 13921: t0 = 0x21e\n 13925: a1 = s1 + 0x10b8\n 13929: fallthrough\n      : @544 [@dyn 271] (gas: 8)\n 13930: u64 [a1 + 896] = 0\n 13934: u64 [a1 + 888] = 0\n 13938: u64 [a1 + 872] = 0x5\n 13943: a2 = a1\n 13945: a0 = 0x20\n 13948: a1 = s1 + 0x1420\n 13952: u64 [a2 + 880] = 0\n 13956: ra = 544, jump @19\n      : @545 [@dyn 272] (gas: 7)\n 13962: a0 = sp + 0xffffffffffffffe0\n 13965: a0 = a0 & 0xffffffffffffffe0\n 13968: u64 [s1 + 0x118] = a0\n 13972: sp = a0\n 13974: a2 = u64 [s1 + 0xd0]\n 13978: a0 = i32 [a2]\n 13980: jump @547 if a0 >u 63\n      : @546 (gas: 2)\n 13984: u32 [a2 + 0] = 0x40\n 13987: fallthrough\n      : @547 (gas: 12)\n 13988: a0 = sp + 0xffffffffffffffe0\n 13991: a0 = a0 & 0xffffffffffffffe0\n 13994: u64 [s1 + 0x110] = a0\n 13998: sp = a0\n 14000: i32 a2 = a0 + 0\n 14002: a1 = 0x40\n 14005: a0 = u64 [s1 + 0xa0]\n 14009: ra = 0x222\n 14013: ecalli 9 // 'hash_keccak_256'\n 14015: a3 = u64 [s1 + 0x110]\n 14019: t0 = 0x224\n 14023: jump @1974\n      : @548 [@dyn 273] (gas: 2)\n 14027: a3 = u64 [s1 + 0x110]\n 14031: t0 = 548, jump @1974\n      : @549 [@dyn 274] (gas: 7)\n 14038: a1 = u64 [s1 + 0x118]\n 14042: u64 [a1 + 0x18] = a3\n 14045: u64 [a1 + 0x10] = a2\n 14048: u64 [a1 + 0x8] = a4\n 14051: u64 [a1] = a0\n 14053: a0 = s1 + 0x1400\n 14057: ra = 550, jump @21\n      : @550 [@dyn 275] (gas: 13)\n 14063: a4 = s1 + 0x10b8\n 14067: a5 = a4 + 0x300\n 14071: a2 = u64 [a5 + 0x48]\n 14074: a0 = u64 [a5 + 0x50]\n 14077: a1 = u64 [a5 + 0x58]\n 14080: a3 = u64 [a5 + 0x60]\n 14083: u64 [a5 + 0x20] = a3\n 14086: u64 [a5 + 0x18] = a1\n 14089: u64 [a5 + 0x10] = a0\n 14092: a0 = s1 + 0x13e0\n 14096: a1 = s1 + 0x13c0\n 14100: u64 [a5 + 0x8] = a2\n 14103: ra = 552, jump @1511\n      : @551 [@dyn 276] (gas: 15)\n 14109: a3 = s1 + 0x10b8\n 14113: a4 = a3 + 0x300\n 14117: a0 = u64 [a4 + 0x40]\n 14120: a1 = u64 [a4 + 0x38]\n 14123: a2 = u64 [a4 + 0x30]\n 14126: a3 = u64 [a4 + 0x28]\n 14129: a4 = s1 + 0x30b8\n 14133: a5 = a4 + 0x700\n 14137: u64 [a5 + 0xe0] = a0\n 14141: u64 [a5 + 0xd8] = a1\n 14145: u64 [a5 + 0xd0] = a2\n 14149: u64 [a5 + 0xc8] = a3\n 14153: a1 = s1 + 0x3880\n 14157: a0 = u64 [s1 + 0x118]\n 14161: ra = 554, jump @25\n      : @552 [@dyn 277] (gas: 5)\n 14167: a1 = u64 [s1 + 0x120]\n 14171: a0 = a1 + 0x12\n 14174: a1 = a0 <u a1\n 14177: a3 = u64 [s1 + 0x128]\n 14181: t0 = 556, jump @1991\n      : @553 [@dyn 278] (gas: 8)\n 14188: u64 [a4] = a1\n 14190: a1 = a4 + 0xffffffffffffff00\n 14194: u64 [a1 + 0xf8] = a3\n 14198: u64 [a1 + 0xf0] = a2\n 14202: u64 [a1 + 0xe8] = a0\n 14206: a0 = s1 + 0x13a0\n 14210: a1 = s1 + 0x38a0\n 14214: ra = 558, jump @21\n      : @554 [@dyn 279] (gas: 19)\n 14220: a0 = s1 + 0x10b8\n 14224: a1 = u64 [a0 + 0x300]\n 14228: u64 [s1 + 0x78] = a1\n 14231: a2 = a0 + 0x200\n 14235: a1 = u64 [a2 + 0xf8]\n 14239: u64 [s1 + 0x70] = a1\n 14242: a1 = u64 [a2 + 0xf0]\n 14246: u64 [s1 + 0x68] = a1\n 14249: a1 = u64 [a2 + 0xe8]\n 14253: u64 [s1 + 0x60] = a1\n 14256: a0 = s1 + 0x38b8\n 14260: u64 [a0 + 32] = 0\n 14263: u64 [a0 + 24] = 0\n 14266: u64 [a0 + 16] = 0\n 14269: a1 = a0\n 14271: u64 [a1 + 8] = 0x1\n 14275: a0 = s1 + 0x1380\n 14279: a1 = s1 + 0x38c0\n 14283: ra = 560, jump @21\n      : @555 [@dyn 280] (gas: 2)\n 14289: a0 = 0x1000\n 14293: t0 = 562, jump @2015\n      : @556 [@dyn 281] (gas: 20)\n 14300: a0 = u64 [a5 + 0xc8]\n 14304: a1 = u64 [a5 + 0xd0]\n 14308: a2 = u64 [a5 + 0xd8]\n 14312: a3 = u64 [a5 + 0xe0]\n 14316: u64 [a5 + 0x80] = a3\n 14320: u64 [a5 + 0x78] = a2\n 14323: u64 [a5 + 0x70] = a1\n 14326: u64 [a5 + 0x68] = a0\n 14329: a0 = u64 [s1 + 0x78]\n 14332: u64 [a5 + 0xa0] = a0\n 14336: a0 = u64 [s1 + 0x70]\n 14339: u64 [a5 + 0x98] = a0\n 14343: a0 = u64 [s1 + 0x68]\n 14346: u64 [a5 + 0x90] = a0\n 14350: a0 = s1 + 0x1360\n 14354: a1 = s1 + 0x1340\n 14358: a2 = s1 + 0x1320\n 14362: a3 = u64 [s1 + 0x60]\n 14365: u64 [a5 + 0x88] = a3\n 14369: ra = 564, jump @1394\n      : @557 [@dyn 282] (gas: 8)\n 14375: a0 = s1 + 0x10b8\n 14379: t1 = u64 [a0 + 0x2c0]\n 14383: t2 = u64 [a0 + 0x2b8]\n 14387: ra = u64 [a0 + 0x2b0]\n 14391: u64 [s1 + 0x90] = ra\n 14395: a2 = u64 [a0 + 0x2a8]\n 14399: u64 [s1 + 0x98] = a2\n 14403: t0 = 566, jump @1968\n      : @558 [@dyn 283] (gas: 12)\n 14410: t0 = a0 + 0xffffffffffffffff\n 14413: a0 = -a4\n 14415: a5 = -a5\n 14417: a2 = a5 - a2\n 14420: a1 = 0xf2 - a3\n 14424: u64 [s1 + 0x128] = a0\n 14428: a3 = a0 >u 0\n 14430: a0 = t0\n 14432: a5 = t0 >u 0\n 14434: a5 = a3 if t0 == 0\n 14437: u64 [s1 + 0x130] = a1\n 14441: t0 = 568, jump @2017\n      : @559 [@dyn 284] (gas: 12)\n 14448: t0 = u64 [s1 + 0x98]\n 14452: a4 = t0 | t2\n 14455: a1 = a1 | a4\n 14458: a1 = a1 <u 0x1\n 14461: a1 = a1 | a3\n 14464: u64 [s1 + 0x88] = t1\n 14468: t1 = 0 if a1 != 0\n 14470: u64 [s1 + 0x80] = t2\n 14474: t2 = 0 if a1 != 0\n 14476: ra = 0 if a1 != 0\n 14478: t0 = 0 if a1 != 0\n 14480: jump @561 if a1 == 0\n      : @560 (gas: 1)\n 14483: jump @1106\n      : @561 (gas: 7)\n 14486: a1 = u64 [s1 + 0x130]\n 14490: a1 = a1 ^ 0xff\n 14494: a4 = u64 [s1 + 0x128]\n 14498: a1 = a1 | a4\n 14501: a3 = a2 | a0\n 14504: a1 = a1 | a3\n 14507: jump @563 if a1 != 0\n      : @562 (gas: 1)\n 14510: jump @1106\n      : @563 (gas: 19)\n 14513: a5 = u64 [s1 + 0x130]\n 14517: a3 = a5 + 0x1\n 14520: u64 [s1 + 0x138] = a3\n 14524: a1 = a3 <u 0x1\n 14527: a1 = a1 + a2\n 14530: u64 [s1 + 0x118] = a1\n 14534: a1 = a1 | a3\n 14537: a1 = a1 <u 0x1\n 14540: a1 = a1 + a4\n 14543: u64 [s1 + 0x108] = a1\n 14547: a1 = a1 <u a4\n 14550: a0 = a0 + a1\n 14553: u64 [s1 + 0x110] = a0\n 14557: a1 = 0xff - a5\n 14561: u64 [s1 + 0x120] = a1\n 14565: a2 = 0x80 - a1\n 14569: a0 = u64 [s1 + 0x98]\n 14573: a1 = u64 [s1 + 0x90]\n 14577: ra = 570, jump @2038\n      : @564 [@dyn 285] (gas: 6)\n 14584: u64 [s1 + 0x128] = a0\n 14588: u64 [s1 + 0xf8] = a1\n 14592: a0 = u64 [s1 + 0x80]\n 14596: a1 = u64 [s1 + 0x88]\n 14600: a2 = u64 [s1 + 0x120]\n 14604: ra = 572, jump @2043\n      : @565 [@dyn 286] (gas: 9)\n 14611: u64 [s1 + 0x100] = a0\n 14615: a0 = u64 [s1 + 0xf8]\n 14619: a0 = a0 | a1\n 14622: u64 [s1 + 0xf8] = a0\n 14626: a1 = u64 [s1 + 0x130]\n 14630: a2 = 0x7f - a1\n 14633: a0 = u64 [s1 + 0x98]\n 14637: a1 = u64 [s1 + 0x90]\n 14641: ra = 574, jump @2043\n      : @566 [@dyn 287] (gas: 18)\n 14648: a2 = u64 [s1 + 0x120]\n 14652: a3 = a2 <u 0x80\n 14656: u64 [s1 + 0x130] = a3\n 14660: a4 = u64 [s1 + 0xf8]\n 14664: a1 = a4 if a3 != 0\n 14667: a4 = u64 [s1 + 0x88]\n 14671: a1 = a4 if a2 == 0\n 14674: u64 [s1 + 0xf0] = a1\n 14678: a1 = u64 [s1 + 0x128]\n 14682: a4 = u64 [s1 + 0x100]\n 14686: a1 = a1 | a4\n 14689: a1 = a0 if a3 == 0\n 14692: a0 = u64 [s1 + 0x80]\n 14696: a1 = a0 if a2 == 0\n 14699: u64 [s1 + 0x128] = a1\n 14703: a0 = u64 [s1 + 0x98]\n 14707: a1 = u64 [s1 + 0x90]\n 14711: ra = 576, jump @2043\n      : @567 [@dyn 288] (gas: 14)\n 14718: a4 = u64 [s1 + 0x108]\n 14722: a5 = u64 [s1 + 0x110]\n 14726: a2 = u64 [s1 + 0x118]\n 14730: a5 = a5 | a2\n 14733: a3 = u64 [s1 + 0x138]\n 14737: a3 = a3 | a4\n 14740: a3 = a3 | a5\n 14743: a4 = s1 + 0x100\n 14747: a2 = u64 [a4 + 0x30]\n 14750: a1 = 0 if a2 == 0\n 14752: u64 [a4 + 0x20] = a1\n 14755: a0 = 0 if a2 == 0\n 14757: u64 [a4 + 0x30] = a0\n 14760: jump @569 if a3 == 0\n      : @568 (gas: 1)\n 14763: jump @1099\n      : @569 (gas: 4)\n 14766: a5 = 0\n 14768: u64 [s1 + 216] = 0\n 14772: ra = u64 [s1 + 0xf0]\n 14776: jump @1105\n      : @570 (gas: 1)\n 14779: jump @572 if a0 == 2143612328\n      : @571 (gas: 1)\n 14786: jump @1219\n      : @572 (gas: 8)\n 14789: u64 [a2 + 1024] = 0\n 14793: u64 [a2 + 1016] = 0\n 14797: u64 [a2 + 1008] = 0\n 14801: u64 [a2 + 1000] = 0\n 14805: a0 = s1 + 0x4000\n 14809: i32 a0 = a0 + 0xfffffffffffffca0\n 14813: ecalli 17 // 'value_transferred'\n 14815: fallthrough\n      : @573 (gas: 10)\n 14816: a3 = s1 + 0x38b8\n 14820: a4 = a3 + 0x300\n 14824: a0 = u64 [a4 + 0xf8]\n 14828: a1 = u64 [a3 + 0x400]\n 14832: a2 = u64 [a4 + 0xf0]\n 14836: a3 = u64 [a4 + 0xe8]\n 14840: a1 = a1 | a2\n 14843: a0 = a0 | a3\n 14846: a0 = a0 | a1\n 14849: jump @575 if a0 == 0\n      : @574 (gas: 1)\n 14852: jump @1223\n      : @575 (gas: 3)\n 14855: a0 = u64 [s1 + 0x138]\n 14859: a0 = i32 [a0]\n 14861: jump @577 if a0 >u 3\n      : @576 (gas: 1)\n 14865: jump @1224\n      : @577 (gas: 3)\n 14868: a0 = s1 + 0x1d00\n 14872: a1 = 0x40\n 14875: ra = 578, jump @17\n      : @578 [@dyn 289] (gas: 7)\n 14881: a3 = s1 + 0x18b8\n 14885: a5 = a3 + 0x400\n 14889: a4 = u64 [a5 + 0x60]\n 14892: a1 = u64 [a5 + 0x58]\n 14895: a2 = u64 [a5 + 0x50]\n 14898: a0 = u64 [a5 + 0x48]\n 14901: t0 = 580, jump @2000\n      : @579 [@dyn 290] (gas: 1)\n 14908: jump @581 if a1 == 0\n      : @580 (gas: 1)\n 14911: jump @1123\n      : @581 (gas: 8)\n 14914: u64 [a3 + 1088] = 0\n 14918: u64 [a3 + 1080] = 0\n 14922: u64 [a3 + 1064] = 0x10\n 14927: a1 = s1 + 0x1ce0\n 14931: u64 [a3 + 1072] = 0\n 14935: u64 [s1 + 0x138] = a0\n 14939: ra = 0x33c\n 14943: jump @19\n      : @582 (gas: 9)\n 14946: u64 [a4 + 160] = 0\n 14950: u64 [a4 + 152] = 0\n 14954: u64 [a4 + 144] = 0\n 14958: u64 [a4 + 136] = 0\n 14962: a0 = s1 + 0x4000\n 14966: i32 a0 = a0 + 0x140\n 14970: ra = 0x246\n 14974: ecalli 17 // 'value_transferred'\n 14976: fallthrough\n      : @583 [@dyn 291] (gas: 9)\n 14977: a3 = s1 + 0x40b8\n 14981: a0 = u64 [a3 + 0x98]\n 14985: a1 = u64 [a3 + 0xa0]\n 14989: a2 = u64 [a3 + 0x90]\n 14993: a3 = u64 [a3 + 0x88]\n 14997: a1 = a1 | a2\n 15000: a0 = a0 | a3\n 15003: a0 = a0 | a1\n 15006: jump @585 if a0 == 0\n      : @584 (gas: 1)\n 15009: jump @1225\n      : @585 (gas: 1)\n 15012: t0 = 584, jump @1994\n      : @586 [@dyn 292] (gas: 1)\n 15019: jump @588 if a1 <u a0\n      : @587 (gas: 1)\n 15022: jump @1226\n      : @588 (gas: 29)\n 15025: a0 = sp + 0xffffffffffffffe0\n 15028: a0 = a0 & 0xffffffffffffffe0\n 15031: u64 [s1 + 0x138] = a0\n 15035: sp = a0\n 15037: a0 = s1 + 0x4000\n 15041: i32 a0 = a0 + 0x160\n 15045: a1 = 0x4\n 15048: ecalli 4 // 'call_data_load'\n 15050: a1 = s1 + 0x40b8\n 15054: a2 = u64 [a1 + 0xc0]\n 15058: u64 [s1 + 0x128] = a2\n 15062: a3 = u64 [a1 + 0xb8]\n 15066: u64 [s1 + 0x120] = a3\n 15070: a0 = u64 [a1 + 0xb0]\n 15074: u64 [s1 + 0x130] = a0\n 15078: a4 = u64 [a1 + 0xa8]\n 15082: u64 [s1 + 0x118] = a4\n 15086: a5 = u64 [s1 + 0x138]\n 15090: u64 [a5 + 0x18] = a2\n 15093: u64 [a5 + 0x10] = a3\n 15096: u64 [a5 + 0x8] = a0\n 15099: u64 [a5] = a4\n 15101: u64 [a1 + 224] = 0\n 15105: u64 [a1 + 216] = 0\n 15109: u64 [a1 + 208] = 0\n 15113: u64 [a1 + 200] = 0x7\n 15118: a0 = s1 + 0x2920\n 15122: a1 = s1 + 0x4180\n 15126: ra = 586, jump @21\n      : @589 [@dyn 293] (gas: 14)\n 15132: a0 = s1 + 0x28b8\n 15136: a1 = u64 [a0 + 0x70]\n 15139: u64 [s1 + 0x110] = a1\n 15143: a1 = u64 [a0 + 0x68]\n 15146: u64 [s1 + 0x108] = a1\n 15150: a0 = u32 [a0 + 0x78]\n 15153: u64 [s1 + 0x100] = a0\n 15157: a0 = 0x30270\n 15162: u64 [s1 + 0xf8] = a0\n 15166: i32 a0 = a0 + 0\n 15168: ra = 0x24c\n 15172: ecalli 6 // 'caller'\n 15174: t0 = 0x24e\n 15178: jump @1970\n      : @590 [@dyn 294] (gas: 1)\n 15182: t0 = 590, jump @1970\n      : @591 [@dyn 295] (gas: 9)\n 15189: a1 = s1 + 0x28b8\n 15193: u64 [a1 + 96] = 0\n 15196: u64 [a1 + 88] = 0\n 15199: u64 [a1 + 0x48] = a0\n 15202: a0 = s1 + 0x2900\n 15206: u64 [a1 + 80] = 0\n 15209: ra = 0x250\n 15213: t0 = 0x562\n 15217: jump @1953\n      : @592 [@dyn 296] (gas: 10)\n 15221: a3 = s1 + 0x100\n 15225: a0 = u64 [a3 + 0x28]\n 15228: a1 = u64 [a3 + 0x20]\n 15231: a0 = a0 | a1\n 15234: a1 = u64 [a3 + 0x18]\n 15237: a1 = a1 <u 0x7d1\n 15241: a2 = u64 [a3 + 0x30]\n 15244: a1 = 0 if a2 != 0\n 15246: a1 = 0 if a0 != 0\n 15248: jump @594 if a1 == 0\n      : @593 (gas: 1)\n 15251: jump @1227\n      : @594 (gas: 3)\n 15254: a0 = s1 + 0x28e0\n 15258: a1 = 0x40\n 15261: ra = 594, jump @17\n      : @595 [@dyn 297] (gas: 13)\n 15267: a4 = s1 + 0x28b8\n 15271: t0 = u64 [a4 + 0x40]\n 15274: a5 = u64 [a4 + 0x38]\n 15277: a3 = u64 [a4 + 0x30]\n 15280: a0 = u64 [a4 + 0x28]\n 15283: a2 = a3 | t0\n 15286: a1 = a0 | a5\n 15289: a1 = a1 | a2\n 15292: a1 = a1 >> 0x20\n 15295: a2 = a2 | a5\n 15298: a2 = a2 << 0x20\n 15301: a1 = a1 | a2\n 15304: jump @597 if a1 == 0\n      : @596 (gas: 1)\n 15307: jump @1123\n      : @597 (gas: 11)\n 15310: u64 [a4 + 24] = 0\n 15313: u64 [a4 + 16] = 0\n 15316: u64 [a4 + 8] = 0\n 15319: u64 [s1 + 0x130] = a3\n 15323: a3 = 0x8c379a000000000\n 15333: a1 = s1 + 0x28c0\n 15337: u64 [a4 + 0x20] = a3\n 15340: u64 [s1 + 0x138] = a0\n 15344: u64 [s1 + 0x128] = t0\n 15348: u64 [s1 + 0x120] = a5\n 15352: ra = 596, jump @19\n      : @598 [@dyn 298] (gas: 6)\n 15358: a5 = s1 + 0x100\n 15362: a1 = u64 [a5 + 0x38]\n 15365: a0 = u64 [a5 + 0x28]\n 15368: a3 = u64 [a5 + 0x20]\n 15371: a3 = a3 | a0\n 15374: t0 = 598, jump @1957\n      : @599 [@dyn 299] (gas: 1)\n 15381: jump @601 if a0 != 0\n      : @600 (gas: 1)\n 15384: jump @1123\n      : @601 (gas: 10)\n 15387: i32 a0 = a1 + 0x4\n 15390: a2 = s1 + 0x28b8\n 15394: u64 [a2 + 0] = 0\n 15396: u64 [a2 + 4294967288] = 0\n 15399: u64 [a2 + 4294967272] = 0x20\n 15403: a1 = s1 + 0x28a0\n 15407: u64 [a2 + 4294967280] = 0\n 15410: u64 [s1 + 0x128] = a3\n 15414: u64 [s1 + 0x120] = a4\n 15418: ra = 600, jump @19\n      : @602 [@dyn 300] (gas: 1)\n 15424: t0 = 602, jump @1955\n      : @603 [@dyn 301] (gas: 1)\n 15431: jump @605 if a0 != 0\n      : @604 (gas: 1)\n 15434: jump @1123\n      : @605 (gas: 8)\n 15437: i32 a0 = a1 + 0x24\n 15440: a4 = s1 + 0x20b8\n 15444: u64 [a4 + 2016] = 0\n 15448: u64 [a4 + 2008] = 0\n 15452: u64 [a4 + 1992] = 0xc\n 15457: a1 = s1 + 0x2880\n 15461: u64 [a4 + 2000] = 0\n 15465: ra = 604, jump @19\n      : @606 [@dyn 302] (gas: 1)\n 15471: t0 = 606, jump @2001\n      : @607 [@dyn 303] (gas: 1)\n 15478: jump @609 if a0 != 0\n      : @608 (gas: 1)\n 15481: jump @1123\n      : @609 (gas: 11)\n 15484: i32 a0 = a2 + 0x44\n 15487: a1 = u64 [0x20048]\n 15492: a3 = s1 + 0x20b8\n 15496: u64 [a3 + 1968] = 0\n 15500: u64 [a3 + 0x7c0] = a1\n 15504: a1 = 0x6869676800000000\n 15514: u64 [a3 + 0x7b8] = a1\n 15518: a1 = s1 + 0x2860\n 15522: u64 [a3 + 1960] = 0\n 15526: ra = 0x404\n 15530: jump @19\n      : @610 (gas: 9)\n 15533: u64 [a2 + 1216] = 0\n 15537: u64 [a2 + 1208] = 0\n 15541: u64 [a2 + 1200] = 0\n 15545: u64 [a2 + 1192] = 0\n 15549: a0 = s1 + 0x4000\n 15553: i32 a0 = a0 + 0xfffffffffffffd60\n 15557: ra = 0x260\n 15561: ecalli 17 // 'value_transferred'\n 15563: fallthrough\n      : @611 [@dyn 304] (gas: 10)\n 15564: a3 = s1 + 0x38b8\n 15568: a4 = a3 + 0x400\n 15572: a0 = u64 [a4 + 0xb8]\n 15576: a1 = u64 [a4 + 0xc0]\n 15580: a2 = u64 [a4 + 0xb0]\n 15584: a3 = u64 [a4 + 0xa8]\n 15588: a1 = a1 | a2\n 15591: a0 = a0 | a3\n 15594: a0 = a0 | a1\n 15597: jump @613 if a0 == 0\n      : @612 (gas: 1)\n 15600: jump @1229\n      : @613 (gas: 1)\n 15603: t0 = 610, jump @1994\n      : @614 [@dyn 305] (gas: 1)\n 15610: jump @616 if a1 <u a0\n      : @615 (gas: 1)\n 15613: jump @1230\n      : @616 (gas: 29)\n 15616: a0 = sp + 0xffffffffffffffe0\n 15619: a0 = a0 & 0xffffffffffffffe0\n 15622: u64 [s1 + 0x138] = a0\n 15626: sp = a0\n 15628: a0 = s1 + 0x4000\n 15632: i32 a0 = a0 + 0xfffffffffffffd80\n 15636: a1 = 0x4\n 15639: ecalli 4 // 'call_data_load'\n 15641: a1 = s1 + 0x38b8\n 15645: a0 = u64 [a1 + 0x4e0]\n 15649: u64 [s1 + 0x130] = a0\n 15653: a2 = u64 [a1 + 0x4d8]\n 15657: u64 [s1 + 0x128] = a2\n 15661: a3 = u64 [a1 + 0x4d0]\n 15665: u64 [s1 + 0x120] = a3\n 15669: a4 = u64 [a1 + 0x4c8]\n 15673: u64 [s1 + 0x118] = a4\n 15677: a5 = u64 [s1 + 0x138]\n 15681: u64 [a5 + 0x18] = a0\n 15684: u64 [a5 + 0x10] = a2\n 15687: u64 [a5 + 0x8] = a3\n 15690: u64 [a5] = a4\n 15692: u64 [a1 + 1280] = 0\n 15696: u64 [a1 + 1272] = 0\n 15700: u64 [a1 + 1264] = 0\n 15704: u64 [a1 + 1256] = 0x7\n 15709: a0 = s1 + 0x1ee0\n 15713: a1 = s1 + 0x3da0\n 15717: ra = 612, jump @21\n      : @617 [@dyn 306] (gas: 14)\n 15723: a0 = s1 + 0x18b8\n 15727: a1 = u64 [a0 + 0x630]\n 15731: u64 [s1 + 0x110] = a1\n 15735: a1 = u64 [a0 + 0x628]\n 15739: u64 [s1 + 0x108] = a1\n 15743: a0 = u32 [a0 + 0x638]\n 15747: u64 [s1 + 0x100] = a0\n 15751: a0 = 0x30270\n 15756: u64 [s1 + 0xf8] = a0\n 15760: i32 a0 = a0 + 0\n 15762: ra = 0x266\n 15766: ecalli 6 // 'caller'\n 15768: t0 = 0x268\n 15772: jump @1970\n      : @618 [@dyn 307] (gas: 1)\n 15776: t0 = 616, jump @1970\n      : @619 [@dyn 308] (gas: 9)\n 15783: a1 = s1 + 0x18b8\n 15787: u64 [a1 + 1568] = 0\n 15791: u64 [a1 + 1560] = 0\n 15795: u64 [a1 + 0x608] = a0\n 15799: a0 = s1 + 0x1ec0\n 15803: u64 [a1 + 1552] = 0\n 15807: ra = 0x26a\n 15811: t0 = 0x562\n 15815: jump @1953\n      : @620 [@dyn 309] (gas: 25)\n 15819: a1 = u64 [s1 + 0x118]\n 15823: a0 = a1 + 0xffffffffffffffef\n 15826: a1 = a0 <u a1\n 15829: a4 = u64 [s1 + 0x120]\n 15833: a2 = a4 + a1\n 15836: a2 = a2 + 0xffffffffffffffff\n 15839: a3 = a2 ^ a4\n 15842: a4 = a2 <u a4\n 15845: a4 = a1 if a3 == 0\n 15848: a3 = u64 [s1 + 0x128]\n 15852: a1 = a3 + 0xffffffffffffffff\n 15855: a4 = a4 + a1\n 15858: a1 = a4 <u a1\n 15861: a3 = a3 <u 0x1\n 15864: a5 = u64 [s1 + 0x130]\n 15868: a3 = a5 - a3\n 15871: a1 = a1 + a3\n 15874: a1 = a1 & a4\n 15877: a1 = a1 + 0x1\n 15880: a2 = a2 + 0x1\n 15883: a0 = a0 <u 0xfffffffffffffff1\n 15886: a0 = a0 ^ 0x1\n 15889: a0 = 0 if a2 != 0\n 15891: a0 = 0 if a1 != 0\n 15893: jump @622 if a0 == 0\n      : @621 (gas: 1)\n 15896: jump @1231\n      : @622 (gas: 3)\n 15899: a0 = s1 + 0x1ea0\n 15903: a1 = 0x40\n 15906: ra = 620, jump @17\n      : @623 [@dyn 310] (gas: 14)\n 15912: a3 = s1 + 0x18b8\n 15916: t0 = u64 [a3 + 0x600]\n 15920: a1 = a3 + 0x500\n 15924: a5 = u64 [a1 + 0xf8]\n 15928: a4 = u64 [a1 + 0xf0]\n 15932: a0 = u64 [a1 + 0xe8]\n 15936: a2 = a4 | t0\n 15939: a1 = a0 | a5\n 15942: a1 = a1 | a2\n 15945: a1 = a1 >> 0x20\n 15948: a2 = a2 | a5\n 15951: a2 = a2 << 0x20\n 15954: a1 = a1 | a2\n 15957: jump @625 if a1 == 0\n      : @624 (gas: 1)\n 15960: jump @1123\n      : @625 (gas: 12)\n 15963: a2 = a3\n 15965: u64 [a3 + 1496] = 0\n 15969: u64 [a3 + 1488] = 0\n 15973: u64 [a3 + 1480] = 0\n 15977: a3 = 0x8c379a000000000\n 15987: a1 = s1 + 0x1e80\n 15991: u64 [a2 + 0x5e0] = a3\n 15995: u64 [s1 + 0x138] = a0\n 15999: u64 [s1 + 0x130] = a4\n 16003: u64 [s1 + 0x120] = t0\n 16007: u64 [s1 + 0x128] = a5\n 16011: ra = 622, jump @19\n      : @626 [@dyn 311] (gas: 6)\n 16017: a5 = s1 + 0x100\n 16021: a1 = u64 [a5 + 0x38]\n 16024: a0 = u64 [a5 + 0x28]\n 16027: a3 = u64 [a5 + 0x20]\n 16030: a3 = a3 | a0\n 16033: t0 = 624, jump @1957\n      : @627 [@dyn 312] (gas: 1)\n 16040: jump @629 if a0 != 0\n      : @628 (gas: 1)\n 16043: jump @1123\n      : @629 (gas: 10)\n 16046: i32 a0 = a1 + 0x4\n 16049: a2 = s1 + 0x18b8\n 16053: u64 [a2 + 1472] = 0\n 16057: u64 [a2 + 1464] = 0\n 16061: u64 [a2 + 1448] = 0x20\n 16066: a1 = s1 + 0x1e60\n 16070: u64 [a2 + 1456] = 0\n 16074: u64 [s1 + 0x128] = a3\n 16078: u64 [s1 + 0x120] = a4\n 16082: ra = 626, jump @19\n      : @630 [@dyn 313] (gas: 1)\n 16088: t0 = 628, jump @1955\n      : @631 [@dyn 314] (gas: 1)\n 16095: jump @633 if a0 != 0\n      : @632 (gas: 1)\n 16098: jump @1123\n      : @633 (gas: 8)\n 16101: i32 a0 = a1 + 0x24\n 16104: a3 = s1 + 0x18b8\n 16108: u64 [a3 + 1440] = 0\n 16112: u64 [a3 + 1432] = 0\n 16116: u64 [a3 + 1416] = 0x13\n 16121: a1 = s1 + 0x1e40\n 16125: u64 [a3 + 1424] = 0\n 16129: ra = 630, jump @19\n      : @634 [@dyn 315] (gas: 1)\n 16135: t0 = 632, jump @1956\n      : @635 [@dyn 316] (gas: 1)\n 16142: jump @637 if a0 != 0\n      : @636 (gas: 1)\n 16145: jump @1123\n      : @637 (gas: 13)\n 16148: i32 a0 = a3 + 0x44\n 16151: a1 = u64 [0x20038]\n 16156: a2 = u64 [0x200a0]\n 16161: a4 = s1 + 0x18b8\n 16165: a3 = a4 + 0x500\n 16169: u64 [a3 + 0x80] = a1\n 16173: u64 [a3 + 0x78] = a2\n 16176: a1 = 0x6572730000000000\n 16186: u64 [a3 + 0x70] = a1\n 16189: a1 = s1 + 0x1e20\n 16193: u64 [a4 + 1384] = 0\n 16197: ra = 0x404\n 16201: jump @19\n      : @638 (gas: 10)\n 16204: u64 [a2 + 544] = 0\n 16208: u64 [a2 + 536] = 0\n 16212: u64 [a2 + 528] = 0\n 16216: u64 [a2 + 520] = 0\n 16220: a0 = s1 + 0x4000\n 16224: i32 a0 = a0 + 0xfffffffffffffac0\n 16228: ra = 0x27a\n 16232: ecalli 17 // 'value_transferred'\n 16234: t0 = 0x27c\n 16238: jump @2036\n      : @639 [@dyn 317] (gas: 1)\n 16242: t0 = 636, jump @2036\n      : @640 [@dyn 318] (gas: 1)\n 16249: t0 = 638, jump @2029\n      : @641 [@dyn 319] (gas: 1)\n 16256: jump @643 if a0 == 0\n      : @642 (gas: 1)\n 16259: jump @1233\n      : @643 (gas: 3)\n 16262: a0 = u64 [s1 + 0x138]\n 16266: a0 = i32 [a0]\n 16268: jump @645 if a0 >u 3\n      : @644 (gas: 1)\n 16272: jump @1234\n      : @645 (gas: 7)\n 16275: u64 [a4 + 576] = 0\n 16279: u64 [a4 + 568] = 0\n 16283: u64 [a4 + 560] = 0\n 16287: u64 [a4 + 552] = 0x4\n 16292: a0 = s1 + 0x1a00\n 16296: a1 = s1 + 0x3ae0\n 16300: ra = 640, jump @21\n      : @646 [@dyn 320] (gas: 14)\n 16306: a1 = s1 + 0x18b8\n 16310: a2 = a1 + 0x100\n 16314: a0 = u64 [a2 + 0x60]\n 16317: a1 = s1 + 0x100\n 16321: u64 [a1 + 0x38] = a0\n 16324: a0 = u64 [a2 + 0x58]\n 16327: u64 [a1 + 0x30] = a0\n 16330: a0 = u64 [a2 + 0x50]\n 16333: u64 [a1 + 0x28] = a0\n 16336: a0 = u64 [a2 + 0x48]\n 16339: u64 [a1 + 0x20] = a0\n 16342: a0 = s1 + 0x19e0\n 16346: a1 = 0x40\n 16349: ra = 642, jump @17\n      : @647 [@dyn 321] (gas: 7)\n 16355: a3 = s1 + 0x18b8\n 16359: a5 = a3 + 0x100\n 16363: a0 = u64 [a5 + 0x40]\n 16366: a1 = u64 [a5 + 0x38]\n 16369: a2 = u64 [a5 + 0x30]\n 16372: a4 = u64 [a5 + 0x28]\n 16375: t0 = 644, jump @1986\n      : @648 [@dyn 322] (gas: 1)\n 16382: jump @650 if a0 == 0\n      : @649 (gas: 1)\n 16385: jump @1123\n      : @650 (gas: 15)\n 16388: a2 = s1 + 0x100\n 16392: a0 = u64 [a2 + 0x20]\n 16395: a5 = a3 + 0x100\n 16399: u64 [a5 + 0x8] = a0\n 16402: a0 = u64 [a2 + 0x28]\n 16405: u64 [a5 + 0x10] = a0\n 16408: a0 = u64 [a2 + 0x30]\n 16411: u64 [a5 + 0x18] = a0\n 16414: a1 = s1 + 0x19c0\n 16418: a0 = u64 [a2 + 0x38]\n 16421: u64 [a5 + 0x20] = a0\n 16424: a0 = a4\n 16426: u64 [s1 + 0x138] = a4\n 16430: ra = 0x33c\n 16434: jump @19\n      : @651 (gas: 9)\n 16437: a0 = s1 + 0x38b8\n 16441: u64 [a0 + 1152] = 0\n 16445: u64 [a0 + 1144] = 0\n 16449: u64 [a0 + 1136] = 0\n 16453: u64 [a0 + 1128] = 0\n 16457: a0 = s1 + 0x4000\n 16461: i32 a0 = a0 + 0xfffffffffffffd20\n 16465: ecalli 17 // 'value_transferred'\n 16467: fallthrough\n      : @652 (gas: 10)\n 16468: a4 = s1 + 0x38b8\n 16472: a5 = a4 + 0x400\n 16476: a0 = u64 [a5 + 0x78]\n 16479: a1 = u64 [a5 + 0x80]\n 16483: a2 = u64 [a5 + 0x70]\n 16486: a3 = u64 [a5 + 0x68]\n 16489: a1 = a1 | a2\n 16492: a0 = a0 | a3\n 16495: a0 = a0 | a1\n 16498: jump @654 if a0 == 0\n      : @653 (gas: 1)\n 16501: jump @1235\n      : @654 (gas: 3)\n 16504: a0 = u64 [s1 + 0x138]\n 16508: a0 = i32 [a0]\n 16510: jump @656 if a0 >u 3\n      : @655 (gas: 1)\n 16514: jump @1236\n      : @656 (gas: 7)\n 16517: u64 [a4 + 1184] = 0\n 16521: u64 [a4 + 1176] = 0\n 16525: u64 [a4 + 1168] = 0\n 16529: u64 [a4 + 1160] = 0x7\n 16534: a0 = s1 + 0x1e00\n 16538: a1 = s1 + 0x3d40\n 16542: ra = 646, jump @21\n      : @657 [@dyn 323] (gas: 3)\n 16548: t0 = 0x288\n 16552: a1 = s1 + 0x18b8\n 16556: fallthrough\n      : @658 [@dyn 324] (gas: 11)\n 16557: a2 = a1 + 0x500\n 16561: a0 = u64 [a2 + 0x58]\n 16564: a1 = s1 + 0x100\n 16568: u64 [a1 + 0x28] = a0\n 16571: a0 = u64 [a2 + 0x50]\n 16574: u64 [a1 + 0x38] = a0\n 16577: a0 = u64 [a2 + 0x48]\n 16580: u64 [a1 + 0x30] = a0\n 16583: a0 = s1 + 0x1de0\n 16587: a1 = 0x40\n 16590: ra = 650, jump @17\n      : @659 [@dyn 325] (gas: 7)\n 16596: a3 = s1 + 0x18b8\n 16600: a5 = a3 + 0x500\n 16604: a4 = u64 [a5 + 0x40]\n 16607: a1 = u64 [a5 + 0x38]\n 16610: a2 = u64 [a5 + 0x30]\n 16613: a0 = u64 [a5 + 0x28]\n 16616: t0 = 652, jump @2000\n      : @660 [@dyn 326] (gas: 1)\n 16623: jump @662 if a1 == 0\n      : @661 (gas: 1)\n 16626: jump @1123\n      : @662 (gas: 15)\n 16629: a4 = s1 + 0x100\n 16633: a1 = u64 [a4 + 0x28]\n 16636: a1 = a1 << 0x20\n 16639: a2 = a1 >> 0x20\n 16642: u64 [a3 + 1312] = 0\n 16646: a1 = u64 [a4 + 0x30]\n 16649: a5 = a3 + 0x500\n 16653: u64 [a5 + 0x8] = a1\n 16656: a1 = u64 [a4 + 0x38]\n 16659: u64 [a5 + 0x10] = a1\n 16662: a1 = s1 + 0x1dc0\n 16666: u64 [a5 + 0x18] = a2\n 16669: u64 [s1 + 0x138] = a0\n 16673: ra = 0x33c\n 16677: jump @19\n      : @663 (gas: 11)\n 16680: u64 [a4 + 544] = 0\n 16684: u64 [a4 + 536] = 0\n 16688: u64 [a4 + 528] = 0\n 16692: u64 [a4 + 520] = 0\n 16696: a0 = s1 + 0x4000\n 16700: i32 a0 = a0 + 0x2c0\n 16704: ra = 0x28e\n 16708: ecalli 17 // 'value_transferred'\n 16710: a0 = 0x4000\n 16714: t0 = 0x290\n 16718: jump @2015\n      : @664 [@dyn 327] (gas: 2)\n 16722: a0 = 0x4000\n 16726: t0 = 656, jump @2015\n      : @665 [@dyn 328] (gas: 1)\n 16733: t0 = 658, jump @2029\n      : @666 [@dyn 329] (gas: 1)\n 16740: jump @668 if a0 == 0\n      : @667 (gas: 1)\n 16743: jump @1237\n      : @668 (gas: 3)\n 16746: a0 = u64 [s1 + 0x138]\n 16750: a0 = i32 [a0]\n 16752: jump @670 if a0 >u 3\n      : @669 (gas: 1)\n 16756: jump @1238\n      : @670 (gas: 7)\n 16759: u64 [a4 + 576] = 0\n 16763: u64 [a4 + 568] = 0\n 16767: u64 [a4 + 560] = 0\n 16771: u64 [a4 + 552] = 0x1\n 16776: a0 = s1 + 0x2fe0\n 16780: a1 = s1 + 0x42e0\n 16784: ra = 660, jump @21\n      : @671 [@dyn 330] (gas: 3)\n 16790: t0 = 0x296\n 16794: a1 = s1 + 0x28b8\n 16798: fallthrough\n      : @672 [@dyn 331] (gas: 13)\n 16799: a2 = a1 + 0x700\n 16803: a0 = u64 [a2 + 0x40]\n 16806: a1 = s1 + 0x100\n 16810: u64 [a1 + 0x38] = a0\n 16813: a0 = u64 [a2 + 0x38]\n 16816: u64 [a1 + 0x30] = a0\n 16819: a0 = u64 [a2 + 0x30]\n 16822: u64 [a1 + 0x28] = a0\n 16825: a0 = u64 [a2 + 0x28]\n 16828: u64 [a1 + 0x20] = a0\n 16831: a0 = s1 + 0x2fc0\n 16835: a1 = 0x40\n 16838: ra = 664, jump @17\n      : @673 [@dyn 332] (gas: 7)\n 16844: a3 = s1 + 0x28b8\n 16848: a5 = a3 + 0x700\n 16852: a0 = u64 [a5 + 0x20]\n 16855: a1 = u64 [a5 + 0x18]\n 16858: a2 = u64 [a5 + 0x10]\n 16861: a4 = u64 [a5 + 0x8]\n 16864: t0 = 666, jump @1986\n      : @674 [@dyn 333] (gas: 1)\n 16871: jump @676 if a0 == 0\n      : @675 (gas: 1)\n 16874: jump @1123\n      : @676 (gas: 15)\n 16877: a2 = s1 + 0x100\n 16881: a0 = u64 [a2 + 0x20]\n 16884: a1 = a3 + 0x600\n 16888: u64 [a1 + 0xe8] = a0\n 16892: a0 = u64 [a2 + 0x28]\n 16895: u64 [a1 + 0xf0] = a0\n 16899: a0 = u64 [a2 + 0x30]\n 16902: u64 [a1 + 0xf8] = a0\n 16906: a1 = s1 + 0x2fa0\n 16910: a0 = u64 [a2 + 0x38]\n 16913: u64 [a3 + 0x700] = a0\n 16917: a0 = a4\n 16919: u64 [s1 + 0x138] = a4\n 16923: ra = 0x33c\n 16927: jump @19\n      : @677 (gas: 9)\n 16930: u64 [a2 + 384] = 0\n 16934: u64 [a2 + 376] = 0\n 16938: u64 [a2 + 368] = 0\n 16942: u64 [a2 + 360] = 0\n 16946: a0 = s1 + 0x4000\n 16950: i32 a0 = a0 + 0xfffffffffffffa20\n 16954: ra = 0x29c\n 16958: ecalli 17 // 'value_transferred'\n 16960: fallthrough\n      : @678 [@dyn 334] (gas: 10)\n 16961: a3 = s1 + 0x38b8\n 16965: a4 = a3 + 0x100\n 16969: a0 = u64 [a4 + 0x78]\n 16972: a1 = u64 [a4 + 0x80]\n 16976: a2 = u64 [a4 + 0x70]\n 16979: a3 = u64 [a4 + 0x68]\n 16982: a1 = a1 | a2\n 16985: a0 = a0 | a3\n 16988: a0 = a0 | a1\n 16991: jump @680 if a0 == 0\n      : @679 (gas: 1)\n 16994: jump @1239\n      : @680 (gas: 1)\n 16997: t0 = 670, jump @1994\n      : @681 [@dyn 335] (gas: 1)\n 17004: jump @683 if a1 <u a0\n      : @682 (gas: 1)\n 17007: jump @1240\n      : @683 (gas: 18)\n 17010: a0 = s1 + 0x4000\n 17014: i32 a0 = a0 + 0xfffffffffffffa40\n 17018: a1 = 0x4\n 17021: ecalli 4 // 'call_data_load'\n 17023: a3 = s1 + 0x38b8\n 17027: a4 = a3 + 0x100\n 17031: a0 = u64 [a4 + 0x88]\n 17035: a1 = u64 [a4 + 0x90]\n 17039: a2 = u64 [a4 + 0x98]\n 17043: a3 = u64 [a4 + 0xa0]\n 17047: a4 = s1 + 0x18b8\n 17051: u64 [a4 + 0x100] = a3\n 17055: u64 [a4 + 0xf8] = a2\n 17059: u64 [a4 + 0xf0] = a1\n 17063: a1 = s1 + 0x19a0\n 17067: u64 [a4 + 0xe8] = a0\n 17071: a0 = 0\n 17073: ra = 672, jump @19\n      : @684 [@dyn 336] (gas: 3)\n 17079: t0 = 0x2a2\n 17083: a1 = s1 + 0x18b8\n 17087: fallthrough\n      : @685 [@dyn 337] (gas: 8)\n 17088: u64 [a1 + 224] = 0\n 17092: u64 [a1 + 216] = 0\n 17096: u64 [a1 + 200] = 0x3\n 17101: a2 = a1\n 17103: a0 = 0x20\n 17106: a1 = s1 + 0x1980\n 17110: u64 [a2 + 208] = 0\n 17114: ra = 676, jump @19\n      : @686 [@dyn 338] (gas: 2)\n 17120: a1 = i32 [0x2025c]\n 17125: jump @688 if a1 >u 63\n      : @687 (gas: 4)\n 17129: a1 = 0x40\n 17132: u32 [0x2025c] = a1\n 17137: t0 = 0x2a6\n 17141: jump @1975\n      : @688 (gas: 1)\n 17145: t0 = 678, jump @1975\n      : @689 [@dyn 339] (gas: 8)\n 17152: a0 = 0x20270\n 17157: i32 a0 = a0 + 0\n 17159: i32 a2 = a2 + 0\n 17161: a1 = 0x40\n 17164: ra = 0x2a8\n 17168: ecalli 9 // 'hash_keccak_256'\n 17170: t0 = 0x2aa\n 17174: jump @1982\n      : @690 [@dyn 340] (gas: 1)\n 17178: t0 = 682, jump @1982\n      : @691 [@dyn 341] (gas: 17)\n 17185: t0 = a0 + 0x11\n 17188: a1 = t0 <u a0\n 17191: a0 = a2 + a1\n 17194: a3 = a0 <u a2\n 17197: a3 = a1 if a1 == 0\n 17200: a3 = a3 + a5\n 17203: a1 = a3 <u a5\n 17206: a1 = a1 + a4\n 17209: a4 = s1 + 0x38b8\n 17213: u64 [a4 + 0x1a8] = t0\n 17217: a2 = a4 + 0x100\n 17221: u64 [a2 + 0xb0] = a0\n 17225: u64 [a2 + 0xb8] = a3\n 17229: u64 [a2 + 0xc0] = a1\n 17233: a0 = s1 + 0x1960\n 17237: a1 = s1 + 0x3a60\n 17241: ra = 684, jump @21\n      : @692 [@dyn 342] (gas: 14)\n 17247: a1 = s1 + 0x18b8\n 17251: a0 = u64 [a1 + 0xc0]\n 17255: u64 [s1 + 0x118] = a0\n 17259: a0 = u64 [a1 + 0xb8]\n 17263: u64 [s1 + 0x108] = a0\n 17267: a0 = u64 [a1 + 0xb0]\n 17271: u64 [s1 + 0x110] = a0\n 17275: a0 = u64 [a1 + 0xa8]\n 17279: u64 [s1 + 0x100] = a0\n 17283: a1 = u64 [s1 + 0x128]\n 17287: a0 = a1 + 0x12\n 17290: a1 = a0 <u a1\n 17293: a3 = u64 [s1 + 0x120]\n 17297: t0 = 686, jump @1991\n      : @693 [@dyn 343] (gas: 8)\n 17304: a5 = a4 + 0x100\n 17308: u64 [a5 + 0xe0] = a1\n 17312: u64 [a5 + 0xd8] = a3\n 17316: u64 [a5 + 0xd0] = a2\n 17320: u64 [a5 + 0xc8] = a0\n 17324: a0 = s1 + 0x1940\n 17328: a1 = s1 + 0x3a80\n 17332: ra = 688, jump @21\n      : @694 [@dyn 344] (gas: 10)\n 17338: a5 = s1 + 0x18b8\n 17342: a0 = u64 [a5 + 0xa0]\n 17346: u64 [s1 + 0xf8] = a0\n 17350: a0 = u64 [a5 + 0x98]\n 17354: u64 [s1 + 0xf0] = a0\n 17358: a1 = u64 [s1 + 0x128]\n 17362: a0 = a1 + 0x15\n 17365: a1 = a0 <u a1\n 17368: a3 = u64 [s1 + 0x120]\n 17372: t0 = 690, jump @1990\n      : @695 [@dyn 345] (gas: 18)\n 17379: a1 = u64 [a5 + 0x90]\n 17383: u64 [s1 + 0x128] = a1\n 17387: a1 = u64 [s1 + 0x130]\n 17391: a3 = a3 + a1\n 17394: a1 = a3 <u a1\n 17397: a4 = u64 [s1 + 0x138]\n 17401: a1 = a1 + a4\n 17404: a4 = u64 [a5 + 0x88]\n 17408: u64 [s1 + 0x120] = a4\n 17412: a4 = s1 + 0x38b8\n 17416: u64 [a4 + 0x200] = a1\n 17420: a1 = a4 + 0x100\n 17424: u64 [a1 + 0xf8] = a3\n 17428: u64 [a1 + 0xf0] = a2\n 17432: u64 [a1 + 0xe8] = a0\n 17436: a0 = s1 + 0x1920\n 17440: a1 = s1 + 0x3aa0\n 17444: ra = 692, jump @21\n      : @696 [@dyn 346] (gas: 3)\n 17450: t0 = 0x2b6\n 17454: a1 = s1 + 0x18b8\n 17458: fallthrough\n      : @697 [@dyn 347] (gas: 9)\n 17459: a0 = u64 [a1 + 0x78]\n 17462: u64 [s1 + 0xe0] = a0\n 17466: a0 = u64 [a1 + 0x70]\n 17469: u64 [s1 + 0xd8] = a0\n 17473: a0 = u64 [a1 + 0x68]\n 17476: u64 [s1 + 0xe8] = a0\n 17480: a0 = s1 + 0x1900\n 17484: a1 = 0x40\n 17487: ra = 696, jump @17\n      : @698 [@dyn 348] (gas: 13)\n 17493: a2 = s1 + 0x18b8\n 17497: t0 = u64 [a2 + 0x60]\n 17500: a5 = u64 [a2 + 0x58]\n 17503: a4 = u64 [a2 + 0x50]\n 17506: a0 = u64 [a2 + 0x48]\n 17509: a3 = a4 | t0\n 17512: a1 = a0 | a5\n 17515: a1 = a1 | a3\n 17518: a1 = a1 >> 0x20\n 17521: a3 = a3 | a5\n 17524: a3 = a3 << 0x20\n 17527: a1 = a1 | a3\n 17530: jump @700 if a1 == 0\n      : @699 (gas: 1)\n 17533: jump @1123\n      : @700 (gas: 14)\n 17536: a1 = u64 [s1 + 0x100]\n 17540: u64 [a2 + 0x28] = a1\n 17543: a1 = u64 [s1 + 0x110]\n 17547: u64 [a2 + 0x30] = a1\n 17550: a1 = u64 [s1 + 0x108]\n 17554: u64 [a2 + 0x38] = a1\n 17557: a1 = s1 + 0x18e0\n 17561: a3 = u64 [s1 + 0x118]\n 17565: u64 [a2 + 0x40] = a3\n 17568: u64 [s1 + 0x138] = a0\n 17572: u64 [s1 + 0x130] = a4\n 17576: u64 [s1 + 0xc8] = t0\n 17580: u64 [s1 + 0xd0] = a5\n 17584: ra = 698, jump @19\n      : @701 [@dyn 349] (gas: 11)\n 17590: a1 = u64 [s1 + 0x138]\n 17594: a0 = u64 [s1 + 0xd0]\n 17598: a3 = u64 [s1 + 0xc8]\n 17602: a3 = a3 | a0\n 17605: a4 = 0x100000000\n 17615: a0 = 0xffffffe0\n 17625: a0 = a1 <u a0\n 17628: a2 = u64 [s1 + 0x130]\n 17632: a0 = 0 if a2 != 0\n 17634: a0 = 0 if a3 != 0\n 17636: jump @703 if a0 != 0\n      : @702 (gas: 1)\n 17639: jump @1123\n      : @703 (gas: 15)\n 17642: i32 a0 = a1 + 0x20\n 17645: a1 = u64 [s1 + 0x120]\n 17649: a2 = s1 + 0x18b8\n 17653: u64 [s1 + 0xc8] = a4\n 17657: a4 = a2\n 17659: u64 [a2 + 0x8] = a1\n 17662: a1 = u64 [s1 + 0x128]\n 17666: u64 [a2 + 0x10] = a1\n 17669: a1 = u64 [s1 + 0xf0]\n 17673: u64 [a2 + 0x18] = a1\n 17676: a1 = s1 + 0x18c0\n 17680: a2 = u64 [s1 + 0xf8]\n 17684: u64 [a4 + 0x20] = a2\n 17687: u64 [s1 + 0xd0] = a3\n 17691: ra = 700, jump @19\n      : @704 [@dyn 350] (gas: 9)\n 17697: a2 = u64 [s1 + 0x138]\n 17701: a0 = u64 [s1 + 0xc8]\n 17705: a0 = a0 + 0xffffffffffffffc0\n 17708: a0 = a2 <u a0\n 17711: a1 = u64 [s1 + 0x130]\n 17715: a0 = 0 if a1 != 0\n 17717: a1 = u64 [s1 + 0xd0]\n 17721: a0 = 0 if a1 != 0\n 17723: jump @706 if a0 != 0\n      : @705 (gas: 1)\n 17726: jump @1123\n      : @706 (gas: 17)\n 17729: a0 = u64 [s1 + 0x100]\n 17733: a0 = a0 ^ 0x10\n 17736: a1 = u64 [s1 + 0x108]\n 17740: a0 = a0 | a1\n 17743: a1 = u64 [s1 + 0x118]\n 17747: a3 = u64 [s1 + 0x110]\n 17751: a1 = a1 | a3\n 17754: a0 = a0 | a1\n 17757: a1 = a0 <u 0x1\n 17760: i32 a0 = a2 + 0x40\n 17763: a2 = s1 + 0x18b8\n 17767: u64 [a2 + 0] = 0\n 17769: u64 [a2 + 4294967288] = 0\n 17772: u64 [a2 + 0xffffffffffffffe8] = a1\n 17775: a1 = s1 + 0x18a0\n 17779: u64 [a2 + 4294967280] = 0\n 17782: ra = 702, jump @19\n      : @707 [@dyn 351] (gas: 9)\n 17788: a4 = u64 [s1 + 0xd0]\n 17792: a3 = u64 [s1 + 0x130]\n 17796: a2 = u64 [s1 + 0x138]\n 17800: a1 = 0x100000000\n 17810: a0 = 0xffffffa0\n 17820: a0 = a2 <u a0\n 17823: a0 = 0 if a3 != 0\n 17825: a0 = 0 if a4 != 0\n 17827: jump @709 if a0 != 0\n      : @708 (gas: 1)\n 17830: jump @1123\n      : @709 (gas: 11)\n 17833: a0 = u8 [s1 + 0xe8]\n 17837: u64 [s1 + 0x128] = a1\n 17841: a1 = a0 >u 0\n 17843: i32 a0 = a2 + 0x60\n 17846: a2 = s1 + 0x10b8\n 17850: u64 [a2 + 2016] = 0\n 17854: u64 [a2 + 2008] = 0\n 17858: u64 [a2 + 0x7c8] = a1\n 17862: a1 = s1 + 0x1880\n 17866: u64 [a2 + 2000] = 0\n 17870: ra = 704, jump @19\n      : @710 [@dyn 352] (gas: 10)\n 17876: a2 = s1 + 0x100\n 17880: a4 = u64 [a2 + 0x38]\n 17883: a0 = u64 [a2 + 0x28]\n 17886: a0 = a0 + 0xffffffffffffff80\n 17889: a0 = a4 <u a0\n 17892: a1 = u64 [a2 + 0x30]\n 17895: a0 = 0 if a1 != 0\n 17897: a1 = u64 [s1 + 0xd0]\n 17901: a0 = 0 if a1 != 0\n 17903: jump @712 if a0 != 0\n      : @711 (gas: 1)\n 17906: jump @1123\n      : @712 (gas: 20)\n 17909: a5 = u64 [s1 + 0xd8]\n 17913: a0 = a5 >> 0x8\n 17916: a3 = u64 [s1 + 0xe0]\n 17920: a1 = a3 << 0x38\n 17923: a2 = a0 | a1\n 17926: a0 = u64 [s1 + 0xe8]\n 17930: a0 = a0 >> 0x8\n 17933: a1 = a5 << 0x38\n 17936: a1 = a1 | a0\n 17939: a0 = a3 << 0x18\n 17942: a3 = a0 >> 0x20\n 17945: i32 a0 = a4 + 0x80\n 17949: a5 = s1 + 0x10b8\n 17953: u64 [a5 + 1984] = 0\n 17957: a4 = a5 + 0x700\n 17961: u64 [a4 + 0xa8] = a1\n 17965: u64 [a4 + 0xb8] = a3\n 17969: a1 = s1 + 0x1860\n 17973: u64 [a4 + 0xb0] = a2\n 17977: ra = 706, jump @19\n      : @713 [@dyn 353] (gas: 3)\n 17983: a1 = 0xa0\n 17987: a0 = u64 [s1 + 0x138]\n 17991: ra = 708, jump @32\n      : @714 [@dyn 354] (gas: 7)\n 17997: i32 a1 = a0 + 0\n 17999: a2 = 0xa0\n 18003: a0 = 0\n 18005: ra = 0x340\n 18009: ecalli 14 // 'seal_return'\n 18011: t0 = 0x342\n 18015: jump @1994\n      : @715 (gas: 9)\n 18019: u64 [a2 + 1984] = 0\n 18023: u64 [a2 + 1976] = 0\n 18027: u64 [a2 + 1968] = 0\n 18031: u64 [a2 + 1960] = 0\n 18035: a0 = s1 + 0x4000\n 18039: i32 a0 = a0 + 0x60\n 18042: ra = 0x2c6\n 18046: ecalli 17 // 'value_transferred'\n 18048: fallthrough\n      : @716 [@dyn 355] (gas: 10)\n 18049: a4 = s1 + 0x38b8\n 18053: a5 = a4 + 0x700\n 18057: a0 = u64 [a5 + 0xb8]\n 18061: a1 = u64 [a5 + 0xc0]\n 18065: a2 = u64 [a5 + 0xb0]\n 18069: a3 = u64 [a5 + 0xa8]\n 18073: a1 = a1 | a2\n 18076: a0 = a0 | a3\n 18079: a0 = a0 | a1\n 18082: jump @718 if a0 == 0\n      : @717 (gas: 1)\n 18085: jump @1241\n      : @718 (gas: 1)\n 18088: t0 = 712, jump @1994\n      : @719 [@dyn 356] (gas: 1)\n 18095: jump @721 if a1 <u a0\n      : @720 (gas: 1)\n 18098: jump @1242\n      : @721 (gas: 7)\n 18101: u64 [a4 + 2016] = 0\n 18105: u64 [a4 + 2008] = 0\n 18109: u64 [a4 + 2000] = 0\n 18113: u64 [a4 + 1992] = 0x7\n 18118: a0 = s1 + 0x2840\n 18122: a1 = s1 + 0x4080\n 18126: ra = 714, jump @21\n      : @722 [@dyn 357] (gas: 2)\n 18132: a0 = 0x2000\n 18136: t0 = 716, jump @2003\n      : @723 [@dyn 358] (gas: 6)\n 18143: a0 = 0x30270\n 18148: u64 [s1 + 0x120] = a0\n 18152: i32 a0 = a0 + 0\n 18154: ra = 0x2ce\n 18158: ecalli 6 // 'caller'\n 18160: fallthrough\n      : @724 [@dyn 359] (gas: 3)\n 18161: a5 = s1 + 0x100\n 18165: a2 = u64 [a5 + 0x20]\n 18168: t0 = 720, jump @1961\n      : @725 [@dyn 360] (gas: 18)\n 18175: a2 = u64 [a5 + 0x28]\n 18178: a1 = a1 ^ a2\n 18181: a2 = u64 [a5 + 0x30]\n 18184: a0 = a0 ^ a2\n 18187: a0 = a0 | a1\n 18190: a1 = u64 [a5 + 0x38]\n 18193: a1 = a1 ^ a3\n 18196: a0 = a0 | a1\n 18199: a0 = a0 <u 0x1\n 18202: a1 = s1 + 0x20b8\n 18206: u64 [a1 + 1920] = 0\n 18210: u64 [a1 + 1912] = 0\n 18214: u64 [a1 + 0x768] = a0\n 18218: a0 = s1 + 0x2820\n 18222: u64 [a1 + 1904] = 0\n 18226: ra = 0x2d2\n 18230: t0 = 0x562\n 18234: jump @1953\n      : @726 [@dyn 361] (gas: 8)\n 18238: a1 = s1 + 0x40b8\n 18242: u64 [a1 + 0] = 0\n 18244: u64 [a1 + 4294967288] = 0\n 18247: u64 [a1 + 4294967280] = 0\n 18250: u64 [a1 + 4294967272] = 0x4\n 18254: a0 = s1 + 0x2800\n 18258: a1 = s1 + 0x40a0\n 18262: ra = 724, jump @21\n      : @727 [@dyn 362] (gas: 3)\n 18268: t0 = 0x2d6\n 18272: a4 = s1 + 0x20b8\n 18276: fallthrough\n      : @728 [@dyn 363] (gas: 12)\n 18277: a5 = a4 + 0x700\n 18281: a0 = u64 [a5 + 0x48]\n 18284: a1 = u64 [a5 + 0x50]\n 18287: a2 = u64 [a5 + 0x58]\n 18290: a3 = u64 [a5 + 0x60]\n 18293: u64 [a5 + 0x40] = a3\n 18296: u64 [a5 + 0x38] = a2\n 18299: u64 [a5 + 0x30] = a1\n 18302: a1 = s1 + 0x27e0\n 18306: u64 [a5 + 0x28] = a0\n 18309: a0 = 0\n 18311: ra = 728, jump @19\n      : @729 [@dyn 364] (gas: 9)\n 18317: a1 = s1 + 0x20b8\n 18321: u64 [a1 + 1824] = 0\n 18325: u64 [a1 + 1816] = 0\n 18329: u64 [a1 + 1800] = 0x3\n 18334: a2 = a1\n 18336: a0 = 0x20\n 18339: a1 = s1 + 0x27c0\n 18343: u64 [a2 + 1808] = 0\n 18347: ra = 730, jump @19\n      : @730 [@dyn 365] (gas: 2)\n 18353: a1 = i32 [0x2025c]\n 18358: jump @732 if a1 >u 63\n      : @731 (gas: 4)\n 18362: a1 = 0x40\n 18365: u32 [0x2025c] = a1\n 18370: t0 = 0x2dc\n 18374: jump @1975\n      : @732 (gas: 1)\n 18378: t0 = 732, jump @1975\n      : @733 [@dyn 366] (gas: 8)\n 18385: a0 = 0x20270\n 18390: i32 a0 = a0 + 0\n 18392: i32 a2 = a2 + 0\n 18394: a1 = 0x40\n 18397: u64 [s1 + 0x130] = a0\n 18401: ra = 0x2de\n 18405: ecalli 9 // 'hash_keccak_256'\n 18407: fallthrough\n      : @734 [@dyn 367] (gas: 6)\n 18408: a3 = u64 [s1 + 0x138]\n 18412: a0 = u64 [a3]\n 18414: a1 = u64 [a3 + 0x8]\n 18417: a2 = u64 [a3 + 0x10]\n 18420: a3 = u64 [a3 + 0x18]\n 18423: t0 = 736, jump @2012\n      : @735 [@dyn 368] (gas: 16)\n 18430: a4 = a3 + 0x11\n 18433: a3 = a4 <u a3\n 18436: a5 = a2 + a3\n 18439: a2 = a5 <u a2\n 18442: a2 = a3 if a3 == 0\n 18445: a2 = a2 + a1\n 18448: a1 = a2 <u a1\n 18451: a0 = a0 + a1\n 18454: a1 = s1 + 0x40b8\n 18458: u64 [a1 + 0x8] = a4\n 18461: u64 [a1 + 0x10] = a5\n 18464: u64 [a1 + 0x18] = a2\n 18467: u64 [a1 + 0x20] = a0\n 18470: a0 = s1 + 0x27a0\n 18474: a1 = s1 + 0x40c0\n 18478: ra = 738, jump @21\n      : @736 [@dyn 369] (gas: 10)\n 18484: a3 = s1 + 0x20b8\n 18488: a4 = a3 + 0x600\n 18492: a0 = u64 [a4 + 0xf8]\n 18496: a1 = u64 [a3 + 0x700]\n 18500: a2 = u64 [a4 + 0xf0]\n 18504: a3 = u64 [a4 + 0xe8]\n 18508: a1 = a1 | a2\n 18511: a0 = a0 | a3\n 18514: a0 = a0 | a1\n 18517: jump @738 if a0 != 0\n      : @737 (gas: 1)\n 18520: jump @1243\n      : @738 (gas: 3)\n 18523: a0 = s1 + 0x2780\n 18527: a1 = 0x40\n 18530: ra = 740, jump @17\n      : @739 [@dyn 370] (gas: 2)\n 18536: a4 = s1 + 0x20b8\n 18540: fallthrough\n      : @740 (gas: 13)\n 18541: t0 = u64 [a4 + 0x6e0]\n 18545: a1 = a4 + 0x600\n 18549: a5 = u64 [a1 + 0xd8]\n 18553: a3 = u64 [a1 + 0xd0]\n 18557: a0 = u64 [a1 + 0xc8]\n 18561: a2 = a3 | t0\n 18564: a1 = a0 | a5\n 18567: a1 = a1 | a2\n 18570: a1 = a1 >> 0x20\n 18573: a2 = a2 | a5\n 18576: a2 = a2 << 0x20\n 18579: a1 = a1 | a2\n 18582: jump @742 if a1 == 0\n      : @741 (gas: 1)\n 18585: jump @1123\n      : @742 (gas: 11)\n 18588: u64 [a4 + 1720] = 0\n 18592: u64 [a4 + 1712] = 0\n 18596: u64 [a4 + 1704] = 0\n 18600: u64 [s1 + 0x130] = a3\n 18604: a3 = 0x8c379a000000000\n 18614: a1 = s1 + 0x2760\n 18618: u64 [a4 + 0x6c0] = a3\n 18622: u64 [s1 + 0x138] = a0\n 18626: u64 [s1 + 0x128] = t0\n 18630: u64 [s1 + 0x120] = a5\n 18634: ra = 742, jump @19\n      : @743 [@dyn 371] (gas: 6)\n 18640: a5 = s1 + 0x100\n 18644: a1 = u64 [a5 + 0x38]\n 18647: a0 = u64 [a5 + 0x28]\n 18650: a3 = u64 [a5 + 0x20]\n 18653: a3 = a3 | a0\n 18656: t0 = 744, jump @1957\n      : @744 [@dyn 372] (gas: 1)\n 18663: jump @746 if a0 != 0\n      : @745 (gas: 1)\n 18666: jump @1123\n      : @746 (gas: 1)\n 18669: t0 = 746, jump @2028\n      : @747 [@dyn 373] (gas: 8)\n 18676: u64 [a2 + 1696] = 0\n 18680: u64 [a2 + 1688] = 0\n 18684: u64 [a2 + 1672] = 0x20\n 18689: a1 = s1 + 0x2740\n 18693: u64 [a2 + 1680] = 0\n 18697: u64 [s1 + 0x128] = a3\n 18701: u64 [s1 + 0x120] = a4\n 18705: ra = 748, jump @19\n      : @748 [@dyn 374] (gas: 1)\n 18711: t0 = 750, jump @1955\n      : @749 [@dyn 375] (gas: 1)\n 18718: jump @751 if a0 != 0\n      : @750 (gas: 1)\n 18721: jump @1123\n      : @751 (gas: 8)\n 18724: i32 a0 = a1 + 0x24\n 18727: a3 = s1 + 0x20b8\n 18731: u64 [a3 + 1664] = 0\n 18735: u64 [a3 + 1656] = 0\n 18739: u64 [a3 + 1640] = 0x10\n 18744: a1 = s1 + 0x2720\n 18748: u64 [a3 + 1648] = 0\n 18752: ra = 752, jump @19\n      : @752 [@dyn 376] (gas: 1)\n 18758: t0 = 754, jump @1956\n      : @753 [@dyn 377] (gas: 1)\n 18765: jump @755 if a0 != 0\n      : @754 (gas: 1)\n 18768: jump @1123\n      : @755 (gas: 11)\n 18771: i32 a0 = a3 + 0x44\n 18774: a1 = u64 [0x20050]\n 18779: a2 = u64 [0x20058]\n 18784: a4 = s1 + 0x20b8\n 18788: u64 [a4 + 0x660] = a1\n 18792: u64 [a4 + 1616] = 0\n 18796: u64 [a4 + 0x658] = a2\n 18800: a1 = s1 + 0x2700\n 18804: u64 [a4 + 1608] = 0\n 18808: ra = 0x404\n 18812: jump @19\n      : @756 (gas: 11)\n 18815: u64 [a3 + 608] = 0\n 18819: u64 [a3 + 600] = 0\n 18823: u64 [a3 + 592] = 0\n 18827: u64 [a3 + 584] = 0\n 18831: a0 = s1 + 0x3000\n 18835: i32 a0 = a0 + 0x300\n 18839: ra = 0x2f4\n 18843: ecalli 17 // 'value_transferred'\n 18845: a0 = 0x3000\n 18849: t0 = 0x2f6\n 18853: jump @2015\n      : @757 [@dyn 378] (gas: 2)\n 18857: a0 = 0x3000\n 18861: t0 = 758, jump @2015\n      : @758 [@dyn 379] (gas: 8)\n 18868: a0 = u64 [a5 + 0x58]\n 18871: a1 = u64 [a5 + 0x60]\n 18874: a2 = u64 [a5 + 0x50]\n 18877: a3 = u64 [a5 + 0x48]\n 18880: a1 = a1 | a2\n 18883: a0 = a0 | a3\n 18886: a0 = a0 | a1\n 18889: jump @760 if a0 == 0\n      : @759 (gas: 1)\n 18892: jump @1245\n      : @760 (gas: 3)\n 18895: a0 = u64 [s1 + 0x138]\n 18899: a0 = i32 [a0]\n 18901: jump @762 if a0 >u 3\n      : @761 (gas: 1)\n 18905: jump @1246\n      : @762 (gas: 7)\n 18908: u64 [a4 + 640] = 0\n 18912: u64 [a4 + 632] = 0\n 18916: u64 [a4 + 624] = 0\n 18920: u64 [a4 + 616] = 0x2\n 18925: a0 = s1 + 0x3e0\n 18929: a1 = s1 + 0x3320\n 18933: ra = 760, jump @21\n      : @763 [@dyn 380] (gas: 12)\n 18939: a0 = u64 [s1 + 0x3f8]\n 18943: a1 = s1 + 0x100\n 18947: u64 [a1 + 0x38] = a0\n 18950: a0 = u64 [s1 + 0x3f0]\n 18954: u64 [a1 + 0x30] = a0\n 18957: a0 = u64 [s1 + 0x3e8]\n 18961: u64 [a1 + 0x28] = a0\n 18964: a0 = u64 [s1 + 0x3e0]\n 18968: u64 [a1 + 0x20] = a0\n 18971: a0 = s1 + 0x3c0\n 18975: a1 = 0x40\n 18978: ra = 762, jump @17\n      : @764 [@dyn 381] (gas: 13)\n 18984: a4 = s1 + 0x300\n 18988: a0 = u64 [a4 + 0xd8]\n 18992: a1 = u64 [a4 + 0xd0]\n 18996: a2 = u64 [a4 + 0xc8]\n 19000: a3 = u64 [a4 + 0xc0]\n 19004: a0 = a0 | a2\n 19007: a2 = a3 | a1\n 19010: a2 = a2 | a0\n 19013: a2 = a2 >> 0x20\n 19016: a0 = a0 | a1\n 19019: a0 = a0 << 0x20\n 19022: a0 = a0 | a2\n 19025: jump @766 if a0 == 0\n      : @765 (gas: 1)\n 19028: jump @1123\n      : @766 (gas: 15)\n 19031: a2 = s1 + 0x100\n 19035: a0 = u64 [a2 + 0x20]\n 19038: a4 = s1 + 0x300\n 19042: u64 [a4 + 0xa0] = a0\n 19046: a0 = u64 [a2 + 0x28]\n 19049: u64 [a4 + 0xa8] = a0\n 19053: a0 = u64 [a2 + 0x30]\n 19056: u64 [a4 + 0xb0] = a0\n 19060: a1 = s1 + 0x3a0\n 19064: a0 = u64 [a2 + 0x38]\n 19067: u64 [a4 + 0xb8] = a0\n 19071: a0 = a3\n 19073: u64 [a2 + 0x38] = a3\n 19076: ra = 0x33c\n 19080: jump @19\n      : @767 (gas: 1)\n 19083: t0 = 764, jump @1994\n      : @768 [@dyn 382] (gas: 1)\n 19090: jump @770 if a1 <u a0\n      : @769 (gas: 1)\n 19093: jump @1247\n      : @770 (gas: 5)\n 19096: a0 = s1 + 0x3000\n 19100: i32 a0 = a0 + 0x380\n 19104: a1 = 0x4\n 19107: ecalli 4 // 'call_data_load'\n 19109: fallthrough\n      : @771 (gas: 9)\n 19110: a2 = s1 + 0x30b8\n 19114: a0 = a2 + 0x200\n 19118: a5 = u64 [a0 + 0xe0]\n 19122: a3 = u64 [a0 + 0xd8]\n 19126: a4 = u64 [a0 + 0xd0]\n 19130: a0 = a3 | a5\n 19133: a1 = a4 <u 0x1\n 19136: a1 = 0 if a0 != 0\n 19138: jump @773 if a1 != 0\n      : @772 (gas: 1)\n 19141: jump @1248\n      : @773 (gas: 19)\n 19144: a1 = u64 [a2 + 0x2c8]\n 19148: a0 = u64 [s1 + 0x138]\n 19152: t2 = u32 [a0]\n 19154: a0 = a1 + 0x23\n 19157: a2 = a0 <u a1\n 19160: t1 = a4 + a2\n 19163: u64 [s1 + 0x120] = a4\n 19167: a4 = t1 <u a4\n 19170: a4 = a2 if a2 == 0\n 19173: a4 = a4 + a3\n 19176: u64 [s1 + 0x128] = a3\n 19180: a2 = a4 <u a3\n 19183: u64 [s1 + 0x130] = a5\n 19187: a2 = a2 + a5\n 19190: a2 = a2 | a4\n 19193: a0 = a0 <u t2\n 19196: a0 = 0 if t1 != 0\n 19198: a0 = 0 if a2 != 0\n 19200: jump @775 if a0 != 0\n      : @774 (gas: 1)\n 19203: jump @1249\n      : @775 (gas: 6)\n 19206: u64 [s1 + 0xf0] = a1\n 19210: i32 a1 = a1 + 0x4\n 19213: a0 = s1 + 0x3000\n 19217: i32 a0 = a0 + 0x3a0\n 19221: ecalli 4 // 'call_data_load'\n 19223: fallthrough\n      : @776 (gas: 9)\n 19224: a2 = s1 + 0x30b8\n 19228: t2 = u64 [a2 + 0x300]\n 19232: a0 = u64 [a2 + 0x2f8]\n 19236: ra = u64 [a2 + 0x2f0]\n 19240: u64 [s1 + 0x118] = a0\n 19244: a0 = a0 | t2\n 19247: a1 = ra <u 0x1\n 19250: a1 = 0 if a0 != 0\n 19252: jump @778 if a1 != 0\n      : @777 (gas: 1)\n 19255: jump @1250\n      : @778 (gas: 57)\n 19258: a5 = u64 [a2 + 0x2e8]\n 19262: a0 = u64 [s1 + 0xf0]\n 19266: a3 = a0 + 0x24\n 19269: a2 = a3 <u a0\n 19272: t1 = u64 [s1 + 0x120]\n 19276: a0 = t1 + a2\n 19279: a4 = a5 >> 0x3b\n 19282: a1 = ra << 0x5\n 19285: a4 = a4 | a1\n 19288: u64 [s1 + 0x100] = a5\n 19292: a1 = a5 << 0x5\n 19295: t0 = a0 + a4\n 19298: a1 = a1 + a3\n 19301: u64 [s1 + 0xf8] = a3\n 19305: a4 = a1 <u a3\n 19308: t0 = t0 + a4\n 19311: a5 = t0 ^ a0\n 19314: a3 = t0 <u a0\n 19317: a3 = a4 if a5 == 0\n 19320: u64 [s1 + 0xf0] = a0\n 19324: a4 = a0 <u t1\n 19327: a4 = a2 if a2 == 0\n 19330: a2 = u64 [s1 + 0x128]\n 19334: a0 = a2 + a4\n 19337: a2 = a0 <u a2\n 19340: a4 = u64 [s1 + 0x130]\n 19344: a2 = a2 + a4\n 19347: t1 = u64 [s1 + 0x118]\n 19351: a5 = t1 >> 0x3b\n 19354: a4 = t2 << 0x5\n 19357: u64 [s1 + 0x110] = t2\n 19361: t2 = a4 | a5\n 19364: a4 = ra >> 0x3b\n 19367: a5 = t1 << 0x5\n 19370: a4 = a4 | a5\n 19373: a4 = a4 + a0\n 19376: u64 [s1 + 0xe0] = a2\n 19380: a2 = a2 + t2\n 19383: u64 [s1 + 0xe8] = a0\n 19387: a5 = a4 <u a0\n 19390: a2 = a2 + a5\n 19393: a5 = u64 [s1 + 0x138]\n 19397: a5 = u32 [a5]\n 19399: a3 = a3 + a4\n 19402: a4 = a3 <u a4\n 19405: a2 = a2 + a4\n 19408: a1 = a5 <u a1\n 19411: a4 = t0 <u 0x1\n 19414: a1 = a1 ^ 0x1\n 19417: a1 = a4 if t0 != 0\n 19420: a0 = a2 <u 0x1\n 19423: a4 = a3 <u 0x1\n 19426: a4 = a0 if a2 != 0\n 19429: a2 = a2 | a3\n 19432: a1 = a4 if a2 != 0\n 19435: u64 [s1 + 0x108] = ra\n 19439: jump @780 if a1 != 0\n      : @779 (gas: 1)\n 19442: jump @1251\n      : @780 (gas: 8)\n 19445: a1 = s1 + 0x30b8\n 19449: u64 [a1 + 800] = 0\n 19453: u64 [a1 + 792] = 0\n 19457: u64 [a1 + 784] = 0\n 19461: u64 [a1 + 776] = 0x8\n 19466: a0 = s1 + 0x1080\n 19470: a1 = s1 + 0x33c0\n 19474: ra = 766, jump @21\n      : @781 [@dyn 383] (gas: 12)\n 19480: a1 = s1 + 0x7ff\n 19484: a1 = a1 + 0xb9\n 19488: a0 = u8 [a1 + 0x7dc]\n 19492: a0 = a0 <u 0x1\n 19495: u64 [a1 + 1984] = 0\n 19499: u64 [a1 + 1976] = 0\n 19503: u64 [a1 + 0x7a8] = a0\n 19507: a0 = s1 + 0x1060\n 19511: u64 [a1 + 1968] = 0\n 19515: ra = 0x300\n 19519: t0 = 0x58e\n 19523: jump @1953\n      : @782 [@dyn 384] (gas: 11)\n 19527: a0 = s1 + 0x30b8\n 19531: u64 [a0 + 832] = 0\n 19535: a0 = s1 + 0x30b8\n 19539: u64 [a0 + 824] = 0\n 19543: a0 = s1 + 0x30b8\n 19547: u64 [a0 + 816] = 0\n 19551: a0 = s1 + 0x30b8\n 19555: u64 [a0 + 808] = 0x9\n 19560: a0 = s1 + 0x1040\n 19564: a1 = s1 + 0x33e0\n 19568: ra = 770, jump @21\n      : @783 [@dyn 385] (gas: 8)\n 19574: a4 = s1 + 0x7ff\n 19578: a4 = a4 + 0xb9\n 19582: a5 = a4 + 0x700\n 19586: a0 = u64 [a5 + 0xa0]\n 19590: a1 = u64 [a5 + 0x90]\n 19594: a2 = u64 [a5 + 0x88]\n 19598: a3 = u64 [a5 + 0x98]\n 19602: t0 = 772, jump @2011\n      : @784 [@dyn 386] (gas: 8)\n 19609: u64 [a4 + 1920] = 0\n 19613: u64 [a4 + 1912] = 0\n 19617: u64 [a5 + 0x68] = a0\n 19620: a0 = s1 + 0x1020\n 19624: u64 [a4 + 1904] = 0\n 19628: ra = 0x306\n 19632: t0 = 0x5b0\n 19636: jump @1953\n      : @785 [@dyn 387] (gas: 19)\n 19640: a0 = s1 + 0x30b8\n 19644: u64 [a0 + 864] = 0\n 19648: a0 = s1 + 0x30b8\n 19652: u64 [a0 + 856] = 0\n 19656: a0 = s1 + 0x30b8\n 19660: u64 [a0 + 848] = 0\n 19664: a0 = s1 + 0x30b8\n 19668: u64 [a0 + 840] = 0x9\n 19673: a0 = s1 + 0x30b8\n 19677: u64 [a0 + 896] = 0\n 19681: a0 = s1 + 0x30b8\n 19685: u64 [a0 + 888] = 0\n 19689: a0 = s1 + 0x30b8\n 19693: u64 [a0 + 880] = 0\n 19697: a1 = s1 + 0x30b8\n 19701: u64 [a1 + 872] = 0x2\n 19706: a0 = s1 + 0x3400\n 19710: a1 = s1 + 0x3420\n 19714: ra = 776, jump @25\n      : @786 [@dyn 388] (gas: 11)\n 19720: a0 = s1 + 0x30b8\n 19724: u64 [a0 + 928] = 0\n 19728: a0 = s1 + 0x30b8\n 19732: u64 [a0 + 920] = 0\n 19736: a0 = s1 + 0x30b8\n 19740: u64 [a0 + 912] = 0\n 19744: a0 = s1 + 0x30b8\n 19748: u64 [a0 + 904] = 0\n 19752: a0 = s1 + 0x1000\n 19756: a1 = s1 + 0x3440\n 19760: ra = 778, jump @21\n      : @787 [@dyn 389] (gas: 26)\n 19766: a5 = s1 + 0x7ff\n 19770: a5 = a5 + 0xb9\n 19774: a3 = u64 [a5 + 0x748]\n 19778: a0 = u64 [a5 + 0x750]\n 19782: a1 = u64 [a5 + 0x758]\n 19786: a2 = u64 [a5 + 0x760]\n 19790: a4 = u64 [s1 + 0x110]\n 19794: u64 [a5 + 0x700] = a4\n 19798: a4 = u64 [s1 + 0x118]\n 19802: u64 [a5 + 0x6f8] = a4\n 19806: a4 = u64 [s1 + 0x108]\n 19810: u64 [a5 + 0x6f0] = a4\n 19814: a4 = u64 [s1 + 0x100]\n 19818: u64 [a5 + 0x6e8] = a4\n 19822: a4 = a5 + 0x700\n 19826: u64 [a4 + 0x20] = a2\n 19829: u64 [a4 + 0x18] = a1\n 19832: u64 [a4 + 0x10] = a0\n 19835: a0 = s1 + 0x7ff\n 19839: a0 = a0 + 0x7e1\n 19843: a1 = s1 + 0x7ff\n 19847: a1 = a1 + 0x7c1\n 19851: a2 = s1 + 0x7ff\n 19855: a2 = a2 + 0x7a1\n 19859: u64 [a4 + 0x8] = a3\n 19862: ra = 780, jump @1394\n      : @788 [@dyn 390] (gas: 23)\n 19868: a1 = s1 + 0x7ff\n 19872: a1 = a1 + 0xb9\n 19876: a2 = a1 + 0x700\n 19880: a0 = u64 [a2 + 0x28]\n 19883: u64 [s1 + 0x138] = a0\n 19887: a0 = u64 [a2 + 0x38]\n 19890: u64 [s1 + 0x130] = a0\n 19894: a0 = u64 [a2 + 0x30]\n 19897: u64 [s1 + 0x128] = a0\n 19901: a0 = u64 [a2 + 0x40]\n 19904: u64 [s1 + 0x120] = a0\n 19908: a0 = s1 + 0x30b8\n 19912: u64 [a0 + 960] = 0\n 19916: a0 = s1 + 0x30b8\n 19920: u64 [a0 + 952] = 0\n 19924: a0 = s1 + 0x30b8\n 19928: u64 [a0 + 944] = 0\n 19932: a0 = s1 + 0x30b8\n 19936: u64 [a0 + 936] = 0\n 19940: a0 = s1 + 0x3000\n 19944: i32 a0 = a0 + 0x460\n 19948: ecalli 17 // 'value_transferred'\n 19950: fallthrough\n      : @789 (gas: 18)\n 19951: a5 = s1 + 0x30b8\n 19955: a4 = a5 + 0x300\n 19959: a0 = u64 [a4 + 0xc0]\n 19963: a1 = u64 [a4 + 0xb0]\n 19967: a2 = u64 [a4 + 0xa8]\n 19971: a3 = u64 [a4 + 0xb8]\n 19975: a4 = u64 [s1 + 0x120]\n 19979: a0 = a0 ^ a4\n 19982: a4 = u64 [s1 + 0x128]\n 19986: a1 = a1 ^ a4\n 19989: a0 = a0 | a1\n 19992: a1 = u64 [s1 + 0x130]\n 19996: a1 = a1 ^ a3\n 19999: a3 = u64 [s1 + 0x138]\n 20003: a2 = a2 ^ a3\n 20006: a1 = a1 | a2\n 20009: a0 = a0 | a1\n 20012: jump @791 if a0 == 0\n      : @790 (gas: 1)\n 20015: jump @962\n      : @791 (gas: 25)\n 20018: a1 = u64 [s1 + 0x100]\n 20022: t0 = a1 + 0xfffffffffffffffb\n 20025: a1 = t0 <u a1\n 20028: a0 = u64 [s1 + 0x108]\n 20032: a2 = a0 + a1\n 20035: a2 = a2 + 0xffffffffffffffff\n 20038: a3 = a2 ^ a0\n 20041: a4 = a2 <u a0\n 20044: a4 = a1 if a3 == 0\n 20047: a3 = u64 [s1 + 0x118]\n 20051: a1 = a3 + 0xffffffffffffffff\n 20054: a4 = a4 + a1\n 20057: a1 = a4 <u a1\n 20060: a3 = a3 <u 0x1\n 20063: a0 = u64 [s1 + 0x110]\n 20067: a3 = a0 - a3\n 20070: a1 = a1 + a3\n 20073: a1 = a1 & a4\n 20076: a1 = a1 + 0x1\n 20079: a2 = a2 + 0x1\n 20082: a0 = t0 <u 0xfffffffffffffffc\n 20085: a0 = a0 ^ 0x1\n 20088: a0 = 0 if a2 != 0\n 20090: a0 = 0 if a1 != 0\n 20092: jump @793 if a0 == 0\n      : @792 (gas: 1)\n 20095: jump @1017\n      : @793 (gas: 3)\n 20098: a0 = s1 + 0x640\n 20102: a1 = 0x40\n 20105: ra = 782, jump @17\n      : @794 [@dyn 391] (gas: 6)\n 20111: a1 = s1 + 0x600\n 20115: a4 = u64 [a1 + 0x58]\n 20118: a5 = u64 [a1 + 0x50]\n 20121: a3 = u64 [a1 + 0x48]\n 20124: a0 = u64 [a1 + 0x40]\n 20127: t0 = 784, jump @1987\n      : @795 [@dyn 392] (gas: 1)\n 20134: jump @797 if a1 == 0\n      : @796 (gas: 1)\n 20137: jump @1123\n      : @797 (gas: 11)\n 20140: u64 [s1 + 1584] = 0\n 20144: u64 [s1 + 1576] = 0\n 20148: u64 [s1 + 1568] = 0\n 20152: a2 = 0x8c379a000000000\n 20162: a1 = s1 + 0x620\n 20166: u64 [s1 + 0x638] = a2\n 20170: u64 [s1 + 0x138] = a0\n 20174: u64 [s1 + 0x130] = a3\n 20178: u64 [s1 + 0x128] = a4\n 20182: u64 [s1 + 0x120] = a5\n 20186: ra = 786, jump @19\n      : @798 [@dyn 393] (gas: 6)\n 20192: a5 = s1 + 0x100\n 20196: a1 = u64 [a5 + 0x38]\n 20199: a0 = u64 [a5 + 0x28]\n 20202: a3 = u64 [a5 + 0x20]\n 20205: a3 = a3 | a0\n 20208: t0 = 788, jump @1957\n      : @799 [@dyn 394] (gas: 1)\n 20215: jump @801 if a0 != 0\n      : @800 (gas: 1)\n 20218: jump @1123\n      : @801 (gas: 9)\n 20221: i32 a0 = a1 + 0x4\n 20224: u64 [s1 + 1560] = 0\n 20228: u64 [s1 + 1552] = 0\n 20232: u64 [s1 + 1536] = 0x20\n 20237: a1 = s1 + 0x600\n 20241: u64 [s1 + 1544] = 0\n 20245: u64 [s1 + 0x128] = a3\n 20249: u64 [s1 + 0x120] = a4\n 20253: ra = 790, jump @19\n      : @802 [@dyn 395] (gas: 1)\n 20259: t0 = 792, jump @1955\n      : @803 [@dyn 396] (gas: 1)\n 20266: jump @805 if a0 != 0\n      : @804 (gas: 1)\n 20269: jump @1123\n      : @805 (gas: 7)\n 20272: i32 a0 = a1 + 0x24\n 20275: u64 [s1 + 1528] = 0\n 20279: u64 [s1 + 1520] = 0\n 20283: u64 [s1 + 1504] = 0x17\n 20288: a1 = s1 + 0x5e0\n 20292: u64 [s1 + 1512] = 0\n 20296: ra = 794, jump @19\n      : @806 [@dyn 397] (gas: 1)\n 20302: t0 = 796, jump @2001\n      : @807 [@dyn 398] (gas: 1)\n 20309: jump @809 if a0 != 0\n      : @808 (gas: 1)\n 20312: jump @1123\n      : @809 (gas: 12)\n 20315: i32 a0 = a2 + 0x44\n 20318: a1 = u64 [0x20038]\n 20323: a2 = u64 [0x200f0]\n 20328: a3 = u64 [0x200f8]\n 20333: a4 = s1 + 0x500\n 20337: u64 [a4 + 0xd8] = a1\n 20341: u64 [a4 + 0xd0] = a2\n 20345: u64 [a4 + 0xc8] = a3\n 20349: a1 = s1 + 0x5c0\n 20353: u64 [s1 + 1472] = 0\n 20357: ra = 0x404\n 20361: jump @19\n      : @810 (gas: 10)\n 20364: a0 = s1 + 0x38b8\n 20368: u64 [a0 + 1056] = 0\n 20372: u64 [a0 + 1048] = 0\n 20376: u64 [a0 + 1040] = 0\n 20380: u64 [a0 + 1032] = 0\n 20384: a0 = s1 + 0x4000\n 20388: i32 a0 = a0 + 0xfffffffffffffcc0\n 20392: ra = 0x31e\n 20396: ecalli 17 // 'value_transferred'\n 20398: fallthrough\n      : @811 [@dyn 399] (gas: 10)\n 20399: a3 = s1 + 0x38b8\n 20403: a4 = a3 + 0x400\n 20407: a0 = u64 [a4 + 0x18]\n 20410: a1 = u64 [a4 + 0x20]\n 20413: a2 = u64 [a4 + 0x10]\n 20416: a3 = u64 [a4 + 0x8]\n 20419: a1 = a1 | a2\n 20422: a0 = a0 | a3\n 20425: a0 = a0 | a1\n 20428: jump @813 if a0 == 0\n      : @812 (gas: 1)\n 20431: jump @1252\n      : @813 (gas: 1)\n 20434: t0 = 800, jump @1994\n      : @814 [@dyn 400] (gas: 1)\n 20441: jump @816 if a1 <u a0\n      : @815 (gas: 1)\n 20444: jump @1253\n      : @816 (gas: 6)\n 20447: a0 = s1 + 0x4000\n 20451: i32 a0 = a0 + 0xfffffffffffffce0\n 20455: a1 = 0x4\n 20458: ra = 0x322\n 20462: ecalli 4 // 'call_data_load'\n 20464: fallthrough\n      : @817 [@dyn 401] (gas: 4)\n 20465: a4 = s1 + 0x38b8\n 20469: a1 = u64 [a4 + 0x438]\n 20473: a0 = u64 [a4 + 0x440]\n 20477: t0 = 804, jump @2016\n      : @818 [@dyn 402] (gas: 1)\n 20484: jump @820 if a3 != 0\n      : @819 (gas: 1)\n 20487: jump @1254\n      : @820 (gas: 11)\n 20490: a2 = u64 [a4 + 0x430]\n 20494: a3 = u64 [a4 + 0x428]\n 20498: a4 = s1 + 0x18b8\n 20502: a5 = a4 + 0x400\n 20506: u64 [a5 + 0xe8] = a3\n 20510: u64 [a5 + 0xf0] = a2\n 20514: u64 [a5 + 0xf8] = a1\n 20518: a1 = s1 + 0x1da0\n 20522: u64 [a4 + 0x500] = a0\n 20526: a0 = 0\n 20528: ra = 806, jump @19\n      : @821 [@dyn 403] (gas: 2)\n 20534: a1 = s1 + 0x18b8\n 20538: t0 = 808, jump @2031\n      : @822 [@dyn 404] (gas: 3)\n 20545: a1 = s1 + 0x1d80\n 20549: u64 [a2 + 1232] = 0\n 20553: ra = 810, jump @19\n      : @823 [@dyn 405] (gas: 2)\n 20559: a1 = i32 [0x2025c]\n 20564: jump @825 if a1 >u 63\n      : @824 (gas: 4)\n 20568: a1 = 0x40\n 20571: u32 [0x2025c] = a1\n 20576: t0 = 0x32c\n 20580: jump @1975\n      : @825 (gas: 1)\n 20584: t0 = 812, jump @1975\n      : @826 [@dyn 406] (gas: 8)\n 20591: a0 = 0x20270\n 20596: i32 a0 = a0 + 0\n 20598: i32 a2 = a2 + 0\n 20600: a1 = 0x40\n 20603: ra = 0x32e\n 20607: ecalli 9 // 'hash_keccak_256'\n 20609: t0 = 0x330\n 20613: jump @2002\n      : @827 [@dyn 407] (gas: 1)\n 20617: t0 = 816, jump @2002\n      : @828 [@dyn 408] (gas: 10)\n 20624: i32 a4 = a4 + 0xfffffffffffff8b8\n 20628: a4 = a4 + s1\n 20631: a5 = a4 + 0x400\n 20635: u64 [a5 + 0x60] = a3\n 20638: u64 [a5 + 0x58] = a2\n 20641: u64 [a5 + 0x50] = a1\n 20644: u64 [a5 + 0x48] = a0\n 20647: a0 = s1 + 0x1d60\n 20651: a1 = s1 + 0x3d00\n 20655: ra = 818, jump @21\n      : @829 [@dyn 409] (gas: 2)\n 20661: a0 = 0x2000\n 20665: t0 = 820, jump @1997\n      : @830 [@dyn 410] (gas: 3)\n 20672: a0 = s1 + 0x1d40\n 20676: a1 = 0x40\n 20679: ra = 822, jump @17\n      : @831 [@dyn 411] (gas: 7)\n 20685: a3 = s1 + 0x18b8\n 20689: a5 = a3 + 0x400\n 20693: a0 = u64 [a5 + 0xa0]\n 20697: a1 = u64 [a5 + 0x98]\n 20701: a2 = u64 [a5 + 0x90]\n 20705: a4 = u64 [a5 + 0x88]\n 20709: t0 = 824, jump @1986\n      : @832 [@dyn 412] (gas: 1)\n 20716: jump @834 if a0 == 0\n      : @833 (gas: 1)\n 20719: jump @1123\n      : @834 (gas: 1)\n 20722: t0 = 826, jump @2030\n      : @835 [@dyn 413] (gas: 2)\n 20729: a0 = 0x2000\n 20733: fallthrough\n      : @836 (gas: 7)\n 20734: i32 a0 = a0 + 0xfffffffffffffd20\n 20738: a1 = s1 + a0\n 20741: a0 = u64 [s1 + 0x138]\n 20745: u64 [a3 + 0x480] = a0\n 20749: a0 = a4\n 20751: u64 [s1 + 0x138] = a4\n 20755: ra = 828, jump @19\n      : @837 [@dyn 414] (gas: 3)\n 20761: a1 = 0x20\n 20764: a0 = u64 [s1 + 0x138]\n 20768: ra = 830, jump @32\n      : @838 [@dyn 415] (gas: 3)\n 20774: i32 a1 = a0 + 0\n 20776: a2 = 0x20\n 20779: jump @840\n      : @839 (gas: 6)\n 20781: a2 = 0x20\n 20784: a0 = 0\n 20786: ra = 0x340\n 20790: ecalli 14 // 'seal_return'\n 20792: t0 = 0x342\n 20796: jump @1994\n      : @840 (gas: 5)\n 20800: a0 = 0\n 20802: ra = 0x340\n 20806: ecalli 14 // 'seal_return'\n 20808: t0 = 0x342\n 20812: jump @1994\n      : @841 [@dyn 416] (gas: 1)\n 20816: t0 = 834, jump @1994\n      : @842 [@dyn 417] (gas: 1)\n 20823: jump @844 if a1 <u a0\n      : @843 (gas: 1)\n 20826: jump @1255\n      : @844 (gas: 21)\n 20829: a0 = s1 + 0x4000\n 20833: i32 a0 = a0 + 0xfffffffffffffde0\n 20837: a1 = 0x4\n 20840: ecalli 4 // 'call_data_load'\n 20842: a1 = s1 + 0x38b8\n 20846: a2 = a1 + 0x500\n 20850: a0 = u64 [a2 + 0x40]\n 20853: u64 [s1 + 0x138] = a0\n 20857: a0 = u64 [a2 + 0x38]\n 20860: u64 [s1 + 0x130] = a0\n 20864: a0 = u64 [a2 + 0x30]\n 20867: u64 [s1 + 0x128] = a0\n 20871: a0 = u64 [a2 + 0x28]\n 20874: u64 [s1 + 0x120] = a0\n 20878: u64 [a1 + 1376] = 0\n 20882: u64 [a1 + 1368] = 0\n 20886: u64 [a1 + 1360] = 0\n 20890: u64 [a2 + 72] = 0x8\n 20894: a0 = s1 + 0x26e0\n 20898: a1 = s1 + 0x3e00\n 20902: ra = 836, jump @21\n      : @845 [@dyn 418] (gas: 11)\n 20908: a1 = s1 + 0x20b8\n 20912: a0 = u8 [a1 + 0x63c]\n 20916: a0 = a0 <u 0x1\n 20919: u64 [a1 + 1568] = 0\n 20923: u64 [a1 + 1560] = 0\n 20927: u64 [a1 + 0x608] = a0\n 20931: a0 = s1 + 0x26c0\n 20935: u64 [a1 + 1552] = 0\n 20939: ra = 0x346\n 20943: t0 = 0x58e\n 20947: jump @1953\n      : @846 [@dyn 419] (gas: 8)\n 20951: a0 = s1 + 0x38b8\n 20955: u64 [a0 + 1408] = 0\n 20959: u64 [a0 + 1400] = 0\n 20963: u64 [a0 + 1392] = 0\n 20967: u64 [a0 + 1384] = 0x9\n 20972: a0 = s1 + 0x26a0\n 20976: a1 = s1 + 0x3e20\n 20980: ra = 840, jump @21\n      : @847 [@dyn 420] (gas: 7)\n 20986: a4 = s1 + 0x20b8\n 20990: a0 = u64 [a4 + 0x600]\n 20994: a5 = a4 + 0x500\n 20998: a1 = u64 [a5 + 0xf0]\n 21002: a2 = u64 [a5 + 0xe8]\n 21006: a3 = u64 [a5 + 0xf8]\n 21010: t0 = 842, jump @2011\n      : @848 [@dyn 421] (gas: 8)\n 21017: u64 [a4 + 1504] = 0\n 21021: u64 [a4 + 1496] = 0\n 21025: u64 [a5 + 0xc8] = a0\n 21029: a0 = s1 + 0x2680\n 21033: u64 [a4 + 1488] = 0\n 21037: ra = 0x34c\n 21041: t0 = 0x5b0\n 21045: jump @1953\n      : @849 [@dyn 422] (gas: 2)\n 21049: a0 = 0x38b8\n 21053: t0 = 846, jump @1993\n      : @850 [@dyn 423] (gas: 4)\n 21060: u64 [a1 + 1448] = 0x2\n 21065: a0 = s1 + 0x3e40\n 21069: a1 = s1 + 0x3e60\n 21073: ra = 848, jump @25\n      : @851 [@dyn 424] (gas: 8)\n 21079: a0 = s1 + 0x38b8\n 21083: u64 [a0 + 1504] = 0\n 21087: u64 [a0 + 1496] = 0\n 21091: u64 [a0 + 1488] = 0\n 21095: u64 [a0 + 1480] = 0\n 21099: a0 = s1 + 0x2660\n 21103: a1 = s1 + 0x3e80\n 21107: ra = 850, jump @21\n      : @852 [@dyn 425] (gas: 19)\n 21113: a0 = s1 + 0x20b8\n 21117: a2 = a0 + 0x500\n 21121: a1 = u64 [a2 + 0xa8]\n 21125: u64 [s1 + 0x118] = a1\n 21129: a1 = u64 [a2 + 0xb8]\n 21133: u64 [s1 + 0x110] = a1\n 21137: a1 = u64 [a2 + 0xb0]\n 21141: u64 [s1 + 0x108] = a1\n 21145: a0 = u64 [a2 + 0xc0]\n 21149: u64 [s1 + 0x100] = a0\n 21153: a0 = s1 + 0x38b8\n 21157: u64 [a0 + 1536] = 0\n 21161: u64 [a0 + 1528] = 0\n 21165: u64 [a0 + 1520] = 0\n 21169: u64 [a0 + 1512] = 0\n 21173: a0 = s1 + 0x4000\n 21177: i32 a0 = a0 + 0xfffffffffffffea0\n 21181: ecalli 17 // 'value_transferred'\n 21183: fallthrough\n      : @853 (gas: 19)\n 21184: a3 = s1 + 0x38b8\n 21188: a0 = u64 [a3 + 0x600]\n 21192: a4 = a3 + 0x500\n 21196: a1 = u64 [a4 + 0xf0]\n 21200: a2 = u64 [a4 + 0xe8]\n 21204: a3 = u64 [a4 + 0xf8]\n 21208: a4 = s1 + 0x100\n 21212: a5 = u64 [a4]\n 21214: a0 = a0 ^ a5\n 21217: a5 = u64 [a4 + 0x8]\n 21220: a1 = a1 ^ a5\n 21223: a0 = a0 | a1\n 21226: a1 = u64 [a4 + 0x10]\n 21229: a1 = a1 ^ a3\n 21232: a3 = u64 [a4 + 0x18]\n 21235: a2 = a2 ^ a3\n 21238: a1 = a1 | a2\n 21241: a0 = a0 | a1\n 21244: jump @855 if a0 == 0\n      : @854 (gas: 1)\n 21247: jump @981\n      : @855 (gas: 18)\n 21250: a3 = s1 + 0x100\n 21254: a0 = u64 [a3 + 0x20]\n 21257: a0 = a0 <u 0x10\n 21260: a1 = u64 [a3 + 0x28]\n 21263: a0 = 0 if a1 != 0\n 21265: a1 = u64 [a3 + 0x38]\n 21268: a2 = u64 [a3 + 0x30]\n 21271: a1 = a1 | a2\n 21274: a0 = 0 if a1 != 0\n 21276: a1 = s1 + 0x20b8\n 21280: u64 [a1 + 1280] = 0\n 21284: u64 [a1 + 1272] = 0\n 21288: u64 [a1 + 0x4e8] = a0\n 21292: a0 = s1 + 0x25a0\n 21296: u64 [a1 + 1264] = 0\n 21300: ra = 0x354\n 21304: t0 = 0x60c\n 21308: jump @1953\n      : @856 [@dyn 426] (gas: 8)\n 21311: a1 = s1 + 0x38b8\n 21315: u64 [a1 + 1568] = 0\n 21319: u64 [a1 + 1560] = 0\n 21323: u64 [a1 + 1552] = 0\n 21327: u64 [a1 + 1544] = 0x4\n 21332: a0 = s1 + 0x2580\n 21336: a1 = s1 + 0x3ec0\n 21340: ra = 854, jump @21\n      : @857 [@dyn 427] (gas: 3)\n 21346: t0 = 0x358\n 21350: a4 = s1 + 0x20b8\n 21354: fallthrough\n      : @858 [@dyn 428] (gas: 12)\n 21355: a5 = a4 + 0x400\n 21359: a0 = u64 [a5 + 0xc8]\n 21363: a1 = u64 [a5 + 0xd0]\n 21367: a2 = u64 [a5 + 0xd8]\n 21371: a3 = u64 [a5 + 0xe0]\n 21375: u64 [a5 + 0xc0] = a3\n 21379: u64 [a5 + 0xb8] = a2\n 21383: u64 [a5 + 0xb0] = a1\n 21387: a1 = s1 + 0x2560\n 21391: u64 [a5 + 0xa8] = a0\n 21395: a0 = 0\n 21397: ra = 858, jump @19\n      : @859 [@dyn 429] (gas: 9)\n 21403: a1 = s1 + 0x20b8\n 21407: u64 [a1 + 1184] = 0\n 21411: u64 [a1 + 1176] = 0\n 21415: u64 [a1 + 1160] = 0x3\n 21420: a2 = a1\n 21422: a0 = 0x20\n 21425: a1 = s1 + 0x2540\n 21429: u64 [a2 + 1168] = 0\n 21433: ra = 860, jump @19\n      : @860 [@dyn 430] (gas: 3)\n 21439: a2 = 0x2025c\n 21444: a0 = i32 [0x2025c]\n 21449: jump @862 if a0 >u 63\n      : @861 (gas: 2)\n 21453: u32 [0x2025c] = 0x40\n 21459: fallthrough\n      : @862 (gas: 47)\n 21460: u64 [s1 + 0xc0] = a2\n 21464: a0 = sp + 0xffffffffffffffe0\n 21467: a2 = a0 & 0xffffffffffffffe0\n 21470: u64 [s1 + 0x118] = a2\n 21474: sp = a2\n 21476: a0 = 0x20270\n 21481: i32 a0 = a0 + 0\n 21483: i32 a2 = a2 + 0\n 21485: a1 = 0x40\n 21488: u64 [s1 + 0xc8] = a0\n 21492: ecalli 9 // 'hash_keccak_256'\n 21494: a3 = u64 [s1 + 0x118]\n 21498: a0 = u64 [a3 + 0x18]\n 21501: a1 = u64 [a3 + 0x10]\n 21504: a2 = u64 [a3 + 0x8]\n 21507: a3 = u64 [a3]\n 21509: t0 = reverse a0\n 21511: u64 [s1 + 0x100] = t0\n 21515: a5 = reverse a1\n 21517: u64 [s1 + 0x108] = a5\n 21521: a4 = reverse a2\n 21523: u64 [s1 + 0x118] = a4\n 21527: a2 = reverse a3\n 21529: u64 [s1 + 0x110] = a2\n 21533: a0 = sp + 0xffffffffffffffe0\n 21536: a0 = a0 & 0xffffffffffffffe0\n 21539: u64 [s1 + 0xf8] = a0\n 21543: sp = a0\n 21545: a1 = s1 + 0x20b8\n 21549: a0 = u64 [s1 + 0x138]\n 21553: a3 = a1 + 0x400\n 21557: u64 [a3 + 0x20] = a0\n 21560: a0 = u64 [s1 + 0x130]\n 21564: u64 [a3 + 0x18] = a0\n 21567: a0 = u64 [s1 + 0x128]\n 21571: u64 [a3 + 0x10] = a0\n 21574: a0 = u64 [s1 + 0x120]\n 21578: u64 [a3 + 0x8] = a0\n 21581: u64 [a3 + 0x40] = a2\n 21584: u64 [a3 + 0x38] = a4\n 21587: u64 [a3 + 0x30] = a5\n 21590: a3 = a1\n 21592: a0 = s1 + 0x2500\n 21596: a1 = s1 + 0x24e0\n 21600: a2 = s1 + 0x24c0\n 21604: u64 [a3 + 0x428] = t0\n 21608: ra = 862, jump @1467\n      : @863 [@dyn 431] (gas: 22)\n 21614: a3 = s1 + 0x20b8\n 21618: a4 = a3 + 0x400\n 21622: a0 = u64 [a4 + 0x80]\n 21626: u64 [s1 + 0xd8] = a0\n 21630: a0 = u64 [a4 + 0x78]\n 21633: u64 [s1 + 0xb8] = a0\n 21637: a0 = u64 [a4 + 0x70]\n 21640: u64 [s1 + 0xb0] = a0\n 21644: a0 = u64 [a4 + 0x68]\n 21647: u64 [s1 + 0xd0] = a0\n 21651: a0 = u64 [a4 + 0x58]\n 21654: a1 = u64 [a4 + 0x60]\n 21657: a2 = u64 [a4 + 0x48]\n 21660: a3 = u64 [a4 + 0x50]\n 21663: a4 = u64 [s1 + 0xf8]\n 21667: u64 [a4 + 0x10] = a0\n 21670: u64 [a4 + 0x18] = a1\n 21673: u64 [a4] = a2\n 21675: u64 [a4 + 0x8] = a3\n 21678: a1 = a4\n 21680: a0 = s1 + 0x24a0\n 21684: ra = 864, jump @21\n      : @864 [@dyn 432] (gas: 37)\n 21690: a2 = s1 + 0x20b8\n 21694: a3 = a2 + 0x300\n 21698: a1 = u64 [a3 + 0xe8]\n 21702: u64 [s1 + 0xf8] = a1\n 21706: a0 = u64 [a3 + 0xf0]\n 21710: u64 [s1 + 0xf0] = a0\n 21714: a0 = u64 [a3 + 0xf8]\n 21718: u64 [s1 + 0xe8] = a0\n 21722: a1 = u64 [a2 + 0x400]\n 21726: u64 [s1 + 0xe0] = a1\n 21730: t2 = u64 [s1 + 0xd0]\n 21734: a2 = t2 >> 0x3d\n 21737: a3 = u64 [s1 + 0xb0]\n 21741: a5 = a3 << 0x3\n 21744: t1 = a5 | a2\n 21747: a3 = a3 >> 0x3d\n 21750: a5 = u64 [s1 + 0xb8]\n 21754: a2 = a5 << 0x3\n 21757: t0 = a2 | a3\n 21760: a2 = a5 >> 0x3d\n 21763: a3 = u64 [s1 + 0xd8]\n 21767: a3 = a3 << 0x3\n 21770: a2 = a2 | a3\n 21773: t2 = t2 << 0x3\n 21776: u64 [s1 + 0xd8] = t2\n 21780: a3 = t1 >u 0\n 21782: a4 = t2 <u 0x100\n 21786: a5 = a4 ^ 0x1\n 21789: a5 = a3 if t1 != 0\n 21792: a4 = a2 >u 0\n 21794: a3 = t0 >u 0\n 21796: a3 = a4 if a2 != 0\n 21799: a2 = t0 | a2\n 21802: a5 = a3 if a2 != 0\n 21805: u64 [s1 + 0xb8] = a5\n 21809: i32 a2 = t2 + 0xffffffffffffff80\n 21812: ra = 866, jump @2038\n      : @865 [@dyn 433] (gas: 8)\n 21819: u64 [s1 + 0xb0] = a0\n 21823: u64 [s1 + 0xa8] = a1\n 21827: a0 = u64 [s1 + 0xd0]\n 21831: i32 a2 = a0 << 0x3\n 21834: u64 [s1 + 0xd0] = a2\n 21838: a0 = u64 [s1 + 0xf8]\n 21842: a1 = u64 [s1 + 0xf0]\n 21846: ra = 868, jump @2038\n      : @866 [@dyn 434] (gas: 7)\n 21853: u64 [s1 + 0xa0] = a0\n 21857: u64 [s1 + 0x98] = a1\n 21861: a1 = u64 [s1 + 0xd8]\n 21865: i32 a2 = 0x80 - a1\n 21869: a0 = u64 [s1 + 0xe8]\n 21873: a1 = u64 [s1 + 0xe0]\n 21877: ra = 870, jump @2043\n      : @867 [@dyn 435] (gas: 21)\n 21884: a3 = u64 [s1 + 0x98]\n 21888: a3 = a3 | a1\n 21891: a2 = u64 [s1 + 0xd8]\n 21895: a4 = a2 <u 0x80\n 21899: u64 [s1 + 0x98] = a4\n 21903: a1 = u64 [s1 + 0xa8]\n 21907: a3 = a1 if a4 == 0\n 21910: a1 = u64 [s1 + 0xf0]\n 21914: a3 = a1 if a2 == 0\n 21917: u64 [s1 + 0xf0] = a3\n 21921: a1 = u64 [s1 + 0xa0]\n 21925: a1 = a1 | a0\n 21928: a0 = u64 [s1 + 0xb0]\n 21932: a1 = a0 if a4 == 0\n 21935: a0 = u64 [s1 + 0xf8]\n 21939: a1 = a0 if a2 == 0\n 21942: u64 [s1 + 0xf8] = a1\n 21946: a0 = u64 [s1 + 0xe8]\n 21950: a1 = u64 [s1 + 0xe0]\n 21954: a2 = u64 [s1 + 0xd0]\n 21958: ra = 872, jump @2038\n      : @868 [@dyn 436] (gas: 20)\n 21965: a1 = u64 [s1 + 0x98]\n 21969: a0 = 0 if a1 == 0\n 21971: a0 = a0 << 0x20\n 21974: a0 = a0 >> 0x20\n 21977: a1 = u64 [s1 + 0xf8]\n 21981: a0 = a0 | a1\n 21984: a1 = u64 [s1 + 0xf0]\n 21988: a0 = a0 | a1\n 21991: a0 = a0 <u 0x1\n 21994: a1 = u64 [s1 + 0xb8]\n 21998: a0 = a0 | a1\n 22001: a1 = s1 + 0x20b8\n 22005: u64 [a1 + 992] = 0\n 22009: u64 [a1 + 984] = 0\n 22013: u64 [a1 + 0x3c8] = a0\n 22017: a0 = s1 + 0x2480\n 22021: u64 [a1 + 976] = 0\n 22025: ra = 0x36a\n 22029: t0 = 0x638\n 22033: jump @1953\n      : @869 [@dyn 437] (gas: 4)\n 22036: a5 = s1 + 0x100\n 22040: a1 = u64 [a5]\n 22042: a0 = a1 + 0x15\n 22045: t0 = 876, jump @1988\n      : @870 [@dyn 438] (gas: 8)\n 22052: a5 = a4 + 0x600\n 22056: u64 [a5 + 0x40] = a1\n 22059: u64 [a5 + 0x38] = a3\n 22062: u64 [a5 + 0x30] = a2\n 22065: u64 [a5 + 0x28] = a0\n 22068: a0 = s1 + 0x2460\n 22072: a1 = s1 + 0x3ee0\n 22076: ra = 878, jump @21\n      : @871 [@dyn 439] (gas: 3)\n 22082: a0 = s1 + 0x20b8\n 22086: a0 = u8 [a0 + 0x3a8]\n 22090: jump @873 if a0 == 0\n      : @872 (gas: 1)\n 22093: jump @1072\n      : @873 (gas: 29)\n 22096: a3 = s1 + 0x100\n 22100: a0 = u64 [a3]\n 22102: a1 = a0 + 0x10\n 22105: u64 [s1 + 0xe8] = a1\n 22109: a0 = a1 <u a0\n 22112: a1 = u64 [a3 + 0x8]\n 22115: a2 = a1 + a0\n 22118: u64 [s1 + 0xe0] = a2\n 22122: a1 = a2 <u a1\n 22125: a1 = a0 if a0 == 0\n 22128: a0 = u64 [a3 + 0x18]\n 22131: a1 = a1 + a0\n 22134: u64 [s1 + 0xd8] = a1\n 22138: a0 = a1 <u a0\n 22141: a1 = u64 [a3 + 0x10]\n 22144: a0 = a0 + a1\n 22147: u64 [s1 + 0xd0] = a0\n 22151: a0 = sp + 0xffffffffffffffe0\n 22154: a0 = a0 & 0xffffffffffffffe0\n 22157: u64 [s1 + 0xb8] = a0\n 22161: sp = a0\n 22163: a0 = 0x30270\n 22168: u64 [s1 + 0xf8] = a0\n 22172: i32 a0 = a0 + 0\n 22174: u64 [s1 + 0xf0] = a0\n 22178: ra = 0x370\n 22182: ecalli 6 // 'caller'\n 22184: t0 = 0x372\n 22188: jump @1967\n      : @874 [@dyn 440] (gas: 1)\n 22191: t0 = 882, jump @1967\n      : @875 [@dyn 441] (gas: 8)\n 22197: u64 [a2 + 768] = 0\n 22201: a4 = a2 + 0x200\n 22205: u64 [a4 + 0xf8] = a1\n 22209: u64 [a4 + 0xf0] = a0\n 22213: a1 = s1 + 0x23a0\n 22217: u64 [a4 + 0xe8] = a3\n 22221: a0 = 0\n 22223: ra = 884, jump @19\n      : @876 [@dyn 442] (gas: 14)\n 22229: a0 = u64 [s1 + 0xd0]\n 22233: a1 = s1 + 0x20b8\n 22237: a2 = a1 + 0x200\n 22241: u64 [a2 + 0xe0] = a0\n 22245: a0 = u64 [s1 + 0xd8]\n 22249: u64 [a2 + 0xd8] = a0\n 22253: a0 = u64 [s1 + 0xe0]\n 22257: u64 [a2 + 0xd0] = a0\n 22261: a3 = a1\n 22263: a0 = 0x20\n 22266: a1 = s1 + 0x2380\n 22270: a2 = u64 [s1 + 0xe8]\n 22274: u64 [a3 + 0x2c8] = a2\n 22278: ra = 886, jump @19\n      : @877 [@dyn 443] (gas: 3)\n 22284: a1 = u64 [s1 + 0xc0]\n 22288: a0 = i32 [a1]\n 22290: jump @879 if a0 >u 63\n      : @878 (gas: 2)\n 22294: u32 [a1 + 0] = 0x40\n 22297: fallthrough\n      : @879 (gas: 4)\n 22298: a0 = sp + 0xffffffffffffffe0\n 22301: a0 = a0 & 0xffffffffffffffe0\n 22304: u64 [s1 + 0xb0] = a0\n 22308: t0 = 888, jump @2033\n      : @880 [@dyn 444] (gas: 5)\n 22315: ra = 0x37a\n 22319: ecalli 9 // 'hash_keccak_256'\n 22321: a3 = u64 [s1 + 0xb0]\n 22325: t0 = 0x37c\n 22329: jump @1972\n      : @881 [@dyn 445] (gas: 2)\n 22332: a3 = u64 [s1 + 0xb0]\n 22336: t0 = 892, jump @1972\n      : @882 [@dyn 446] (gas: 3)\n 22342: i32 a0 = a0 + 0x360\n 22346: a0 = a0 + s1\n 22349: ra = 894, jump @21\n      : @883 [@dyn 447] (gas: 2)\n 22355: a0 = 0x2000\n 22359: t0 = 896, jump @2015\n      : @884 [@dyn 448] (gas: 16)\n 22366: a0 = u64 [a5 + 0xc0]\n 22370: a1 = u64 [a5 + 0xb8]\n 22374: a2 = u64 [a5 + 0xa8]\n 22378: a3 = u64 [a5 + 0xb0]\n 22382: a0 = a0 | a1\n 22385: a1 = a2 <u 0x8\n 22388: a1 = 0 if a3 != 0\n 22390: a1 = 0 if a0 != 0\n 22392: u64 [a4 + 672] = 0\n 22396: u64 [a4 + 664] = 0\n 22400: u64 [a5 + 0x88] = a1\n 22404: a0 = s1 + 0x2340\n 22408: u64 [a4 + 656] = 0\n 22412: ra = 0x382\n 22416: t0 = 0x5e2\n 22420: jump @1953\n      : @885 [@dyn 449] (gas: 24)\n 22423: a5 = s1 + 0x100\n 22427: a0 = u64 [a5 + 0x38]\n 22430: a1 = s1 + 0x20b8\n 22434: a2 = a1 + 0x200\n 22438: u64 [a2 + 0x20] = a0\n 22441: a0 = u64 [a5 + 0x30]\n 22444: u64 [a2 + 0x18] = a0\n 22447: a0 = u64 [a5 + 0x28]\n 22450: u64 [a2 + 0x10] = a0\n 22453: a0 = u64 [a5 + 0x20]\n 22456: u64 [a2 + 0x8] = a0\n 22459: a0 = u64 [a5 + 0x10]\n 22462: u64 [a2 + 0x40] = a0\n 22465: a0 = u64 [a5 + 0x18]\n 22468: u64 [a2 + 0x38] = a0\n 22471: a0 = u64 [a5 + 0x8]\n 22474: u64 [a2 + 0x30] = a0\n 22477: a4 = a1\n 22479: a0 = s1 + 0x2300\n 22483: a1 = s1 + 0x22e0\n 22487: a2 = s1 + 0x22c0\n 22491: a3 = u64 [a5]\n 22493: u64 [a4 + 0x228] = a3\n 22497: ra = 900, jump @1467\n      : @886 [@dyn 450] (gas: 24)\n 22503: a0 = s1 + 0x20b8\n 22507: a2 = a0 + 0x200\n 22511: a1 = u64 [a2 + 0x48]\n 22514: u64 [s1 + 0xb8] = a1\n 22518: a1 = u64 [a2 + 0x50]\n 22521: u64 [s1 + 0xb0] = a1\n 22525: a1 = u64 [a2 + 0x58]\n 22528: u64 [s1 + 0xa8] = a1\n 22532: a1 = u64 [a2 + 0x60]\n 22535: u64 [s1 + 0xa0] = a1\n 22539: a1 = u64 [a2 + 0x68]\n 22542: u64 [s1 + 0x98] = a1\n 22546: a1 = u64 [a2 + 0x70]\n 22549: u64 [s1 + 0x90] = a1\n 22553: a1 = u64 [a2 + 0x78]\n 22556: u64 [s1 + 0x88] = a1\n 22560: a1 = u64 [a2 + 0x80]\n 22564: u64 [s1 + 0x80] = a1\n 22568: a0 = u64 [s1 + 0xf0]\n 22572: ra = 0x386\n 22576: ecalli 6 // 'caller'\n 22578: a2 = u64 [s1 + 0xf8]\n 22582: t0 = 0x388\n 22586: jump @2020\n      : @887 [@dyn 451] (gas: 2)\n 22590: a2 = u64 [s1 + 0xf8]\n 22594: t0 = 904, jump @2020\n      : @888 [@dyn 452] (gas: 31)\n 22601: a0 = a0 >> 0x20\n 22604: a2 = reverse a2\n 22606: a3 = a2 << 0x20\n 22609: a0 = a0 | a3\n 22612: a2 = a2 >> 0x20\n 22615: a3 = s1 + 0x20b8\n 22619: a4 = u64 [s1 + 0x80]\n 22623: a5 = a3 + 0x100\n 22627: u64 [a5 + 0xe0] = a4\n 22631: a4 = u64 [s1 + 0x88]\n 22635: u64 [a5 + 0xd8] = a4\n 22639: a4 = u64 [s1 + 0x90]\n 22643: u64 [a5 + 0xd0] = a4\n 22647: a4 = u64 [s1 + 0x98]\n 22651: u64 [a5 + 0xc8] = a4\n 22655: a4 = u64 [s1 + 0xa0]\n 22659: u64 [a3 + 0x200] = a4\n 22663: a4 = u64 [s1 + 0xa8]\n 22667: u64 [a5 + 0xf8] = a4\n 22671: a4 = u64 [s1 + 0xb0]\n 22675: u64 [a5 + 0xf0] = a4\n 22679: a4 = u64 [s1 + 0xb8]\n 22683: u64 [a5 + 0xe8] = a4\n 22687: u64 [a5 + 0xb8] = a2\n 22691: u64 [a5 + 0xb0] = a0\n 22695: u64 [a5 + 0xa8] = a1\n 22699: a0 = s1 + 0x22a0\n 22703: a1 = s1 + 0x2280\n 22707: a2 = s1 + 0x2260\n 22711: u64 [a3 + 448] = 0\n 22715: ra = 906, jump @1499\n      : @889 [@dyn 453] (gas: 9)\n 22721: a0 = sp + 0xffffffffffffffe0\n 22724: a0 = a0 & 0xffffffffffffffe0\n 22727: u64 [s1 + 0xb8] = a0\n 22731: sp = a0\n 22733: a0 = u64 [s1 + 0xf0]\n 22737: ra = 0x38c\n 22741: ecalli 6 // 'caller'\n 22743: t0 = 0x38e\n 22747: jump @1967\n      : @890 [@dyn 454] (gas: 1)\n 22750: t0 = 910, jump @1967\n      : @891 [@dyn 455] (gas: 8)\n 22756: u64 [a2 + 416] = 0\n 22760: a4 = a2 + 0x100\n 22764: u64 [a4 + 0x98] = a1\n 22768: u64 [a4 + 0x90] = a0\n 22772: a1 = s1 + 0x2240\n 22776: u64 [a4 + 0x88] = a3\n 22780: a0 = 0\n 22782: ra = 912, jump @19\n      : @892 [@dyn 456] (gas: 14)\n 22788: a0 = u64 [s1 + 0xd0]\n 22792: a1 = s1 + 0x20b8\n 22796: a2 = a1 + 0x100\n 22800: u64 [a2 + 0x80] = a0\n 22804: a0 = u64 [s1 + 0xd8]\n 22808: u64 [a2 + 0x78] = a0\n 22811: a0 = u64 [s1 + 0xe0]\n 22815: u64 [a2 + 0x70] = a0\n 22818: a3 = a1\n 22820: a0 = 0x20\n 22823: a1 = s1 + 0x2220\n 22827: a2 = u64 [s1 + 0xe8]\n 22831: u64 [a3 + 0x168] = a2\n 22835: ra = 914, jump @19\n      : @893 [@dyn 457] (gas: 3)\n 22841: a1 = u64 [s1 + 0xc0]\n 22845: a0 = i32 [a1]\n 22847: jump @895 if a0 >u 63\n      : @894 (gas: 2)\n 22851: u32 [a1 + 0] = 0x40\n 22854: fallthrough\n      : @895 (gas: 4)\n 22855: a0 = sp + 0xffffffffffffffe0\n 22858: a0 = a0 & 0xffffffffffffffe0\n 22861: u64 [s1 + 0xb0] = a0\n 22865: t0 = 916, jump @2033\n      : @896 [@dyn 458] (gas: 5)\n 22872: ra = 0x396\n 22876: ecalli 9 // 'hash_keccak_256'\n 22878: a3 = u64 [s1 + 0xb0]\n 22882: t0 = 0x398\n 22886: jump @1972\n      : @897 [@dyn 459] (gas: 2)\n 22889: a3 = u64 [s1 + 0xb0]\n 22893: t0 = 920, jump @1972\n      : @898 [@dyn 460] (gas: 3)\n 22899: i32 a0 = a0 + 0x200\n 22903: a0 = a0 + s1\n 22906: ra = 922, jump @21\n      : @899 [@dyn 461] (gas: 13)\n 22912: a4 = s1 + 0x20b8\n 22916: a5 = a4 + 0x100\n 22920: a2 = u64 [a5 + 0x48]\n 22923: a0 = u64 [a5 + 0x50]\n 22926: a1 = u64 [a5 + 0x58]\n 22929: a3 = u64 [a5 + 0x60]\n 22932: u64 [a5 + 0x20] = a3\n 22935: u64 [a5 + 0x18] = a1\n 22938: u64 [a5 + 0x10] = a0\n 22941: a0 = s1 + 0x21e0\n 22945: a1 = s1 + 0x21c0\n 22949: u64 [a5 + 0x8] = a2\n 22952: ra = 924, jump @1511\n      : @900 [@dyn 462] (gas: 2)\n 22958: a0 = 0x2000\n 22962: t0 = 926, jump @2014\n      : @901 [@dyn 463] (gas: 13)\n 22969: a0 = u64 [a4 + 0x40]\n 22972: a1 = u64 [a4 + 0x38]\n 22975: a2 = u64 [a4 + 0x30]\n 22978: a3 = u64 [a4 + 0x28]\n 22981: a4 = s1 + 0x38b8\n 22985: a5 = a4 + 0x600\n 22989: u64 [a5 + 0x60] = a0\n 22992: u64 [a5 + 0x58] = a1\n 22995: u64 [a5 + 0x50] = a2\n 22998: u64 [a5 + 0x48] = a3\n 23001: a1 = s1 + 0x3f00\n 23005: a0 = u64 [s1 + 0xb8]\n 23009: ra = 928, jump @25\n      : @902 [@dyn 464] (gas: 6)\n 23015: a0 = sp + 0xffffffffffffffe0\n 23018: a5 = a0 & 0xffffffffffffffe0\n 23021: sp = a5\n 23023: a1 = u64 [s1 + 0x100]\n 23027: a0 = a1 + 0x11\n 23030: t0 = 930, jump @2004\n      : @903 [@dyn 465] (gas: 10)\n 23037: a4 = u64 [s1 + 0x110]\n 23041: a4 = a4 + a1\n 23044: a1 = a5\n 23046: u64 [s1 + 0xb0] = a5\n 23050: u64 [a5 + 0x18] = a4\n 23053: u64 [a5 + 0x10] = a3\n 23056: u64 [a5 + 0x8] = a2\n 23059: u64 [a5] = a0\n 23061: a0 = s1 + 0x21a0\n 23065: ra = 932, jump @21\n      : @904 [@dyn 466] (gas: 12)\n 23071: a4 = s1 + 0x20b8\n 23075: a2 = u64 [a4 + 0xe8]\n 23079: a0 = u64 [a4 + 0xf0]\n 23083: a1 = u64 [a4 + 0xf8]\n 23087: a3 = u64 [a4 + 0x100]\n 23091: u64 [a4 + 0xc0] = a3\n 23095: u64 [a4 + 0xb8] = a1\n 23099: u64 [a4 + 0xb0] = a0\n 23103: a0 = s1 + 0x2180\n 23107: a1 = s1 + 0x2160\n 23111: u64 [a4 + 0xa8] = a2\n 23115: ra = 934, jump @1511\n      : @905 [@dyn 467] (gas: 14)\n 23121: a3 = s1 + 0x20b8\n 23125: a0 = u64 [a3 + 0xe0]\n 23129: a1 = u64 [a3 + 0xd8]\n 23133: a2 = u64 [a3 + 0xd0]\n 23137: a3 = u64 [a3 + 0xc8]\n 23141: a4 = s1 + 0x38b8\n 23145: a5 = a4 + 0x600\n 23149: u64 [a5 + 0x80] = a0\n 23153: u64 [a5 + 0x78] = a1\n 23156: u64 [a5 + 0x70] = a2\n 23159: u64 [a5 + 0x68] = a3\n 23162: a1 = s1 + 0x3f20\n 23166: a0 = u64 [s1 + 0xb0]\n 23170: ra = 936, jump @25\n      : @906 [@dyn 468] (gas: 7)\n 23176: a0 = sp + 0xffffffffffffffe0\n 23179: a4 = a0 & 0xffffffffffffffe0\n 23182: u64 [s1 + 0xb8] = a4\n 23186: sp = a4\n 23188: a1 = u64 [s1 + 0x100]\n 23192: a0 = a1 + 0x12\n 23195: t0 = 938, jump @2004\n      : @907 [@dyn 469] (gas: 27)\n 23201: a5 = u64 [s1 + 0x110]\n 23205: a1 = a1 + a5\n 23208: u64 [a4 + 0x18] = a1\n 23211: u64 [a4 + 0x10] = a3\n 23214: u64 [a4 + 0x8] = a2\n 23217: u64 [a4] = a0\n 23219: a0 = s1 + 0x38b8\n 23223: u64 [a0 + 1696] = 0\n 23227: u64 [a0 + 1688] = 0\n 23231: u64 [a0 + 1680] = 0\n 23235: u64 [a0 + 1672] = 0\n 23239: a0 = s1 + 0x4000\n 23243: i32 a0 = a0 + 0xffffffffffffff40\n 23247: ecalli 17 // 'value_transferred'\n 23249: a0 = s1 + 0x38b8\n 23253: a2 = a0 + 0x600\n 23257: a1 = u64 [a2 + 0x88]\n 23261: u64 [s1 + 0xa8] = a1\n 23265: a1 = u64 [a2 + 0x90]\n 23269: u64 [s1 + 0xa0] = a1\n 23273: a1 = u64 [a2 + 0x98]\n 23277: u64 [s1 + 0x98] = a1\n 23281: a0 = u64 [a2 + 0xa0]\n 23285: u64 [s1 + 0x90] = a0\n 23289: a0 = s1 + 0x2140\n 23293: a1 = u64 [s1 + 0xb8]\n 23297: ra = 940, jump @21\n      : @908 [@dyn 470] (gas: 21)\n 23303: a4 = s1 + 0x20b8\n 23307: a3 = u64 [a4 + 0x88]\n 23311: a0 = u64 [a4 + 0x90]\n 23315: a1 = u64 [a4 + 0x98]\n 23319: a2 = u64 [a4 + 0xa0]\n 23323: a5 = u64 [s1 + 0x90]\n 23327: u64 [a4 + 0x40] = a5\n 23330: a5 = u64 [s1 + 0x98]\n 23334: u64 [a4 + 0x38] = a5\n 23337: a5 = u64 [s1 + 0xa0]\n 23341: u64 [a4 + 0x30] = a5\n 23344: a5 = u64 [s1 + 0xa8]\n 23348: u64 [a4 + 0x28] = a5\n 23351: u64 [a4 + 0x60] = a2\n 23354: u64 [a4 + 0x58] = a1\n 23357: u64 [a4 + 0x50] = a0\n 23360: a0 = s1 + 0x2120\n 23364: a1 = s1 + 0x2100\n 23368: a2 = s1 + 0x20e0\n 23372: u64 [a4 + 0x48] = a3\n 23375: ra = 942, jump @1403\n      : @909 [@dyn 471] (gas: 14)\n 23381: a3 = s1 + 0x20b8\n 23385: a0 = u64 [a3 + 0x80]\n 23389: a1 = u64 [a3 + 0x78]\n 23392: a2 = u64 [a3 + 0x70]\n 23395: a3 = u64 [a3 + 0x68]\n 23398: a4 = s1 + 0x38b8\n 23402: a5 = a4 + 0x600\n 23406: u64 [a5 + 0xc0] = a0\n 23410: u64 [a5 + 0xb8] = a1\n 23414: u64 [a5 + 0xb0] = a2\n 23418: u64 [a5 + 0xa8] = a3\n 23422: a1 = s1 + 0x3f60\n 23426: a0 = u64 [s1 + 0xb8]\n 23430: ra = 944, jump @25\n      : @910 [@dyn 472] (gas: 9)\n 23436: a0 = sp + 0xffffffffffffffe0\n 23439: a0 = a0 & 0xffffffffffffffe0\n 23442: u64 [s1 + 0xb8] = a0\n 23446: sp = a0\n 23448: a0 = u64 [s1 + 0xf0]\n 23452: ra = 0x3b2\n 23456: ecalli 6 // 'caller'\n 23458: t0 = 0x3b4\n 23462: jump @1967\n      : @911 [@dyn 473] (gas: 1)\n 23465: t0 = 948, jump @1967\n      : @912 [@dyn 474] (gas: 7)\n 23471: u64 [a2 + 32] = 0\n 23474: u64 [a2 + 0x18] = a1\n 23477: u64 [a2 + 0x10] = a0\n 23480: a1 = s1 + 0x20c0\n 23484: u64 [a2 + 0x8] = a3\n 23487: a0 = 0\n 23489: ra = 950, jump @19\n      : @913 [@dyn 475] (gas: 13)\n 23495: a0 = u64 [s1 + 0xd0]\n 23499: a1 = s1 + 0x20b8\n 23503: u64 [a1] = a0\n 23505: a0 = u64 [s1 + 0xd8]\n 23509: u64 [a1 + 0xfffffffffffffff8] = a0\n 23512: a0 = u64 [s1 + 0xe0]\n 23516: u64 [a1 + 0xfffffffffffffff0] = a0\n 23519: a3 = a1\n 23521: a0 = 0x20\n 23524: a1 = s1 + 0x20a0\n 23528: a2 = u64 [s1 + 0xe8]\n 23532: u64 [a3 + 0xffffffffffffffe8] = a2\n 23535: ra = 952, jump @19\n      : @914 [@dyn 476] (gas: 3)\n 23541: a1 = u64 [s1 + 0xc0]\n 23545: a0 = i32 [a1]\n 23547: jump @916 if a0 >=u 64\n      : @915 (gas: 2)\n 23551: u32 [a1 + 0] = 0x40\n 23554: fallthrough\n      : @916 (gas: 4)\n 23555: a0 = sp + 0xffffffffffffffe0\n 23558: a0 = a0 & 0xffffffffffffffe0\n 23561: u64 [s1 + 0xe8] = a0\n 23565: t0 = 954, jump @2033\n      : @917 [@dyn 477] (gas: 5)\n 23572: ra = 0x3bc\n 23576: ecalli 9 // 'hash_keccak_256'\n 23578: a3 = u64 [s1 + 0xe8]\n 23582: t0 = 0x3be\n 23586: jump @1972\n      : @918 [@dyn 478] (gas: 2)\n 23589: a3 = u64 [s1 + 0xe8]\n 23593: t0 = 958, jump @1972\n      : @919 [@dyn 479] (gas: 3)\n 23599: i32 a0 = a0 + 0x80\n 23603: a0 = a0 + s1\n 23606: ra = 960, jump @21\n      : @920 [@dyn 480] (gas: 11)\n 23612: a3 = s1 + 0x18b8\n 23616: a4 = a3 + 0x700\n 23620: a0 = u64 [a4 + 0xe0]\n 23624: a1 = u64 [a4 + 0xd0]\n 23628: a2 = u64 [a4 + 0xc8]\n 23632: a3 = u64 [a4 + 0xd8]\n 23636: a0 = a0 | a1\n 23639: a1 = a2 ^ 0x1\n 23642: a1 = a1 | a3\n 23645: a0 = a0 | a1\n 23648: jump @932 if a0 != 0\n      : @921 (gas: 25)\n 23652: a0 = u64 [s1 + 0xf0]\n 23656: ecalli 6 // 'caller'\n 23658: a2 = u64 [s1 + 0xf8]\n 23662: a0 = u64 [a2 + 0x8]\n 23665: a1 = i32 [a2 + 0x10]\n 23668: a2 = u64 [a2]\n 23670: a0 = reverse a0\n 23672: a3 = a0 << 0x20\n 23675: a1 = reverse a1\n 23677: a1 = a1 >> 0x20\n 23680: a3 = a3 | a1\n 23683: a0 = a0 >> 0x20\n 23686: a1 = reverse a2\n 23688: a2 = a1 << 0x20\n 23691: a0 = a0 | a2\n 23694: a1 = a1 >> 0x20\n 23697: a2 = s1 + 0x18b8\n 23701: u64 [a2 + 1984] = 0\n 23705: a4 = a2 + 0x700\n 23709: u64 [a4 + 0xb8] = a1\n 23713: u64 [a4 + 0xb0] = a0\n 23717: a1 = s1 + 0x2060\n 23721: u64 [a4 + 0xa8] = a3\n 23725: a0 = 0\n 23727: ra = 962, jump @19\n      : @922 [@dyn 481] (gas: 3)\n 23733: t0 = 0x3c4\n 23737: a1 = s1 + 0x18b8\n 23741: fallthrough\n      : @923 [@dyn 482] (gas: 8)\n 23742: u64 [a1 + 1952] = 0\n 23746: u64 [a1 + 1944] = 0\n 23750: u64 [a1 + 1928] = 0x6\n 23755: a2 = a1\n 23757: a0 = 0x20\n 23760: a1 = s1 + 0x2040\n 23764: u64 [a2 + 1936] = 0\n 23768: ra = 966, jump @19\n      : @924 [@dyn 483] (gas: 7)\n 23774: a0 = sp + 0xffffffffffffffe0\n 23777: a0 = a0 & 0xffffffffffffffe0\n 23780: u64 [s1 + 0xe8] = a0\n 23784: sp = a0\n 23786: a2 = u64 [s1 + 0xc0]\n 23790: a0 = i32 [a2]\n 23792: jump @926 if a0 >u 63\n      : @925 (gas: 2)\n 23796: u32 [a2 + 0] = 0x40\n 23799: fallthrough\n      : @926 (gas: 4)\n 23800: a0 = sp + 0xffffffffffffffe0\n 23803: a0 = a0 & 0xffffffffffffffe0\n 23806: u64 [s1 + 0xe0] = a0\n 23810: t0 = 968, jump @2033\n      : @927 [@dyn 484] (gas: 5)\n 23816: ra = 0x3ca\n 23820: ecalli 9 // 'hash_keccak_256'\n 23822: a3 = u64 [s1 + 0xe0]\n 23826: t0 = 0x3cc\n 23830: jump @1974\n      : @928 [@dyn 485] (gas: 2)\n 23833: a3 = u64 [s1 + 0xe0]\n 23837: t0 = 972, jump @1974\n      : @929 [@dyn 486] (gas: 7)\n 23843: a1 = u64 [s1 + 0xe8]\n 23847: u64 [a1 + 0x18] = a3\n 23850: u64 [a1 + 0x10] = a2\n 23853: u64 [a1 + 0x8] = a4\n 23856: u64 [a1] = a0\n 23858: a0 = s1 + 0x2020\n 23862: ra = 974, jump @21\n      : @930 [@dyn 487] (gas: 13)\n 23868: a4 = s1 + 0x18b8\n 23872: a5 = a4 + 0x700\n 23876: a2 = u64 [a5 + 0x68]\n 23879: a0 = u64 [a5 + 0x70]\n 23882: a1 = u64 [a5 + 0x78]\n 23885: a3 = u64 [a5 + 0x80]\n 23889: u64 [a5 + 0x40] = a3\n 23892: u64 [a5 + 0x38] = a1\n 23895: u64 [a5 + 0x30] = a0\n 23898: a0 = s1 + 0x2000\n 23902: a1 = s1 + 0x1fe0\n 23906: u64 [a5 + 0x28] = a2\n 23909: ra = 976, jump @1511\n      : @931 [@dyn 488] (gas: 15)\n 23915: a3 = s1 + 0x18b8\n 23919: a4 = a3 + 0x700\n 23923: a0 = u64 [a4 + 0x60]\n 23926: a1 = u64 [a4 + 0x58]\n 23929: a2 = u64 [a4 + 0x50]\n 23932: a3 = u64 [a4 + 0x48]\n 23935: a4 = s1 + 0x38b8\n 23939: a5 = a4 + 0x600\n 23943: u64 [a5 + 0xe0] = a0\n 23947: u64 [a5 + 0xd8] = a1\n 23951: u64 [a5 + 0xd0] = a2\n 23955: u64 [a5 + 0xc8] = a3\n 23959: a1 = s1 + 0x3f80\n 23963: a0 = u64 [s1 + 0xe8]\n 23967: ra = 978, jump @25\n      : @932 [@dyn 489] (gas: 8)\n 23973: a1 = s1 + 0x38b8\n 23977: u64 [a1 + 1792] = 0\n 23981: u64 [a1 + 1784] = 0\n 23985: u64 [a1 + 1776] = 0\n 23989: u64 [a1 + 1768] = 0x4\n 23994: a0 = s1 + 0x1fc0\n 23998: a1 = s1 + 0x3fa0\n 24002: ra = 980, jump @21\n      : @933 [@dyn 490] (gas: 3)\n 24008: t0 = 0x3d6\n 24012: a1 = s1 + 0x18b8\n 24016: fallthrough\n      : @934 [@dyn 491] (gas: 12)\n 24017: a2 = a1 + 0x700\n 24021: a0 = u64 [a2 + 0x20]\n 24024: u64 [s1 + 0xd0] = a0\n 24028: a0 = u64 [a2 + 0x18]\n 24031: u64 [s1 + 0xd8] = a0\n 24035: a0 = u64 [a2 + 0x10]\n 24038: u64 [s1 + 0xe0] = a0\n 24042: a0 = u64 [a2 + 0x8]\n 24045: u64 [s1 + 0xe8] = a0\n 24049: a0 = s1 + 0x1fa0\n 24053: a1 = 0x40\n 24056: ra = 984, jump @17\n      : @935 [@dyn 492] (gas: 14)\n 24062: a4 = s1 + 0x18b8\n 24066: a0 = u64 [a4 + 0x700]\n 24070: a5 = a4 + 0x600\n 24074: a1 = u64 [a5 + 0xf8]\n 24078: a2 = u64 [a5 + 0xf0]\n 24082: a3 = u64 [a5 + 0xe8]\n 24086: a0 = a0 | a2\n 24089: a2 = a3 | a1\n 24092: a2 = a2 | a0\n 24095: a2 = a2 >> 0x20\n 24098: a0 = a0 | a1\n 24101: a0 = a0 << 0x20\n 24104: a0 = a0 | a2\n 24107: jump @937 if a0 == 0\n      : @936 (gas: 1)\n 24110: jump @1123\n      : @937 (gas: 13)\n 24113: a0 = u64 [s1 + 0x120]\n 24117: a2 = a4 + 0x600\n 24121: u64 [a2 + 0xc8] = a0\n 24125: a0 = u64 [s1 + 0x128]\n 24129: u64 [a2 + 0xd0] = a0\n 24133: a0 = u64 [s1 + 0x130]\n 24137: u64 [a2 + 0xd8] = a0\n 24141: a1 = s1 + 0x1f80\n 24145: a0 = u64 [s1 + 0x138]\n 24149: u64 [a2 + 0xe0] = a0\n 24153: a0 = a3\n 24155: u64 [s1 + 0x138] = a3\n 24159: ra = 986, jump @19\n      : @938 [@dyn 493] (gas: 6)\n 24165: a0 = u64 [s1 + 0xf0]\n 24169: ra = 0x3dc\n 24173: ecalli 6 // 'caller'\n 24175: a2 = u64 [s1 + 0xf8]\n 24179: t0 = 0x3de\n 24183: jump @2032\n      : @939 [@dyn 494] (gas: 2)\n 24186: a2 = u64 [s1 + 0xf8]\n 24190: t0 = 990, jump @2032\n      : @940 [@dyn 495] (gas: 35)\n 24196: t0 = a1 | a0\n 24199: a3 = a3 >> 0x20\n 24202: a2 = reverse a2\n 24204: a1 = a2 << 0x20\n 24207: t1 = a1 | a3\n 24210: a2 = a2 >> 0x20\n 24213: a1 = s1 + 0x18b8\n 24217: u64 [a1 + 1664] = 0\n 24221: a0 = u64 [s1 + 0xd0]\n 24225: u64 [a1 + 0x6a0] = a0\n 24229: a0 = u64 [s1 + 0xd8]\n 24233: u64 [a1 + 0x698] = a0\n 24237: a0 = u64 [s1 + 0xe0]\n 24241: u64 [a1 + 0x690] = a0\n 24245: a0 = u64 [s1 + 0xe8]\n 24249: u64 [a1 + 0x688] = a0\n 24253: a3 = u64 [0x20080]\n 24258: a4 = u64 [0x20088]\n 24263: a5 = u64 [0x20090]\n 24268: a0 = u64 [0x20098]\n 24273: u64 [a1 + 0x6c0] = a3\n 24277: a3 = a1 + 0x600\n 24281: u64 [a3 + 0xb8] = a4\n 24285: u64 [a3 + 0xb0] = a5\n 24289: u64 [a3 + 0xa8] = a0\n 24293: u64 [a3 + 0x78] = a2\n 24296: u64 [a1 + 0x670] = t1\n 24300: a0 = a1\n 24302: a1 = 0x20\n 24305: a2 = s1 + 0x1f60\n 24309: a3 = s1 + 0x1f40\n 24313: a4 = s1 + 0x1f20\n 24317: u64 [a0 + 0x668] = t0\n 24321: a0 = u64 [s1 + 0x138]\n 24325: ra = 992, jump @28\n      : @941 [@dyn 496] (gas: 3)\n 24331: a0 = s1 + 0x1f00\n 24335: a1 = u64 [s1 + 0xb0]\n 24339: ra = 994, jump @21\n      : @942 [@dyn 497] (gas: 11)\n 24345: a3 = s1 + 0x18b8\n 24349: a4 = a3 + 0x600\n 24353: a0 = u64 [a4 + 0x60]\n 24356: a1 = u64 [a4 + 0x50]\n 24359: a2 = u64 [a4 + 0x48]\n 24362: a3 = u64 [a4 + 0x58]\n 24365: a0 = a0 | a1\n 24368: a1 = a2 ^ 0x10\n 24371: a1 = a1 | a3\n 24374: a0 = a0 | a1\n 24377: jump @946 if a0 != 0\n      : @943 (gas: 5)\n 24380: a0 = s1 + 0x4000\n 24384: i32 a0 = a0 + 0xffffffffffffffc0\n 24387: ra = 0x3e4\n 24391: ecalli 1 // 'block_number'\n 24393: fallthrough\n      : @944 [@dyn 498] (gas: 4)\n 24394: a5 = s1 + 0x100\n 24398: a1 = u64 [a5]\n 24400: a0 = a1 + 0x13\n 24403: t0 = 998, jump @1988\n      : @945 [@dyn 499] (gas: 16)\n 24409: a5 = a4 + 0x700\n 24413: u64 [a5 + 0x28] = a0\n 24416: a0 = u64 [a5 + 0x10]\n 24419: u64 [a5 + 0x30] = a2\n 24422: a2 = u64 [a5 + 0x20]\n 24425: u64 [a5 + 0x38] = a3\n 24428: a3 = u64 [a5 + 0x18]\n 24431: u64 [a5 + 0x40] = a1\n 24434: a1 = u64 [a5 + 0x8]\n 24437: u64 [a5 + 0x60] = a2\n 24440: u64 [a5 + 0x58] = a3\n 24443: u64 [a5 + 0x50] = a0\n 24446: u64 [a5 + 0x48] = a1\n 24449: a0 = s1 + 0x3fe0\n 24453: a1 = s1 + 0x4000\n 24457: ra = 1000, jump @25\n      : @946 [@dyn 500] (gas: 12)\n 24463: a1 = s1 + 0x38b8\n 24467: u64 [a1 + 1920] = 0\n 24471: u64 [a1 + 1912] = 0\n 24475: u64 [a1 + 1904] = 0\n 24479: u64 [a1 + 1896] = 0x9\n 24484: u64 [a1 + 1952] = 0\n 24488: u64 [a1 + 1944] = 0\n 24492: u64 [a1 + 1936] = 0\n 24496: u64 [a1 + 1928] = 0x1\n 24501: a0 = s1 + 0x4020\n 24505: a1 = s1 + 0x4040\n 24509: ra = 1002, jump @25\n      : @947 [@dyn 501] (gas: 5)\n 24515: a0 = 0\n 24517: a1 = u64 [s1 + 0xc8]\n 24521: a2 = 0\n 24523: ecalli 14 // 'seal_return'\n 24525: jump @1174\n      : @948 (gas: 8)\n 24528: a3 = a0 | a5\n 24531: a1 = a4 | a2\n 24534: a3 = a3 | a1\n 24537: a3 = a3 >> 0x20\n 24540: a1 = a1 | a5\n 24543: a1 = a1 << 0x20\n 24546: a1 = a1 | a3\n 24549: jump @950 if a1 == 0\n      : @949 (gas: 1)\n 24552: jump @1123\n      : @950 (gas: 11)\n 24555: u64 [t0 + 1528] = 0\n 24559: u64 [t0 + 1520] = 0\n 24563: u64 [t0 + 1512] = 0\n 24567: a3 = 0x8c379a000000000\n 24577: a1 = s1 + 0x16a0\n 24581: u64 [t0 + 0x600] = a3\n 24585: u64 [s1 + 0x110] = a0\n 24589: u64 [s1 + 0x108] = a4\n 24593: u64 [s1 + 0x100] = a5\n 24597: u64 [s1 + 0xf8] = a2\n 24601: ra = 1004, jump @19\n      : @951 [@dyn 502] (gas: 12)\n 24607: a5 = s1 + 0x100\n 24611: a1 = u64 [a5 + 0x10]\n 24614: a0 = u64 [s1 + 0xf8]\n 24618: a3 = u64 [a5]\n 24620: a3 = a3 | a0\n 24623: a4 = 0x100000000\n 24633: a0 = 0xfffffffc\n 24643: a0 = a1 <u a0\n 24646: a2 = u64 [a5 + 0x8]\n 24649: a0 = 0 if a2 != 0\n 24651: a0 = 0 if a3 != 0\n 24653: jump @953 if a0 != 0\n      : @952 (gas: 1)\n 24656: jump @1123\n      : @953 (gas: 10)\n 24659: i32 a0 = a1 + 0x4\n 24662: a2 = s1 + 0x10b8\n 24666: u64 [a2 + 1504] = 0\n 24670: u64 [a2 + 1496] = 0\n 24674: u64 [a2 + 1480] = 0x20\n 24679: a1 = s1 + 0x1680\n 24683: u64 [a2 + 1488] = 0\n 24687: u64 [s1 + 0x138] = a3\n 24691: u64 [s1 + 0x130] = a4\n 24695: ra = 1006, jump @19\n      : @954 [@dyn 503] (gas: 6)\n 24701: a4 = s1 + 0x100\n 24705: a3 = u64 [a4 + 0x38]\n 24708: a2 = u64 [a4 + 0x8]\n 24711: a1 = u64 [a4 + 0x10]\n 24714: a0 = u64 [a4 + 0x30]\n 24717: t0 = 1008, jump @1964\n      : @955 [@dyn 504] (gas: 1)\n 24723: jump @957 if a0 != 0\n      : @956 (gas: 1)\n 24726: jump @1123\n      : @957 (gas: 8)\n 24729: i32 a0 = a1 + 0x24\n 24732: a3 = s1 + 0x10b8\n 24736: u64 [a3 + 1472] = 0\n 24740: u64 [a3 + 1464] = 0\n 24744: u64 [a3 + 1448] = 0x18\n 24749: a1 = s1 + 0x1660\n 24753: u64 [a3 + 1456] = 0\n 24757: ra = 1010, jump @19\n      : @958 [@dyn 505] (gas: 9)\n 24763: a2 = s1 + 0x100\n 24767: a4 = u64 [a2 + 0x10]\n 24770: a0 = 0xffffffbc\n 24780: a0 = a4 <u a0\n 24783: a1 = u64 [a2 + 0x8]\n 24786: a0 = 0 if a1 != 0\n 24788: a1 = u64 [a2 + 0x38]\n 24791: a0 = 0 if a1 != 0\n 24793: jump @960 if a0 != 0\n      : @959 (gas: 1)\n 24796: jump @1123\n      : @960 (gas: 12)\n 24799: i32 a0 = a4 + 0x44\n 24802: a1 = u64 [0x200b0]\n 24807: a2 = u64 [0x200b8]\n 24812: a3 = u64 [0x200c0]\n 24817: a5 = s1 + 0x10b8\n 24821: a4 = a5 + 0x500\n 24825: u64 [a4 + 0xa0] = a1\n 24829: u64 [a4 + 0x98] = a2\n 24833: u64 [a4 + 0x90] = a3\n 24837: a1 = s1 + 0x1640\n 24841: u64 [a5 + 1416] = 0\n 24845: ra = 1012, jump @19\n      : @961 [@dyn 506] (gas: 4)\n 24851: a1 = 0x64\n 24854: a0 = u64 [s1 + 0x110]\n 24858: ra = 0x406\n 24862: jump @32\n      : @962 (gas: 4)\n 24865: a0 = s1 + 0x7ff\n 24869: a0 = a0 + 0x781\n 24873: a1 = 0x40\n 24876: ra = 1014, jump @17\n      : @963 [@dyn 507] (gas: 15)\n 24882: a2 = s1 + 0x7ff\n 24886: a2 = a2 + 0xb9\n 24890: t0 = u64 [a2 + 0x6e0]\n 24894: a1 = a2 + 0x600\n 24898: a5 = u64 [a1 + 0xd8]\n 24902: a4 = u64 [a1 + 0xd0]\n 24906: a0 = u64 [a1 + 0xc8]\n 24910: a3 = a4 | t0\n 24913: a1 = a0 | a5\n 24916: a1 = a1 | a3\n 24919: a1 = a1 >> 0x20\n 24922: a3 = a3 | a5\n 24925: a3 = a3 << 0x20\n 24928: a1 = a1 | a3\n 24931: jump @965 if a1 == 0\n      : @964 (gas: 1)\n 24934: jump @1123\n      : @965 (gas: 12)\n 24937: u64 [a2 + 1720] = 0\n 24941: u64 [a2 + 1712] = 0\n 24945: u64 [a2 + 1704] = 0\n 24949: a3 = 0x8c379a000000000\n 24959: a1 = s1 + 0x7ff\n 24963: a1 = a1 + 0x761\n 24967: u64 [a2 + 0x6c0] = a3\n 24971: u64 [s1 + 0x138] = a0\n 24975: u64 [s1 + 0x130] = a4\n 24979: u64 [s1 + 0x120] = t0\n 24983: u64 [s1 + 0x128] = a5\n 24987: ra = 1016, jump @19\n      : @966 [@dyn 508] (gas: 6)\n 24993: a5 = s1 + 0x100\n 24997: a1 = u64 [a5 + 0x38]\n 25000: a0 = u64 [a5 + 0x28]\n 25003: a3 = u64 [a5 + 0x20]\n 25006: a3 = a3 | a0\n 25009: t0 = 1018, jump @1957\n      : @967 [@dyn 509] (gas: 1)\n 25015: jump @969 if a0 != 0\n      : @968 (gas: 1)\n 25018: jump @1123\n      : @969 (gas: 12)\n 25021: i32 a0 = a1 + 0x4\n 25024: a2 = s1 + 0x7ff\n 25028: a2 = a2 + 0xb9\n 25032: u64 [a2 + 1696] = 0\n 25036: u64 [a2 + 1688] = 0\n 25040: u64 [a2 + 1672] = 0x20\n 25045: a1 = s1 + 0x7ff\n 25049: a1 = a1 + 0x741\n 25053: u64 [a2 + 1680] = 0\n 25057: u64 [s1 + 0x128] = a3\n 25061: u64 [s1 + 0x120] = a4\n 25065: ra = 1020, jump @19\n      : @970 [@dyn 510] (gas: 1)\n 25071: t0 = 1022, jump @1955\n      : @971 [@dyn 511] (gas: 1)\n 25077: jump @973 if a0 != 0\n      : @972 (gas: 1)\n 25080: jump @1123\n      : @973 (gas: 10)\n 25083: i32 a0 = a1 + 0x24\n 25086: a3 = s1 + 0x7ff\n 25090: a3 = a3 + 0xb9\n 25094: u64 [a3 + 1664] = 0\n 25098: u64 [a3 + 1656] = 0\n 25102: u64 [a3 + 1640] = 0x13\n 25107: a1 = s1 + 0x7ff\n 25111: a1 = a1 + 0x721\n 25115: u64 [a3 + 1648] = 0\n 25119: ra = 1024, jump @19\n      : @974 [@dyn 512] (gas: 1)\n 25125: t0 = 1026, jump @1956\n      : @975 [@dyn 513] (gas: 1)\n 25131: jump @977 if a0 != 0\n      : @976 (gas: 1)\n 25134: jump @1123\n      : @977 (gas: 14)\n 25137: i32 a0 = a3 + 0x44\n 25140: a1 = u64 [0x20060]\n 25145: a2 = u64 [0x200e8]\n 25150: a4 = s1 + 0x7ff\n 25154: a4 = a4 + 0xb9\n 25158: a3 = a4 + 0x600\n 25162: u64 [a3 + 0x60] = a1\n 25165: u64 [a3 + 0x58] = a2\n 25168: a1 = 0x6665650000000000\n 25178: u64 [a3 + 0x50] = a1\n 25181: a1 = s1 + 0x7ff\n 25185: a1 = a1 + 0x701\n 25189: u64 [a4 + 1608] = 0\n 25193: ra = 1028, jump @19\n      : @978 [@dyn 514] (gas: 3)\n 25199: a1 = 0x64\n 25202: a0 = u64 [s1 + 0x138]\n 25206: ra = 1030, jump @32\n      : @979 [@dyn 515] (gas: 1)\n 25212: t0 = 1032, jump @1995\n      : @980 [@dyn 516] (gas: 2)\n 25218: ecalli 14 // 'seal_return'\n 25220: fallthrough\n      : @981 (gas: 3)\n 25221: a0 = s1 + 0x2640\n 25225: a1 = 0x40\n 25228: ra = 1034, jump @17\n      : @982 [@dyn 517] (gas: 14)\n 25234: a2 = s1 + 0x20b8\n 25238: t0 = u64 [a2 + 0x5a0]\n 25242: a1 = a2 + 0x500\n 25246: a5 = u64 [a1 + 0x98]\n 25250: a4 = u64 [a1 + 0x90]\n 25254: a0 = u64 [a1 + 0x88]\n 25258: a3 = a4 | t0\n 25261: a1 = a0 | a5\n 25264: a1 = a1 | a3\n 25267: a1 = a1 >> 0x20\n 25270: a3 = a3 | a5\n 25273: a3 = a3 << 0x20\n 25276: a1 = a1 | a3\n 25279: jump @984 if a1 == 0\n      : @983 (gas: 1)\n 25282: jump @1123\n      : @984 (gas: 11)\n 25285: u64 [a2 + 1400] = 0\n 25289: u64 [a2 + 1392] = 0\n 25293: u64 [a2 + 1384] = 0\n 25297: a3 = 0x8c379a000000000\n 25307: a1 = s1 + 0x2620\n 25311: u64 [a2 + 0x580] = a3\n 25315: u64 [s1 + 0x138] = a0\n 25319: u64 [s1 + 0x130] = a4\n 25323: u64 [s1 + 0x120] = t0\n 25327: u64 [s1 + 0x128] = a5\n 25331: ra = 1036, jump @19\n      : @985 [@dyn 518] (gas: 6)\n 25337: a5 = s1 + 0x100\n 25341: a1 = u64 [a5 + 0x38]\n 25344: a0 = u64 [a5 + 0x28]\n 25347: a3 = u64 [a5 + 0x20]\n 25350: a3 = a3 | a0\n 25353: t0 = 1038, jump @1957\n      : @986 [@dyn 519] (gas: 1)\n 25359: jump @988 if a0 != 0\n      : @987 (gas: 1)\n 25362: jump @1123\n      : @988 (gas: 1)\n 25365: t0 = 1040, jump @2028\n      : @989 [@dyn 520] (gas: 8)\n 25371: u64 [a2 + 1376] = 0\n 25375: u64 [a2 + 1368] = 0\n 25379: u64 [a2 + 1352] = 0x20\n 25384: a1 = s1 + 0x2600\n 25388: u64 [a2 + 1360] = 0\n 25392: u64 [s1 + 0x128] = a3\n 25396: u64 [s1 + 0x120] = a4\n 25400: ra = 1042, jump @19\n      : @990 [@dyn 521] (gas: 1)\n 25406: t0 = 1044, jump @1955\n      : @991 [@dyn 522] (gas: 1)\n 25412: jump @993 if a0 != 0\n      : @992 (gas: 1)\n 25415: jump @1123\n      : @993 (gas: 8)\n 25418: i32 a0 = a1 + 0x24\n 25421: a3 = s1 + 0x20b8\n 25425: u64 [a3 + 1344] = 0\n 25429: u64 [a3 + 1336] = 0\n 25433: u64 [a3 + 1320] = 0x13\n 25438: a1 = s1 + 0x25e0\n 25442: u64 [a3 + 1328] = 0\n 25446: ra = 1046, jump @19\n      : @994 [@dyn 523] (gas: 1)\n 25452: t0 = 1048, jump @1956\n      : @995 [@dyn 524] (gas: 1)\n 25458: jump @997 if a0 != 0\n      : @996 (gas: 1)\n 25461: jump @1123\n      : @997 (gas: 13)\n 25464: i32 a0 = a3 + 0x44\n 25467: a1 = u64 [0x20060]\n 25472: a2 = u64 [0x20068]\n 25477: a4 = s1 + 0x20b8\n 25481: a3 = a4 + 0x500\n 25485: u64 [a3 + 0x20] = a1\n 25488: u64 [a3 + 0x18] = a2\n 25491: a1 = 0x6665650000000000\n 25501: u64 [a3 + 0x10] = a1\n 25504: a1 = s1 + 0x25c0\n 25508: u64 [a4 + 1288] = 0\n 25512: ra = 0x404\n 25516: jump @19\n      : @998 (gas: 17)\n 25519: a2 = s1 + 0x28b8\n 25523: u64 [a2 + 1504] = 0\n 25527: u64 [a2 + 1496] = 0\n 25531: u64 [a2 + 1488] = 0\n 25535: a1 = a2 + 0x500\n 25539: u64 [a1 + 200] = 0x200\n 25545: a0 = u64 [s1 + 0x98]\n 25549: u64 [a1 + 0xe8] = a0\n 25553: a0 = u64 [s1 + 0xb0]\n 25557: u64 [a1 + 0xf0] = a0\n 25561: a0 = u64 [s1 + 0xa8]\n 25565: u64 [a1 + 0xf8] = a0\n 25569: a0 = s1 + 0x2ea0\n 25573: a1 = s1 + 0x2e80\n 25577: a3 = u64 [s1 + 0xa0]\n 25581: u64 [a2 + 0x600] = a3\n 25585: ra = 1050, jump @1336\n      : @999 [@dyn 525] (gas: 3)\n 25591: a0 = s1 + 0x2e60\n 25595: a1 = 0x40\n 25598: ra = 1052, jump @17\n      : @1000 [@dyn 526] (gas: 27)\n 25604: a0 = s1 + 0x28b8\n 25608: a3 = u64 [a0 + 0x5c0]\n 25612: u64 [s1 + 0x138] = a3\n 25616: a2 = u64 [a0 + 0x5b8]\n 25620: u64 [s1 + 0x130] = a2\n 25624: a4 = u64 [a0 + 0x5b0]\n 25628: u64 [s1 + 0x128] = a4\n 25632: a5 = u64 [a0 + 0x5a8]\n 25636: u64 [s1 + 0x120] = a5\n 25640: a1 = u64 [s1 + 0xa0]\n 25644: u64 [a0 + 0x560] = a1\n 25648: a1 = u64 [s1 + 0xa8]\n 25652: u64 [a0 + 0x558] = a1\n 25656: a1 = u64 [s1 + 0xb0]\n 25660: u64 [a0 + 0x550] = a1\n 25664: a1 = u64 [s1 + 0x98]\n 25668: u64 [a0 + 0x548] = a1\n 25672: a1 = a0 + 0x500\n 25676: u64 [a1 + 0x80] = a3\n 25680: u64 [a1 + 0x78] = a2\n 25683: u64 [a1 + 0x70] = a4\n 25686: a3 = a0\n 25688: a0 = s1 + 0x2e40\n 25692: a1 = s1 + 0x2e20\n 25696: a2 = s1 + 0x2e00\n 25700: u64 [a3 + 0x568] = a5\n 25704: ra = 1054, jump @1302\n      : @1001 [@dyn 527] (gas: 1)\n 25710: t0 = 1056, jump @2005\n      : @1002 [@dyn 528] (gas: 1)\n 25716: jump @1004 if a0 == 0\n      : @1003 (gas: 1)\n 25719: jump @1123\n      : @1004 (gas: 9)\n 25722: t0 = a3\n 25724: a1 = s1 + 0x28b8\n 25728: a5 = a1 + 0x500\n 25732: a0 = u64 [a5 + 0x90]\n 25736: a3 = u64 [a5 + 0xa0]\n 25740: u64 [s1 + 0x118] = a3\n 25744: t1 = u64 [a1 + 0x588]\n 25748: a3 = u64 [a5 + 0x98]\n 25752: jump @1012\n      : @1005 (gas: 15)\n 25755: u64 [s1 + 1240] = 0\n 25759: u64 [s1 + 1232] = 0\n 25763: u64 [s1 + 1224] = 0\n 25767: u64 [s1 + 1216] = 0x200\n 25773: a0 = u64 [s1 + 0x98]\n 25777: u64 [s1 + 0x4e0] = a0\n 25781: a0 = u64 [s1 + 0xb0]\n 25785: u64 [s1 + 0x4e8] = a0\n 25789: a0 = u64 [s1 + 0xa8]\n 25793: u64 [s1 + 0x4f0] = a0\n 25797: a0 = s1 + 0x4e0\n 25801: a1 = s1 + 0x4c0\n 25805: a2 = u64 [s1 + 0xa0]\n 25809: u64 [s1 + 0x4f8] = a2\n 25813: ra = 1058, jump @1336\n      : @1006 [@dyn 529] (gas: 3)\n 25819: a0 = s1 + 0x4a0\n 25823: a1 = 0x40\n 25826: ra = 1060, jump @17\n      : @1007 [@dyn 530] (gas: 25)\n 25832: a5 = s1 + 0x400\n 25836: a2 = u64 [a5 + 0xb8]\n 25840: u64 [s1 + 0x138] = a2\n 25844: a1 = u64 [a5 + 0xb0]\n 25848: u64 [s1 + 0x130] = a1\n 25852: a3 = u64 [a5 + 0xa8]\n 25856: u64 [s1 + 0x128] = a3\n 25860: a4 = u64 [a5 + 0xa0]\n 25864: u64 [s1 + 0x120] = a4\n 25868: a0 = u64 [s1 + 0xa0]\n 25872: u64 [a5 + 0x58] = a0\n 25875: a0 = u64 [s1 + 0xa8]\n 25879: u64 [a5 + 0x50] = a0\n 25882: a0 = u64 [s1 + 0xb0]\n 25886: u64 [a5 + 0x48] = a0\n 25889: a0 = u64 [s1 + 0x98]\n 25893: u64 [a5 + 0x40] = a0\n 25896: u64 [a5 + 0x78] = a2\n 25899: u64 [a5 + 0x70] = a1\n 25902: u64 [a5 + 0x68] = a3\n 25905: a0 = s1 + 0x480\n 25909: a1 = s1 + 0x460\n 25913: a2 = s1 + 0x440\n 25917: u64 [a5 + 0x60] = a4\n 25920: ra = 1062, jump @1302\n      : @1008 [@dyn 531] (gas: 1)\n 25926: t0 = 1064, jump @2005\n      : @1009 [@dyn 532] (gas: 1)\n 25932: jump @1011 if a0 == 0\n      : @1010 (gas: 1)\n 25935: jump @1123\n      : @1011 (gas: 8)\n 25938: t0 = a3\n 25940: a5 = s1 + 0x400\n 25944: a0 = u64 [a5 + 0x88]\n 25948: a1 = u64 [a5 + 0x98]\n 25952: u64 [s1 + 0x118] = a1\n 25956: t1 = u64 [s1 + 0x480]\n 25960: a3 = u64 [a5 + 0x90]\n 25964: fallthrough\n      : @1012 (gas: 26)\n 25965: t2 = a0 ^ a4\n 25968: a5 = a0 <u a4\n 25971: ra = t1 <u a2\n 25974: a5 = ra if t2 == 0\n 25977: a1 = a3 - t0\n 25980: t2 = a1 - a5\n 25983: a1 = a1 <u a5\n 25986: u64 [s1 + 0x110] = a1\n 25990: a3 = a3 <u t0\n 25993: a5 = u64 [s1 + 0x138]\n 25997: a1 = u64 [s1 + 0x118]\n 26001: a5 = a1 - a5\n 26004: a5 = a5 - a3\n 26007: a1 = u64 [s1 + 0x110]\n 26011: a5 = a5 - a1\n 26014: a0 = a0 - a4\n 26017: a0 = a0 - ra\n 26020: a1 = t1 - a2\n 26023: a0 = a0 | a5\n 26026: a3 = a1 | t2\n 26029: a3 = a3 | a0\n 26032: a0 = a0 | t2\n 26035: a3 = a3 >> 0x20\n 26038: a0 = a0 << 0x20\n 26041: a0 = a0 | a3\n 26044: jump @1014 if a0 == 0\n      : @1013 (gas: 1)\n 26047: jump @1123\n      : @1014 (gas: 4)\n 26050: a0 = a2\n 26052: u64 [s1 + 0x138] = a1\n 26056: ra = 0x42a\n 26060: jump @32\n      : @1015 (gas: 2)\n 26063: u64 [s1 + 0x138] = a1\n 26067: ra = 1066, jump @32\n      : @1016 [@dyn 533] (gas: 3)\n 26073: i32 a1 = a0 + 0\n 26075: a2 = i32 [s1 + 0x138]\n 26079: jump @840\n      : @1017 (gas: 8)\n 26082: u64 [a5 + 992] = 0\n 26086: u64 [a5 + 984] = 0\n 26090: u64 [a5 + 976] = 0\n 26094: u64 [a5 + 968] = 0x4\n 26099: a0 = s1 + 0x7ff\n 26103: a0 = a0 + 0x6e1\n 26107: a1 = s1 + 0x3480\n 26111: ra = 1068, jump @21\n      : @1018 [@dyn 534] (gas: 15)\n 26117: a4 = s1 + 0x7ff\n 26121: a4 = a4 + 0xb9\n 26125: a5 = a4 + 0x600\n 26129: a0 = u64 [a5 + 0x28]\n 26132: a1 = u64 [a5 + 0x30]\n 26135: a2 = u64 [a5 + 0x38]\n 26138: a3 = u64 [a5 + 0x40]\n 26141: u64 [a5 + 0x20] = a3\n 26144: u64 [a5 + 0x18] = a2\n 26147: u64 [a5 + 0x10] = a1\n 26150: a1 = s1 + 0x7ff\n 26154: a1 = a1 + 0x6c1\n 26158: u64 [a5 + 0x8] = a0\n 26161: a0 = 0\n 26163: ra = 1070, jump @19\n      : @1019 [@dyn 535] (gas: 11)\n 26169: a1 = s1 + 0x7ff\n 26173: a1 = a1 + 0xb9\n 26177: u64 [a1 + 1536] = 0\n 26181: u64 [a1 + 1528] = 0\n 26185: u64 [a1 + 1512] = 0x3\n 26190: a2 = a1\n 26192: a0 = 0x20\n 26195: a1 = s1 + 0x7ff\n 26199: a1 = a1 + 0x6a1\n 26203: u64 [a2 + 1520] = 0\n 26207: ra = 1072, jump @19\n      : @1020 [@dyn 536] (gas: 3)\n 26213: a1 = 0x2025c\n 26218: a0 = i32 [0x2025c]\n 26223: jump @1022 if a0 >u 63\n      : @1021 (gas: 3)\n 26227: u32 [0x2025c] = 0x40\n 26233: t0 = 0x432\n 26237: jump @1975\n      : @1022 (gas: 1)\n 26240: t0 = 1074, jump @1975\n      : @1023 [@dyn 537] (gas: 44)\n 26246: a0 = 0x20270\n 26251: i32 a0 = a0 + 0\n 26253: i32 a2 = a2 + 0\n 26255: u64 [s1 + 0x38] = a1\n 26258: a1 = 0x40\n 26261: u64 [s1 + 0x30] = a0\n 26264: ecalli 9 // 'hash_keccak_256'\n 26266: a3 = u64 [s1 + 0x138]\n 26270: a0 = u64 [a3]\n 26272: a1 = u64 [a3 + 0x8]\n 26275: a2 = u64 [a3 + 0x10]\n 26278: a3 = u64 [a3 + 0x18]\n 26281: a4 = reverse a0\n 26283: a5 = reverse a1\n 26285: a1 = reverse a2\n 26287: a0 = reverse a3\n 26289: a2 = a0 + 0x10\n 26292: u64 [s1 + 0x28] = a2\n 26295: u64 [s1 + 0xa0] = a0\n 26299: a0 = a2 <u a0\n 26302: a2 = a1 + a0\n 26305: u64 [s1 + 0x20] = a2\n 26308: u64 [s1 + 0xa8] = a1\n 26312: a1 = a2 <u a1\n 26315: a1 = a0 if a0 == 0\n 26318: a1 = a1 + a5\n 26321: u64 [s1 + 0x18] = a1\n 26324: u64 [s1 + 0xb0] = a5\n 26328: a0 = a1 <u a5\n 26331: u64 [s1 + 0xb8] = a4\n 26335: a0 = a0 + a4\n 26338: u64 [s1 + 0x10] = a0\n 26341: a0 = sp + 0xffffffffffffffe0\n 26344: a0 = a0 & 0xffffffffffffffe0\n 26347: u64 [s1 + 0x138] = a0\n 26351: sp = a0\n 26353: a0 = 0x30270\n 26358: u64 [s1 + 0xc8] = a0\n 26362: i32 a0 = a0 + 0\n 26364: u64 [s1 + 0x98] = a0\n 26368: ra = 0x434\n 26372: ecalli 6 // 'caller'\n 26374: t0 = 0x436\n 26378: jump @1960\n      : @1024 [@dyn 538] (gas: 1)\n 26381: t0 = 1078, jump @1960\n      : @1025 [@dyn 539] (gas: 9)\n 26387: u64 [a2 + 1504] = 0\n 26391: a4 = a2 + 0x500\n 26395: u64 [a4 + 0xd8] = a1\n 26399: u64 [a4 + 0xd0] = a0\n 26403: a1 = s1 + 0x7ff\n 26407: a1 = a1 + 0x681\n 26411: u64 [a4 + 0xc8] = a3\n 26415: a0 = 0\n 26417: ra = 1080, jump @19\n      : @1026 [@dyn 540] (gas: 16)\n 26423: a0 = u64 [s1 + 0x10]\n 26426: a1 = s1 + 0x7ff\n 26430: a1 = a1 + 0xb9\n 26434: a2 = a1 + 0x500\n 26438: u64 [a2 + 0xc0] = a0\n 26442: a0 = u64 [s1 + 0x18]\n 26445: u64 [a2 + 0xb8] = a0\n 26449: a0 = u64 [s1 + 0x20]\n 26452: u64 [a2 + 0xb0] = a0\n 26456: a3 = a1\n 26458: a0 = 0x20\n 26461: a1 = s1 + 0x7ff\n 26465: a1 = a1 + 0x661\n 26469: a2 = u64 [s1 + 0x28]\n 26472: u64 [a3 + 0x5a8] = a2\n 26476: ra = 1082, jump @19\n      : @1027 [@dyn 541] (gas: 3)\n 26482: a1 = u64 [s1 + 0x38]\n 26485: a0 = i32 [a1]\n 26487: jump @1029 if a0 >u 63\n      : @1028 (gas: 2)\n 26491: u32 [a1 + 0] = 0x40\n 26494: fallthrough\n      : @1029 (gas: 3)\n 26495: a0 = 0xffffffff\n 26505: u64 [s1 + 0xc0] = a0\n 26509: t0 = 1084, jump @2021\n      : @1030 [@dyn 542] (gas: 4)\n 26515: ra = 0x43e\n 26519: ecalli 9 // 'hash_keccak_256'\n 26521: t0 = 0x440\n 26525: jump @1980\n      : @1031 [@dyn 543] (gas: 1)\n 26528: t0 = 1088, jump @1980\n      : @1032 [@dyn 544] (gas: 2)\n 26534: a0 = a0 + 0x641\n 26538: ra = 1090, jump @21\n      : @1033 [@dyn 545] (gas: 26)\n 26544: a5 = s1 + 0x7ff\n 26548: a5 = a5 + 0xb9\n 26552: a3 = u64 [a5 + 0x588]\n 26556: a0 = u64 [a5 + 0x590]\n 26560: a1 = u64 [a5 + 0x598]\n 26564: a2 = u64 [a5 + 0x5a0]\n 26568: a4 = u64 [s1 + 0x110]\n 26572: u64 [a5 + 0x540] = a4\n 26576: a4 = u64 [s1 + 0x118]\n 26580: u64 [a5 + 0x538] = a4\n 26584: a4 = u64 [s1 + 0x108]\n 26588: u64 [a5 + 0x530] = a4\n 26592: a4 = u64 [s1 + 0x100]\n 26596: u64 [a5 + 0x528] = a4\n 26600: a4 = a5 + 0x500\n 26604: u64 [a4 + 0x60] = a2\n 26607: u64 [a4 + 0x58] = a1\n 26610: u64 [a4 + 0x50] = a0\n 26613: a0 = s1 + 0x7ff\n 26617: a0 = a0 + 0x621\n 26621: a1 = s1 + 0x7ff\n 26625: a1 = a1 + 0x601\n 26629: a2 = s1 + 0x7ff\n 26633: a2 = a2 + 0x5e1\n 26637: u64 [a4 + 0x48] = a3\n 26640: ra = 1092, jump @1403\n      : @1034 [@dyn 546] (gas: 20)\n 26646: a4 = s1 + 0x7ff\n 26650: a4 = a4 + 0xb9\n 26654: a5 = a4 + 0x500\n 26658: a0 = u64 [a5 + 0x80]\n 26662: a1 = u64 [a5 + 0x78]\n 26665: a2 = u64 [a5 + 0x68]\n 26668: a3 = u64 [a5 + 0x70]\n 26671: a0 = a0 | a1\n 26674: a1 = a2 <u 0x9\n 26677: a1 = 0 if a3 != 0\n 26679: a1 = 0 if a0 != 0\n 26681: u64 [a4 + 1312] = 0\n 26685: u64 [a4 + 1304] = 0\n 26689: u64 [a5 + 0x8] = a1\n 26692: a0 = s1 + 0x7ff\n 26696: a0 = a0 + 0x5c1\n 26700: u64 [a4 + 1296] = 0\n 26704: ra = 0x446\n 26708: t0 = 0x5e2\n 26712: jump @1953\n      : @1035 [@dyn 547] (gas: 11)\n 26715: a2 = 0\n 26717: a3 = 0\n 26719: ra = 0\n 26721: t2 = 0\n 26723: a0 = s1 + 0x3000\n 26727: i32 a0 = a0 + 0x4a0\n 26731: u64 [s1 + 0x48] = a0\n 26734: a0 = s1 + 0x3000\n 26738: i32 a0 = a0 + 0x4c0\n 26742: u64 [s1 + 0x40] = a0\n 26745: fallthrough\n      : @1036 (gas: 22)\n 26746: u64 [s1 + 0x128] = t2\n 26750: u64 [s1 + 0x120] = ra\n 26754: u64 [s1 + 0x130] = a3\n 26758: u64 [s1 + 0x138] = a2\n 26762: t1 = u64 [s1 + 0x100]\n 26766: a0 = a2 <u t1\n 26769: t0 = u64 [s1 + 0x108]\n 26773: a1 = a3 ^ t0\n 26776: a2 = a3 <u t0\n 26779: a2 = a0 if a1 == 0\n 26782: a4 = u64 [s1 + 0x118]\n 26786: a0 = ra <u a4\n 26789: a5 = u64 [s1 + 0x110]\n 26793: a1 = t2 ^ a5\n 26796: a3 = t2 <u a5\n 26799: a3 = a0 if a1 == 0\n 26802: a0 = ra ^ a4\n 26805: a0 = a0 | a1\n 26808: a3 = a2 if a0 == 0\n 26811: a2 = u64 [s1 + 0xf8]\n 26815: ra = u64 [s1 + 0xf0]\n 26819: jump @1038 if a3 != 0\n      : @1037 (gas: 1)\n 26822: jump @1124\n      : @1038 (gas: 33)\n 26825: a1 = s1 + 0x7ff\n 26829: a1 = a1 + 0xb9\n 26833: a3 = s1 + 0x100\n 26837: a0 = u64 [a3 + 0x38]\n 26840: u64 [a1 + 0x1a8] = a0\n 26844: u64 [a1 + 0x1c8] = t1\n 26848: u64 [a1 + 0x1e8] = a2\n 26852: a0 = u64 [a3 + 0x30]\n 26855: a2 = a1 + 0x100\n 26859: u64 [a2 + 0xb0] = a0\n 26863: u64 [a1 + 0x1d0] = t0\n 26867: u64 [a1 + 0x1f0] = ra\n 26871: a0 = u64 [a3 + 0x20]\n 26874: u64 [a2 + 0xb8] = a0\n 26878: u64 [a2 + 0xd8] = a4\n 26882: a0 = u64 [s1 + 0xe8]\n 26886: u64 [a2 + 0xf8] = a0\n 26890: a0 = u64 [a3 + 0x28]\n 26893: u64 [a2 + 0xc0] = a0\n 26897: u64 [a2 + 0xe0] = a5\n 26901: a0 = s1 + 0x7ff\n 26905: a0 = a0 + 0x2c1\n 26909: a1 = s1 + 0x7ff\n 26913: a1 = a1 + 0x2a1\n 26917: a2 = s1 + 0x7ff\n 26921: a2 = a2 + 0x281\n 26925: a3 = s1 + 0x7ff\n 26929: a3 = a3 + 0x261\n 26933: t1 = u64 [s1 + 0xe0]\n 26937: t2 = s1 + 0x7ff\n 26941: t2 = t2 + 0xb9\n 26945: u64 [t2 + 0x200] = t1\n 26949: ra = 1096, jump @1435\n      : @1039 [@dyn 548] (gas: 8)\n 26955: a1 = s1 + 0x7ff\n 26959: a1 = a1 + 0xb9\n 26963: a4 = a1 + 0x200\n 26967: a0 = u64 [a4 + 0x20]\n 26970: a2 = u64 [a4 + 0x18]\n 26973: a3 = u64 [a4 + 0x10]\n 26976: a1 = u64 [a4 + 0x8]\n 26979: t0 = 1098, jump @1985\n      : @1040 [@dyn 549] (gas: 1)\n 26985: jump @1042 if a0 == 0\n      : @1041 (gas: 1)\n 26988: jump @1123\n      : @1042 (gas: 24)\n 26991: i32 a1 = a1 + 0\n 26993: a0 = u64 [s1 + 0x48]\n 26996: ecalli 4 // 'call_data_load'\n 26998: a3 = s1 + 0x30b8\n 27002: a0 = u64 [a3 + 0x400]\n 27006: a4 = a3 + 0x300\n 27010: a1 = u64 [a4 + 0xf8]\n 27014: a2 = u64 [a4 + 0xe8]\n 27018: a3 = u64 [a4 + 0xf0]\n 27022: a0 = a0 | a1\n 27025: a1 = a2 <u 0x10\n 27028: a1 = 0 if a3 != 0\n 27030: a1 = 0 if a0 != 0\n 27032: a2 = s1 + 0x7ff\n 27036: a2 = a2 + 0xb9\n 27040: u64 [a2 + 416] = 0\n 27044: u64 [a2 + 408] = 0\n 27048: u64 [a2 + 0x188] = a1\n 27052: a0 = s1 + 0x7ff\n 27056: a0 = a0 + 0x241\n 27060: u64 [a2 + 400] = 0\n 27064: ra = 0x44c\n 27068: t0 = 0x60c\n 27072: jump @1953\n      : @1043 [@dyn 550] (gas: 42)\n 27075: a0 = sp + 0xffffffffffffffe0\n 27078: a0 = a0 & 0xffffffffffffffe0\n 27081: u64 [s1 + 0xd8] = a0\n 27085: sp = a0\n 27087: a2 = s1 + 0x100\n 27091: a0 = u64 [a2 + 0x28]\n 27094: a1 = s1 + 0x7ff\n 27098: a1 = a1 + 0xb9\n 27102: a3 = a1 + 0x100\n 27106: u64 [a3 + 0x20] = a0\n 27109: a0 = u64 [a2 + 0x20]\n 27112: u64 [a3 + 0x18] = a0\n 27115: a0 = u64 [a2 + 0x30]\n 27118: u64 [a3 + 0x10] = a0\n 27121: a0 = u64 [a2 + 0x38]\n 27124: u64 [a3 + 0x8] = a0\n 27127: a0 = u64 [a2 + 0x10]\n 27130: u64 [a3 + 0x40] = a0\n 27133: a0 = u64 [a2 + 0x18]\n 27136: u64 [a3 + 0x38] = a0\n 27139: a0 = u64 [a2 + 0x8]\n 27142: u64 [a3 + 0x30] = a0\n 27145: a0 = u64 [a2]\n 27147: u64 [a3 + 0x28] = a0\n 27150: a0 = u64 [s1 + 0xe0]\n 27154: u64 [a3 + 0x60] = a0\n 27157: a0 = u64 [s1 + 0xe8]\n 27161: u64 [a3 + 0x58] = a0\n 27164: a0 = u64 [s1 + 0xf0]\n 27168: u64 [a3 + 0x50] = a0\n 27171: a5 = a1\n 27173: a0 = s1 + 0x7ff\n 27177: a0 = a0 + 0x221\n 27181: a1 = s1 + 0x7ff\n 27185: a1 = a1 + 0x201\n 27189: a2 = s1 + 0x7ff\n 27193: a2 = a2 + 0x1e1\n 27197: a3 = s1 + 0x7ff\n 27201: a3 = a3 + 0x1c1\n 27205: a4 = u64 [s1 + 0xf8]\n 27209: u64 [a5 + 0x148] = a4\n 27213: ra = 1102, jump @1435\n      : @1044 [@dyn 551] (gas: 8)\n 27219: a1 = s1 + 0x7ff\n 27223: a1 = a1 + 0xb9\n 27227: a4 = a1 + 0x100\n 27231: a0 = u64 [a4 + 0x80]\n 27235: a2 = u64 [a4 + 0x78]\n 27238: a3 = u64 [a4 + 0x70]\n 27241: a1 = u64 [a4 + 0x68]\n 27244: t0 = 1104, jump @1985\n      : @1045 [@dyn 552] (gas: 1)\n 27250: jump @1047 if a0 == 0\n      : @1046 (gas: 1)\n 27253: jump @1123\n      : @1047 (gas: 30)\n 27256: i32 a1 = a1 + 0\n 27258: a0 = u64 [s1 + 0x40]\n 27261: ecalli 4 // 'call_data_load'\n 27263: a3 = s1 + 0x30b8\n 27267: a4 = a3 + 0x400\n 27271: a0 = u64 [a4 + 0x8]\n 27274: a1 = u64 [a4 + 0x10]\n 27277: a2 = u64 [a4 + 0x18]\n 27280: a3 = u64 [a4 + 0x20]\n 27283: a4 = s1 + 0x7ff\n 27287: a4 = a4 + 0xb9\n 27291: u64 [a4 + 0xa0] = a3\n 27295: u64 [a4 + 0x98] = a2\n 27299: u64 [a4 + 0x90] = a1\n 27303: u64 [a4 + 0x88] = a0\n 27307: a0 = u64 [s1 + 0xb8]\n 27311: u64 [a4 + 0xc0] = a0\n 27315: a0 = u64 [s1 + 0xb0]\n 27319: u64 [a4 + 0xb8] = a0\n 27323: a0 = u64 [s1 + 0xa8]\n 27327: u64 [a4 + 0xb0] = a0\n 27331: a0 = s1 + 0x7ff\n 27335: a0 = a0 + 0x181\n 27339: a1 = s1 + 0x7ff\n 27343: a1 = a1 + 0x161\n 27347: a2 = s1 + 0x7ff\n 27351: a2 = a2 + 0x141\n 27355: a3 = u64 [s1 + 0xa0]\n 27359: u64 [a4 + 0xa8] = a3\n 27363: ra = 1106, jump @1467\n      : @1048 [@dyn 553] (gas: 22)\n 27369: a1 = s1 + 0x7ff\n 27373: a1 = a1 + 0xb9\n 27377: a0 = u64 [a1 + 0x100]\n 27381: u64 [s1 + 0x70] = a0\n 27384: a0 = u64 [a1 + 0xf8]\n 27388: u64 [s1 + 0x68] = a0\n 27391: a0 = u64 [a1 + 0xf0]\n 27395: u64 [s1 + 0x60] = a0\n 27398: a0 = u64 [a1 + 0xe8]\n 27402: u64 [s1 + 0xd0] = a0\n 27406: a0 = u64 [a1 + 0xd8]\n 27410: a5 = u64 [a1 + 0xe0]\n 27414: a2 = u64 [a1 + 0xc8]\n 27418: a3 = u64 [a1 + 0xd0]\n 27422: a1 = u64 [s1 + 0xd8]\n 27426: u64 [a1 + 0x10] = a0\n 27429: u64 [a1 + 0x18] = a5\n 27432: u64 [a1] = a2\n 27434: u64 [a1 + 0x8] = a3\n 27437: a0 = s1 + 0x7ff\n 27441: a0 = a0 + 0x121\n 27445: ra = 1108, jump @21\n      : @1049 [@dyn 554] (gas: 26)\n 27451: a0 = s1 + 0x7ff\n 27455: a0 = a0 + 0xb9\n 27459: a1 = u64 [a0 + 0x70]\n 27462: u64 [s1 + 0x90] = a1\n 27466: a1 = u64 [a0 + 0x68]\n 27469: u64 [s1 + 0x88] = a1\n 27473: a1 = u64 [a0 + 0x80]\n 27477: u64 [s1 + 0x80] = a1\n 27481: a0 = u64 [a0 + 0x78]\n 27484: u64 [s1 + 0x78] = a0\n 27487: a5 = u64 [s1 + 0xd0]\n 27491: a0 = a5 >> 0x3d\n 27494: a2 = u64 [s1 + 0x60]\n 27497: a1 = a2 << 0x3\n 27500: a0 = a0 | a1\n 27503: a1 = a2 >> 0x3d\n 27506: a3 = u64 [s1 + 0x68]\n 27509: a2 = a3 << 0x3\n 27512: a1 = a1 | a2\n 27515: a2 = a3 >> 0x3d\n 27518: a3 = u64 [s1 + 0x70]\n 27521: a3 = a3 << 0x3\n 27524: a2 = a2 | a3\n 27527: a5 = a5 << 0x3\n 27530: u64 [s1 + 0xd8] = a5\n 27534: t0 = 1110, jump @1966\n      : @1050 [@dyn 555] (gas: 5)\n 27540: u64 [s1 + 0x70] = a4\n 27543: i32 a2 = a5 + 0xffffffffffffff80\n 27546: a0 = 0xffffffffffffffff\n 27549: a1 = 0xffffffffffffffff\n 27552: ra = 1112, jump @2043\n      : @1051 [@dyn 556] (gas: 8)\n 27558: u64 [s1 + 0x68] = a0\n 27561: u64 [s1 + 0x60] = a1\n 27564: a0 = u64 [s1 + 0xd0]\n 27568: i32 a2 = a0 << 0x3\n 27571: u64 [s1 + 0xd0] = a2\n 27575: a0 = u64 [s1 + 0xc0]\n 27579: a1 = 0\n 27581: ra = 1114, jump @2043\n      : @1052 [@dyn 557] (gas: 7)\n 27587: u64 [s1 + 0x58] = a0\n 27590: u64 [s1 + 0x50] = a1\n 27593: a1 = u64 [s1 + 0xd8]\n 27597: i32 a2 = 0x80 - a1\n 27601: a0 = 0xffffffffffffffff\n 27604: a1 = 0xffffffffffffffff\n 27607: ra = 1116, jump @2038\n      : @1053 [@dyn 558] (gas: 20)\n 27613: a2 = u64 [s1 + 0x50]\n 27616: a2 = a2 | a1\n 27619: a1 = u64 [s1 + 0xd8]\n 27623: a4 = a1 <u 0x80\n 27627: u64 [s1 + 0x50] = a4\n 27630: a3 = u64 [s1 + 0x60]\n 27633: a2 = a3 if a4 == 0\n 27636: a2 = 0 if a1 == 0\n 27638: u64 [s1 + 0x60] = a2\n 27641: a2 = u64 [s1 + 0x58]\n 27644: a2 = a2 | a0\n 27647: a0 = u64 [s1 + 0x68]\n 27650: a2 = a0 if a4 == 0\n 27653: a0 = u64 [s1 + 0xc0]\n 27657: a2 = a0 if a1 == 0\n 27660: u64 [s1 + 0xd8] = a2\n 27664: a0 = 0xffffffffffffffff\n 27667: a1 = 0xffffffffffffffff\n 27670: a2 = u64 [s1 + 0xd0]\n 27674: ra = 1118, jump @2043\n      : @1054 [@dyn 559] (gas: 30)\n 27680: a2 = u64 [s1 + 0x50]\n 27683: a1 = 0 if a2 == 0\n 27685: a0 = 0 if a2 == 0\n 27687: a2 = u64 [s1 + 0x78]\n 27690: a3 = u64 [s1 + 0xd8]\n 27694: a2 = a2 & a3\n 27697: a3 = u64 [s1 + 0x80]\n 27701: a4 = u64 [s1 + 0x60]\n 27704: a3 = a3 & a4\n 27707: a4 = u64 [s1 + 0x88]\n 27711: a0 = a0 & a4\n 27714: a4 = u64 [s1 + 0x90]\n 27718: a1 = a1 & a4\n 27721: a1 = a1 | a3\n 27724: a0 = a0 | a2\n 27727: a0 = a0 | a1\n 27730: a0 = a0 <u 0x1\n 27733: a1 = u64 [s1 + 0x70]\n 27736: a0 = a0 | a1\n 27739: a1 = s1 + 0x7ff\n 27743: a1 = a1 + 0xb9\n 27747: u64 [a1 + 96] = 0\n 27750: u64 [a1 + 88] = 0\n 27753: u64 [a1 + 0x48] = a0\n 27756: a0 = s1 + 0x7ff\n 27760: a0 = a0 + 0x101\n 27764: u64 [a1 + 80] = 0\n 27767: ra = 0x460\n 27771: t0 = 0x638\n 27775: jump @1953\n      : @1055 [@dyn 560] (gas: 43)\n 27778: a3 = s1 + 0x100\n 27782: a0 = u64 [a3 + 0x28]\n 27785: a1 = s1 + 0x1000\n 27789: u64 [a1 + 0xfffffffffffff898] = a0\n 27793: a0 = u64 [a3 + 0x20]\n 27796: a1 = s1 + 0x1000\n 27800: u64 [a1 + 0xfffffffffffff890] = a0\n 27804: a0 = u64 [a3 + 0x30]\n 27807: a1 = s1 + 0x1000\n 27811: u64 [a1 + 0xfffffffffffff888] = a0\n 27815: a0 = u64 [a3 + 0x38]\n 27818: a1 = s1 + 0x1000\n 27822: u64 [a1 + 0xfffffffffffff880] = a0\n 27826: a0 = u64 [a3 + 0x10]\n 27829: a1 = s1 + 0x7ff\n 27833: a1 = a1 + 0xb9\n 27837: u64 [a1] = a0\n 27839: a0 = u64 [a3 + 0x18]\n 27842: u64 [a1 + 0xfffffffffffffff8] = a0\n 27845: a0 = u64 [a3 + 0x8]\n 27848: a2 = s1 + 0x1000\n 27852: u64 [a2 + 0xfffffffffffff8a8] = a0\n 27856: a0 = u64 [a3]\n 27858: a2 = s1 + 0x1000\n 27862: u64 [a2 + 0xfffffffffffff8a0] = a0\n 27866: a0 = u64 [s1 + 0xe0]\n 27870: u64 [a1 + 0x20] = a0\n 27873: a0 = u64 [s1 + 0xe8]\n 27877: u64 [a1 + 0x18] = a0\n 27880: a0 = u64 [s1 + 0xf0]\n 27884: u64 [a1 + 0x10] = a0\n 27887: a5 = a1\n 27889: a0 = s1 + 0x7ff\n 27893: a0 = a0 + 0xe1\n 27897: a1 = s1 + 0x7ff\n 27901: a1 = a1 + 0xc1\n 27905: a2 = s1 + 0x7ff\n 27909: a2 = a2 + 0xa1\n 27913: a3 = s1 + 0x7ff\n 27917: a3 = a3 + 0x81\n 27921: a4 = u64 [s1 + 0xf8]\n 27925: u64 [a5 + 0x8] = a4\n 27928: ra = 1122, jump @1435\n      : @1056 [@dyn 561] (gas: 7)\n 27934: a1 = s1 + 0x7ff\n 27938: a1 = a1 + 0xb9\n 27942: a0 = u64 [a1 + 0x40]\n 27945: a2 = u64 [a1 + 0x38]\n 27948: a3 = u64 [a1 + 0x30]\n 27951: a1 = u64 [a1 + 0x28]\n 27954: t0 = 1124, jump @1985\n      : @1057 [@dyn 562] (gas: 1)\n 27960: jump @1123 if a0 != 0\n      : @1058 (gas: 37)\n 27964: i32 a1 = a1 + 0\n 27966: a0 = s1 + 0x3000\n 27970: i32 a0 = a0 + 0x4e0\n 27974: ecalli 4 // 'call_data_load'\n 27976: a3 = s1 + 0x30b8\n 27980: a4 = a3 + 0x400\n 27984: a0 = u64 [a4 + 0x28]\n 27987: a1 = u64 [a4 + 0x30]\n 27990: a2 = u64 [a4 + 0x38]\n 27993: a3 = u64 [a4 + 0x40]\n 27996: a4 = s1 + 0x1000\n 28000: u64 [a4 + 0xfffffffffffff818] = a3\n 28004: a3 = s1 + 0x1000\n 28008: u64 [a3 + 0xfffffffffffff810] = a2\n 28012: a2 = s1 + 0x1000\n 28016: u64 [a2 + 0xfffffffffffff808] = a1\n 28020: a1 = s1 + 0x1000\n 28024: u64 [a1 + 0xfffffffffffff800] = a0\n 28028: a0 = u64 [s1 + 0xb8]\n 28032: a1 = s1 + 0x1000\n 28036: u64 [a1 + 0xfffffffffffff838] = a0\n 28040: a0 = u64 [s1 + 0xb0]\n 28044: a1 = s1 + 0x1000\n 28048: u64 [a1 + 0xfffffffffffff830] = a0\n 28052: a0 = u64 [s1 + 0xa8]\n 28056: a1 = s1 + 0x1000\n 28060: u64 [a1 + 0xfffffffffffff828] = a0\n 28064: a0 = s1 + 0x7ff\n 28068: a0 = a0 + 0x41\n 28071: a1 = s1 + 0x7ff\n 28075: a1 = a1 + 0x21\n 28078: a2 = s1 + 0x7ff\n 28082: a2 = a2 + 0x1\n 28085: a3 = u64 [s1 + 0xa0]\n 28089: a4 = s1 + 0x1000\n 28093: u64 [a4 + 0xfffffffffffff820] = a3\n 28097: ra = 1126, jump @1467\n      : @1059 [@dyn 563] (gas: 64)\n 28103: a0 = s1 + 0x1000\n 28107: a0 = u64 [a0 + 0xfffffffffffff840]\n 28111: u64 [s1 + 0xd8] = a0\n 28115: a0 = s1 + 0x1000\n 28119: a0 = u64 [a0 + 0xfffffffffffff848]\n 28123: u64 [s1 + 0xd0] = a0\n 28127: a0 = s1 + 0x1000\n 28131: a0 = u64 [a0 + 0xfffffffffffff850]\n 28135: u64 [s1 + 0x90] = a0\n 28139: a0 = s1 + 0x1000\n 28143: a0 = u64 [a0 + 0xfffffffffffff858]\n 28147: u64 [s1 + 0x88] = a0\n 28151: a0 = s1 + 0x1000\n 28155: a0 = u64 [a0 + 0xfffffffffffff860]\n 28159: u64 [s1 + 0x80] = a0\n 28163: a0 = s1 + 0x1000\n 28167: a0 = u64 [a0 + 0xfffffffffffff868]\n 28171: u64 [s1 + 0x78] = a0\n 28174: a0 = s1 + 0x1000\n 28178: a0 = u64 [a0 + 0xfffffffffffff870]\n 28182: u64 [s1 + 0x70] = a0\n 28185: a0 = s1 + 0x1000\n 28189: a0 = u64 [a0 + 0xfffffffffffff878]\n 28193: u64 [s1 + 0x68] = a0\n 28196: a0 = u64 [s1 + 0x98]\n 28200: ecalli 6 // 'caller'\n 28202: a2 = u64 [s1 + 0xc8]\n 28206: a0 = u64 [a2 + 0x8]\n 28209: a1 = i32 [a2 + 0x10]\n 28212: a2 = u64 [a2]\n 28214: a0 = reverse a0\n 28216: a3 = a0 << 0x20\n 28219: a1 = reverse a1\n 28221: a1 = a1 >> 0x20\n 28224: a3 = a3 | a1\n 28227: a0 = a0 >> 0x20\n 28230: a1 = reverse a2\n 28232: a2 = a1 << 0x20\n 28235: a0 = a0 | a2\n 28238: a1 = a1 >> 0x20\n 28241: u64 [s1 + 1976] = 0\n 28245: a2 = u64 [s1 + 0x68]\n 28248: u64 [s1 + 0x7d8] = a2\n 28252: a2 = u64 [s1 + 0x70]\n 28255: u64 [s1 + 0x7d0] = a2\n 28259: a2 = u64 [s1 + 0x78]\n 28262: u64 [s1 + 0x7c8] = a2\n 28266: a2 = u64 [s1 + 0x80]\n 28270: u64 [s1 + 0x7c0] = a2\n 28274: a2 = u64 [s1 + 0x88]\n 28278: u64 [s1 + 0x7f8] = a2\n 28282: a2 = u64 [s1 + 0x90]\n 28286: u64 [s1 + 0x7f0] = a2\n 28290: a2 = u64 [s1 + 0xd0]\n 28294: u64 [s1 + 0x7e8] = a2\n 28298: a2 = u64 [s1 + 0xd8]\n 28302: u64 [s1 + 0x7e0] = a2\n 28306: u64 [s1 + 0x7b0] = a1\n 28310: u64 [s1 + 0x7a8] = a0\n 28314: a0 = s1 + 0x7e0\n 28318: a1 = s1 + 0x7c0\n 28322: a2 = s1 + 0x7a0\n 28326: u64 [s1 + 0x7a0] = a3\n 28330: ra = 1128, jump @1499\n      : @1060 [@dyn 564] (gas: 8)\n 28336: a1 = s1 + 0x30b8\n 28340: u64 [a1 + 1120] = 0\n 28344: u64 [a1 + 1112] = 0\n 28348: u64 [a1 + 1104] = 0\n 28352: u64 [a1 + 1096] = 0x4\n 28357: a0 = s1 + 0x780\n 28361: a1 = s1 + 0x3500\n 28365: ra = 1130, jump @21\n      : @1061 [@dyn 565] (gas: 38)\n 28371: a0 = u64 [s1 + 0x798]\n 28375: u64 [s1 + 0x88] = a0\n 28379: a0 = u64 [s1 + 0x790]\n 28383: u64 [s1 + 0x90] = a0\n 28387: a0 = u64 [s1 + 0x788]\n 28391: u64 [s1 + 0xd0] = a0\n 28395: a0 = u64 [s1 + 0x780]\n 28399: u64 [s1 + 0xd8] = a0\n 28403: a1 = s1 + 0x100\n 28407: a0 = u64 [a1 + 0x28]\n 28410: u64 [s1 + 0x718] = a0\n 28414: a0 = u64 [a1 + 0x20]\n 28417: u64 [s1 + 0x710] = a0\n 28421: a0 = u64 [a1 + 0x30]\n 28424: u64 [s1 + 0x708] = a0\n 28428: a0 = u64 [a1 + 0x38]\n 28431: u64 [s1 + 0x700] = a0\n 28435: a0 = u64 [a1 + 0x10]\n 28438: u64 [s1 + 0x738] = a0\n 28442: a0 = u64 [a1 + 0x18]\n 28445: u64 [s1 + 0x730] = a0\n 28449: a0 = u64 [a1 + 0x8]\n 28452: u64 [s1 + 0x728] = a0\n 28456: a0 = u64 [a1]\n 28458: u64 [s1 + 0x720] = a0\n 28462: a0 = u64 [s1 + 0xe0]\n 28466: u64 [s1 + 0x758] = a0\n 28470: a0 = u64 [s1 + 0xe8]\n 28474: u64 [s1 + 0x750] = a0\n 28478: a0 = u64 [s1 + 0xf0]\n 28482: u64 [s1 + 0x748] = a0\n 28486: a0 = s1 + 0x760\n 28490: a1 = s1 + 0x740\n 28494: a2 = s1 + 0x720\n 28498: a3 = s1 + 0x700\n 28502: a4 = u64 [s1 + 0xf8]\n 28506: u64 [s1 + 0x740] = a4\n 28510: ra = 1132, jump @1435\n      : @1062 [@dyn 566] (gas: 6)\n 28516: a4 = s1 + 0x700\n 28520: a0 = u64 [a4 + 0x78]\n 28523: a2 = u64 [a4 + 0x70]\n 28526: a3 = u64 [a4 + 0x68]\n 28529: a1 = u64 [a4 + 0x60]\n 28532: t0 = 1134, jump @1985\n      : @1063 [@dyn 567] (gas: 1)\n 28538: jump @1123 if a0 != 0\n      : @1064 (gas: 17)\n 28542: i32 a1 = a1 + 0\n 28544: a0 = s1 + 0x3000\n 28548: i32 a0 = a0 + 0x520\n 28552: ecalli 4 // 'call_data_load'\n 28554: a0 = s1 + 0x30b8\n 28558: a2 = a0 + 0x400\n 28562: a1 = u64 [a2 + 0x80]\n 28566: u64 [s1 + 0x80] = a1\n 28570: a1 = u64 [a2 + 0x78]\n 28573: u64 [s1 + 0x78] = a1\n 28576: a1 = u64 [a2 + 0x70]\n 28579: u64 [s1 + 0x70] = a1\n 28582: a0 = u64 [a2 + 0x68]\n 28585: u64 [s1 + 0x68] = a0\n 28588: a0 = s1 + 0x6e0\n 28592: a1 = 0x40\n 28595: ra = 1136, jump @17\n      : @1065 [@dyn 568] (gas: 6)\n 28601: a4 = s1 + 0x600\n 28605: a3 = u64 [a4 + 0xf8]\n 28609: a1 = u64 [a4 + 0xf0]\n 28613: a2 = u64 [a4 + 0xe8]\n 28617: a0 = u64 [a4 + 0xe0]\n 28621: t0 = 1138, jump @1996\n      : @1066 [@dyn 569] (gas: 1)\n 28627: jump @1123 if a1 != 0\n      : @1067 (gas: 11)\n 28631: a1 = u64 [s1 + 0x68]\n 28634: u64 [s1 + 0x6c0] = a1\n 28638: a1 = u64 [s1 + 0x70]\n 28641: u64 [s1 + 0x6c8] = a1\n 28645: a1 = u64 [s1 + 0x78]\n 28648: u64 [s1 + 0x6d0] = a1\n 28652: a1 = s1 + 0x6c0\n 28656: a2 = u64 [s1 + 0x80]\n 28660: u64 [s1 + 0x6d8] = a2\n 28664: u64 [s1 + 0x80] = a0\n 28668: ra = 1140, jump @19\n      : @1068 [@dyn 570] (gas: 6)\n 28674: a0 = u64 [s1 + 0x98]\n 28678: ra = 0x476\n 28682: ecalli 6 // 'caller'\n 28684: a2 = u64 [s1 + 0xc8]\n 28688: t0 = 0x478\n 28692: jump @2032\n      : @1069 [@dyn 571] (gas: 2)\n 28695: a2 = u64 [s1 + 0xc8]\n 28699: t0 = 1144, jump @2032\n      : @1070 [@dyn 572] (gas: 33)\n 28705: t0 = a1 | a0\n 28708: a3 = a3 >> 0x20\n 28711: a2 = reverse a2\n 28713: a1 = a2 << 0x20\n 28716: a1 = a1 | a3\n 28719: a2 = a2 >> 0x20\n 28722: u64 [s1 + 1656] = 0\n 28726: a0 = u64 [s1 + 0x88]\n 28730: u64 [s1 + 0x698] = a0\n 28734: a0 = u64 [s1 + 0x90]\n 28738: u64 [s1 + 0x690] = a0\n 28742: a0 = u64 [s1 + 0xd0]\n 28746: u64 [s1 + 0x688] = a0\n 28750: a0 = u64 [s1 + 0xd8]\n 28754: u64 [s1 + 0x680] = a0\n 28758: a3 = u64 [0x20080]\n 28763: a4 = u64 [0x20088]\n 28768: a5 = u64 [0x20090]\n 28773: a0 = u64 [0x20098]\n 28778: u64 [s1 + 0x6b8] = a3\n 28782: a3 = s1 + 0x600\n 28786: u64 [a3 + 0xb0] = a4\n 28790: u64 [a3 + 0xa8] = a5\n 28794: u64 [a3 + 0xa0] = a0\n 28798: u64 [a3 + 0x70] = a2\n 28801: u64 [a3 + 0x68] = a1\n 28804: a1 = 0x20\n 28807: a2 = s1 + 0x6a0\n 28811: a3 = s1 + 0x680\n 28815: a4 = s1 + 0x660\n 28819: u64 [s1 + 0x660] = t0\n 28823: a0 = u64 [s1 + 0x80]\n 28827: ra = 1146, jump @28\n      : @1071 [@dyn 573] (gas: 15)\n 28833: a4 = s1 + 0x100\n 28837: a2 = u64 [a4 + 0x38]\n 28840: a2 = a2 + 0x1\n 28843: a0 = a2 <u 0x1\n 28846: a3 = u64 [a4 + 0x30]\n 28849: a3 = a3 + a0\n 28852: a0 = a2 | a3\n 28855: a0 = a0 <u 0x1\n 28858: a1 = u64 [a4 + 0x20]\n 28861: a0 = a0 + a1\n 28864: a1 = a0 <u a1\n 28867: t2 = u64 [s1 + 0x128]\n 28871: t2 = t2 + a1\n 28874: ra = a0\n 28876: jump @1036\n      : @1072 (gas: 3)\n 28879: a0 = s1 + 0x2440\n 28883: a1 = 0x40\n 28886: ra = 1148, jump @17\n      : @1073 [@dyn 574] (gas: 14)\n 28892: a2 = s1 + 0x20b8\n 28896: t0 = u64 [a2 + 0x3a0]\n 28900: a1 = a2 + 0x300\n 28904: a5 = u64 [a1 + 0x98]\n 28908: a4 = u64 [a1 + 0x90]\n 28912: a0 = u64 [a1 + 0x88]\n 28916: a3 = a4 | t0\n 28919: a1 = a0 | a5\n 28922: a1 = a1 | a3\n 28925: a1 = a1 >> 0x20\n 28928: a3 = a3 | a5\n 28931: a3 = a3 << 0x20\n 28934: a1 = a1 | a3\n 28937: jump @1123 if a1 != 0\n      : @1074 (gas: 11)\n 28941: u64 [a2 + 888] = 0\n 28945: u64 [a2 + 880] = 0\n 28949: u64 [a2 + 872] = 0\n 28953: a3 = 0x8c379a000000000\n 28963: a1 = s1 + 0x2420\n 28967: u64 [a2 + 0x380] = a3\n 28971: u64 [s1 + 0x138] = a0\n 28975: u64 [s1 + 0x130] = a4\n 28979: u64 [s1 + 0x120] = t0\n 28983: u64 [s1 + 0x128] = a5\n 28987: ra = 1150, jump @19\n      : @1075 [@dyn 575] (gas: 6)\n 28993: a5 = s1 + 0x100\n 28997: a1 = u64 [a5 + 0x38]\n 29000: a0 = u64 [a5 + 0x28]\n 29003: a3 = u64 [a5 + 0x20]\n 29006: a3 = a3 | a0\n 29009: t0 = 1152, jump @1957\n      : @1076 [@dyn 576] (gas: 1)\n 29015: jump @1123 if a0 == 0\n      : @1077 (gas: 1)\n 29019: t0 = 1154, jump @2028\n      : @1078 [@dyn 577] (gas: 8)\n 29025: u64 [a2 + 864] = 0\n 29029: u64 [a2 + 856] = 0\n 29033: u64 [a2 + 840] = 0x20\n 29038: a1 = s1 + 0x2400\n 29042: u64 [a2 + 848] = 0\n 29046: u64 [s1 + 0x128] = a3\n 29050: u64 [s1 + 0x120] = a4\n 29054: ra = 1156, jump @19\n      : @1079 [@dyn 578] (gas: 10)\n 29060: a2 = s1 + 0x100\n 29064: a4 = u64 [a2 + 0x28]\n 29067: a3 = u64 [a2 + 0x30]\n 29070: a1 = u64 [a2 + 0x38]\n 29073: a0 = u64 [a2 + 0x20]\n 29076: a0 = a0 + 0xffffffffffffffdc\n 29079: a0 = a1 <u a0\n 29082: a0 = 0 if a3 != 0\n 29084: a0 = 0 if a4 != 0\n 29086: jump @1123 if a0 == 0\n      : @1080 (gas: 8)\n 29090: i32 a0 = a1 + 0x24\n 29093: a2 = s1 + 0x20b8\n 29097: u64 [a2 + 832] = 0\n 29101: u64 [a2 + 824] = 0\n 29105: u64 [a2 + 808] = 0x15\n 29110: a1 = s1 + 0x23e0\n 29114: u64 [a2 + 816] = 0\n 29118: ra = 1158, jump @19\n      : @1081 [@dyn 579] (gas: 1)\n 29124: t0 = 1160, jump @1956\n      : @1082 [@dyn 580] (gas: 1)\n 29130: jump @1123 if a0 == 0\n      : @1083 (gas: 13)\n 29134: i32 a0 = a3 + 0x44\n 29137: a1 = u64 [0x20070]\n 29142: a2 = u64 [0x20078]\n 29147: a4 = s1 + 0x20b8\n 29151: a3 = a4 + 0x300\n 29155: u64 [a3 + 0x20] = a1\n 29158: u64 [a3 + 0x18] = a2\n 29161: a1 = 0x6973686564000000\n 29171: u64 [a3 + 0x10] = a1\n 29174: a1 = s1 + 0x23c0\n 29178: u64 [a4 + 776] = 0\n 29182: ra = 0x404\n 29186: jump @19\n      : @1084 (gas: 3)\n 29189: a0 = s1 + 0x2b80\n 29193: a1 = 0x40\n 29196: ra = 1162, jump @17\n      : @1085 [@dyn 581] (gas: 14)\n 29202: a2 = s1 + 0x28b8\n 29206: t0 = u64 [a2 + 0x2e0]\n 29210: a1 = a2 + 0x200\n 29214: a5 = u64 [a1 + 0xd8]\n 29218: a4 = u64 [a1 + 0xd0]\n 29222: a0 = u64 [a1 + 0xc8]\n 29226: a3 = a4 | t0\n 29229: a1 = a0 | a5\n 29232: a1 = a1 | a3\n 29235: a1 = a1 >> 0x20\n 29238: a3 = a3 | a5\n 29241: a3 = a3 << 0x20\n 29244: a1 = a1 | a3\n 29247: jump @1123 if a1 != 0\n      : @1086 (gas: 22)\n 29251: a1 = a0 + 0x20\n 29254: u64 [s1 + 0x130] = a1\n 29258: t1 = a1 <u a0\n 29261: a1 = a4 + t1\n 29264: u64 [s1 + 0x138] = a1\n 29268: a1 = a1 <u a4\n 29271: a1 = t1 if t1 == 0\n 29274: a1 = a1 + a5\n 29277: u64 [s1 + 0x120] = a1\n 29281: a1 = a1 <u a5\n 29284: a1 = a1 + t0\n 29287: u64 [s1 + 0x128] = a1\n 29291: u64 [a2 + 704] = 0\n 29295: u64 [a2 + 696] = 0\n 29299: u64 [a2 + 688] = 0\n 29303: a1 = s1 + 0x2b60\n 29307: u64 [a2 + 680] = 0x20\n 29312: u64 [s1 + 0xd0] = a0\n 29316: u64 [s1 + 0xc8] = a4\n 29320: u64 [s1 + 0xc0] = t0\n 29324: u64 [s1 + 0xb8] = a5\n 29328: ra = 1164, jump @19\n      : @1087 [@dyn 582] (gas: 3)\n 29334: a0 = s1 + 0x2b40\n 29338: a1 = u64 [s1 + 0x68]\n 29341: ra = 1166, jump @17\n      : @1088 [@dyn 583] (gas: 13)\n 29347: a5 = s1 + 0x100\n 29351: a0 = u64 [a5 + 0x30]\n 29354: a3 = u64 [a5 + 0x20]\n 29357: a2 = a0 | a3\n 29360: a1 = u64 [a5 + 0x38]\n 29363: a4 = u64 [a5 + 0x28]\n 29366: a1 = a1 | a4\n 29369: a2 = a2 | a1\n 29372: a2 = a2 >> 0x20\n 29375: a1 = a1 | a3\n 29378: a1 = a1 << 0x20\n 29381: a1 = a1 | a2\n 29384: jump @1123 if a1 != 0\n      : @1089 (gas: 16)\n 29388: a5 = s1 + 0x28b8\n 29392: a4 = u64 [a5 + 0x2a0]\n 29396: a1 = u64 [a5 + 0x298]\n 29400: a2 = u64 [a5 + 0x290]\n 29404: a3 = u64 [a5 + 0x288]\n 29408: u64 [s1 + 0xd8] = a3\n 29412: u64 [a5 + 0x268] = a3\n 29416: u64 [s1 + 0xe0] = a2\n 29420: a3 = a5 + 0x200\n 29424: u64 [a3 + 0x70] = a2\n 29427: u64 [s1 + 0xe8] = a1\n 29431: u64 [a3 + 0x78] = a1\n 29434: a1 = s1 + 0x2b20\n 29438: u64 [s1 + 0xf0] = a4\n 29442: u64 [a3 + 0x80] = a4\n 29446: ra = 1168, jump @19\n      : @1090 [@dyn 584] (gas: 24)\n 29452: t0 = 0\n 29454: a4 = 0\n 29456: ra = 0\n 29458: t2 = 0\n 29460: a1 = u64 [s1 + 0xd0]\n 29464: a0 = a1 + 0x40\n 29467: a3 = s1 + 0x100\n 29471: u64 [a3 + 0x30] = a0\n 29474: a0 = a0 <u a1\n 29477: a2 = u64 [s1 + 0xc8]\n 29481: a1 = a2 + a0\n 29484: u64 [a3 + 0x28] = a1\n 29487: a1 = a1 <u a2\n 29490: a1 = a0 if a0 == 0\n 29493: a0 = u64 [s1 + 0xb8]\n 29497: a1 = a1 + a0\n 29500: u64 [a3 + 0x20] = a1\n 29503: a0 = a1 <u a0\n 29506: a1 = u64 [s1 + 0xc0]\n 29510: a0 = a0 + a1\n 29513: u64 [a3 + 0x38] = a0\n 29516: a1 = u64 [s1 + 0x38]\n 29519: t1 = u64 [s1 + 0x30]\n 29522: fallthrough\n      : @1091 (gas: 17)\n 29523: a0 = u64 [s1 + 0xd8]\n 29527: a0 = t0 <u a0\n 29530: a2 = u64 [s1 + 0xe0]\n 29534: a3 = a4 ^ a2\n 29537: u64 [s1 + 0x118] = a4\n 29541: a2 = a4 <u a2\n 29544: a2 = a0 if a3 == 0\n 29547: a5 = u64 [s1 + 0xe8]\n 29551: a0 = ra <u a5\n 29554: a3 = u64 [s1 + 0xf0]\n 29558: a4 = t2 ^ a3\n 29561: a3 = t2 <u a3\n 29564: a3 = a0 if a4 == 0\n 29567: a0 = ra ^ a5\n 29570: a0 = a0 | a4\n 29573: a3 = a2 if a0 == 0\n 29576: jump @1097 if a3 == 0\n      : @1092 (gas: 10)\n 29580: a0 = a1 | t1\n 29583: a2 = u64 [s1 + 0x48]\n 29586: a3 = u64 [s1 + 0x40]\n 29589: a2 = a2 | a3\n 29592: a0 = a0 | a2\n 29595: a0 = a0 >> 0x20\n 29598: a2 = a2 | t1\n 29601: a2 = a2 << 0x20\n 29604: a0 = a0 | a2\n 29607: jump @1123 if a0 != 0\n      : @1093 (gas: 7)\n 29611: u64 [s1 + 0x100] = ra\n 29615: u64 [s1 + 0x108] = t2\n 29619: u64 [s1 + 0x110] = t0\n 29623: u64 [s1 + 0x30] = t1\n 29626: a0 = s1 + 0x2b00\n 29630: u64 [s1 + 0x38] = a1\n 29633: ra = 1170, jump @17\n      : @1094 [@dyn 585] (gas: 13)\n 29639: a1 = s1 + 0x100\n 29643: a5 = u64 [a1 + 0x30]\n 29646: a4 = u64 [a1 + 0x20]\n 29649: a0 = a5 | a4\n 29652: a3 = u64 [a1 + 0x38]\n 29655: a2 = u64 [a1 + 0x28]\n 29658: a1 = a2 | a3\n 29661: a0 = a0 | a1\n 29664: a0 = a0 >> 0x20\n 29667: a1 = a1 | a4\n 29670: a1 = a1 << 0x20\n 29673: a0 = a0 | a1\n 29676: jump @1123 if a0 != 0\n      : @1095 (gas: 17)\n 29680: a0 = s1 + 0x28b8\n 29684: u64 [s1 + 0x120] = a4\n 29688: a4 = a0\n 29690: t0 = u64 [a0 + 0x260]\n 29694: a1 = u64 [a0 + 0x258]\n 29698: a0 = u64 [a0 + 0x250]\n 29702: u64 [s1 + 0x138] = a3\n 29706: a3 = u64 [a4 + 0x248]\n 29710: u64 [a4 + 0x228] = a3\n 29714: u64 [a4 + 0x230] = a0\n 29718: u64 [a4 + 0x238] = a1\n 29722: a1 = s1 + 0x2ae0\n 29726: u64 [a4 + 0x240] = t0\n 29730: a0 = a5\n 29732: u64 [s1 + 0x130] = a5\n 29736: u64 [s1 + 0x128] = a2\n 29740: ra = 1172, jump @19\n      : @1096 [@dyn 586] (gas: 51)\n 29746: a1 = u64 [s1 + 0x130]\n 29750: a0 = a1 + 0x20\n 29753: u64 [s1 + 0xf8] = a0\n 29757: a2 = a0 <u a1\n 29760: a0 = u64 [s1 + 0x128]\n 29764: t1 = a0 + a2\n 29767: a3 = t1 <u a0\n 29770: a3 = a2 if a2 == 0\n 29773: a0 = u64 [s1 + 0x120]\n 29777: a2 = a0 + a3\n 29780: a3 = a2 <u a0\n 29783: a0 = u64 [s1 + 0x138]\n 29787: a0 = a0 + a3\n 29790: u64 [s1 + 0x138] = a0\n 29794: a0 = u64 [s1 + 0x38]\n 29797: a3 = a0 + 0x20\n 29800: a4 = a3 <u a0\n 29803: a0 = u64 [s1 + 0x40]\n 29806: a5 = a0 + a4\n 29809: a0 = a5 <u a0\n 29812: a0 = a4 if a4 == 0\n 29815: a1 = u64 [s1 + 0x30]\n 29818: a0 = a0 + a1\n 29821: a4 = a0 <u a1\n 29824: a1 = u64 [s1 + 0x48]\n 29827: a1 = a1 + a4\n 29830: u64 [s1 + 0x48] = a1\n 29833: t0 = u64 [s1 + 0x110]\n 29837: t0 = t0 + 0x1\n 29840: a4 = t0 <u 0x1\n 29843: t2 = u64 [s1 + 0x118]\n 29847: t2 = t2 + a4\n 29850: a4 = t0 | t2\n 29853: a4 = a4 <u 0x1\n 29856: a1 = u64 [s1 + 0x100]\n 29860: a4 = a4 + a1\n 29863: a1 = a4 <u a1\n 29866: ra = u64 [s1 + 0x108]\n 29870: ra = ra + a1\n 29873: a1 = u64 [s1 + 0xf8]\n 29877: u64 [s1 + 0x130] = a1\n 29881: u64 [s1 + 0x128] = t1\n 29885: u64 [s1 + 0x120] = a2\n 29889: a1 = a3\n 29891: u64 [s1 + 0x40] = a5\n 29894: t1 = a0\n 29896: a0 = a4\n 29898: a4 = t2\n 29900: t2 = ra\n 29902: ra = a0\n 29904: jump @1091\n      : @1097 (gas: 30)\n 29907: a0 = u64 [s1 + 0xd0]\n 29911: t2 = u64 [s1 + 0x130]\n 29915: t0 = t2 <u a0\n 29918: a5 = u64 [s1 + 0xc8]\n 29922: a1 = u64 [s1 + 0x128]\n 29926: a3 = a1 ^ a5\n 29929: a2 = a1 <u a5\n 29932: a2 = t0 if a3 == 0\n 29935: a3 = u64 [s1 + 0xb8]\n 29939: a4 = u64 [s1 + 0x120]\n 29943: ra = a4 - a3\n 29946: t1 = a4 <u a3\n 29949: a4 = u64 [s1 + 0xc0]\n 29953: a3 = u64 [s1 + 0x138]\n 29957: a4 = a3 - a4\n 29960: a4 = a4 - t1\n 29963: a3 = ra <u a2\n 29966: a3 = a4 - a3\n 29969: a4 = ra - a2\n 29972: a2 = a1 - a5\n 29975: a2 = a2 - t0\n 29978: a1 = t2 - a0\n 29981: a2 = a2 | a3\n 29984: a3 = a1 | a4\n 29987: a3 = a3 | a2\n 29990: a2 = a2 | a4\n 29993: a3 = a3 >> 0x20\n 29996: a2 = a2 << 0x20\n 29999: a2 = a2 | a3\n 30002: jump @1123 if a2 != 0\n      : @1098 (gas: 1)\n 30006: jump @1015\n      : @1099 (gas: 6)\n 30009: u64 [s1 + 208] = 0x2710\n 30015: a0 = u64 [s1 + 0x138]\n 30019: a2 = a0 + 0xffffffffffffff80\n 30022: a0 = u64 [s1 + 0x80]\n 30026: a1 = u64 [s1 + 0x88]\n 30030: ra = 1174, jump @2038\n      : @1100 [@dyn 587] (gas: 6)\n 30036: u64 [s1 + 0xf8] = a0\n 30040: u64 [s1 + 0x100] = a1\n 30044: a0 = u64 [s1 + 0x98]\n 30048: a1 = u64 [s1 + 0x90]\n 30052: a2 = u64 [s1 + 0x138]\n 30056: ra = 1176, jump @2038\n      : @1101 [@dyn 588] (gas: 7)\n 30062: u64 [s1 + 0xe0] = a0\n 30066: u64 [s1 + 0xe8] = a1\n 30070: a1 = u64 [s1 + 0x138]\n 30074: a2 = 0x80 - a1\n 30078: a0 = u64 [s1 + 0x80]\n 30082: a1 = u64 [s1 + 0x88]\n 30086: ra = 1178, jump @2043\n      : @1102 [@dyn 589] (gas: 21)\n 30092: a2 = u64 [s1 + 0xe8]\n 30096: a1 = a1 | a2\n 30099: a5 = s1 + 0x100\n 30103: a2 = u64 [a5 + 0x38]\n 30106: a3 = a2 <u 0x80\n 30110: u64 [s1 + 0xe8] = a3\n 30114: a4 = u64 [a5]\n 30116: a1 = a4 if a3 == 0\n 30119: a4 = u64 [s1 + 0x90]\n 30123: a1 = a4 if a2 == 0\n 30126: u64 [a5] = a1\n 30128: a1 = u64 [s1 + 0xe0]\n 30132: a0 = a0 | a1\n 30135: a1 = u64 [s1 + 0xf8]\n 30139: a0 = a1 if a3 == 0\n 30142: a1 = u64 [s1 + 0x98]\n 30146: a0 = a1 if a2 == 0\n 30149: u64 [s1 + 0xf8] = a0\n 30153: a0 = u64 [s1 + 0x80]\n 30157: a1 = u64 [s1 + 0x88]\n 30161: ra = 1180, jump @2038\n      : @1103 [@dyn 590] (gas: 12)\n 30167: a5 = 0\n 30169: a2 = u64 [s1 + 0xe8]\n 30173: a1 = 0 if a2 == 0\n 30175: a0 = 0 if a2 == 0\n 30177: a4 = u64 [s1 + 0xd0]\n 30181: a2 = a4 + 0xffffffffffffffff\n 30184: u64 [s1 + 0xc8] = a2\n 30188: a2 = a4 >u 0\n 30190: a2 = a2 + 0xffffffffffffffff\n 30193: u64 [s1 + 0xc0] = a2\n 30197: ra = u64 [s1 + 0xf0]\n 30201: fallthrough\n      : @1104 (gas: 92)\n 30202: u64 [s1 + 0xe0] = a1\n 30206: u64 [s1 + 0xe8] = a5\n 30210: u64 [s1 + 216] = 0\n 30214: a1 = u64 [s1 + 0xf8]\n 30218: a2 = a1 >> 0x3f\n 30221: a5 = u64 [s1 + 0x100]\n 30225: a3 = a5 << 0x1\n 30228: t1 = a3 | a2\n 30231: a2 = a1 << 0x1\n 30234: a4 = ra >> 0x3f\n 30237: a4 = a4 | a2\n 30240: u64 [s1 + 0xf0] = a4\n 30244: a3 = u64 [s1 + 0xc0]\n 30248: a1 = a3 ^ t1\n 30251: u64 [s1 + 0xf8] = a1\n 30255: a1 = a3 <u t1\n 30258: a2 = u64 [s1 + 0xc8]\n 30262: t0 = a2 <u a4\n 30265: a2 = u64 [s1 + 0xf8]\n 30269: t0 = a1 if a2 != 0\n 30272: a1 = u64 [s1 + 0xe0]\n 30276: a1 = a1 << 0x1\n 30279: a4 = a0 >> 0x3f\n 30282: a1 = a1 | a4\n 30285: u64 [s1 + 0xe0] = a1\n 30289: a4 = a5 >> 0x3f\n 30292: a0 = a0 << 0x1\n 30295: a4 = a4 | a0\n 30298: a0 = ra << 0x1\n 30301: a1 = u64 [s1 + 0x128]\n 30305: a5 = a1 >> 0x3f\n 30308: a0 = a0 | a5\n 30311: u64 [s1 + 0x100] = a0\n 30315: a5 = a1 << 0x1\n 30318: a0 = u64 [s1 + 0x120]\n 30322: a1 = a0 >> 0x3f\n 30325: a1 = a1 | a5\n 30328: a5 = a0 << 0x1\n 30331: a0 = u64 [s1 + 0x130]\n 30335: ra = a0 >> 0x3f\n 30338: a5 = a5 | ra\n 30341: a0 = a0 << 0x1\n 30344: a2 = u64 [s1 + 0xe8]\n 30348: a0 = a0 | a2\n 30351: u64 [s1 + 0x130] = a0\n 30355: a0 = a5 | 0\n 30357: u64 [s1 + 0x120] = a0\n 30361: a0 = a1 | 0\n 30363: u64 [s1 + 0x128] = a0\n 30367: a0 = u64 [s1 + 0x100]\n 30371: ra = a0 | 0\n 30373: a0 = a3 - a4\n 30376: a0 = a0 <u t0\n 30379: a1 = a3 <u a4\n 30382: t2 = u64 [s1 + 0xe0]\n 30386: a5 = a3 - t2\n 30389: a5 = a5 - a1\n 30392: a5 = a5 - a0\n 30395: t0 = a5 >>a 0x3f\n 30398: a0 = u64 [s1 + 0xd0]\n 30402: a0 = t0 & a0\n 30405: a2 = u64 [s1 + 0xf0]\n 30409: a1 = a2 - a0\n 30412: u64 [s1 + 0xf8] = a1\n 30416: a1 = a2 <u a0\n 30419: a0 = t1 - a1\n 30422: u64 [s1 + 0x100] = a0\n 30426: a1 = 0 if t1 != 0\n 30428: a0 = a4 - a1\n 30431: a1 = a4 <u a1\n 30434: a1 = t2 - a1\n 30437: a3 = u64 [s1 + 0x138]\n 30441: a5 = u64 [s1 + 0x118]\n 30445: a2 = a3 | a5\n 30448: a2 = a2 <u 0x1\n 30451: a4 = u64 [s1 + 0x108]\n 30455: t1 = a4 <u a2\n 30458: a4 = a4 - a2\n 30461: a2 = a3 <u 0x1\n 30464: a5 = a5 - a2\n 30467: a2 = u64 [s1 + 0x110]\n 30471: a2 = a2 - t1\n 30474: a3 = a3 + 0xffffffffffffffff\n 30477: u64 [s1 + 0x118] = a5\n 30481: u64 [s1 + 0x110] = a2\n 30485: a2 = a2 | a5\n 30488: u64 [s1 + 0x138] = a3\n 30492: a3 = a3 | a4\n 30495: a2 = a2 | a3\n 30498: a5 = t0 & 0x1\n 30501: u64 [s1 + 0x108] = a4\n 30505: jump @1104 if a2 != 0\n      : @1105 (gas: 19)\n 30509: a2 = u64 [s1 + 0x128]\n 30513: a0 = a2 >> 0x3f\n 30516: a1 = ra << 0x1\n 30519: a0 = a0 | a1\n 30522: a3 = u64 [s1 + 0x120]\n 30526: a1 = a3 >> 0x3f\n 30529: a2 = a2 << 0x1\n 30532: a1 = a1 | a2\n 30535: a4 = u64 [s1 + 0x130]\n 30539: a2 = a4 >> 0x3f\n 30542: a3 = a3 << 0x1\n 30545: a4 = a4 << 0x1\n 30548: t0 = a5 | a4\n 30551: a4 = u64 [s1 + 0xd8]\n 30555: a2 = a2 | a4\n 30558: ra = a2 | a3\n 30561: t2 = a4 | a1\n 30564: t1 = a4 | a0\n 30567: fallthrough\n      : @1106 (gas: 23)\n 30568: u64 [s1 + 0x100] = t1\n 30572: u64 [s1 + 0x108] = t2\n 30576: u64 [s1 + 0x110] = ra\n 30580: u64 [s1 + 0x118] = t0\n 30584: a1 = s1 + 0x10b8\n 30588: u64 [a1 + 0x208] = t0\n 30592: a0 = u64 [s1 + 0x60]\n 30595: a2 = a1 + 0x200\n 30599: u64 [a2 + 0x28] = a0\n 30602: u64 [a1 + 0x210] = ra\n 30606: a0 = u64 [s1 + 0x68]\n 30609: u64 [a2 + 0x30] = a0\n 30612: u64 [a1 + 0x218] = t2\n 30616: a0 = u64 [s1 + 0x70]\n 30619: u64 [a2 + 0x38] = a0\n 30622: u64 [a1 + 0x220] = t1\n 30626: a4 = a1\n 30628: a0 = s1 + 0x1300\n 30632: a1 = s1 + 0x12e0\n 30636: a2 = s1 + 0x12c0\n 30640: a3 = u64 [s1 + 0x78]\n 30643: u64 [a4 + 0x240] = a3\n 30647: ra = 1182, jump @1570\n      : @1107 [@dyn 591] (gas: 2)\n 30653: a0 = 0x1000\n 30657: t0 = 1184, jump @2015\n      : @1108 [@dyn 592] (gas: 14)\n 30663: a0 = u64 [a5 + 0x60]\n 30666: u64 [s1 + 0x138] = a0\n 30670: a0 = u64 [a5 + 0x58]\n 30673: u64 [s1 + 0x130] = a0\n 30677: a2 = u64 [s1 + 0x90]\n 30681: a0 = a2 >> 0x4\n 30684: a3 = u64 [s1 + 0x80]\n 30688: a1 = a3 << 0x3c\n 30691: a0 = a0 | a1\n 30694: a1 = u64 [a5 + 0x50]\n 30697: a5 = a4\n 30699: u64 [s1 + 0x128] = a1\n 30703: a1 = u64 [s1 + 0x98]\n 30707: t0 = 1186, jump @2010\n      : @1109 [@dyn 593] (gas: 2)\n 30713: a3 = u64 [s1 + 0x88]\n 30717: t0 = 1188, jump @2035\n      : @1110 [@dyn 594] (gas: 5)\n 30723: a2 = u64 [a5 + 0x248]\n 30727: u64 [s1 + 0x120] = a2\n 30731: a0 = a0 | a3\n 30734: a4 = a1 if a0 == 0\n 30737: jump @1112 if a4 != 0\n      : @1111 (gas: 9)\n 30740: a0 = u64 [s1 + 0xb8]\n 30744: a0 = a0 << 0x20\n 30747: a0 = a0 >> 0x20\n 30750: u64 [s1 + 0x110] = a0\n 30754: a0 = u64 [s1 + 0xa8]\n 30758: a0 = a0 << 0x20\n 30761: a0 = a0 >> 0x20\n 30764: u64 [s1 + 0x118] = a0\n 30768: jump @1115\n      : @1112 (gas: 8)\n 30771: a1 = s1 + 0x38b8\n 30775: u64 [a1 + 64] = 0\n 30778: u64 [a1 + 56] = 0\n 30781: u64 [a1 + 48] = 0\n 30784: u64 [a1 + 40] = 0x7\n 30788: a0 = s1 + 0x12a0\n 30792: a1 = s1 + 0x38e0\n 30796: ra = 1190, jump @21\n      : @1113 [@dyn 595] (gas: 67)\n 30802: a0 = s1 + 0x10b8\n 30806: a2 = a0 + 0x100\n 30810: a1 = u64 [a2 + 0xe8]\n 30814: u64 [s1 + 0xf8] = a1\n 30818: a1 = u64 [a2 + 0xf8]\n 30822: u64 [s1 + 0xf0] = a1\n 30826: a0 = u64 [a2 + 0xf0]\n 30830: u64 [s1 + 0xe8] = a0\n 30834: ecalli 11 // 'ref_time_left'\n 30836: a1 = u64 [s1 + 0xe8]\n 30840: a1 = reverse a1\n 30842: a2 = a1 << 0x20\n 30845: a3 = u64 [s1 + 0xf0]\n 30849: a3 = reverse a3\n 30851: a3 = a3 >> 0x20\n 30854: a2 = a2 | a3\n 30857: a1 = a1 >> 0x20\n 30860: a3 = u64 [s1 + 0xf8]\n 30864: a3 = reverse a3\n 30866: a4 = a3 << 0x20\n 30869: a1 = a1 | a4\n 30872: a3 = a3 >> 0x20\n 30875: a4 = u64 [s1 + 0xb8]\n 30879: u32 [a4 + 0x10] = a3\n 30882: u64 [a4 + 0x8] = a1\n 30885: u64 [a4] = a2\n 30887: a1 = u64 [s1 + 0x100]\n 30891: a2 = s1 + 0x38b8\n 30895: u64 [a2 + 0x60] = a1\n 30898: a1 = u64 [s1 + 0x108]\n 30902: u64 [a2 + 0x58] = a1\n 30905: a1 = u64 [s1 + 0x110]\n 30909: u64 [a2 + 0x50] = a1\n 30912: a1 = u64 [s1 + 0x118]\n 30916: u64 [a2 + 0x48] = a1\n 30919: u32 [a2 + 104] = 0\n 30922: a0 = a0 >u 0x8fc\n 30926: a1 = -a0\n 30928: u64 [a2 + 0xa0] = a1\n 30932: u64 [a2 + 0x98] = a1\n 30936: u64 [a2 + 0x90] = a1\n 30940: u64 [a2 + 0x88] = a1\n 30944: a1 = a4 << 0x20\n 30947: a1 = a1 >> 0x20\n 30950: a0 = a0 << 0x23\n 30953: u64 [s1 + 0x110] = a1\n 30957: a0 = a0 | a1\n 30960: a1 = s1 + 0x3900\n 30964: a1 = a1 << 0x20\n 30967: a1 = a1 >> 0x20\n 30970: a2 = s1 + 0x3940\n 30974: a2 = a2 << 0x20\n 30977: a3 = a2 | a1\n 30980: a1 = u64 [s1 + 0xa8]\n 30984: a1 = a1 << 0x20\n 30987: a4 = a1 >> 0x20\n 30990: a1 = s1 + 0x3920\n 30994: a1 = a1 << 0x20\n 30997: a5 = a1 | a4\n 31000: a1 = 0xffffffffffffffff\n 31003: a2 = 0xffffffffffffffff\n 31006: u64 [s1 + 0x118] = a4\n 31010: ecalli 2 // 'call'\n 31012: a0 = a0 <u 0x1\n 31015: u64 [s1 + 0x108] = a0\n 31019: a0 = s1 + 0x1280\n 31023: ra = 1192, jump @1578\n      : @1114 [@dyn 596] (gas: 11)\n 31029: a0 = s1 + 0x10b8\n 31033: u64 [a0 + 448] = 0\n 31037: u64 [a0 + 440] = 0\n 31041: a1 = u64 [s1 + 0x108]\n 31045: u64 [a0 + 0x1a8] = a1\n 31049: a1 = a0\n 31051: a0 = s1 + 0x1260\n 31055: u64 [a1 + 432] = 0\n 31059: ra = 0x4aa\n 31063: t0 = 0x6d0\n 31067: jump @1953\n      : @1115 [@dyn 597] (gas: 3)\n 31070: a0 = s1 + 0x1240\n 31074: a1 = u64 [s1 + 0xb0]\n 31078: ra = 1196, jump @21\n      : @1116 [@dyn 598] (gas: 69)\n 31084: a2 = s1 + 0x10b8\n 31088: a4 = a2 + 0x100\n 31092: a0 = u64 [a4 + 0x90]\n 31096: a1 = u64 [a4 + 0x88]\n 31100: a3 = u64 [a4 + 0x98]\n 31104: u64 [s1 + 0x108] = a3\n 31108: a2 = a0 << 0x38\n 31111: a1 = a1 >> 0x8\n 31114: a1 = a1 | a2\n 31117: u64 [s1 + 0x100] = a1\n 31121: a1 = a3 << 0x38\n 31124: a0 = a0 >> 0x8\n 31127: a0 = a0 | a1\n 31130: u64 [s1 + 0xf8] = a0\n 31134: ecalli 11 // 'ref_time_left'\n 31136: a1 = u64 [s1 + 0xf8]\n 31140: a1 = reverse a1\n 31142: a2 = a1 >> 0x20\n 31145: a3 = u64 [s1 + 0x100]\n 31149: a3 = reverse a3\n 31151: a4 = a3 << 0x20\n 31154: a2 = a2 | a4\n 31157: a1 = a1 << 0x20\n 31160: a4 = u64 [s1 + 0x108]\n 31164: a4 = reverse a4\n 31166: a4 = a4 << 0x8\n 31169: a4 = a4 >> 0x20\n 31172: a1 = a1 | a4\n 31175: a3 = a3 >> 0x20\n 31178: a4 = u64 [s1 + 0xb8]\n 31182: u32 [a4 + 0x10] = a3\n 31185: u64 [a4 + 0x8] = a2\n 31188: u64 [a4] = a1\n 31190: a2 = s1 + 0x38b8\n 31194: a1 = u64 [s1 + 0x138]\n 31198: u64 [a2 + 0xc0] = a1\n 31202: a1 = u64 [s1 + 0x130]\n 31206: u64 [a2 + 0xb8] = a1\n 31210: a1 = u64 [s1 + 0x128]\n 31214: u64 [a2 + 0xb0] = a1\n 31218: a1 = u64 [s1 + 0x120]\n 31222: u64 [a2 + 0xa8] = a1\n 31226: u32 [a2 + 200] = 0\n 31230: a0 = a0 >u 0x8fc\n 31234: a1 = -a0\n 31236: u64 [a2 + 0x100] = a1\n 31240: u64 [a2 + 0xf8] = a1\n 31244: u64 [a2 + 0xf0] = a1\n 31248: u64 [a2 + 0xe8] = a1\n 31252: a0 = a0 << 0x23\n 31255: a1 = u64 [s1 + 0x110]\n 31259: a0 = a0 | a1\n 31262: a1 = s1 + 0x3960\n 31266: a1 = a1 << 0x20\n 31269: a1 = a1 >> 0x20\n 31272: a2 = s1 + 0x39a0\n 31276: a2 = a2 << 0x20\n 31279: a3 = a2 | a1\n 31282: a1 = s1 + 0x3980\n 31286: a1 = a1 << 0x20\n 31289: a4 = u64 [s1 + 0x118]\n 31293: a5 = a1 | a4\n 31296: a1 = 0xffffffffffffffff\n 31299: a2 = 0xffffffffffffffff\n 31302: ecalli 2 // 'call'\n 31304: a0 = a0 <u 0x1\n 31307: u64 [s1 + 0x118] = a0\n 31311: a0 = s1 + 0x1220\n 31315: ra = 1198, jump @1578\n      : @1117 [@dyn 599] (gas: 10)\n 31321: a1 = s1 + 0x10b8\n 31325: u64 [a1 + 352] = 0\n 31329: u64 [a1 + 344] = 0\n 31333: a0 = u64 [s1 + 0x118]\n 31337: u64 [a1 + 0x148] = a0\n 31341: a0 = s1 + 0x1200\n 31345: u64 [a1 + 336] = 0\n 31349: ra = 0x4b0\n 31353: t0 = 0x6f2\n 31357: jump @1953\n      : @1118 [@dyn 600] (gas: 9)\n 31360: a0 = s1 + 0x38b8\n 31364: u64 [a0 + 288] = 0\n 31368: u64 [a0 + 280] = 0\n 31372: u64 [a0 + 272] = 0\n 31376: a1 = a0\n 31378: u64 [a1 + 264] = 0x4\n 31383: a0 = s1 + 0x11e0\n 31387: a1 = s1 + 0x39c0\n 31391: ra = 1202, jump @21\n      : @1119 [@dyn 601] (gas: 14)\n 31397: a0 = s1 + 0x10b8\n 31401: a2 = a0 + 0x100\n 31405: a1 = u64 [a2 + 0x40]\n 31408: a0 = s1 + 0x100\n 31412: u64 [a0] = a1\n 31414: a1 = u64 [a2 + 0x38]\n 31417: u64 [a0 + 0x8] = a1\n 31420: a1 = u64 [a2 + 0x30]\n 31423: u64 [a0 + 0x10] = a1\n 31426: a1 = u64 [a2 + 0x28]\n 31429: u64 [a0 + 0x18] = a1\n 31432: a0 = s1 + 0x11c0\n 31436: a1 = u64 [s1 + 0xb0]\n 31440: ra = 1204, jump @21\n      : @1120 [@dyn 602] (gas: 3)\n 31446: t0 = 0x4b6\n 31450: a1 = s1 + 0x10b8\n 31454: fallthrough\n      : @1121 [@dyn 603] (gas: 10)\n 31455: a2 = a1 + 0x100\n 31459: a0 = u64 [a2 + 0x18]\n 31462: u64 [s1 + 0xf8] = a0\n 31466: a0 = u64 [a2 + 0x10]\n 31469: u64 [s1 + 0xf0] = a0\n 31473: a0 = u64 [a2 + 0x8]\n 31476: u64 [s1 + 0xe8] = a0\n 31480: a0 = s1 + 0x11a0\n 31484: a1 = 0x40\n 31487: ra = 1208, jump @17\n      : @1122 [@dyn 604] (gas: 13)\n 31493: a4 = s1 + 0x10b8\n 31497: a0 = u64 [a4 + 0x100]\n 31501: a1 = u64 [a4 + 0xf8]\n 31505: a2 = u64 [a4 + 0xf0]\n 31509: a5 = u64 [a4 + 0xe8]\n 31513: a0 = a0 | a2\n 31516: a2 = a5 | a1\n 31519: a2 = a2 | a0\n 31522: a2 = a2 >> 0x20\n 31525: a0 = a0 | a1\n 31528: a0 = a0 << 0x20\n 31531: a0 = a0 | a2\n 31534: jump @1277 if a0 == 0\n      : @1123 (gas: 1)\n 31538: trap\n      : @1124 (gas: 9)\n 31539: a0 = sp + 0xffffffffffffffe0\n 31542: a0 = a0 & 0xffffffffffffffe0\n 31545: u64 [s1 + 0x138] = a0\n 31549: sp = a0\n 31551: a0 = u64 [s1 + 0x98]\n 31555: ra = 0x4ba\n 31559: ecalli 6 // 'caller'\n 31561: t0 = 0x4bc\n 31565: jump @1960\n      : @1125 [@dyn 605] (gas: 1)\n 31568: t0 = 1212, jump @1960\n      : @1126 [@dyn 606] (gas: 9)\n 31574: u64 [a2 + 1280] = 0\n 31578: a4 = a2 + 0x400\n 31582: u64 [a4 + 0xf8] = a1\n 31586: u64 [a4 + 0xf0] = a0\n 31590: a1 = s1 + 0x7ff\n 31594: a1 = a1 + 0x5a1\n 31598: u64 [a4 + 0xe8] = a3\n 31602: a0 = 0\n 31604: ra = 1214, jump @19\n      : @1127 [@dyn 607] (gas: 16)\n 31610: a0 = u64 [s1 + 0x10]\n 31613: a1 = s1 + 0x7ff\n 31617: a1 = a1 + 0xb9\n 31621: a2 = a1 + 0x400\n 31625: u64 [a2 + 0xe0] = a0\n 31629: a0 = u64 [s1 + 0x18]\n 31632: u64 [a2 + 0xd8] = a0\n 31636: a0 = u64 [s1 + 0x20]\n 31639: u64 [a2 + 0xd0] = a0\n 31643: a3 = a1\n 31645: a0 = 0x20\n 31648: a1 = s1 + 0x7ff\n 31652: a1 = a1 + 0x581\n 31656: a2 = u64 [s1 + 0x28]\n 31659: u64 [a3 + 0x4c8] = a2\n 31663: ra = 1216, jump @19\n      : @1128 [@dyn 608] (gas: 3)\n 31669: a0 = u64 [s1 + 0x38]\n 31672: a0 = i32 [a0]\n 31674: jump @1130 if a0 >u 63\n      : @1129 (gas: 4)\n 31678: a1 = u64 [s1 + 0x38]\n 31681: u32 [a1 + 0] = 0x40\n 31684: t0 = 0x4c2\n 31688: jump @2021\n      : @1130 (gas: 1)\n 31691: t0 = 1218, jump @2021\n      : @1131 [@dyn 609] (gas: 4)\n 31697: ra = 0x4c4\n 31701: ecalli 9 // 'hash_keccak_256'\n 31703: t0 = 0x4c6\n 31707: jump @1980\n      : @1132 [@dyn 610] (gas: 1)\n 31710: t0 = 1222, jump @1980\n      : @1133 [@dyn 611] (gas: 2)\n 31716: a0 = a0 + 0x561\n 31720: ra = 1224, jump @21\n      : @1134 [@dyn 612] (gas: 26)\n 31726: a5 = s1 + 0x7ff\n 31730: a5 = a5 + 0xb9\n 31734: a3 = u64 [a5 + 0x4a8]\n 31738: a0 = u64 [a5 + 0x4b0]\n 31742: a1 = u64 [a5 + 0x4b8]\n 31746: a2 = u64 [a5 + 0x4c0]\n 31750: a4 = u64 [s1 + 0x110]\n 31754: u64 [a5 + 0x460] = a4\n 31758: a4 = u64 [s1 + 0x118]\n 31762: u64 [a5 + 0x458] = a4\n 31766: a4 = u64 [s1 + 0x108]\n 31770: u64 [a5 + 0x450] = a4\n 31774: a4 = u64 [s1 + 0x100]\n 31778: u64 [a5 + 0x448] = a4\n 31782: a4 = a5 + 0x400\n 31786: u64 [a4 + 0x80] = a2\n 31790: u64 [a4 + 0x78] = a1\n 31793: u64 [a4 + 0x70] = a0\n 31796: a0 = s1 + 0x7ff\n 31800: a0 = a0 + 0x541\n 31804: a1 = s1 + 0x7ff\n 31808: a1 = a1 + 0x521\n 31812: a2 = s1 + 0x7ff\n 31816: a2 = a2 + 0x501\n 31820: u64 [a4 + 0x68] = a3\n 31823: ra = 1226, jump @1403\n      : @1135 [@dyn 613] (gas: 16)\n 31829: a3 = s1 + 0x7ff\n 31833: a3 = a3 + 0xb9\n 31837: a4 = a3 + 0x400\n 31841: a0 = u64 [a4 + 0xa0]\n 31845: a1 = u64 [a4 + 0x98]\n 31849: a2 = u64 [a4 + 0x90]\n 31853: a3 = u64 [a4 + 0x88]\n 31857: a4 = s1 + 0x30b8\n 31861: a5 = a4 + 0x400\n 31865: u64 [a5 + 0xa0] = a0\n 31869: u64 [a5 + 0x98] = a1\n 31873: u64 [a5 + 0x90] = a2\n 31877: u64 [a5 + 0x88] = a3\n 31881: a1 = s1 + 0x3540\n 31885: a0 = u64 [s1 + 0x138]\n 31889: ra = 1228, jump @25\n      : @1136 [@dyn 614] (gas: 6)\n 31895: a0 = sp + 0xffffffffffffffe0\n 31898: a5 = a0 & 0xffffffffffffffe0\n 31901: sp = a5\n 31903: a1 = u64 [s1 + 0xa0]\n 31907: a0 = a1 + 0x11\n 31910: t0 = 1230, jump @2007\n      : @1137 [@dyn 615] (gas: 10)\n 31916: a4 = a4 + a1\n 31919: a1 = a5\n 31921: u64 [s1 + 0x138] = a5\n 31925: u64 [a5 + 0x18] = a4\n 31928: u64 [a5 + 0x10] = a3\n 31931: u64 [a5 + 0x8] = a2\n 31934: u64 [a5] = a0\n 31936: a0 = s1 + 0x7ff\n 31940: a0 = a0 + 0x4e1\n 31944: ra = 1232, jump @21\n      : @1138 [@dyn 616] (gas: 26)\n 31950: a4 = s1 + 0x7ff\n 31954: a4 = a4 + 0xb9\n 31958: a3 = u64 [a4 + 0x428]\n 31962: a0 = u64 [a4 + 0x430]\n 31966: a1 = u64 [a4 + 0x438]\n 31970: a2 = u64 [a4 + 0x440]\n 31974: a5 = u64 [s1 + 0x110]\n 31978: u64 [a4 + 0x3e0] = a5\n 31982: a5 = u64 [s1 + 0x118]\n 31986: u64 [a4 + 0x3d8] = a5\n 31990: a5 = u64 [s1 + 0x108]\n 31994: u64 [a4 + 0x3d0] = a5\n 31998: a5 = u64 [s1 + 0x100]\n 32002: u64 [a4 + 0x3c8] = a5\n 32006: u64 [a4 + 0x400] = a2\n 32010: a5 = a4 + 0x300\n 32014: u64 [a5 + 0xf8] = a1\n 32018: u64 [a5 + 0xf0] = a0\n 32022: a0 = s1 + 0x7ff\n 32026: a0 = a0 + 0x4c1\n 32030: a1 = s1 + 0x7ff\n 32034: a1 = a1 + 0x4a1\n 32038: a2 = s1 + 0x7ff\n 32042: a2 = a2 + 0x481\n 32046: u64 [a5 + 0xe8] = a3\n 32050: ra = 1234, jump @1403\n      : @1139 [@dyn 617] (gas: 16)\n 32056: a3 = s1 + 0x7ff\n 32060: a3 = a3 + 0xb9\n 32064: a4 = a3 + 0x400\n 32068: a0 = u64 [a4 + 0x20]\n 32071: a1 = u64 [a4 + 0x18]\n 32074: a2 = u64 [a4 + 0x10]\n 32077: a3 = u64 [a4 + 0x8]\n 32080: a4 = s1 + 0x30b8\n 32084: a5 = a4 + 0x400\n 32088: u64 [a5 + 0xc0] = a0\n 32092: u64 [a5 + 0xb8] = a1\n 32096: u64 [a5 + 0xb0] = a2\n 32100: u64 [a5 + 0xa8] = a3\n 32104: a1 = s1 + 0x3560\n 32108: a0 = u64 [s1 + 0x138]\n 32112: ra = 1236, jump @25\n      : @1140 [@dyn 618] (gas: 42)\n 32118: a0 = sp + 0xffffffffffffffe0\n 32121: a4 = a0 & 0xffffffffffffffe0\n 32124: u64 [s1 + 0x130] = a4\n 32128: sp = a4\n 32130: a1 = u64 [s1 + 0xa0]\n 32134: a0 = a1 + 0x12\n 32137: a1 = a0 <u a1\n 32140: a3 = u64 [s1 + 0xa8]\n 32144: a2 = a3 + a1\n 32147: a3 = a2 <u a3\n 32150: a3 = a1 if a1 == 0\n 32153: a1 = u64 [s1 + 0xb0]\n 32157: a3 = a3 + a1\n 32160: a1 = a3 <u a1\n 32163: a5 = u64 [s1 + 0xb8]\n 32167: a1 = a1 + a5\n 32170: u64 [a4 + 0x18] = a1\n 32173: u64 [a4 + 0x10] = a3\n 32176: u64 [a4 + 0x8] = a2\n 32179: u64 [a4] = a0\n 32181: a0 = s1 + 0x30b8\n 32185: u64 [a0 + 1248] = 0\n 32189: u64 [a0 + 1240] = 0\n 32193: u64 [a0 + 1232] = 0\n 32197: u64 [a0 + 1224] = 0\n 32201: a0 = s1 + 0x3000\n 32205: i32 a0 = a0 + 0x580\n 32209: ecalli 17 // 'value_transferred'\n 32211: a0 = s1 + 0x30b8\n 32215: a2 = a0 + 0x400\n 32219: a1 = u64 [a2 + 0xc8]\n 32223: u64 [s1 + 0x128] = a1\n 32227: a1 = u64 [a2 + 0xd0]\n 32231: u64 [s1 + 0x120] = a1\n 32235: a1 = u64 [a2 + 0xd8]\n 32239: u64 [s1 + 0xf8] = a1\n 32243: a0 = u64 [a2 + 0xe0]\n 32247: u64 [s1 + 0xf0] = a0\n 32251: a0 = s1 + 0x7ff\n 32255: a0 = a0 + 0x461\n 32259: a1 = u64 [s1 + 0x130]\n 32263: ra = 1238, jump @21\n      : @1141 [@dyn 619] (gas: 26)\n 32269: a4 = s1 + 0x7ff\n 32273: a4 = a4 + 0xb9\n 32277: a3 = u64 [a4 + 0x3a8]\n 32281: a0 = u64 [a4 + 0x3b0]\n 32285: a1 = u64 [a4 + 0x3b8]\n 32289: a2 = u64 [a4 + 0x3c0]\n 32293: a5 = u64 [s1 + 0xf0]\n 32297: u64 [a4 + 0x360] = a5\n 32301: a5 = u64 [s1 + 0xf8]\n 32305: u64 [a4 + 0x358] = a5\n 32309: a5 = u64 [s1 + 0x120]\n 32313: u64 [a4 + 0x350] = a5\n 32317: a5 = u64 [s1 + 0x128]\n 32321: u64 [a4 + 0x348] = a5\n 32325: a5 = a4 + 0x300\n 32329: u64 [a5 + 0x80] = a2\n 32333: u64 [a5 + 0x78] = a1\n 32336: u64 [a5 + 0x70] = a0\n 32339: a0 = s1 + 0x7ff\n 32343: a0 = a0 + 0x441\n 32347: a1 = s1 + 0x7ff\n 32351: a1 = a1 + 0x421\n 32355: a2 = s1 + 0x7ff\n 32359: a2 = a2 + 0x401\n 32363: u64 [a5 + 0x68] = a3\n 32366: ra = 1240, jump @1403\n      : @1142 [@dyn 620] (gas: 16)\n 32372: a3 = s1 + 0x7ff\n 32376: a3 = a3 + 0xb9\n 32380: a4 = a3 + 0x300\n 32384: a0 = u64 [a4 + 0xa0]\n 32388: a1 = u64 [a4 + 0x98]\n 32392: a2 = u64 [a4 + 0x90]\n 32396: a3 = u64 [a4 + 0x88]\n 32400: a4 = s1 + 0x30b8\n 32404: u64 [a4 + 0x500] = a0\n 32408: a0 = a4 + 0x400\n 32412: u64 [a0 + 0xf8] = a1\n 32416: u64 [a0 + 0xf0] = a2\n 32420: u64 [a0 + 0xe8] = a3\n 32424: a1 = s1 + 0x35a0\n 32428: a0 = u64 [s1 + 0x130]\n 32432: ra = 1242, jump @25\n      : @1143 [@dyn 621] (gas: 9)\n 32438: a0 = sp + 0xffffffffffffffe0\n 32441: a0 = a0 & 0xffffffffffffffe0\n 32444: u64 [s1 + 0x130] = a0\n 32448: sp = a0\n 32450: a0 = u64 [s1 + 0x98]\n 32454: ra = 0x4dc\n 32458: ecalli 6 // 'caller'\n 32460: t0 = 0x4de\n 32464: jump @1960\n      : @1144 [@dyn 622] (gas: 1)\n 32467: t0 = 1246, jump @1960\n      : @1145 [@dyn 623] (gas: 9)\n 32473: u64 [a2 + 832] = 0\n 32477: a4 = a2 + 0x300\n 32481: u64 [a4 + 0x38] = a1\n 32484: u64 [a4 + 0x30] = a0\n 32487: a1 = s1 + 0x7ff\n 32491: a1 = a1 + 0x3e1\n 32495: u64 [a4 + 0x28] = a3\n 32498: a0 = 0\n 32500: ra = 1248, jump @19\n      : @1146 [@dyn 624] (gas: 16)\n 32506: a0 = u64 [s1 + 0x10]\n 32509: a1 = s1 + 0x7ff\n 32513: a1 = a1 + 0xb9\n 32517: a2 = a1 + 0x300\n 32521: u64 [a2 + 0x20] = a0\n 32524: a0 = u64 [s1 + 0x18]\n 32527: u64 [a2 + 0x18] = a0\n 32530: a0 = u64 [s1 + 0x20]\n 32533: u64 [a2 + 0x10] = a0\n 32536: a3 = a1\n 32538: a0 = 0x20\n 32541: a1 = s1 + 0x7ff\n 32545: a1 = a1 + 0x3c1\n 32549: a2 = u64 [s1 + 0x28]\n 32552: u64 [a3 + 0x308] = a2\n 32556: ra = 1250, jump @19\n      : @1147 [@dyn 625] (gas: 3)\n 32562: a0 = u64 [s1 + 0x38]\n 32565: a0 = i32 [a0]\n 32567: jump @1149 if a0 >u 63\n      : @1148 (gas: 4)\n 32571: a0 = u64 [s1 + 0x38]\n 32574: u32 [a0 + 0] = 0x40\n 32577: t0 = 0x4e4\n 32581: jump @2022\n      : @1149 (gas: 1)\n 32584: t0 = 1252, jump @2022\n      : @1150 [@dyn 626] (gas: 4)\n 32590: ra = 0x4e6\n 32594: ecalli 9 // 'hash_keccak_256'\n 32596: t0 = 0x4e8\n 32600: jump @1983\n      : @1151 [@dyn 627] (gas: 1)\n 32603: t0 = 1256, jump @1983\n      : @1152 [@dyn 628] (gas: 2)\n 32609: a0 = a0 + 0x3a1\n 32613: ra = 1258, jump @21\n      : @1153 [@dyn 629] (gas: 20)\n 32619: a3 = s1 + 0x7ff\n 32623: a3 = a3 + 0xb9\n 32627: a0 = u64 [a3 + 0x300]\n 32631: a4 = a3 + 0x200\n 32635: a1 = u64 [a4 + 0xf0]\n 32639: a2 = u64 [a4 + 0xe8]\n 32643: a3 = u64 [a4 + 0xf8]\n 32647: a5 = s1 + 0x100\n 32651: a4 = u64 [a5 + 0x10]\n 32654: a0 = a0 ^ a4\n 32657: a4 = u64 [a5 + 0x8]\n 32660: a1 = a1 ^ a4\n 32663: a0 = a0 | a1\n 32666: a1 = u64 [a5 + 0x18]\n 32669: a1 = a1 ^ a3\n 32672: a3 = u64 [a5]\n 32674: a2 = a2 ^ a3\n 32677: a1 = a1 | a2\n 32680: a0 = a0 | a1\n 32683: jump @1166 if a0 != 0\n      : @1154 (gas: 5)\n 32687: a0 = u64 [s1 + 0x98]\n 32691: ra = 0x4ec\n 32695: ecalli 6 // 'caller'\n 32697: t0 = 0x4ee\n 32701: jump @1960\n      : @1155 [@dyn 630] (gas: 1)\n 32704: t0 = 1262, jump @1960\n      : @1156 [@dyn 631] (gas: 9)\n 32710: u64 [a2 + 736] = 0\n 32714: a4 = a2 + 0x200\n 32718: u64 [a4 + 0xd8] = a1\n 32722: u64 [a4 + 0xd0] = a0\n 32726: a1 = s1 + 0x7ff\n 32730: a1 = a1 + 0x381\n 32734: u64 [a4 + 0xc8] = a3\n 32738: a0 = 0\n 32740: ra = 1264, jump @19\n      : @1157 [@dyn 632] (gas: 11)\n 32746: a1 = s1 + 0x7ff\n 32750: a1 = a1 + 0xb9\n 32754: u64 [a1 + 704] = 0\n 32758: u64 [a1 + 696] = 0\n 32762: u64 [a1 + 680] = 0x6\n 32767: a2 = a1\n 32769: a0 = 0x20\n 32772: a1 = s1 + 0x7ff\n 32776: a1 = a1 + 0x361\n 32780: u64 [a2 + 688] = 0\n 32784: ra = 1266, jump @19\n      : @1158 [@dyn 633] (gas: 7)\n 32790: a0 = sp + 0xffffffffffffffe0\n 32793: a0 = a0 & 0xffffffffffffffe0\n 32796: u64 [s1 + 0x130] = a0\n 32800: sp = a0\n 32802: a0 = u64 [s1 + 0x38]\n 32805: a0 = i32 [a0]\n 32807: jump @1160 if a0 >u 63\n      : @1159 (gas: 4)\n 32811: a1 = u64 [s1 + 0x38]\n 32814: u32 [a1 + 0] = 0x40\n 32817: t0 = 0x4f4\n 32821: jump @2022\n      : @1160 (gas: 1)\n 32824: t0 = 1268, jump @2022\n      : @1161 [@dyn 634] (gas: 4)\n 32830: ra = 0x4f6\n 32834: ecalli 9 // 'hash_keccak_256'\n 32836: t0 = 0x4f8\n 32840: jump @1983\n      : @1162 [@dyn 635] (gas: 1)\n 32843: t0 = 1272, jump @1983\n      : @1163 [@dyn 636] (gas: 2)\n 32849: a0 = a0 + 0x341\n 32853: ra = 1274, jump @21\n      : @1164 [@dyn 637] (gas: 16)\n 32859: a4 = s1 + 0x7ff\n 32863: a4 = a4 + 0xb9\n 32867: a5 = a4 + 0x200\n 32871: a2 = u64 [a5 + 0x88]\n 32875: a0 = u64 [a5 + 0x90]\n 32879: a1 = u64 [a5 + 0x98]\n 32883: a3 = u64 [a5 + 0xa0]\n 32887: u64 [a5 + 0x60] = a3\n 32890: u64 [a5 + 0x58] = a1\n 32893: u64 [a5 + 0x50] = a0\n 32896: a0 = s1 + 0x7ff\n 32900: a0 = a0 + 0x321\n 32904: a1 = s1 + 0x7ff\n 32908: a1 = a1 + 0x301\n 32912: u64 [a5 + 0x48] = a2\n 32915: ra = 1276, jump @1511\n      : @1165 [@dyn 638] (gas: 16)\n 32921: a3 = s1 + 0x7ff\n 32925: a3 = a3 + 0xb9\n 32929: a4 = a3 + 0x200\n 32933: a0 = u64 [a4 + 0x80]\n 32937: a1 = u64 [a4 + 0x78]\n 32940: a2 = u64 [a4 + 0x70]\n 32943: a3 = u64 [a4 + 0x68]\n 32946: a4 = s1 + 0x30b8\n 32950: a5 = a4 + 0x500\n 32954: u64 [a5 + 0x20] = a0\n 32957: u64 [a5 + 0x18] = a1\n 32960: u64 [a5 + 0x10] = a2\n 32963: u64 [a5 + 0x8] = a3\n 32966: a1 = s1 + 0x35c0\n 32970: a0 = u64 [s1 + 0x130]\n 32974: ra = 1278, jump @25\n      : @1166 [@dyn 639] (gas: 4)\n 32980: a0 = s1 + 0x7ff\n 32984: a0 = a0 + 0x2e1\n 32988: a1 = u64 [s1 + 0x138]\n 32992: ra = 1280, jump @21\n      : @1167 [@dyn 640] (gas: 12)\n 32998: a3 = s1 + 0x7ff\n 33002: a3 = a3 + 0xb9\n 33006: a4 = a3 + 0x200\n 33010: a0 = u64 [a4 + 0x40]\n 33013: a1 = u64 [a4 + 0x30]\n 33016: a2 = u64 [a4 + 0x28]\n 33019: a3 = u64 [a4 + 0x38]\n 33022: a0 = a0 | a1\n 33025: a1 = a2 ^ 0x10\n 33028: a1 = a1 | a3\n 33031: a0 = a0 | a1\n 33034: jump @1171 if a0 != 0\n      : @1168 (gas: 5)\n 33037: a0 = s1 + 0x3000\n 33041: i32 a0 = a0 + 0x5e0\n 33045: ra = 0x502\n 33049: ecalli 1 // 'block_number'\n 33051: fallthrough\n      : @1169 [@dyn 641] (gas: 3)\n 33052: a1 = u64 [s1 + 0xa0]\n 33056: a0 = a1 + 0x13\n 33059: t0 = 1284, jump @2007\n      : @1170 [@dyn 642] (gas: 18)\n 33065: a1 = a1 + a4\n 33068: a4 = s1 + 0x30b8\n 33072: a5 = a4 + 0x500\n 33076: u64 [a5 + 0x48] = a0\n 33079: a0 = u64 [a5 + 0x30]\n 33082: u64 [a5 + 0x50] = a2\n 33085: a2 = u64 [a5 + 0x40]\n 33088: u64 [a5 + 0x58] = a3\n 33091: a3 = u64 [a5 + 0x38]\n 33094: u64 [a5 + 0x60] = a1\n 33097: a1 = u64 [a5 + 0x28]\n 33100: u64 [a5 + 0x80] = a2\n 33104: u64 [a5 + 0x78] = a3\n 33107: u64 [a5 + 0x70] = a0\n 33110: u64 [a5 + 0x68] = a1\n 33113: a0 = s1 + 0x3600\n 33117: a1 = s1 + 0x3620\n 33121: ra = 1286, jump @25\n      : @1171 [@dyn 643] (gas: 2)\n 33127: a0 = 0x30b8\n 33131: t0 = 1288, jump @1993\n      : @1172 [@dyn 644] (gas: 4)\n 33137: u64 [a1 + 1448] = 0x1\n 33142: a0 = s1 + 0x3640\n 33146: a1 = s1 + 0x3660\n 33150: ra = 1290, jump @25\n      : @1173 [@dyn 645] (gas: 5)\n 33156: a0 = 0\n 33158: a1 = u64 [s1 + 0x30]\n 33161: a2 = 0\n 33163: ecalli 14 // 'seal_return'\n 33165: fallthrough\n      : @1174 (gas: 6)\n 33166: a1 = 0x20270\n 33171: i32 a1 = a1 + 0\n 33173: a0 = 0x1\n 33176: a2 = 0\n 33178: ecalli 14 // 'seal_return'\n 33180: jump @1174\n      : @1175 (gas: 6)\n 33182: a1 = 0x20270\n 33187: i32 a1 = a1 + 0\n 33189: a0 = 0x1\n 33192: a2 = 0\n 33194: ecalli 14 // 'seal_return'\n 33196: jump @1174\n      : @1176 (gas: 6)\n 33198: a1 = 0x20270\n 33203: i32 a1 = a1 + 0\n 33205: a0 = 0x1\n 33208: a2 = 0\n 33210: ecalli 14 // 'seal_return'\n 33212: jump @1174\n      : @1177 (gas: 8)\n 33214: a1 = s1 + 0x38b8\n 33218: u64 [a1 + 928] = 0\n 33222: u64 [a1 + 920] = 0\n 33226: u64 [a1 + 912] = 0\n 33230: u64 [a1 + 904] = 0x8\n 33235: a0 = s1 + 0x1c80\n 33239: a1 = s1 + 0x3c40\n 33243: ra = 1292, jump @21\n      : @1178 [@dyn 646] (gas: 24)\n 33249: a1 = s1 + 0x18b8\n 33253: a0 = u32 [a1 + 0x3dc]\n 33257: a1 = u64 [a1 + 0x3e0]\n 33261: a0 = a0 << 0x20\n 33264: a4 = s1 + 0x100\n 33268: a2 = u64 [a4 + 0x38]\n 33271: a0 = a0 | a2\n 33274: a2 = u64 [a4 + 0x30]\n 33277: a1 = a1 | a2\n 33280: a3 = s1 + 0x38b8\n 33284: u64 [a3 + 960] = 0\n 33288: u64 [a3 + 952] = 0\n 33292: u64 [a3 + 944] = 0\n 33296: a5 = a3 + 0x300\n 33300: u64 [a5 + 168] = 0x8\n 33305: a2 = u64 [a4 + 0x20]\n 33308: u64 [a5 + 0xd0] = a2\n 33312: a2 = u64 [a4 + 0x28]\n 33315: u64 [a5 + 0xc8] = a2\n 33319: u64 [a5 + 0xe0] = a1\n 33323: u64 [a5 + 0xd8] = a0\n 33327: a0 = s1 + 0x3c60\n 33331: a1 = s1 + 0x3c80\n 33335: ra = 1294, jump @25\n      : @1179 [@dyn 647] (gas: 6)\n 33341: a1 = 0x20270\n 33346: i32 a1 = a1 + 0\n 33348: a0 = 0\n 33350: a2 = 0\n 33352: ecalli 14 // 'seal_return'\n 33354: jump @1174\n      : @1180 (gas: 6)\n 33357: a1 = 0x20270\n 33362: i32 a1 = a1 + 0\n 33364: a0 = 0x1\n 33367: a2 = 0\n 33369: ecalli 14 // 'seal_return'\n 33371: jump @1174\n      : @1181 (gas: 6)\n 33374: a1 = 0x20270\n 33379: i32 a1 = a1 + 0\n 33381: a0 = 0x1\n 33384: a2 = 0\n 33386: ecalli 14 // 'seal_return'\n 33388: jump @1174\n      : @1182 (gas: 6)\n 33391: u64 [ra + 184] = 0\n 33395: u64 [ra + 176] = 0\n 33399: u64 [ra + 168] = 0\n 33403: t0 = 0x510\n 33407: a0 = 0x4e487b7100000000\n 33417: fallthrough\n      : @1183 [@dyn 648] (gas: 4)\n 33418: a1 = s1 + 0x2960\n 33422: u64 [ra + 0xc0] = a0\n 33426: a0 = 0\n 33428: ra = 1298, jump @19\n      : @1184 [@dyn 649] (gas: 3)\n 33435: t0 = 0x514\n 33439: a1 = s1 + 0x28b8\n 33443: fallthrough\n      : @1185 [@dyn 650] (gas: 8)\n 33444: u64 [a1 + 160] = 0\n 33448: u64 [a1 + 152] = 0\n 33452: u64 [a1 + 136] = 0x11\n 33457: a2 = a1\n 33459: a0 = 0x4\n 33462: a1 = s1 + 0x2940\n 33466: u64 [a2 + 144] = 0\n 33470: ra = 1302, jump @19\n      : @1186 [@dyn 651] (gas: 3)\n 33477: a0 = u64 [s1 + 0x128]\n 33481: a0 = i32 [a0]\n 33483: jump @1188 if a0 >u 63\n      : @1187 (gas: 3)\n 33487: a1 = u64 [s1 + 0x128]\n 33491: u32 [a1 + 0] = 0x40\n 33494: fallthrough\n      : @1188 (gas: 5)\n 33495: a0 = 0x1\n 33498: a2 = 0x24\n 33501: a1 = u64 [s1 + 0x120]\n 33505: ecalli 14 // 'seal_return'\n 33507: fallthrough\n      : @1189 (gas: 6)\n 33508: a1 = 0x20270\n 33513: i32 a1 = a1 + 0\n 33515: a0 = 0x1\n 33518: a2 = 0\n 33520: ecalli 14 // 'seal_return'\n 33522: jump @1174\n      : @1190 (gas: 6)\n 33525: a1 = 0x20270\n 33530: i32 a1 = a1 + 0\n 33532: a0 = 0x1\n 33535: a2 = 0\n 33537: ecalli 14 // 'seal_return'\n 33539: jump @1174\n      : @1191 (gas: 6)\n 33542: a1 = 0x20270\n 33547: i32 a1 = a1 + 0\n 33549: a0 = 0x1\n 33552: a2 = 0\n 33554: ecalli 14 // 'seal_return'\n 33556: jump @1174\n      : @1192 (gas: 6)\n 33559: a1 = 0x20270\n 33564: i32 a1 = a1 + 0\n 33566: a0 = 0x1\n 33569: a2 = 0\n 33571: ecalli 14 // 'seal_return'\n 33573: jump @1174\n      : @1193 (gas: 6)\n 33576: a1 = 0x20270\n 33581: i32 a1 = a1 + 0\n 33583: a0 = 0x1\n 33586: a2 = 0\n 33588: ecalli 14 // 'seal_return'\n 33590: jump @1174\n      : @1194 (gas: 6)\n 33593: a1 = 0x20270\n 33598: i32 a1 = a1 + 0\n 33600: a0 = 0x1\n 33603: a2 = 0\n 33605: ecalli 14 // 'seal_return'\n 33607: jump @1174\n      : @1195 (gas: 6)\n 33610: a1 = 0x20270\n 33615: i32 a1 = a1 + 0\n 33617: a0 = 0x1\n 33620: a2 = 0\n 33622: ecalli 14 // 'seal_return'\n 33624: jump @1174\n      : @1196 (gas: 6)\n 33627: a1 = 0x20270\n 33632: i32 a1 = a1 + 0\n 33634: a0 = 0x1\n 33637: a2 = 0\n 33639: ecalli 14 // 'seal_return'\n 33641: jump @1174\n      : @1197 (gas: 6)\n 33644: a1 = 0x20270\n 33649: i32 a1 = a1 + 0\n 33651: a0 = 0x1\n 33654: a2 = 0\n 33656: ecalli 14 // 'seal_return'\n 33658: jump @1174\n      : @1198 (gas: 19)\n 33661: a0 = u64 [s1 + 0x118]\n 33665: a0 = a0 >> 0x20\n 33668: a0 = a0 << 0x20\n 33671: a0 = a0 | a2\n 33674: a1 = u64 [s1 + 0xf8]\n 33678: a1 = a1 | a3\n 33681: a3 = s1 + 0x40b8\n 33685: u64 [a3 + 704] = 0\n 33689: u64 [a3 + 696] = 0\n 33693: u64 [a3 + 688] = 0\n 33697: u64 [a3 + 680] = 0x7\n 33702: a2 = a3 + 0x200\n 33706: u64 [a2 + 0xc8] = a5\n 33710: u64 [a2 + 0xd0] = a4\n 33714: u64 [a2 + 0xe0] = a1\n 33718: u64 [a2 + 0xd8] = a0\n 33722: a0 = s1 + 0x4360\n 33726: a1 = s1 + 0x4380\n 33730: ra = 1304, jump @25\n      : @1199 [@dyn 652] (gas: 6)\n 33737: a1 = 0x20270\n 33742: i32 a1 = a1 + 0\n 33744: a0 = 0\n 33746: a2 = 0\n 33748: ecalli 14 // 'seal_return'\n 33750: jump @1174\n      : @1200 (gas: 6)\n 33753: a1 = 0x20270\n 33758: i32 a1 = a1 + 0\n 33760: a0 = 0x1\n 33763: a2 = 0\n 33765: ecalli 14 // 'seal_return'\n 33767: jump @1174\n      : @1201 (gas: 6)\n 33770: a1 = 0x20270\n 33775: i32 a1 = a1 + 0\n 33777: a0 = 0x1\n 33780: a2 = 0\n 33782: ecalli 14 // 'seal_return'\n 33784: jump @1174\n      : @1202 (gas: 6)\n 33787: a1 = 0x20270\n 33792: i32 a1 = a1 + 0\n 33794: a0 = 0x1\n 33797: a2 = 0\n 33799: ecalli 14 // 'seal_return'\n 33801: jump @1174\n      : @1203 (gas: 6)\n 33804: a1 = 0x20270\n 33809: i32 a1 = a1 + 0\n 33811: a0 = 0x1\n 33814: a2 = 0\n 33816: ecalli 14 // 'seal_return'\n 33818: jump @1174\n      : @1204 (gas: 6)\n 33821: a1 = 0x20270\n 33826: i32 a1 = a1 + 0\n 33828: a0 = 0x1\n 33831: a2 = 0\n 33833: ecalli 14 // 'seal_return'\n 33835: jump @1174\n      : @1205 (gas: 6)\n 33838: a1 = 0x20270\n 33843: i32 a1 = a1 + 0\n 33845: a0 = 0x1\n 33848: a2 = 0\n 33850: ecalli 14 // 'seal_return'\n 33852: jump @1174\n      : @1206 (gas: 6)\n 33855: a1 = 0x20270\n 33860: i32 a1 = a1 + 0\n 33862: a0 = 0x1\n 33865: a2 = 0\n 33867: ecalli 14 // 'seal_return'\n 33869: jump @1174\n      : @1207 (gas: 6)\n 33872: a1 = 0x20270\n 33877: i32 a1 = a1 + 0\n 33879: a0 = 0x1\n 33882: a2 = 0\n 33884: ecalli 14 // 'seal_return'\n 33886: jump @1174\n      : @1208 (gas: 6)\n 33889: a1 = 0x20270\n 33894: i32 a1 = a1 + 0\n 33896: a0 = 0x1\n 33899: a2 = 0\n 33901: ecalli 14 // 'seal_return'\n 33903: jump @1174\n      : @1209 (gas: 6)\n 33906: a1 = 0x20270\n 33911: i32 a1 = a1 + 0\n 33913: a0 = 0x1\n 33916: a2 = 0\n 33918: ecalli 14 // 'seal_return'\n 33920: jump @1174\n      : @1210 (gas: 6)\n 33923: a1 = 0x20270\n 33928: i32 a1 = a1 + 0\n 33930: a0 = 0x1\n 33933: a2 = 0\n 33935: ecalli 14 // 'seal_return'\n 33937: jump @1174\n      : @1211 (gas: 6)\n 33940: a1 = 0x20270\n 33945: i32 a1 = a1 + 0\n 33947: a0 = 0x1\n 33950: a2 = 0\n 33952: ecalli 14 // 'seal_return'\n 33954: jump @1174\n      : @1212 (gas: 8)\n 33957: a0 = s1 + 0x10b8\n 33961: u64 [a0 + 88] = 0\n 33964: u64 [a0 + 80] = 0\n 33967: u64 [a0 + 72] = 0\n 33970: a2 = a0\n 33972: t0 = 0x51a\n 33976: a0 = 0x4e487b7100000000\n 33986: fallthrough\n      : @1213 [@dyn 653] (gas: 4)\n 33987: a1 = s1 + 0x1100\n 33991: u64 [a2 + 0x60] = a0\n 33994: a0 = 0\n 33996: ra = 1308, jump @19\n      : @1214 [@dyn 654] (gas: 3)\n 34003: t0 = 0x51e\n 34007: a1 = s1 + 0x10b8\n 34011: fallthrough\n      : @1215 [@dyn 655] (gas: 8)\n 34012: u64 [a1 + 64] = 0\n 34015: u64 [a1 + 56] = 0\n 34018: u64 [a1 + 40] = 0x11\n 34022: a2 = a1\n 34024: a0 = 0x4\n 34027: a1 = s1 + 0x10e0\n 34031: u64 [a2 + 48] = 0\n 34034: ra = 1312, jump @19\n      : @1216 [@dyn 656] (gas: 3)\n 34041: a0 = u64 [s1 + 0xd0]\n 34045: a0 = i32 [a0]\n 34047: jump @1218 if a0 >u 63\n      : @1217 (gas: 3)\n 34051: a1 = u64 [s1 + 0xd0]\n 34055: u32 [a1 + 0] = 0x40\n 34058: fallthrough\n      : @1218 (gas: 5)\n 34059: a0 = 0x1\n 34062: a2 = 0x24\n 34065: a1 = u64 [s1 + 0xa0]\n 34069: ecalli 14 // 'seal_return'\n 34071: fallthrough\n      : @1219 (gas: 1)\n 34072: jump @1256 if a0 != 120497692\n      : @1220 (gas: 10)\n 34080: a0 = s1 + 0x30b8\n 34084: u64 [a0 + 128] = 0\n 34088: u64 [a0 + 120] = 0\n 34091: u64 [a0 + 112] = 0\n 34094: u64 [a0 + 104] = 0\n 34097: a0 = s1 + 0x3000\n 34101: i32 a0 = a0 + 0x120\n 34105: ecalli 17 // 'value_transferred'\n 34107: a3 = s1 + 0x30b8\n 34111: fallthrough\n      : @1221 (gas: 8)\n 34112: a0 = u64 [a3 + 0x78]\n 34115: a1 = u64 [a3 + 0x80]\n 34119: a2 = u64 [a3 + 0x70]\n 34122: a3 = u64 [a3 + 0x68]\n 34125: a1 = a1 | a2\n 34128: a0 = a0 | a3\n 34131: a0 = a0 | a1\n 34134: jump @1267 if a0 == 0\n      : @1222 (gas: 6)\n 34138: a1 = 0x20270\n 34143: i32 a1 = a1 + 0\n 34145: a0 = 0x1\n 34148: a2 = 0\n 34150: ecalli 14 // 'seal_return'\n 34152: jump @1174\n      : @1223 (gas: 6)\n 34155: a1 = 0x20270\n 34160: i32 a1 = a1 + 0\n 34162: a0 = 0x1\n 34165: a2 = 0\n 34167: ecalli 14 // 'seal_return'\n 34169: jump @1174\n      : @1224 (gas: 6)\n 34172: a1 = 0x20270\n 34177: i32 a1 = a1 + 0\n 34179: a0 = 0x1\n 34182: a2 = 0\n 34184: ecalli 14 // 'seal_return'\n 34186: jump @1174\n      : @1225 (gas: 6)\n 34189: a1 = 0x20270\n 34194: i32 a1 = a1 + 0\n 34196: a0 = 0x1\n 34199: a2 = 0\n 34201: ecalli 14 // 'seal_return'\n 34203: jump @1174\n      : @1226 (gas: 6)\n 34206: a1 = 0x20270\n 34211: i32 a1 = a1 + 0\n 34213: a0 = 0x1\n 34216: a2 = 0\n 34218: ecalli 14 // 'seal_return'\n 34220: jump @1174\n      : @1227 (gas: 8)\n 34223: a1 = s1 + 0x40b8\n 34227: u64 [a1 + 256] = 0\n 34231: u64 [a1 + 248] = 0\n 34235: u64 [a1 + 240] = 0\n 34239: u64 [a1 + 232] = 0x1\n 34244: a0 = s1 + 0x41a0\n 34248: a1 = u64 [s1 + 0x138]\n 34252: ra = 1314, jump @25\n      : @1228 [@dyn 657] (gas: 6)\n 34259: a1 = 0x20270\n 34264: i32 a1 = a1 + 0\n 34266: a0 = 0\n 34268: a2 = 0\n 34270: ecalli 14 // 'seal_return'\n 34272: jump @1174\n      : @1229 (gas: 6)\n 34275: a1 = 0x20270\n 34280: i32 a1 = a1 + 0\n 34282: a0 = 0x1\n 34285: a2 = 0\n 34287: ecalli 14 // 'seal_return'\n 34289: jump @1174\n      : @1230 (gas: 6)\n 34292: a1 = 0x20270\n 34297: i32 a1 = a1 + 0\n 34299: a0 = 0x1\n 34302: a2 = 0\n 34304: ecalli 14 // 'seal_return'\n 34306: jump @1174\n      : @1231 (gas: 8)\n 34309: a1 = s1 + 0x38b8\n 34313: u64 [a1 + 1312] = 0\n 34317: u64 [a1 + 1304] = 0\n 34321: u64 [a1 + 1296] = 0\n 34325: u64 [a1 + 1288] = 0x2\n 34330: a0 = s1 + 0x3dc0\n 34334: a1 = u64 [s1 + 0x138]\n 34338: ra = 1316, jump @25\n      : @1232 [@dyn 658] (gas: 6)\n 34345: a1 = 0x20270\n 34350: i32 a1 = a1 + 0\n 34352: a0 = 0\n 34354: a2 = 0\n 34356: ecalli 14 // 'seal_return'\n 34358: jump @1174\n      : @1233 (gas: 6)\n 34361: a1 = 0x20270\n 34366: i32 a1 = a1 + 0\n 34368: a0 = 0x1\n 34371: a2 = 0\n 34373: ecalli 14 // 'seal_return'\n 34375: jump @1174\n      : @1234 (gas: 6)\n 34378: a1 = 0x20270\n 34383: i32 a1 = a1 + 0\n 34385: a0 = 0x1\n 34388: a2 = 0\n 34390: ecalli 14 // 'seal_return'\n 34392: jump @1174\n      : @1235 (gas: 6)\n 34395: a1 = 0x20270\n 34400: i32 a1 = a1 + 0\n 34402: a0 = 0x1\n 34405: a2 = 0\n 34407: ecalli 14 // 'seal_return'\n 34409: jump @1174\n      : @1236 (gas: 6)\n 34412: a1 = 0x20270\n 34417: i32 a1 = a1 + 0\n 34419: a0 = 0x1\n 34422: a2 = 0\n 34424: ecalli 14 // 'seal_return'\n 34426: jump @1174\n      : @1237 (gas: 6)\n 34429: a1 = 0x20270\n 34434: i32 a1 = a1 + 0\n 34436: a0 = 0x1\n 34439: a2 = 0\n 34441: ecalli 14 // 'seal_return'\n 34443: jump @1174\n      : @1238 (gas: 6)\n 34446: a1 = 0x20270\n 34451: i32 a1 = a1 + 0\n 34453: a0 = 0x1\n 34456: a2 = 0\n 34458: ecalli 14 // 'seal_return'\n 34460: jump @1174\n      : @1239 (gas: 6)\n 34463: a1 = 0x20270\n 34468: i32 a1 = a1 + 0\n 34470: a0 = 0x1\n 34473: a2 = 0\n 34475: ecalli 14 // 'seal_return'\n 34477: jump @1174\n      : @1240 (gas: 6)\n 34480: a1 = 0x20270\n 34485: i32 a1 = a1 + 0\n 34487: a0 = 0x1\n 34490: a2 = 0\n 34492: ecalli 14 // 'seal_return'\n 34494: jump @1174\n      : @1241 (gas: 6)\n 34497: a1 = 0x20270\n 34502: i32 a1 = a1 + 0\n 34504: a0 = 0x1\n 34507: a2 = 0\n 34509: ecalli 14 // 'seal_return'\n 34511: jump @1174\n      : @1242 (gas: 6)\n 34514: a1 = 0x20270\n 34519: i32 a1 = a1 + 0\n 34521: a0 = 0x1\n 34524: a2 = 0\n 34526: ecalli 14 // 'seal_return'\n 34528: jump @1174\n      : @1243 (gas: 20)\n 34531: a0 = s1 + 0x4000\n 34535: i32 a0 = a0 + 0xe0\n 34539: a1 = 0x4\n 34542: ecalli 4 // 'call_data_load'\n 34544: a4 = s1 + 0x40b8\n 34548: a0 = u64 [a4 + 0x28]\n 34551: a1 = u64 [a4 + 0x30]\n 34554: a2 = u64 [a4 + 0x38]\n 34557: a3 = u64 [a4 + 0x40]\n 34560: u64 [a4 + 96] = 0\n 34563: u64 [a4 + 88] = 0\n 34566: u64 [a4 + 80] = 0\n 34569: u64 [a4 + 72] = 0\n 34572: u64 [a4 + 0x80] = a3\n 34576: u64 [a4 + 0x78] = a2\n 34579: u64 [a4 + 0x70] = a1\n 34582: u64 [a4 + 0x68] = a0\n 34585: a0 = s1 + 0x4100\n 34589: a1 = s1 + 0x4120\n 34593: ra = 1318, jump @25\n      : @1244 [@dyn 659] (gas: 5)\n 34600: a0 = 0\n 34602: a1 = u64 [s1 + 0x130]\n 34606: a2 = 0\n 34608: ecalli 14 // 'seal_return'\n 34610: jump @1174\n      : @1245 (gas: 6)\n 34613: a1 = 0x20270\n 34618: i32 a1 = a1 + 0\n 34620: a0 = 0x1\n 34623: a2 = 0\n 34625: ecalli 14 // 'seal_return'\n 34627: jump @1174\n      : @1246 (gas: 6)\n 34630: a1 = 0x20270\n 34635: i32 a1 = a1 + 0\n 34637: a0 = 0x1\n 34640: a2 = 0\n 34642: ecalli 14 // 'seal_return'\n 34644: jump @1174\n      : @1247 (gas: 6)\n 34647: a1 = 0x20270\n 34652: i32 a1 = a1 + 0\n 34654: a0 = 0x1\n 34657: a2 = 0\n 34659: ecalli 14 // 'seal_return'\n 34661: jump @1174\n      : @1248 (gas: 6)\n 34664: a1 = 0x20270\n 34669: i32 a1 = a1 + 0\n 34671: a0 = 0x1\n 34674: a2 = 0\n 34676: ecalli 14 // 'seal_return'\n 34678: jump @1174\n      : @1249 (gas: 6)\n 34681: a1 = 0x20270\n 34686: i32 a1 = a1 + 0\n 34688: a0 = 0x1\n 34691: a2 = 0\n 34693: ecalli 14 // 'seal_return'\n 34695: jump @1174\n      : @1250 (gas: 6)\n 34698: a1 = 0x20270\n 34703: i32 a1 = a1 + 0\n 34705: a0 = 0x1\n 34708: a2 = 0\n 34710: ecalli 14 // 'seal_return'\n 34712: jump @1174\n      : @1251 (gas: 6)\n 34715: a1 = 0x20270\n 34720: i32 a1 = a1 + 0\n 34722: a0 = 0x1\n 34725: a2 = 0\n 34727: ecalli 14 // 'seal_return'\n 34729: jump @1174\n      : @1252 (gas: 6)\n 34732: a1 = 0x20270\n 34737: i32 a1 = a1 + 0\n 34739: a0 = 0x1\n 34742: a2 = 0\n 34744: ecalli 14 // 'seal_return'\n 34746: jump @1174\n      : @1253 (gas: 6)\n 34749: a1 = 0x20270\n 34754: i32 a1 = a1 + 0\n 34756: a0 = 0x1\n 34759: a2 = 0\n 34761: ecalli 14 // 'seal_return'\n 34763: jump @1174\n      : @1254 (gas: 6)\n 34766: a1 = 0x20270\n 34771: i32 a1 = a1 + 0\n 34773: a0 = 0x1\n 34776: a2 = 0\n 34778: ecalli 14 // 'seal_return'\n 34780: jump @1174\n      : @1255 (gas: 6)\n 34783: a1 = 0x20270\n 34788: i32 a1 = a1 + 0\n 34790: a0 = 0x1\n 34793: a2 = 0\n 34795: ecalli 14 // 'seal_return'\n 34797: jump @1174\n      : @1256 (gas: 1)\n 34800: jump @1261 if a0 != 381913916\n      : @1257 (gas: 12)\n 34807: a0 = s1 + 0x30b8\n 34811: u64 [a0 + 416] = 0\n 34815: u64 [a0 + 408] = 0\n 34819: u64 [a0 + 400] = 0\n 34823: u64 [a0 + 392] = 0\n 34827: a0 = s1 + 0x3000\n 34831: i32 a0 = a0 + 0x240\n 34835: ra = 0x528\n 34839: ecalli 17 // 'value_transferred'\n 34841: a0 = 0x3000\n 34845: t0 = 0x52a\n 34849: jump @2014\n      : @1258 [@dyn 660] (gas: 2)\n 34852: a0 = 0x3000\n 34856: t0 = 1322, jump @2014\n      : @1259 [@dyn 661] (gas: 8)\n 34862: a0 = u64 [a4 + 0x98]\n 34866: a1 = u64 [a4 + 0xa0]\n 34870: a2 = u64 [a4 + 0x90]\n 34874: a3 = u64 [a4 + 0x88]\n 34878: a1 = a1 | a2\n 34881: a0 = a0 | a3\n 34884: a0 = a0 | a1\n 34887: jump @1269 if a0 == 0\n      : @1260 (gas: 6)\n 34891: a1 = 0x20270\n 34896: i32 a1 = a1 + 0\n 34898: a0 = 0x1\n 34901: a2 = 0\n 34903: ecalli 14 // 'seal_return'\n 34905: jump @1174\n      : @1261 (gas: 2)\n 34908: a2 = s1 + 0x30b8\n 34912: jump @1266 if a0 != 867265939\n      : @1262 (gas: 12)\n 34919: u64 [a2 + 1504] = 0\n 34923: u64 [a2 + 1496] = 0\n 34927: u64 [a2 + 1488] = 0\n 34931: u64 [a2 + 1480] = 0\n 34935: a0 = s1 + 0x3000\n 34939: i32 a0 = a0 + 0x680\n 34943: ra = 0x52c\n 34947: ecalli 17 // 'value_transferred'\n 34949: a3 = s1 + 0x30b8\n 34953: a4 = a3 + 0x500\n 34957: t0 = 0x52e\n 34961: jump @2034\n      : @1263 [@dyn 662] (gas: 3)\n 34964: a3 = s1 + 0x30b8\n 34968: a4 = a3 + 0x500\n 34972: t0 = 1326, jump @2034\n      : @1264 [@dyn 663] (gas: 1)\n 34978: jump @1282 if a0 == 0\n      : @1265 (gas: 6)\n 34982: a1 = 0x20270\n 34987: i32 a1 = a1 + 0\n 34989: a0 = 0x1\n 34992: a2 = 0\n 34994: ecalli 14 // 'seal_return'\n 34996: jump @1174\n      : @1266 (gas: 6)\n 34999: a1 = 0x20270\n 35004: i32 a1 = a1 + 0\n 35006: a0 = 0x1\n 35009: a2 = 0\n 35011: ecalli 14 // 'seal_return'\n 35013: jump @1174\n      : @1267 (gas: 3)\n 35016: a0 = u64 [s1 + 0x138]\n 35020: a0 = i32 [a0]\n 35022: jump @1272 if a0 >u 3\n      : @1268 (gas: 6)\n 35026: a1 = 0x20270\n 35031: i32 a1 = a1 + 0\n 35033: a0 = 0x1\n 35036: a2 = 0\n 35038: ecalli 14 // 'seal_return'\n 35040: jump @1174\n      : @1269 (gas: 1)\n 35043: t0 = 1328, jump @1994\n      : @1270 [@dyn 664] (gas: 1)\n 35049: jump @1284 if a1 <u a0\n      : @1271 (gas: 6)\n 35053: a1 = 0x20270\n 35058: i32 a1 = a1 + 0\n 35060: a0 = 0x1\n 35063: a2 = 0\n 35065: ecalli 14 // 'seal_return'\n 35067: jump @1174\n      : @1272 (gas: 8)\n 35070: a0 = s1 + 0x30b8\n 35074: u64 [a0 + 160] = 0\n 35078: u64 [a0 + 152] = 0\n 35082: u64 [a0 + 144] = 0\n 35086: u64 [a0 + 136] = 0\n 35090: a0 = s1 + 0x160\n 35094: a1 = s1 + 0x3140\n 35098: ra = 1330, jump @21\n      : @1273 [@dyn 665] (gas: 12)\n 35105: a4 = s1 + 0x100\n 35109: a2 = u64 [a4 + 0x60]\n 35112: a0 = u64 [a4 + 0x68]\n 35115: a1 = u64 [a4 + 0x70]\n 35118: a3 = u64 [a4 + 0x78]\n 35121: u64 [a4 + 0x58] = a3\n 35124: u64 [a4 + 0x50] = a1\n 35127: u64 [a4 + 0x48] = a0\n 35130: a0 = 0x80\n 35134: a1 = s1 + 0x140\n 35138: u64 [a4 + 0x40] = a2\n 35141: ra = 1332, jump @19\n      : @1274 [@dyn 666] (gas: 2)\n 35148: a1 = i32 [0x2025c]\n 35153: jump @1276 if a1 >u 159\n      : @1275 (gas: 4)\n 35158: u32 [0x2025c] = 0xa0\n 35165: a0 = 0x20270\n 35170: i32 a1 = a0 + 0x80\n 35174: jump @839\n      : @1276 (gas: 3)\n 35177: a0 = 0x20270\n 35182: i32 a1 = a0 + 0x80\n 35186: jump @839\n      : @1277 (gas: 32)\n 35189: t0 = 0xffffffffffffffff\n 35192: t1 = 0xffffffff\n 35202: a2 = u64 [s1 + 0xf0]\n 35206: a1 = a2 >> 0x8\n 35209: a0 = u64 [s1 + 0xf8]\n 35213: a3 = a0 << 0x38\n 35216: a1 = a1 | a3\n 35219: a3 = u64 [s1 + 0xe8]\n 35223: a3 = a3 >> 0x8\n 35226: t2 = a4\n 35228: a4 = a2 << 0x38\n 35231: a3 = a3 | a4\n 35234: a4 = a0 >> 0x8\n 35237: a0 = a3 & t0\n 35240: u64 [s1 + 0xf8] = a0\n 35244: a0 = a1 & t0\n 35247: u64 [s1 + 0xf0] = a0\n 35251: a0 = a4 & t1\n 35254: u64 [s1 + 0xe8] = a0\n 35258: a0 = u64 [s1 + 0x120]\n 35262: a2 = t2\n 35264: u64 [a2 + 0xc8] = a0\n 35268: a0 = u64 [s1 + 0x128]\n 35272: u64 [a2 + 0xd0] = a0\n 35276: a0 = u64 [s1 + 0x130]\n 35280: u64 [a2 + 0xd8] = a0\n 35284: a1 = s1 + 0x1180\n 35288: a0 = u64 [s1 + 0x138]\n 35292: u64 [a2 + 0xe0] = a0\n 35296: a0 = a5\n 35298: u64 [s1 + 0x138] = a5\n 35302: ra = 1334, jump @19\n      : @1278 [@dyn 667] (gas: 31)\n 35309: a4 = s1 + 0x10b8\n 35313: u64 [a4 + 128] = 0\n 35317: a0 = u64 [s1 + 0xe8]\n 35321: u64 [a4 + 0x78] = a0\n 35324: a0 = u64 [s1 + 0xf0]\n 35328: u64 [a4 + 0x70] = a0\n 35331: a0 = u64 [s1 + 0xf8]\n 35335: u64 [a4 + 0x68] = a0\n 35338: a0 = u64 [s1 + 0x100]\n 35342: u64 [a4 + 0xa0] = a0\n 35346: a0 = u64 [s1 + 0x108]\n 35350: u64 [a4 + 0x98] = a0\n 35354: a0 = u64 [s1 + 0x110]\n 35358: u64 [a4 + 0x90] = a0\n 35362: a0 = u64 [0x200c8]\n 35367: a1 = u64 [0x200d0]\n 35372: a2 = u64 [0x200d8]\n 35377: a3 = u64 [s1 + 0x118]\n 35381: u64 [a4 + 0x88] = a3\n 35385: u64 [a4 + 0xc0] = a0\n 35389: u64 [a4 + 0xb8] = a1\n 35393: u64 [a4 + 0xb0] = a2\n 35397: a5 = a4\n 35399: a0 = u64 [0x200e0]\n 35404: a1 = 0x20\n 35407: a2 = s1 + 0x1160\n 35411: a3 = s1 + 0x1140\n 35415: a4 = s1 + 0x1120\n 35419: u64 [a5 + 0xa8] = a0\n 35423: a0 = u64 [s1 + 0x138]\n 35427: ra = 1336, jump @28\n      : @1279 [@dyn 668] (gas: 1)\n 35434: ra = 1338, jump @1932\n      : @1280 [@dyn 669] (gas: 12)\n 35440: a1 = s1 + 0x38b8\n 35444: u64 [a1 + 320] = 0\n 35448: u64 [a1 + 312] = 0\n 35452: u64 [a1 + 304] = 0\n 35456: u64 [a1 + 296] = 0x9\n 35461: u64 [a1 + 352] = 0\n 35465: u64 [a1 + 344] = 0\n 35469: u64 [a1 + 336] = 0\n 35473: u64 [a1 + 328] = 0x1\n 35478: a0 = s1 + 0x39e0\n 35482: a1 = s1 + 0x3a00\n 35486: ra = 1340, jump @25\n      : @1281 [@dyn 670] (gas: 5)\n 35493: a0 = 0\n 35495: a1 = u64 [s1 + 0xa0]\n 35499: a2 = 0\n 35501: ecalli 14 // 'seal_return'\n 35503: jump @1174\n      : @1282 (gas: 3)\n 35506: a0 = u64 [s1 + 0x138]\n 35510: a0 = i32 [a0]\n 35512: jump @1288 if a0 >u 3\n      : @1283 (gas: 6)\n 35516: a1 = 0x20270\n 35521: i32 a1 = a1 + 0\n 35523: a0 = 0x1\n 35526: a2 = 0\n 35528: ecalli 14 // 'seal_return'\n 35530: jump @1174\n      : @1284 (gas: 8)\n 35533: a0 = s1 + 0x3000\n 35537: i32 a0 = a0 + 0x260\n 35541: a1 = 0x4\n 35544: ra = 0x53e\n 35548: ecalli 4 // 'call_data_load'\n 35550: a0 = 0x3000\n 35554: t0 = 0x540\n 35558: jump @2014\n      : @1285 [@dyn 671] (gas: 2)\n 35561: a0 = 0x3000\n 35565: t0 = 1344, jump @2014\n      : @1286 [@dyn 672] (gas: 9)\n 35571: a0 = u64 [a4 + 0xc0]\n 35575: a1 = u64 [a4 + 0xb8]\n 35579: a2 = u64 [a4 + 0xa8]\n 35583: a3 = u64 [a4 + 0xb0]\n 35587: a4 = a1 | a0\n 35590: a5 = a2 <u 0x2\n 35593: a5 = 0 if a3 != 0\n 35595: a5 = 0 if a4 != 0\n 35597: jump @1295 if a5 != 0\n      : @1287 (gas: 6)\n 35601: a1 = 0x20270\n 35606: i32 a1 = a1 + 0\n 35608: a0 = 0x1\n 35611: a2 = 0\n 35613: ecalli 14 // 'seal_return'\n 35615: jump @1174\n      : @1288 (gas: 8)\n 35618: a1 = s1 + 0x30b8\n 35622: u64 [a1 + 1536] = 0\n 35626: u64 [a1 + 1528] = 0\n 35630: u64 [a1 + 1520] = 0\n 35634: u64 [a1 + 1512] = 0x9\n 35639: a0 = s1 + 0x10c0\n 35643: a1 = s1 + 0x36a0\n 35647: ra = 1346, jump @21\n      : @1289 [@dyn 673] (gas: 6)\n 35654: a4 = s1 + 0x10b8\n 35658: a0 = u64 [a4 + 0x20]\n 35661: a1 = u64 [a4 + 0x10]\n 35664: a2 = u64 [a4 + 0x8]\n 35667: a3 = u64 [a4 + 0x18]\n 35670: t0 = 1348, jump @2011\n      : @1290 [@dyn 674] (gas: 8)\n 35676: u64 [a4 + 0] = 0\n 35678: u64 [a4 + 4294967288] = 0\n 35681: u64 [a4 + 0xffffffffffffffe8] = a0\n 35684: a0 = s1 + 0x10a0\n 35688: u64 [a4 + 4294967280] = 0\n 35691: ra = 0x546\n 35695: t0 = 0x5b0\n 35699: jump @1953\n      : @1291 [@dyn 675] (gas: 12)\n 35702: a1 = s1 + 0x30b8\n 35706: u64 [a1 + 1568] = 0\n 35710: u64 [a1 + 1560] = 0\n 35714: u64 [a1 + 1552] = 0\n 35718: u64 [a1 + 1544] = 0x9\n 35723: u64 [a1 + 1600] = 0\n 35727: u64 [a1 + 1592] = 0\n 35731: u64 [a1 + 1584] = 0\n 35735: u64 [a1 + 1576] = 0x2\n 35740: a0 = s1 + 0x36c0\n 35744: a1 = s1 + 0x36e0\n 35748: ra = 1352, jump @25\n      : @1292 [@dyn 676] (gas: 1)\n 35755: ra = 1354, jump @1640\n      : @1293 [@dyn 677] (gas: 12)\n 35761: a1 = s1 + 0x30b8\n 35765: u64 [a1 + 1632] = 0\n 35769: u64 [a1 + 1624] = 0\n 35773: u64 [a1 + 1616] = 0\n 35777: u64 [a1 + 1608] = 0x9\n 35782: u64 [a1 + 1664] = 0\n 35786: u64 [a1 + 1656] = 0\n 35790: u64 [a1 + 1648] = 0\n 35794: u64 [a1 + 1640] = 0x1\n 35799: a0 = s1 + 0x3700\n 35803: a1 = s1 + 0x3720\n 35807: ra = 1356, jump @25\n      : @1294 [@dyn 678] (gas: 6)\n 35814: a1 = 0x20270\n 35819: i32 a1 = a1 + 0\n 35821: a0 = 0\n 35823: a2 = 0\n 35825: ecalli 14 // 'seal_return'\n 35827: jump @1174\n      : @1295 (gas: 13)\n 35830: a1 = a1 | a2\n 35833: a0 = a0 | a3\n 35836: a0 = a0 | a1\n 35839: a0 = a0 >u 0\n 35841: u64 [s1 + 0x138] = a0\n 35845: a1 = s1 + 0x30b8\n 35849: u64 [a1 + 480] = 0\n 35853: u64 [a1 + 472] = 0\n 35857: u64 [a1 + 464] = 0\n 35861: u64 [a1 + 456] = 0x7\n 35866: a0 = s1 + 0x380\n 35870: a1 = s1 + 0x3280\n 35874: ra = 1358, jump @21\n      : @1296 [@dyn 679] (gas: 14)\n 35881: a0 = u64 [s1 + 0x388]\n 35885: u64 [s1 + 0x130] = a0\n 35889: a0 = u64 [s1 + 0x380]\n 35893: u64 [s1 + 0x128] = a0\n 35897: a0 = u32 [s1 + 0x390]\n 35901: u64 [s1 + 0x120] = a0\n 35905: a0 = 0x30270\n 35910: u64 [s1 + 0x118] = a0\n 35914: i32 a0 = a0 + 0\n 35916: ra = 0x550\n 35920: ecalli 6 // 'caller'\n 35922: a2 = u64 [s1 + 0x118]\n 35926: t0 = 0x552\n 35930: jump @1961\n      : @1297 [@dyn 680] (gas: 2)\n 35933: a2 = u64 [s1 + 0x118]\n 35937: t0 = 1362, jump @1961\n      : @1298 [@dyn 681] (gas: 17)\n 35943: a2 = u64 [s1 + 0x120]\n 35947: a1 = a1 ^ a2\n 35950: a2 = u64 [s1 + 0x128]\n 35954: a0 = a0 ^ a2\n 35957: a0 = a0 | a1\n 35960: a1 = u64 [s1 + 0x130]\n 35964: a1 = a1 ^ a3\n 35967: a0 = a0 | a1\n 35970: a0 = a0 <u 0x1\n 35973: u64 [s1 + 888] = 0\n 35977: u64 [s1 + 880] = 0\n 35981: u64 [s1 + 0x360] = a0\n 35985: a0 = s1 + 0x360\n 35989: u64 [s1 + 872] = 0\n 35993: ra = 0x554\n 35997: t0 = 0x562\n 36001: jump @1953\n      : @1299 [@dyn 682] (gas: 8)\n 36004: a0 = s1 + 0x30b8\n 36008: u64 [a0 + 512] = 0\n 36012: u64 [a0 + 504] = 0\n 36016: u64 [a0 + 496] = 0\n 36020: u64 [a0 + 488] = 0x8\n 36025: a0 = s1 + 0x340\n 36029: a1 = s1 + 0x32a0\n 36033: ra = 1366, jump @21\n      : @1300 [@dyn 683] (gas: 23)\n 36040: a4 = s1 + 0x300\n 36044: a0 = u64 [a4 + 0x40]\n 36047: a1 = u64 [a4 + 0x48]\n 36050: a2 = u64 [a4 + 0x58]\n 36053: a3 = u64 [a4 + 0x50]\n 36056: a4 = u64 [s1 + 0x138]\n 36060: a4 = a4 << 0x20\n 36063: a5 = 0xffffff00ffffffff\n 36073: a3 = a3 & a5\n 36076: a3 = a3 | a4\n 36079: a4 = s1 + 0x30b8\n 36083: u64 [a4 + 544] = 0\n 36087: u64 [a4 + 536] = 0\n 36091: u64 [a4 + 528] = 0\n 36095: u64 [a4 + 520] = 0x8\n 36100: a5 = a4 + 0x200\n 36104: u64 [a5 + 0x40] = a2\n 36107: u64 [a5 + 0x30] = a1\n 36110: u64 [a5 + 0x28] = a0\n 36113: u64 [a5 + 0x38] = a3\n 36116: a0 = s1 + 0x32c0\n 36120: a1 = s1 + 0x32e0\n 36124: ra = 1368, jump @25\n      : @1301 [@dyn 684] (gas: 6)\n 36131: a1 = 0x20270\n 36136: i32 a1 = a1 + 0\n 36138: a0 = 0\n 36140: a2 = 0\n 36142: ecalli 14 // 'seal_return'\n 36144: jump @1174\n      : @1302 (gas: 30)\n 36147: sp = sp + 0xffffffffffffff20\n 36151: u64 [sp + 0xd8] = ra\n 36155: u64 [sp + 0xd0] = s0\n 36159: u64 [sp + 0xc8] = s1\n 36163: s0 = sp + 0xe0\n 36167: sp = sp & 0xfffffffffffffff0\n 36170: a3 = u64 [a2 + 0x18]\n 36173: u64 [sp + 0x70] = a3\n 36176: a4 = u64 [a2 + 0x10]\n 36179: t0 = u64 [a2 + 0x8]\n 36182: a5 = u64 [a1 + 0x18]\n 36185: t2 = u64 [a1 + 0x10]\n 36188: t1 = u64 [a1 + 0x8]\n 36191: s1 = u64 [a1]\n 36193: a1 = u64 [a2]\n 36195: u64 [sp + 0x18] = a0\n 36198: a3 = 0\n 36200: a2 = 0\n 36202: ra = 0\n 36204: u64 [sp] = s1\n 36206: u64 [sp + 0x78] = s1\n 36209: u64 [sp + 0x8] = t1\n 36212: s1 = t1\n 36214: u64 [sp + 0x10] = t2\n 36217: t1 = t2\n 36219: t2 = s1\n 36221: u64 [sp + 0x20] = a5\n 36224: u64 [sp + 0x68] = a5\n 36227: a5 = 0\n 36229: fallthrough\n      : @1303 (gas: 5)\n 36230: a0 = a3 <u 0x10\n 36233: a0 = 0 if a2 != 0\n 36235: s1 = a5 | ra\n 36238: a0 = 0 if s1 != 0\n 36240: jump @1309 if a0 == 0\n      : @1304 (gas: 16)\n 36244: u64 [sp + 0x60] = t2\n 36247: u64 [sp + 0x30] = a5\n 36250: u64 [sp + 0x40] = ra\n 36253: u64 [sp + 0x48] = a2\n 36256: u64 [sp + 0x50] = a3\n 36259: a0 = a1 | a4\n 36262: u64 [sp + 0x38] = t0\n 36265: a2 = u64 [sp + 0x70]\n 36268: a2 = t0 | a2\n 36271: a0 = a0 | a2\n 36274: a0 = a0 >> 0x20\n 36277: u64 [sp + 0x58] = a4\n 36280: a2 = a2 | a4\n 36283: a2 = a2 << 0x20\n 36286: a0 = a0 | a2\n 36289: jump @1312 if a0 != 0\n      : @1305 (gas: 4)\n 36293: s1 = t1\n 36295: a0 = sp + 0xa0\n 36299: u64 [sp + 0x28] = a1\n 36302: ra = 1370, jump @17\n      : @1306 [@dyn 685] (gas: 11)\n 36309: a0 = u64 [sp + 0x78]\n 36312: a2 = a0 | s1\n 36315: a1 = u64 [sp + 0x68]\n 36318: a3 = u64 [sp + 0x60]\n 36321: a1 = a1 | a3\n 36324: a2 = a2 | a1\n 36327: a2 = a2 >> 0x20\n 36330: a1 = a1 | s1\n 36333: a1 = a1 << 0x20\n 36336: a1 = a1 | a2\n 36339: jump @1312 if a1 != 0\n      : @1307 (gas: 12)\n 36343: a3 = u64 [sp + 0xb0]\n 36347: a1 = u64 [sp + 0xa8]\n 36351: a2 = u64 [sp + 0xa0]\n 36355: a3 = a3 << 0x20\n 36358: a3 = a3 >> 0x20\n 36361: u64 [sp + 152] = 0\n 36365: u64 [sp + 0x80] = a2\n 36369: u64 [sp + 0x88] = a1\n 36373: a1 = sp + 0x80\n 36377: u64 [sp + 0x90] = a3\n 36381: u64 [sp + 0x78] = a0\n 36384: ra = 1372, jump @19\n      : @1308 [@dyn 686] (gas: 41)\n 36391: a0 = u64 [sp + 0x78]\n 36394: t0 = a0 + 0x20\n 36397: a2 = t0 <u a0\n 36400: a0 = u64 [sp + 0x60]\n 36403: t2 = a0 + a2\n 36406: a3 = t2 <u a0\n 36409: a3 = a2 if a2 == 0\n 36412: t1 = s1 + a3\n 36415: a2 = t1 <u s1\n 36418: a0 = u64 [sp + 0x68]\n 36421: a0 = a0 + a2\n 36424: u64 [sp + 0x68] = a0\n 36427: a0 = u64 [sp + 0x28]\n 36430: a1 = a0 + 0x20\n 36433: a4 = a1 <u a0\n 36436: s1 = u64 [sp + 0x38]\n 36439: a5 = s1 + a4\n 36442: s1 = a5 <u s1\n 36445: s1 = a4 if a4 == 0\n 36448: a0 = u64 [sp + 0x58]\n 36451: a4 = a0 + s1\n 36454: s1 = a4 <u a0\n 36457: a0 = u64 [sp + 0x70]\n 36460: a0 = a0 + s1\n 36463: u64 [sp + 0x70] = a0\n 36466: a3 = u64 [sp + 0x50]\n 36469: a3 = a3 + 0x1\n 36472: s1 = a3 <u 0x1\n 36475: a2 = u64 [sp + 0x48]\n 36478: a2 = a2 + s1\n 36481: s1 = a3 | a2\n 36484: s1 = s1 <u 0x1\n 36487: a0 = u64 [sp + 0x30]\n 36490: s1 = s1 + a0\n 36493: a0 = s1 <u a0\n 36496: ra = u64 [sp + 0x40]\n 36499: ra = ra + a0\n 36502: u64 [sp + 0x78] = t0\n 36505: t0 = a5\n 36507: a5 = s1\n 36509: jump @1303\n      : @1309 (gas: 5)\n 36512: a1 = u64 [sp]\n 36514: a0 = a1 + 0x200\n 36518: a1 = a0 <u a1\n 36521: a3 = u64 [sp + 0x8]\n 36524: t0 = 1374, jump @1990\n      : @1310 [@dyn 687] (gas: 11)\n 36530: a1 = u64 [sp + 0x10]\n 36533: a3 = a3 + a1\n 36536: a1 = a3 <u a1\n 36539: a4 = u64 [sp + 0x20]\n 36542: a1 = a1 + a4\n 36545: a4 = u64 [sp + 0x18]\n 36548: u64 [a4] = a0\n 36550: u64 [a4 + 0x8] = a2\n 36553: u64 [a4 + 0x10] = a3\n 36556: u64 [a4 + 0x18] = a1\n 36559: t0 = 1376, jump @1976\n      : @1311 [@dyn 688] (gas: 1)\n 36565: ret\n      : @1312 (gas: 1)\n 36567: trap\n      : @1313 [@dyn 689] (gas: 1)\n 36568: jump @1316 if a0 == 0\n      : @1314 (gas: 1)\n 36571: t0 = 1380, jump @1976\n      : @1315 [@dyn 690] (gas: 1)\n 36577: ret\n      : @1316 (gas: 3)\n 36579: a0 = sp + 0xa0\n 36583: a1 = 0x40\n 36586: ra = 1382, jump @17\n      : @1317 [@dyn 691] (gas: 1)\n 36593: t0 = 1384, jump @1952\n      : @1318 [@dyn 692] (gas: 1)\n 36599: jump @1331 if a0 != 0\n      : @1319 (gas: 1)\n 36602: t0 = 1386, jump @1959\n      : @1320 [@dyn 693] (gas: 1)\n 36608: ra = 1388, jump @19\n      : @1321 [@dyn 694] (gas: 1)\n 36615: t0 = 1390, jump @1951\n      : @1322 [@dyn 695] (gas: 1)\n 36621: jump @1331 if a0 == 0\n      : @1323 (gas: 1)\n 36624: t0 = 1392, jump @1963\n      : @1324 [@dyn 696] (gas: 1)\n 36630: ra = 1394, jump @19\n      : @1325 [@dyn 697] (gas: 1)\n 36637: t0 = 1396, jump @1958\n      : @1326 [@dyn 698] (gas: 1)\n 36643: jump @1331 if a0 == 0\n      : @1327 (gas: 1)\n 36646: t0 = 1398, jump @2023\n      : @1328 [@dyn 699] (gas: 4)\n 36652: u64 [sp + 64] = 0x9\n 36656: a1 = sp + 0x40\n 36659: u64 [sp + 72] = 0\n 36662: ra = 1400, jump @19\n      : @1329 [@dyn 700] (gas: 1)\n 36669: t0 = 1402, jump @1954\n      : @1330 [@dyn 701] (gas: 1)\n 36675: jump @1332 if a0 != 0\n      : @1331 (gas: 1)\n 36678: trap\n      : @1332 (gas: 10)\n 36679: s1 = u64 [sp + 0x18]\n 36682: i32 a0 = s1 + 0x44\n 36685: a1 = u64 [0x20100]\n 36690: u64 [sp + 40] = 0\n 36693: u64 [sp + 0x38] = a1\n 36696: a1 = 0x7200000000000000\n 36706: u64 [sp + 0x30] = a1\n 36709: a1 = sp + 0x20\n 36712: u64 [sp + 32] = 0\n 36715: ra = 1404, jump @19\n      : @1333 [@dyn 702] (gas: 3)\n 36722: a1 = 0x64\n 36725: a0 = s1\n 36727: ra = 1406, jump @32\n      : @1334 [@dyn 703] (gas: 1)\n 36734: t0 = 1408, jump @1995\n      : @1335 [@dyn 704] (gas: 3)\n 36740: ra = 0x582\n 36744: ecalli 14 // 'seal_return'\n 36746: fallthrough\n      : @1336 [@dyn 705] (gas: 46)\n 36747: sp = sp + 0xffffffffffffff70\n 36751: u64 [sp + 0x88] = ra\n 36755: u64 [sp + 0x80] = s0\n 36759: u64 [sp + 0x78] = s1\n 36762: s0 = sp + 0x90\n 36766: sp = sp & 0xfffffffffffffff0\n 36769: t0 = a0\n 36771: a2 = u64 [a1]\n 36773: t2 = u64 [a0 + 0x8]\n 36776: a5 = u64 [a1 + 0x8]\n 36779: t1 = u64 [a0]\n 36781: a3 = a2 + 0x1f\n 36784: ra = a3 <u a2\n 36787: a2 = a5 + ra\n 36790: a3 = a3 & 0xffffffffffffffe0\n 36793: u64 [sp + 0x8] = t1\n 36796: t1 = t1 + a3\n 36799: a4 = t1 <u a3\n 36802: a3 = a2 + t2\n 36805: a3 = a3 + a4\n 36808: s1 = a3 ^ a2\n 36811: a0 = a3 <u a2\n 36814: a0 = a4 if s1 == 0\n 36817: a4 = u64 [t0 + 0x18]\n 36820: a5 = a2 <u a5\n 36823: s1 = u64 [a1 + 0x10]\n 36826: t0 = u64 [t0 + 0x10]\n 36829: a1 = u64 [a1 + 0x18]\n 36832: a5 = ra if ra == 0\n 36835: a5 = a5 + s1\n 36838: s1 = a5 <u s1\n 36841: a2 = a5 + t0\n 36844: a0 = a0 + a2\n 36847: a5 = a2 <u a5\n 36850: a2 = a0 <u a2\n 36853: a1 = a1 + a4\n 36856: a1 = a1 + s1\n 36859: a1 = a1 + a5\n 36862: a5 = a1 + a2\n 36865: a1 = a5 >u 0\n 36867: a2 = a0 >u 0\n 36869: a2 = a1 if a5 != 0\n 36872: a1 = a0 | a5\n 36875: s1 = a3 >u 0\n 36877: s1 = a2 if a1 != 0\n 36880: jump @1340 if s1 != 0\n      : @1337 (gas: 13)\n 36883: a1 = u64 [sp + 0x8]\n 36886: a1 = t1 <u a1\n 36889: a2 = a3 ^ t2\n 36892: s1 = a3 <u t2\n 36895: s1 = a1 if a2 == 0\n 36898: a1 = a0 <u t0\n 36901: a2 = a5 ^ a4\n 36904: a4 = a5 <u a4\n 36907: a4 = a1 if a2 == 0\n 36910: a1 = a0 ^ t0\n 36913: a1 = a1 | a2\n 36916: a4 = s1 if a1 == 0\n 36919: jump @1340 if a4 != 0\n      : @1338 (gas: 7)\n 36922: u64 [sp + 0x50] = t1\n 36925: u64 [sp + 0x58] = a3\n 36928: u64 [sp + 0x60] = a0\n 36931: a0 = 0x40\n 36934: a1 = sp + 0x50\n 36937: u64 [sp + 0x68] = a5\n 36940: ra = 1412, jump @19\n      : @1339 [@dyn 706] (gas: 6)\n 36947: sp = s0 + 0xffffffffffffff70\n 36951: ra = u64 [sp + 0x88]\n 36955: s0 = u64 [sp + 0x80]\n 36959: s1 = u64 [sp + 0x78]\n 36962: sp = sp + 0x90\n 36966: ret\n      : @1340 (gas: 1)\n 36968: t0 = 1414, jump @1992\n      : @1341 [@dyn 707] (gas: 1)\n 36974: ra = 1416, jump @19\n      : @1342 [@dyn 708] (gas: 7)\n 36981: u64 [sp + 40] = 0\n 36984: u64 [sp + 32] = 0\n 36987: u64 [sp + 16] = 0x41\n 36991: a0 = 0x4\n 36994: a1 = sp + 0x10\n 36997: u64 [sp + 24] = 0\n 37000: ra = 1418, jump @19\n      : @1343 [@dyn 709] (gas: 2)\n 37007: a1 = i32 [0x2025c]\n 37012: jump @1345 if a1 >u 63\n      : @1344 (gas: 2)\n 37016: u32 [0x2025c] = 0x40\n 37022: fallthrough\n      : @1345 (gas: 8)\n 37023: a1 = 0x20270\n 37028: i32 a1 = a1 + 0\n 37030: a0 = 0x1\n 37033: a2 = 0x24\n 37036: ra = 0x58c\n 37040: ecalli 14 // 'seal_return'\n 37042: t0 = 0x58e\n 37046: jump @1953\n      : @1346 [@dyn 710] (gas: 1)\n 37049: t0 = 1422, jump @1953\n      : @1347 [@dyn 711] (gas: 1)\n 37055: jump @1350 if a0 == 0\n      : @1348 (gas: 1)\n 37058: t0 = 1424, jump @1976\n      : @1349 [@dyn 712] (gas: 1)\n 37064: ret\n      : @1350 (gas: 3)\n 37066: a0 = sp + 0xa0\n 37070: a1 = 0x40\n 37073: ra = 1426, jump @17\n      : @1351 [@dyn 713] (gas: 1)\n 37080: t0 = 1428, jump @1952\n      : @1352 [@dyn 714] (gas: 1)\n 37086: jump @1365 if a0 != 0\n      : @1353 (gas: 1)\n 37089: t0 = 1430, jump @1959\n      : @1354 [@dyn 715] (gas: 1)\n 37095: ra = 1432, jump @19\n      : @1355 [@dyn 716] (gas: 1)\n 37102: t0 = 1434, jump @1951\n      : @1356 [@dyn 717] (gas: 1)\n 37108: jump @1365 if a0 == 0\n      : @1357 (gas: 1)\n 37111: t0 = 1436, jump @1963\n      : @1358 [@dyn 718] (gas: 1)\n 37117: ra = 1438, jump @19\n      : @1359 [@dyn 719] (gas: 1)\n 37124: t0 = 1440, jump @1958\n      : @1360 [@dyn 720] (gas: 1)\n 37130: jump @1365 if a0 == 0\n      : @1361 (gas: 1)\n 37133: t0 = 1442, jump @2023\n      : @1362 [@dyn 721] (gas: 4)\n 37139: u64 [sp + 64] = 0xf\n 37143: a1 = sp + 0x40\n 37146: u64 [sp + 72] = 0\n 37149: ra = 1444, jump @19\n      : @1363 [@dyn 722] (gas: 1)\n 37156: t0 = 1446, jump @1954\n      : @1364 [@dyn 723] (gas: 1)\n 37162: jump @1366 if a0 != 0\n      : @1365 (gas: 1)\n 37165: trap\n      : @1366 (gas: 10)\n 37166: s1 = u64 [sp + 0x18]\n 37169: i32 a0 = s1 + 0x44\n 37172: a1 = u64 [0x20108]\n 37177: a2 = u64 [0x20110]\n 37182: u64 [sp + 0x38] = a1\n 37185: u64 [sp + 40] = 0\n 37188: u64 [sp + 0x30] = a2\n 37191: a1 = sp + 0x20\n 37194: u64 [sp + 32] = 0\n 37197: ra = 1448, jump @19\n      : @1367 [@dyn 724] (gas: 3)\n 37204: a1 = 0x64\n 37207: a0 = s1\n 37209: ra = 1450, jump @32\n      : @1368 [@dyn 725] (gas: 1)\n 37216: t0 = 1452, jump @1995\n      : @1369 [@dyn 726] (gas: 4)\n 37222: ra = 0x5ae\n 37226: ecalli 14 // 'seal_return'\n 37228: t0 = 0x5b0\n 37232: jump @1953\n      : @1370 [@dyn 727] (gas: 1)\n 37235: t0 = 1456, jump @1953\n      : @1371 [@dyn 728] (gas: 1)\n 37241: jump @1374 if a0 == 0\n      : @1372 (gas: 1)\n 37244: t0 = 1458, jump @1976\n      : @1373 [@dyn 729] (gas: 1)\n 37250: ret\n      : @1374 (gas: 3)\n 37252: a0 = sp + 0xa0\n 37256: a1 = 0x40\n 37259: ra = 1460, jump @17\n      : @1375 [@dyn 730] (gas: 1)\n 37266: t0 = 1462, jump @1952\n      : @1376 [@dyn 731] (gas: 1)\n 37272: jump @1389 if a0 != 0\n      : @1377 (gas: 1)\n 37275: t0 = 1464, jump @1959\n      : @1378 [@dyn 732] (gas: 1)\n 37281: ra = 1466, jump @19\n      : @1379 [@dyn 733] (gas: 1)\n 37288: t0 = 1468, jump @1951\n      : @1380 [@dyn 734] (gas: 1)\n 37294: jump @1389 if a0 == 0\n      : @1381 (gas: 1)\n 37297: t0 = 1470, jump @1963\n      : @1382 [@dyn 735] (gas: 1)\n 37303: ra = 1472, jump @19\n      : @1383 [@dyn 736] (gas: 1)\n 37310: t0 = 1474, jump @1958\n      : @1384 [@dyn 737] (gas: 1)\n 37316: jump @1389 if a0 == 0\n      : @1385 (gas: 1)\n 37319: t0 = 1476, jump @2023\n      : @1386 [@dyn 738] (gas: 4)\n 37325: u64 [sp + 64] = 0x1f\n 37329: a1 = sp + 0x40\n 37332: u64 [sp + 72] = 0\n 37335: ra = 1478, jump @19\n      : @1387 [@dyn 739] (gas: 1)\n 37342: t0 = 1480, jump @1954\n      : @1388 [@dyn 740] (gas: 1)\n 37348: jump @1390 if a0 != 0\n      : @1389 (gas: 1)\n 37351: trap\n      : @1390 (gas: 12)\n 37352: s1 = u64 [sp + 0x18]\n 37355: i32 a0 = s1 + 0x44\n 37358: a1 = u64 [0x20118]\n 37363: u64 [sp + 0x38] = a1\n 37366: a1 = u64 [0x20120]\n 37371: a2 = u64 [0x20128]\n 37376: a3 = u64 [0x20130]\n 37381: u64 [sp + 0x30] = a1\n 37384: u64 [sp + 0x28] = a2\n 37387: a1 = sp + 0x20\n 37390: u64 [sp + 0x20] = a3\n 37393: ra = 1482, jump @19\n      : @1391 [@dyn 741] (gas: 3)\n 37400: a1 = 0x64\n 37403: a0 = s1\n 37405: ra = 1484, jump @32\n      : @1392 [@dyn 742] (gas: 1)\n 37412: t0 = 1486, jump @1995\n      : @1393 [@dyn 743] (gas: 3)\n 37418: ra = 0x5d0\n 37422: ecalli 14 // 'seal_return'\n 37424: fallthrough\n      : @1394 [@dyn 744] (gas: 70)\n 37425: sp = sp + 0xffffffffffffff40\n 37429: u64 [sp + 0xb8] = ra\n 37433: u64 [sp + 0xb0] = s0\n 37437: u64 [sp + 0xa8] = s1\n 37441: s0 = sp + 0xc0\n 37445: sp = sp & 0xfffffffffffffff0\n 37448: ra = u64 [a2]\n 37450: t0 = u64 [a1]\n 37452: a3 = u64 [a1 + 0x8]\n 37455: u64 [sp + 0x58] = a0\n 37458: a4 = u64 [a2 + 0x8]\n 37461: a0 = t0 mulhu ra\n 37464: s1 = a3 * ra\n 37467: a0 = a0 + s1\n 37470: s1 = a0 <u s1\n 37473: a5 = a3 mulhu ra\n 37476: a5 = a5 + s1\n 37479: s1 = t0 * a4\n 37482: a0 = a0 + s1\n 37485: u64 [sp + 0x50] = a0\n 37488: a0 = a0 <u s1\n 37491: s1 = t0 mulhu a4\n 37494: a0 = a0 + s1\n 37497: a0 = a0 + a5\n 37500: a5 = a0 <u a5\n 37503: s1 = a3 mulhu a4\n 37506: a5 = a5 + s1\n 37509: s1 = a3 * a4\n 37512: a0 = a0 + s1\n 37515: u64 [sp + 0x48] = a0\n 37518: s1 = a0 <u s1\n 37521: a5 = a5 + s1\n 37524: u64 [sp + 0x40] = a5\n 37527: t1 = u64 [a2 + 0x10]\n 37530: a2 = u64 [a2 + 0x18]\n 37533: t2 = u64 [a1 + 0x18]\n 37536: a0 = u64 [a1 + 0x10]\n 37539: a5 = a3 * t1\n 37542: u64 [sp + 0x20] = a2\n 37545: s1 = a2 * t0\n 37548: a1 = s1 + a5\n 37551: u64 [sp + 0x28] = a4\n 37554: s1 = a4 * a0\n 37557: a2 = t2 * ra\n 37560: a2 = a2 + s1\n 37563: s1 = t1 * t0\n 37566: a5 = a0 * ra\n 37569: s1 = s1 + a5\n 37572: u64 [sp + 0x30] = t1\n 37575: a4 = t1 mulhu t0\n 37578: u64 [sp + 0x10] = a4\n 37581: a4 = a4 + a1\n 37584: t1 = a0 mulhu ra\n 37587: a1 = t1 + a2\n 37590: a2 = s1 <u a5\n 37593: u64 [sp + 0x18] = a1\n 37596: u64 [sp + 0x8] = a4\n 37599: a5 = a1 + a4\n 37602: a2 = a2 + a5\n 37605: u64 [sp + 0x38] = t2\n 37608: a5 = a3 | t2\n 37611: a1 = t0 | a0\n 37614: a1 = a1 | a5\n 37617: a4 = u64 [sp + 0x40]\n 37620: a5 = u64 [sp + 0x48]\n 37623: s1 = s1 + a5\n 37626: t2 = s1 <u a5\n 37629: a2 = a2 + a4\n 37632: a2 = a2 + t2\n 37635: jump @1396 if a1 == 0\n      : @1395 (gas: 50)\n 37639: a1 = a2 ^ a4\n 37642: u64 [sp + 0x48] = a2\n 37645: a2 = u64 [sp + 0x48]\n 37648: a2 = a2 <u a4\n 37651: t2 = a2 if a1 != 0\n 37654: u64 [sp + 0x40] = s1\n 37657: a1 = u64 [sp + 0x10]\n 37660: a2 = u64 [sp + 0x8]\n 37663: s1 = a2 <u a1\n 37666: a2 = a3 >u 0\n 37668: a1 = u64 [sp + 0x20]\n 37671: a5 = a1 >u 0\n 37673: a2 = a2 & a5\n 37676: a5 = a1 mulhu t0\n 37679: a5 = a5 >u 0\n 37681: a2 = a2 | a5\n 37684: a4 = t1\n 37686: t1 = u64 [sp + 0x30]\n 37689: a3 = a3 mulhu t1\n 37692: a3 = a3 >u 0\n 37694: a2 = a2 | a3\n 37697: a2 = a2 | s1\n 37700: u64 [sp + 0x10] = a2\n 37703: a2 = u64 [sp + 0x18]\n 37706: a2 = a2 <u a4\n 37709: a4 = u64 [sp + 0x28]\n 37712: a3 = a4 >u 0\n 37714: s1 = u64 [sp + 0x38]\n 37717: a5 = s1 >u 0\n 37719: a3 = a3 & a5\n 37722: a5 = s1 mulhu ra\n 37725: a5 = a5 >u 0\n 37727: a3 = a3 | a5\n 37730: a5 = a4 mulhu a0\n 37733: a5 = a5 >u 0\n 37735: a3 = a3 | a5\n 37738: a2 = a2 | a3\n 37741: a3 = t1 | a1\n 37744: a5 = a0 | s1\n 37747: s1 = u64 [sp + 0x40]\n 37750: a3 = a3 >u 0\n 37752: a5 = a5 >u 0\n 37754: a3 = a3 & a5\n 37757: a2 = a2 | a3\n 37760: a1 = u64 [sp + 0x10]\n 37763: a1 = a1 | a2\n 37766: a2 = u64 [sp + 0x48]\n 37769: a0 = a1 | t2\n 37772: a0 = a0 & 0x1\n 37775: jump @1397 if a0 != 0\n      : @1396 (gas: 13)\n 37778: a0 = t0 * ra\n 37781: a1 = u64 [sp + 0x58]\n 37784: u64 [a1] = a0\n 37786: a0 = u64 [sp + 0x50]\n 37789: u64 [a1 + 0x8] = a0\n 37792: u64 [a1 + 0x10] = s1\n 37795: u64 [a1 + 0x18] = a2\n 37798: sp = s0 + 0xffffffffffffff40\n 37802: ra = u64 [sp + 0xb8]\n 37806: s0 = u64 [sp + 0xb0]\n 37810: s1 = u64 [sp + 0xa8]\n 37814: sp = sp + 0xc0\n 37818: ret\n      : @1397 (gas: 6)\n 37820: u64 [sp + 144] = 0\n 37824: u64 [sp + 136] = 0\n 37828: u64 [sp + 128] = 0\n 37832: t0 = 0x5d2\n 37836: a0 = 0x4e487b7100000000\n 37846: fallthrough\n      : @1398 [@dyn 745] (gas: 4)\n 37847: a1 = sp + 0x80\n 37851: u64 [sp + 0x98] = a0\n 37855: a0 = 0\n 37857: ra = 1492, jump @19\n      : @1399 [@dyn 746] (gas: 7)\n 37864: u64 [sp + 120] = 0\n 37867: u64 [sp + 112] = 0\n 37870: u64 [sp + 96] = 0x11\n 37874: a0 = 0x4\n 37877: a1 = sp + 0x60\n 37880: u64 [sp + 104] = 0\n 37883: ra = 1494, jump @19\n      : @1400 [@dyn 747] (gas: 2)\n 37890: a1 = i32 [0x2025c]\n 37895: jump @1402 if a1 >u 63\n      : @1401 (gas: 2)\n 37899: u32 [0x2025c] = 0x40\n 37905: fallthrough\n      : @1402 (gas: 7)\n 37906: a1 = 0x20270\n 37911: i32 a1 = a1 + 0\n 37913: a0 = 0x1\n 37916: a2 = 0x24\n 37919: ra = 0x5d8\n 37923: ecalli 14 // 'seal_return'\n 37925: fallthrough\n      : @1403 [@dyn 748] (gas: 45)\n 37926: sp = sp + 0xffffffffffffff90\n 37929: u64 [sp + 0x68] = ra\n 37932: u64 [sp + 0x60] = s0\n 37935: u64 [sp + 0x58] = s1\n 37938: s0 = sp + 0x70\n 37941: sp = sp & 0xfffffffffffffff0\n 37944: a3 = u64 [a1 + 0x18]\n 37947: u64 [sp + 0x8] = a3\n 37950: a4 = u64 [a2 + 0x18]\n 37953: t2 = u64 [a1]\n 37955: u64 [sp] = t2\n 37957: a3 = u64 [a1 + 0x8]\n 37960: s1 = u64 [a2 + 0x8]\n 37963: a5 = u64 [a2]\n 37965: t1 = u64 [a1 + 0x10]\n 37968: t0 = u64 [a2 + 0x10]\n 37971: a2 = s1 + a3\n 37974: t2 = t2 + a5\n 37977: a5 = t2 <u a5\n 37980: a2 = a2 + a5\n 37983: ra = a2 ^ s1\n 37986: s1 = a2 <u s1\n 37989: s1 = a5 if ra == 0\n 37992: a1 = t0 + t1\n 37995: a5 = u64 [sp + 0x8]\n 37998: a5 = a5 + a4\n 38001: a4 = a1 <u t0\n 38004: a4 = a4 + a5\n 38007: a5 = a1 + s1\n 38010: a1 = a5 <u a1\n 38013: ra = a4 + a1\n 38016: a4 = a2 ^ a3\n 38019: a3 = a2 <u a3\n 38022: a1 = u64 [sp]\n 38024: s1 = t2 <u a1\n 38027: s1 = a3 if a4 != 0\n 38030: t0 = a5 <u t1\n 38033: a1 = u64 [sp + 0x8]\n 38036: a4 = ra ^ a1\n 38039: a3 = ra <u a1\n 38042: a3 = t0 if a4 == 0\n 38045: a1 = a5 ^ t1\n 38048: a1 = a1 | a4\n 38051: s1 = a3 if a1 != 0\n 38054: jump @1405 if s1 != 0\n      : @1404 (gas: 10)\n 38057: u64 [a0] = t2\n 38059: u64 [a0 + 0x8] = a2\n 38062: u64 [a0 + 0x10] = a5\n 38065: u64 [a0 + 0x18] = ra\n 38068: sp = s0 + 0xffffffffffffff90\n 38071: ra = u64 [sp + 0x68]\n 38074: s0 = u64 [sp + 0x60]\n 38077: s1 = u64 [sp + 0x58]\n 38080: sp = sp + 0x70\n 38083: ret\n      : @1405 (gas: 1)\n 38085: t0 = 1498, jump @1992\n      : @1406 [@dyn 749] (gas: 1)\n 38091: ra = 1500, jump @19\n      : @1407 [@dyn 750] (gas: 7)\n 38098: u64 [sp + 40] = 0\n 38101: u64 [sp + 32] = 0\n 38104: u64 [sp + 16] = 0x11\n 38108: a0 = 0x4\n 38111: a1 = sp + 0x10\n 38114: u64 [sp + 24] = 0\n 38117: ra = 1502, jump @19\n      : @1408 [@dyn 751] (gas: 2)\n 38124: a1 = i32 [0x2025c]\n 38129: jump @1410 if a1 >u 63\n      : @1409 (gas: 2)\n 38133: u32 [0x2025c] = 0x40\n 38139: fallthrough\n      : @1410 (gas: 8)\n 38140: a1 = 0x20270\n 38145: i32 a1 = a1 + 0\n 38147: a0 = 0x1\n 38150: a2 = 0x24\n 38153: ra = 0x5e0\n 38157: ecalli 14 // 'seal_return'\n 38159: t0 = 0x5e2\n 38163: jump @1953\n      : @1411 [@dyn 752] (gas: 1)\n 38166: t0 = 1506, jump @1953\n      : @1412 [@dyn 753] (gas: 1)\n 38172: jump @1415 if a0 == 0\n      : @1413 (gas: 1)\n 38175: t0 = 1508, jump @1976\n      : @1414 [@dyn 754] (gas: 1)\n 38181: ret\n      : @1415 (gas: 3)\n 38183: a0 = sp + 0xa0\n 38187: a1 = 0x40\n 38190: ra = 1510, jump @17\n      : @1416 [@dyn 755] (gas: 1)\n 38197: t0 = 1512, jump @1952\n      : @1417 [@dyn 756] (gas: 1)\n 38203: jump @1430 if a0 != 0\n      : @1418 (gas: 1)\n 38206: t0 = 1514, jump @1959\n      : @1419 [@dyn 757] (gas: 1)\n 38212: ra = 1516, jump @19\n      : @1420 [@dyn 758] (gas: 1)\n 38219: t0 = 1518, jump @1951\n      : @1421 [@dyn 759] (gas: 1)\n 38225: jump @1430 if a0 == 0\n      : @1422 (gas: 1)\n 38228: t0 = 1520, jump @1963\n      : @1423 [@dyn 760] (gas: 1)\n 38234: ra = 1522, jump @19\n      : @1424 [@dyn 761] (gas: 1)\n 38241: t0 = 1524, jump @1958\n      : @1425 [@dyn 762] (gas: 1)\n 38247: jump @1430 if a0 == 0\n      : @1426 (gas: 1)\n 38250: t0 = 1526, jump @2023\n      : @1427 [@dyn 763] (gas: 4)\n 38256: u64 [sp + 64] = 0x19\n 38260: a1 = sp + 0x40\n 38263: u64 [sp + 72] = 0\n 38266: ra = 1528, jump @19\n      : @1428 [@dyn 764] (gas: 1)\n 38273: t0 = 1530, jump @1954\n      : @1429 [@dyn 765] (gas: 1)\n 38279: jump @1431 if a0 != 0\n      : @1430 (gas: 1)\n 38282: trap\n      : @1431 (gas: 12)\n 38283: s1 = u64 [sp + 0x18]\n 38286: i32 a0 = s1 + 0x44\n 38289: a1 = u64 [0x20138]\n 38294: a2 = u64 [0x20140]\n 38299: a3 = u64 [0x20148]\n 38304: u64 [sp + 0x38] = a1\n 38307: u64 [sp + 0x30] = a2\n 38310: u64 [sp + 0x28] = a3\n 38313: a2 = 0x7200000000000000\n 38323: a1 = sp + 0x20\n 38326: u64 [sp + 0x20] = a2\n 38329: ra = 1532, jump @19\n      : @1432 [@dyn 766] (gas: 3)\n 38336: a1 = 0x64\n 38339: a0 = s1\n 38341: ra = 1534, jump @32\n      : @1433 [@dyn 767] (gas: 1)\n 38348: t0 = 1536, jump @1995\n      : @1434 [@dyn 768] (gas: 3)\n 38354: ra = 0x602\n 38358: ecalli 14 // 'seal_return'\n 38360: fallthrough\n      : @1435 [@dyn 769] (gas: 29)\n 38361: sp = sp + 0xffffffffffffff90\n 38364: u64 [sp + 0x68] = ra\n 38367: u64 [sp + 0x60] = s0\n 38370: u64 [sp + 0x58] = s1\n 38373: s0 = sp + 0x70\n 38376: sp = sp & 0xfffffffffffffff0\n 38379: s1 = u64 [a3]\n 38381: a4 = u64 [a2]\n 38383: u64 [sp] = a4\n 38385: t2 = u64 [a3 + 0x8]\n 38388: a5 = u64 [a2 + 0x8]\n 38391: a4 = u64 [a3 + 0x10]\n 38394: t0 = u64 [a2 + 0x10]\n 38397: t1 = u64 [a3 + 0x18]\n 38400: a2 = u64 [a2 + 0x18]\n 38403: ra = t2 ^ a5\n 38406: a5 = t2 <u a5\n 38409: u64 [sp + 0x8] = s1\n 38412: a3 = u64 [sp]\n 38414: a3 = s1 <u a3\n 38417: a3 = a5 if ra != 0\n 38420: a5 = t1 ^ a2\n 38423: a2 = t1 <u a2\n 38426: s1 = a4 <u t0\n 38429: s1 = a2 if a5 != 0\n 38432: a2 = a4 ^ t0\n 38435: a2 = a2 | a5\n 38438: a3 = s1 if a2 != 0\n 38441: jump @1437 if a3 == 0\n      : @1436 (gas: 39)\n 38444: t0 = u64 [a1 + 0x18]\n 38447: ra = u64 [a1 + 0x10]\n 38450: a5 = u64 [a1 + 0x8]\n 38453: a1 = u64 [a1]\n 38455: s1 = a4 >> 0x3b\n 38458: t1 = t1 << 0x5\n 38461: t1 = t1 | s1\n 38464: a2 = t2 >> 0x3b\n 38467: a4 = a4 << 0x5\n 38470: a2 = a2 | a4\n 38473: a3 = u64 [sp + 0x8]\n 38476: a4 = a3 >> 0x3b\n 38479: t2 = t2 << 0x5\n 38482: a4 = t2 | a4\n 38485: a3 = a3 << 0x5\n 38488: a1 = a1 + a3\n 38491: a3 = a1 <u a3\n 38494: a5 = a5 + a4\n 38497: a5 = a5 + a3\n 38500: s1 = a5 ^ a4\n 38503: a4 = a5 <u a4\n 38506: a4 = a3 if s1 == 0\n 38509: ra = ra + a2\n 38512: a4 = a4 + ra\n 38515: a3 = a4 <u ra\n 38518: a2 = ra <u a2\n 38521: t0 = t0 + t1\n 38524: a2 = a2 + t0\n 38527: a2 = a2 + a3\n 38530: u64 [a0] = a1\n 38532: u64 [a0 + 0x8] = a5\n 38535: u64 [a0 + 0x10] = a4\n 38538: u64 [a0 + 0x18] = a2\n 38541: sp = s0 + 0xffffffffffffff90\n 38544: ra = u64 [sp + 0x68]\n 38547: s0 = u64 [sp + 0x60]\n 38550: s1 = u64 [sp + 0x58]\n 38553: sp = sp + 0x70\n 38556: ret\n      : @1437 (gas: 1)\n 38558: t0 = 1540, jump @1992\n      : @1438 [@dyn 770] (gas: 1)\n 38564: ra = 1542, jump @19\n      : @1439 [@dyn 771] (gas: 7)\n 38571: u64 [sp + 40] = 0\n 38574: u64 [sp + 32] = 0\n 38577: u64 [sp + 16] = 0x32\n 38581: a0 = 0x4\n 38584: a1 = sp + 0x10\n 38587: u64 [sp + 24] = 0\n 38590: ra = 1544, jump @19\n      : @1440 [@dyn 772] (gas: 2)\n 38597: a1 = i32 [0x2025c]\n 38602: jump @1442 if a1 >u 63\n      : @1441 (gas: 2)\n 38606: u32 [0x2025c] = 0x40\n 38612: fallthrough\n      : @1442 (gas: 8)\n 38613: a1 = 0x20270\n 38618: i32 a1 = a1 + 0\n 38620: a0 = 0x1\n 38623: a2 = 0x24\n 38626: ra = 0x60a\n 38630: ecalli 14 // 'seal_return'\n 38632: t0 = 0x60c\n 38636: jump @1953\n      : @1443 [@dyn 773] (gas: 1)\n 38639: t0 = 1548, jump @1953\n      : @1444 [@dyn 774] (gas: 1)\n 38645: jump @1447 if a0 == 0\n      : @1445 (gas: 1)\n 38648: t0 = 1550, jump @1976\n      : @1446 [@dyn 775] (gas: 1)\n 38654: ret\n      : @1447 (gas: 3)\n 38656: a0 = sp + 0xa0\n 38660: a1 = 0x40\n 38663: ra = 1552, jump @17\n      : @1448 [@dyn 776] (gas: 1)\n 38670: t0 = 1554, jump @1952\n      : @1449 [@dyn 777] (gas: 1)\n 38676: jump @1462 if a0 != 0\n      : @1450 (gas: 1)\n 38679: t0 = 1556, jump @1959\n      : @1451 [@dyn 778] (gas: 1)\n 38685: ra = 1558, jump @19\n      : @1452 [@dyn 779] (gas: 1)\n 38692: t0 = 1560, jump @1951\n      : @1453 [@dyn 780] (gas: 1)\n 38698: jump @1462 if a0 == 0\n      : @1454 (gas: 1)\n 38701: t0 = 1562, jump @1963\n      : @1455 [@dyn 781] (gas: 1)\n 38707: ra = 1564, jump @19\n      : @1456 [@dyn 782] (gas: 1)\n 38714: t0 = 1566, jump @1958\n      : @1457 [@dyn 783] (gas: 1)\n 38720: jump @1462 if a0 == 0\n      : @1458 (gas: 1)\n 38723: t0 = 1568, jump @2023\n      : @1459 [@dyn 784] (gas: 4)\n 38729: u64 [sp + 64] = 0x12\n 38733: a1 = sp + 0x40\n 38736: u64 [sp + 72] = 0\n 38739: ra = 1570, jump @19\n      : @1460 [@dyn 785] (gas: 1)\n 38746: t0 = 1572, jump @1954\n      : @1461 [@dyn 786] (gas: 1)\n 38752: jump @1463 if a0 != 0\n      : @1462 (gas: 1)\n 38755: trap\n      : @1463 (gas: 11)\n 38756: s1 = u64 [sp + 0x18]\n 38759: i32 a0 = s1 + 0x44\n 38762: a1 = u64 [0x20150]\n 38767: a2 = u64 [0x20158]\n 38772: u64 [sp + 0x38] = a1\n 38775: u64 [sp + 0x30] = a2\n 38778: a1 = 0x6578000000000000\n 38788: u64 [sp + 0x28] = a1\n 38791: a1 = sp + 0x20\n 38794: u64 [sp + 32] = 0\n 38797: ra = 1574, jump @19\n      : @1464 [@dyn 787] (gas: 3)\n 38804: a1 = 0x64\n 38807: a0 = s1\n 38809: ra = 1576, jump @32\n      : @1465 [@dyn 788] (gas: 1)\n 38816: t0 = 1578, jump @1995\n      : @1466 [@dyn 789] (gas: 3)\n 38822: ra = 0x62c\n 38826: ecalli 14 // 'seal_return'\n 38828: fallthrough\n      : @1467 [@dyn 790] (gas: 20)\n 38829: sp = sp + 0xffffffffffffffa0\n 38832: u64 [sp + 0x58] = ra\n 38835: u64 [sp + 0x50] = s0\n 38838: u64 [sp + 0x48] = s1\n 38841: s0 = sp + 0x60\n 38844: sp = sp & 0xfffffffffffffff0\n 38847: t2 = u64 [a2 + 0x18]\n 38850: s1 = u64 [a2 + 0x10]\n 38853: t1 = u64 [a2]\n 38855: a2 = u64 [a2 + 0x8]\n 38858: t0 = t2 >u 0\n 38860: a5 = s1 >u 0\n 38862: a5 = t0 if t2 != 0\n 38865: t0 = a2 >u 0\n 38867: a3 = t1 <u 0x10\n 38870: a3 = a3 ^ 0x1\n 38873: a3 = t0 if a2 != 0\n 38876: a4 = s1 | t2\n 38879: a3 = a5 if a4 != 0\n 38882: jump @1470 if a3 != 0\n      : @1468 (gas: 28)\n 38885: a3 = u64 [a1]\n 38887: t0 = u64 [a1 + 0x18]\n 38890: a5 = u64 [a1 + 0x8]\n 38893: ra = u64 [a1 + 0x10]\n 38896: a3 = a3 + t1\n 38899: a4 = a3 <u t1\n 38902: a5 = a5 + a2\n 38905: a5 = a5 + a4\n 38908: a1 = a5 ^ a2\n 38911: a2 = a5 <u a2\n 38914: a2 = a4 if a1 == 0\n 38917: ra = ra + s1\n 38920: a2 = a2 + ra\n 38923: a1 = a2 <u ra\n 38926: a4 = ra <u s1\n 38929: t0 = t0 + t2\n 38932: a4 = a4 + t0\n 38935: a1 = a1 + a4\n 38938: a4 = 0\n 38940: u64 [a0 + 56] = 0\n 38943: u64 [a0 + 48] = 0\n 38946: u64 [a0 + 40] = 0\n 38949: u64 [a0 + 32] = 0\n 38952: u64 [a0] = a3\n 38954: u64 [a0 + 0x8] = a5\n 38957: u64 [a0 + 0x10] = a2\n 38960: u64 [a0 + 0x18] = a1\n 38963: t0 = 1582, jump @2026\n      : @1469 [@dyn 791] (gas: 1)\n 38969: ret\n      : @1470 (gas: 1)\n 38971: t0 = 1584, jump @1989\n      : @1471 [@dyn 792] (gas: 1)\n 38977: ra = 1586, jump @19\n      : @1472 [@dyn 793] (gas: 7)\n 38984: u64 [sp + 24] = 0\n 38987: u64 [sp + 16] = 0\n 38990: u64 [sp + 0] = 0x32\n 38993: a0 = 0x4\n 38996: a1 = sp\n 38998: u64 [sp + 8] = 0\n 39001: ra = 1588, jump @19\n      : @1473 [@dyn 794] (gas: 2)\n 39008: a1 = i32 [0x2025c]\n 39013: jump @1475 if a1 >u 63\n      : @1474 (gas: 2)\n 39017: u32 [0x2025c] = 0x40\n 39023: fallthrough\n      : @1475 (gas: 8)\n 39024: a1 = 0x20270\n 39029: i32 a1 = a1 + 0\n 39031: a0 = 0x1\n 39034: a2 = 0x24\n 39037: ra = 0x636\n 39041: ecalli 14 // 'seal_return'\n 39043: t0 = 0x638\n 39047: jump @1953\n      : @1476 [@dyn 795] (gas: 1)\n 39050: t0 = 1592, jump @1953\n      : @1477 [@dyn 796] (gas: 1)\n 39056: jump @1480 if a0 == 0\n      : @1478 (gas: 1)\n 39059: t0 = 1594, jump @1976\n      : @1479 [@dyn 797] (gas: 1)\n 39065: ret\n      : @1480 (gas: 3)\n 39067: a0 = sp + 0xa0\n 39071: a1 = 0x40\n 39074: ra = 1596, jump @17\n      : @1481 [@dyn 798] (gas: 1)\n 39081: t0 = 1598, jump @1952\n      : @1482 [@dyn 799] (gas: 1)\n 39087: jump @1494 if a0 != 0\n      : @1483 (gas: 1)\n 39090: t0 = 1600, jump @1959\n      : @1484 [@dyn 800] (gas: 1)\n 39096: ra = 1602, jump @19\n      : @1485 [@dyn 801] (gas: 1)\n 39103: t0 = 1604, jump @1951\n      : @1486 [@dyn 802] (gas: 1)\n 39109: jump @1494 if a0 == 0\n      : @1487 (gas: 1)\n 39112: t0 = 1606, jump @1963\n      : @1488 [@dyn 803] (gas: 1)\n 39118: ra = 1608, jump @19\n      : @1489 [@dyn 804] (gas: 1)\n 39125: t0 = 1610, jump @1958\n      : @1490 [@dyn 805] (gas: 1)\n 39131: jump @1494 if a0 == 0\n      : @1491 (gas: 8)\n 39134: s1 = u64 [sp + 0x18]\n 39137: i32 a0 = s1 + 0x24\n 39140: u64 [sp + 88] = 0\n 39143: u64 [sp + 80] = 0\n 39146: u64 [sp + 64] = 0x15\n 39150: a1 = sp + 0x40\n 39153: u64 [sp + 72] = 0\n 39156: ra = 1612, jump @19\n      : @1492 [@dyn 806] (gas: 1)\n 39163: t0 = 1614, jump @1954\n      : @1493 [@dyn 807] (gas: 1)\n 39169: jump @1495 if a0 != 0\n      : @1494 (gas: 1)\n 39172: trap\n      : @1495 (gas: 11)\n 39173: s1 = u64 [sp + 0x18]\n 39176: i32 a0 = s1 + 0x44\n 39179: a1 = u64 [0x20160]\n 39184: a2 = u64 [0x20168]\n 39189: u64 [sp + 0x38] = a1\n 39192: u64 [sp + 0x30] = a2\n 39195: a1 = 0x6563746564000000\n 39205: u64 [sp + 0x28] = a1\n 39208: a1 = sp + 0x20\n 39211: u64 [sp + 32] = 0\n 39214: ra = 1616, jump @19\n      : @1496 [@dyn 808] (gas: 3)\n 39221: a1 = 0x64\n 39224: a0 = s1\n 39226: ra = 1618, jump @32\n      : @1497 [@dyn 809] (gas: 1)\n 39233: t0 = 1620, jump @1995\n      : @1498 [@dyn 810] (gas: 3)\n 39239: ra = 0x656\n 39243: ecalli 14 // 'seal_return'\n 39245: fallthrough\n      : @1499 [@dyn 811] (gas: 30)\n 39246: sp = sp + 0xffffffffffffff00\n 39250: u64 [sp + 0xf8] = ra\n 39254: u64 [sp + 0xf0] = s0\n 39258: u64 [sp + 0xe8] = s1\n 39262: s0 = sp + 0x100\n 39266: sp = sp & 0xffffffffffffffe0\n 39269: a3 = u32 [a2 + 0x10]\n 39272: u64 [sp + 0x70] = a3\n 39275: a3 = u64 [a2]\n 39277: u64 [sp + 0x50] = a3\n 39280: a2 = u64 [a2 + 0x8]\n 39283: u64 [sp + 0x78] = a2\n 39286: a2 = u64 [a1 + 0x18]\n 39289: u64 [sp + 0x60] = a2\n 39292: a2 = u64 [a1 + 0x10]\n 39295: u64 [sp + 0x58] = a2\n 39298: s1 = u64 [a1 + 0x8]\n 39301: a1 = u64 [a1]\n 39303: u64 [sp + 0x68] = a1\n 39306: a1 = u64 [a0 + 0x18]\n 39309: a2 = u64 [a0 + 0x10]\n 39312: a3 = u64 [a0 + 0x8]\n 39315: a0 = u64 [a0]\n 39317: u64 [sp + 0xb8] = a1\n 39321: u64 [sp + 0xb0] = a2\n 39325: u64 [sp + 0xa8] = a3\n 39329: u64 [sp + 0xa0] = a0\n 39333: a0 = sp + 0x80\n 39337: a1 = sp + 0xa0\n 39341: ra = 1624, jump @21\n      : @1500 [@dyn 812] (gas: 23)\n 39348: a0 = u64 [sp + 0x90]\n 39352: u64 [sp + 0x38] = a0\n 39355: a0 = u64 [sp + 0x98]\n 39359: u64 [sp + 0x30] = a0\n 39362: a0 = u64 [sp + 0x80]\n 39366: u64 [sp + 0x28] = a0\n 39369: a0 = u64 [sp + 0x88]\n 39373: u64 [sp + 0x20] = a0\n 39376: a5 = u64 [sp + 0x68]\n 39379: a0 = a5 >> 0x3d\n 39382: a1 = s1 << 0x3\n 39385: a0 = a0 | a1\n 39388: s1 = s1 >> 0x3d\n 39391: a2 = u64 [sp + 0x58]\n 39394: a1 = a2 << 0x3\n 39397: a1 = a1 | s1\n 39400: a2 = a2 >> 0x3d\n 39403: a3 = u64 [sp + 0x60]\n 39406: a3 = a3 << 0x3\n 39409: a2 = a2 | a3\n 39412: a5 = a5 << 0x3\n 39415: u64 [sp + 0x58] = a5\n 39418: t0 = 1626, jump @1966\n      : @1501 [@dyn 813] (gas: 7)\n 39424: u64 [sp + 0x48] = a4\n 39427: i32 a2 = a5 + 0xffffffffffffff80\n 39430: u64 [sp + 0x18] = a2\n 39433: s1 = u64 [sp + 0x50]\n 39436: a0 = s1\n 39438: a1 = u64 [sp + 0x78]\n 39441: ra = 1628, jump @2043\n      : @1502 [@dyn 814] (gas: 8)\n 39447: u64 [sp] = a0\n 39449: u64 [sp + 0x8] = a1\n 39452: a0 = u64 [sp + 0x68]\n 39455: i32 a2 = a0 << 0x3\n 39458: u64 [sp + 0x60] = a2\n 39461: a0 = u64 [sp + 0x70]\n 39464: a1 = 0\n 39466: ra = 1630, jump @2043\n      : @1503 [@dyn 815] (gas: 8)\n 39472: u64 [sp + 0x40] = a0\n 39475: u64 [sp + 0x68] = a1\n 39478: a1 = u64 [sp + 0x58]\n 39481: i32 a2 = 0x80 - a1\n 39485: u64 [sp + 0x10] = a2\n 39488: a0 = s1\n 39490: a1 = u64 [sp + 0x78]\n 39493: ra = 1632, jump @2038\n      : @1504 [@dyn 816] (gas: 19)\n 39499: a2 = u64 [sp + 0x40]\n 39502: a0 = a0 | a2\n 39505: a3 = u64 [sp + 0x58]\n 39508: s1 = a3 <u 0x80\n 39512: a2 = u64 [sp]\n 39514: a0 = a2 if s1 == 0\n 39517: a2 = u64 [sp + 0x70]\n 39520: a0 = a2 if a3 == 0\n 39523: u64 [sp + 0x70] = a0\n 39526: a0 = u64 [sp + 0x68]\n 39529: a0 = a0 | a1\n 39532: a1 = u64 [sp + 0x8]\n 39535: a0 = a1 if s1 == 0\n 39538: a0 = 0 if a3 == 0\n 39540: u64 [sp + 0x68] = a0\n 39543: a0 = u64 [sp + 0x50]\n 39546: a1 = u64 [sp + 0x78]\n 39549: a2 = u64 [sp + 0x60]\n 39552: ra = 1634, jump @2043\n      : @1505 [@dyn 817] (gas: 20)\n 39558: a2 = a0\n 39560: u64 [sp + 0x40] = s1\n 39563: a2 = 0 if s1 == 0\n 39565: a1 = 0 if s1 == 0\n 39567: a3 = u64 [sp + 0x48]\n 39570: a0 = u64 [sp + 0x68]\n 39573: a0 = 0 if a3 != 0\n 39575: u64 [sp + 0x68] = a0\n 39578: a0 = u64 [sp + 0x70]\n 39581: a0 = 0 if a3 != 0\n 39583: u64 [sp + 0x70] = a0\n 39586: a1 = 0 if a3 != 0\n 39588: u64 [sp + 0x78] = a1\n 39591: a2 = 0 if a3 != 0\n 39593: u64 [sp + 0x50] = a2\n 39596: a0 = 0xffffffff\n 39606: u64 [sp + 0x8] = a0\n 39609: a1 = 0\n 39611: a2 = u64 [sp + 0x60]\n 39614: ra = 1636, jump @2043\n      : @1506 [@dyn 818] (gas: 6)\n 39620: s1 = a0\n 39622: u64 [sp] = a1\n 39624: a0 = 0xffffffffffffffff\n 39627: a1 = 0xffffffffffffffff\n 39630: a2 = u64 [sp + 0x10]\n 39633: ra = 1638, jump @2038\n      : @1507 [@dyn 819] (gas: 6)\n 39639: u64 [sp + 0x10] = a1\n 39642: s1 = s1 | a0\n 39645: a0 = 0xffffffffffffffff\n 39648: a1 = 0xffffffffffffffff\n 39651: a2 = u64 [sp + 0x18]\n 39654: ra = 1640, jump @2043\n      : @1508 [@dyn 820] (gas: 15)\n 39660: a2 = u64 [sp + 0x40]\n 39663: a0 = s1 if a2 != 0\n 39666: a4 = u64 [sp + 0x58]\n 39669: a3 = u64 [sp + 0x8]\n 39672: a0 = a3 if a4 == 0\n 39675: u64 [sp + 0x18] = a0\n 39678: a0 = u64 [sp]\n 39680: s1 = u64 [sp + 0x10]\n 39683: s1 = s1 | a0\n 39686: s1 = a1 if a2 == 0\n 39689: s1 = 0 if a4 == 0\n 39691: a0 = 0xffffffffffffffff\n 39694: a1 = 0xffffffffffffffff\n 39697: a2 = u64 [sp + 0x60]\n 39700: ra = 1642, jump @2043\n      : @1509 [@dyn 821] (gas: 36)\n 39706: a2 = u64 [sp + 0x40]\n 39709: a0 = 0 if a2 == 0\n 39711: a1 = 0 if a2 == 0\n 39713: a2 = s1 ^ 0xffffffffffffffff\n 39716: a3 = u64 [sp + 0x18]\n 39719: a3 = a3 ^ 0xffffffffffffffff\n 39722: a1 = a1 ^ 0xffffffffffffffff\n 39725: a0 = a0 ^ 0xffffffffffffffff\n 39728: a4 = u64 [sp + 0x48]\n 39731: a3 = 0xffffffffffffffff if a4 != 0\n 39734: a2 = 0xffffffffffffffff if a4 != 0\n 39737: a0 = 0xffffffffffffffff if a4 != 0\n 39740: a1 = 0xffffffffffffffff if a4 != 0\n 39743: a4 = u64 [sp + 0x20]\n 39746: a1 = a1 & a4\n 39749: a4 = u64 [sp + 0x28]\n 39752: a0 = a0 & a4\n 39755: a4 = u64 [sp + 0x30]\n 39758: a2 = a2 & a4\n 39761: a4 = u64 [sp + 0x38]\n 39764: a3 = a3 & a4\n 39767: a4 = u64 [sp + 0x70]\n 39770: a3 = a3 | a4\n 39773: a4 = u64 [sp + 0x68]\n 39776: a2 = a2 | a4\n 39779: a4 = u64 [sp + 0x50]\n 39782: a0 = a0 | a4\n 39785: a4 = u64 [sp + 0x78]\n 39788: a1 = a1 | a4\n 39791: u64 [sp + 0xc8] = a1\n 39795: u64 [sp + 0xc0] = a0\n 39799: u64 [sp + 0xd8] = a2\n 39803: u64 [sp + 0xd0] = a3\n 39807: a0 = sp + 0xa0\n 39811: a1 = sp + 0xc0\n 39815: ra = 1644, jump @25\n      : @1510 [@dyn 822] (gas: 6)\n 39822: sp = s0 + 0xffffffffffffff00\n 39826: ra = u64 [sp + 0xf8]\n 39830: s0 = u64 [sp + 0xf0]\n 39834: s1 = u64 [sp + 0xe8]\n 39838: sp = sp + 0x100\n 39842: ret\n      : @1511 (gas: 16)\n 39844: a2 = u64 [a1]\n 39846: t0 = u64 [a1 + 0x18]\n 39849: a3 = u64 [a1 + 0x8]\n 39852: a5 = u64 [a1 + 0x10]\n 39855: a4 = a2 + 0x1\n 39858: a2 = a4 <u 0x1\n 39861: a2 = a2 + a3\n 39864: a3 = a4 | a2\n 39867: a3 = a3 <u 0x1\n 39870: a3 = a3 + a5\n 39873: a5 = a3 <u a5\n 39876: a5 = a5 + t0\n 39879: t0 = a2 | a5\n 39882: a1 = a4 | a3\n 39885: a1 = a1 | t0\n 39888: jump @1513 if a1 == 0\n      : @1512 (gas: 5)\n 39891: u64 [a0] = a4\n 39893: u64 [a0 + 0x8] = a2\n 39896: u64 [a0 + 0x10] = a3\n 39899: u64 [a0 + 0x18] = a5\n 39902: ret\n      : @1513 (gas: 6)\n 39904: sp = sp + 0xffffffffffffffb0\n 39907: u64 [sp + 0x48] = ra\n 39910: u64 [sp + 0x40] = s0\n 39913: s0 = sp + 0x50\n 39916: sp = sp & 0xfffffffffffffff0\n 39919: t0 = 1646, jump @1989\n      : @1514 [@dyn 823] (gas: 1)\n 39925: ra = 1648, jump @19\n      : @1515 [@dyn 824] (gas: 7)\n 39932: u64 [sp + 24] = 0\n 39935: u64 [sp + 16] = 0\n 39938: u64 [sp + 0] = 0x11\n 39941: a0 = 0x4\n 39944: a1 = sp\n 39946: u64 [sp + 8] = 0\n 39949: ra = 1650, jump @19\n      : @1516 [@dyn 825] (gas: 2)\n 39956: a1 = i32 [0x2025c]\n 39961: jump @1518 if a1 >u 63\n      : @1517 (gas: 2)\n 39965: u32 [0x2025c] = 0x40\n 39971: fallthrough\n      : @1518 (gas: 8)\n 39972: a1 = 0x20270\n 39977: i32 a1 = a1 + 0\n 39979: a0 = 0x1\n 39982: a2 = 0x24\n 39985: ra = 0x674\n 39989: ecalli 14 // 'seal_return'\n 39991: t0 = 0x676\n 39995: jump @1953\n      : @1519 [@dyn 826] (gas: 1)\n 39998: t0 = 1654, jump @1953\n      : @1520 [@dyn 827] (gas: 1)\n 40004: jump @1523 if a0 == 0\n      : @1521 (gas: 1)\n 40007: t0 = 1656, jump @1976\n      : @1522 [@dyn 828] (gas: 1)\n 40013: ret\n      : @1523 (gas: 3)\n 40015: a0 = sp + 0xa0\n 40019: a1 = 0x40\n 40022: ra = 1658, jump @17\n      : @1524 [@dyn 829] (gas: 1)\n 40029: t0 = 1660, jump @1952\n      : @1525 [@dyn 830] (gas: 1)\n 40035: jump @1538 if a0 != 0\n      : @1526 (gas: 1)\n 40038: t0 = 1662, jump @1959\n      : @1527 [@dyn 831] (gas: 1)\n 40044: ra = 1664, jump @19\n      : @1528 [@dyn 832] (gas: 1)\n 40051: t0 = 1666, jump @1951\n      : @1529 [@dyn 833] (gas: 1)\n 40057: jump @1538 if a0 == 0\n      : @1530 (gas: 1)\n 40060: t0 = 1668, jump @1963\n      : @1531 [@dyn 834] (gas: 1)\n 40066: ra = 1670, jump @19\n      : @1532 [@dyn 835] (gas: 1)\n 40073: t0 = 1672, jump @1958\n      : @1533 [@dyn 836] (gas: 1)\n 40079: jump @1538 if a0 == 0\n      : @1534 (gas: 1)\n 40082: t0 = 1674, jump @2023\n      : @1535 [@dyn 837] (gas: 4)\n 40088: u64 [sp + 64] = 0x11\n 40092: a1 = sp + 0x40\n 40095: u64 [sp + 72] = 0\n 40098: ra = 1676, jump @19\n      : @1536 [@dyn 838] (gas: 1)\n 40105: t0 = 1678, jump @1954\n      : @1537 [@dyn 839] (gas: 1)\n 40111: jump @1539 if a0 != 0\n      : @1538 (gas: 1)\n 40114: trap\n      : @1539 (gas: 11)\n 40115: s1 = u64 [sp + 0x18]\n 40118: i32 a0 = s1 + 0x44\n 40121: a1 = u64 [0x20170]\n 40126: a2 = u64 [0x20178]\n 40131: u64 [sp + 0x38] = a1\n 40134: u64 [sp + 0x30] = a2\n 40137: a1 = 0x6500000000000000\n 40147: u64 [sp + 0x28] = a1\n 40150: a1 = sp + 0x20\n 40153: u64 [sp + 32] = 0\n 40156: ra = 1680, jump @19\n      : @1540 [@dyn 840] (gas: 3)\n 40163: a1 = 0x64\n 40166: a0 = s1\n 40168: ra = 1682, jump @32\n      : @1541 [@dyn 841] (gas: 1)\n 40175: t0 = 1684, jump @1995\n      : @1542 [@dyn 842] (gas: 4)\n 40181: ra = 0x696\n 40185: ecalli 14 // 'seal_return'\n 40187: t0 = 0x698\n 40191: jump @1953\n      : @1543 [@dyn 843] (gas: 1)\n 40194: t0 = 1688, jump @1953\n      : @1544 [@dyn 844] (gas: 1)\n 40200: jump @1547 if a0 == 0\n      : @1545 (gas: 1)\n 40203: t0 = 1690, jump @1976\n      : @1546 [@dyn 845] (gas: 1)\n 40209: ret\n      : @1547 (gas: 3)\n 40211: a0 = sp + 0xa0\n 40215: a1 = 0x40\n 40218: ra = 1692, jump @17\n      : @1548 [@dyn 846] (gas: 1)\n 40225: t0 = 1694, jump @1952\n      : @1549 [@dyn 847] (gas: 1)\n 40231: jump @1562 if a0 != 0\n      : @1550 (gas: 1)\n 40234: t0 = 1696, jump @1959\n      : @1551 [@dyn 848] (gas: 1)\n 40240: ra = 1698, jump @19\n      : @1552 [@dyn 849] (gas: 1)\n 40247: t0 = 1700, jump @1951\n      : @1553 [@dyn 850] (gas: 1)\n 40253: jump @1562 if a0 == 0\n      : @1554 (gas: 1)\n 40256: t0 = 1702, jump @1963\n      : @1555 [@dyn 851] (gas: 1)\n 40262: ra = 1704, jump @19\n      : @1556 [@dyn 852] (gas: 1)\n 40269: t0 = 1706, jump @1958\n      : @1557 [@dyn 853] (gas: 1)\n 40275: jump @1562 if a0 == 0\n      : @1558 (gas: 1)\n 40278: t0 = 1708, jump @2023\n      : @1559 [@dyn 854] (gas: 4)\n 40284: u64 [sp + 72] = 0\n 40287: a1 = sp + 0x40\n 40290: u64 [sp + 64] = 0x19\n 40294: ra = 1710, jump @19\n      : @1560 [@dyn 855] (gas: 1)\n 40301: t0 = 1712, jump @1954\n      : @1561 [@dyn 856] (gas: 1)\n 40307: jump @1563 if a0 != 0\n      : @1562 (gas: 1)\n 40310: trap\n      : @1563 (gas: 12)\n 40311: s1 = u64 [sp + 0x18]\n 40314: i32 a0 = s1 + 0x44\n 40317: a1 = u64 [0x20180]\n 40322: a2 = u64 [0x20188]\n 40327: a3 = u64 [0x20190]\n 40332: u64 [sp + 0x38] = a1\n 40335: u64 [sp + 0x30] = a2\n 40338: u64 [sp + 0x28] = a3\n 40341: a2 = 0x6400000000000000\n 40351: a1 = sp + 0x20\n 40354: u64 [sp + 0x20] = a2\n 40357: ra = 1714, jump @19\n      : @1564 [@dyn 857] (gas: 3)\n 40364: a1 = 0x64\n 40367: a0 = s1\n 40369: ra = 1716, jump @32\n      : @1565 [@dyn 858] (gas: 1)\n 40376: t0 = 1718, jump @1995\n      : @1566 [@dyn 859] (gas: 3)\n 40382: ra = 0x6b8\n 40386: ecalli 14 // 'seal_return'\n 40388: fallthrough\n      : @1567 [@dyn 860] (gas: 22)\n 40389: sp = sp + 0xffffffffffffff60\n 40393: u64 [sp + 0x98] = ra\n 40397: u64 [sp + 0x90] = s0\n 40401: u64 [sp + 0x88] = s1\n 40405: s0 = sp + 0xa0\n 40409: sp = sp & 0xffffffffffffffe0\n 40412: a2 = u64 [a1 + 0x10]\n 40415: u64 [sp + 0x18] = a2\n 40418: s1 = u64 [a1 + 0x8]\n 40421: a1 = u64 [a1]\n 40423: u64 [sp + 0x10] = a1\n 40426: a1 = u64 [a0 + 0x18]\n 40429: a2 = u64 [a0 + 0x10]\n 40432: a3 = u64 [a0 + 0x8]\n 40435: a0 = u64 [a0]\n 40437: u64 [sp + 0x58] = a1\n 40440: u64 [sp + 0x50] = a2\n 40443: u64 [sp + 0x48] = a3\n 40446: u64 [sp + 0x40] = a0\n 40449: a0 = sp + 0x20\n 40452: a1 = sp + 0x40\n 40455: ra = 1722, jump @21\n      : @1568 [@dyn 861] (gas: 25)\n 40462: a0 = u64 [sp + 0x38]\n 40465: a1 = u8 [sp + 0x20]\n 40468: a2 = u64 [sp + 0x30]\n 40471: a5 = u64 [sp + 0x10]\n 40474: a3 = a5 >> 0x38\n 40477: a4 = s1 << 0x8\n 40480: a3 = a3 | a4\n 40483: s1 = s1 >> 0x38\n 40486: a4 = u64 [sp + 0x18]\n 40489: a4 = a4 << 0x8\n 40492: a4 = a4 | s1\n 40495: a5 = a5 << 0x8\n 40498: a4 = a4 << 0x18\n 40501: a4 = a4 >> 0x18\n 40504: a2 = a2 >> 0x28\n 40507: a2 = a2 << 0x28\n 40510: a2 = a2 | a4\n 40513: a1 = a1 | a5\n 40516: u64 [sp + 0x68] = a3\n 40519: u64 [sp + 0x78] = a0\n 40522: u64 [sp + 0x60] = a1\n 40525: u64 [sp + 0x70] = a2\n 40528: a0 = sp + 0x40\n 40531: a1 = sp + 0x60\n 40534: ra = 1724, jump @25\n      : @1569 [@dyn 862] (gas: 6)\n 40541: sp = s0 + 0xffffffffffffff60\n 40545: ra = u64 [sp + 0x98]\n 40549: s0 = u64 [sp + 0x90]\n 40553: s1 = u64 [sp + 0x88]\n 40557: sp = sp + 0xa0\n 40561: ret\n      : @1570 (gas: 30)\n 40563: sp = sp + 0xffffffffffffff80\n 40566: u64 [sp + 0x78] = ra\n 40569: u64 [sp + 0x70] = s0\n 40572: u64 [sp + 0x68] = s1\n 40575: s0 = sp + 0x80\n 40579: sp = sp & 0xfffffffffffffff0\n 40582: a4 = u64 [a2]\n 40584: a3 = u64 [a1]\n 40586: s1 = u64 [a2 + 0x8]\n 40589: t1 = u64 [a1 + 0x8]\n 40592: t2 = u64 [a2 + 0x10]\n 40595: a5 = u64 [a1 + 0x10]\n 40598: a2 = u64 [a2 + 0x18]\n 40601: a1 = u64 [a1 + 0x18]\n 40604: t0 = t1 ^ s1\n 40607: u64 [sp + 0x8] = s1\n 40610: s1 = t1 <u s1\n 40613: u64 [sp + 0x18] = a4\n 40616: u64 [sp + 0x10] = a3\n 40619: a3 = a3 <u a4\n 40622: u64 [sp] = a3\n 40624: s1 = a3 if t0 == 0\n 40627: a3 = a1 ^ a2\n 40630: ra = a1 <u a2\n 40633: t0 = a5 <u t2\n 40636: ra = t0 if a3 == 0\n 40639: a4 = a5 ^ t2\n 40642: a3 = a3 | a4\n 40645: ra = s1 if a3 == 0\n 40648: jump @1572 if ra != 0\n      : @1571 (gas: 23)\n 40651: a3 = a5 - t2\n 40654: a1 = a1 - a2\n 40657: a1 = a1 - t0\n 40660: a2 = a3 <u s1\n 40663: a1 = a1 - a2\n 40666: a3 = a3 - s1\n 40669: a2 = u64 [sp + 0x8]\n 40672: a2 = t1 - a2\n 40675: a4 = u64 [sp]\n 40677: a2 = a2 - a4\n 40680: a4 = u64 [sp + 0x18]\n 40683: a5 = u64 [sp + 0x10]\n 40686: a4 = a5 - a4\n 40689: u64 [a0] = a4\n 40691: u64 [a0 + 0x8] = a2\n 40694: u64 [a0 + 0x10] = a3\n 40697: u64 [a0 + 0x18] = a1\n 40700: sp = s0 + 0xffffffffffffff80\n 40703: ra = u64 [sp + 0x78]\n 40706: s0 = u64 [sp + 0x70]\n 40709: s1 = u64 [sp + 0x68]\n 40712: sp = sp + 0x80\n 40716: ret\n      : @1572 (gas: 6)\n 40718: u64 [sp + 80] = 0\n 40721: u64 [sp + 72] = 0\n 40724: u64 [sp + 64] = 0\n 40727: t0 = 0x6be\n 40731: a0 = 0x4e487b7100000000\n 40741: fallthrough\n      : @1573 [@dyn 863] (gas: 4)\n 40742: a1 = sp + 0x40\n 40745: u64 [sp + 0x58] = a0\n 40748: a0 = 0\n 40750: ra = 1728, jump @19\n      : @1574 [@dyn 864] (gas: 7)\n 40757: u64 [sp + 56] = 0\n 40760: u64 [sp + 48] = 0\n 40763: u64 [sp + 32] = 0x11\n 40767: a0 = 0x4\n 40770: a1 = sp + 0x20\n 40773: u64 [sp + 40] = 0\n 40776: ra = 1730, jump @19\n      : @1575 [@dyn 865] (gas: 2)\n 40783: a1 = i32 [0x2025c]\n 40788: jump @1577 if a1 >u 63\n      : @1576 (gas: 2)\n 40792: u32 [0x2025c] = 0x40\n 40798: fallthrough\n      : @1577 (gas: 7)\n 40799: a1 = 0x20270\n 40804: i32 a1 = a1 + 0\n 40806: a0 = 0x1\n 40809: a2 = 0x24\n 40812: ra = 0x6c4\n 40816: ecalli 14 // 'seal_return'\n 40818: fallthrough\n      : @1578 [@dyn 866] (gas: 9)\n 40819: sp = sp + 0xffffffffffffff20\n 40823: u64 [sp + 0xd8] = ra\n 40827: u64 [sp + 0xd0] = s0\n 40831: u64 [sp + 0xc8] = s1\n 40835: s0 = sp + 0xe0\n 40839: sp = sp & 0xffffffffffffffe0\n 40842: s1 = a0\n 40844: ecalli 13 // 'return_data_size'\n 40846: fallthrough\n      : @1579 (gas: 1)\n 40847: jump @1591 if a0 == 0\n      : @1580 (gas: 16)\n 40851: u64 [sp + 0x8] = s1\n 40854: ecalli 13 // 'return_data_size'\n 40856: a2 = a0 + 0x1f\n 40859: u64 [sp + 0x10] = a0\n 40862: a1 = a2 <u a0\n 40865: a0 = a2 & 0xffffffffffffffe0\n 40868: a2 = a0 + 0x20\n 40871: u64 [sp + 0x18] = a2\n 40874: a0 = a2 <u a0\n 40877: a2 = a1 + a0\n 40880: u64 [sp + 0x20] = a2\n 40883: s1 = a2 <u a1\n 40886: s1 = a0 if a0 == 0\n 40889: a0 = sp + 0xa0\n 40893: a1 = 0x40\n 40896: ra = 1734, jump @17\n      : @1581 [@dyn 867] (gas: 21)\n 40903: a0 = u64 [sp + 0xb8]\n 40907: u64 [sp + 0x38] = a0\n 40910: a2 = u64 [sp + 0xb0]\n 40914: a3 = u64 [sp + 0xa8]\n 40918: u64 [sp + 0x30] = a3\n 40921: a4 = u64 [sp + 0xa0]\n 40925: u64 [sp + 0x28] = a4\n 40928: u64 [sp + 120] = 0\n 40931: a1 = u64 [sp + 0x18]\n 40934: u64 [sp + 0x60] = a1\n 40937: u64 [sp + 0x98] = a0\n 40941: u64 [sp + 0x90] = a2\n 40945: u64 [sp + 0x88] = a3\n 40949: u64 [sp + 0x80] = a4\n 40953: a0 = u64 [sp + 0x20]\n 40956: u64 [sp + 0x68] = a0\n 40959: a0 = sp + 0x80\n 40963: a1 = sp + 0x60\n 40966: u64 [sp + 0x70] = s1\n 40969: s1 = a2\n 40971: ra = 1736, jump @1336\n      : @1582 [@dyn 868] (gas: 12)\n 40977: a0 = u64 [sp + 0x28]\n 40980: a2 = u64 [sp + 0x38]\n 40983: a1 = u64 [sp + 0x30]\n 40986: a2 = a2 | a1\n 40989: a1 = a0 | s1\n 40992: a1 = a1 | a2\n 40995: a1 = a1 >> 0x20\n 40998: u64 [sp + 0x20] = s1\n 41001: a2 = a2 | s1\n 41004: a2 = a2 << 0x20\n 41007: a1 = a1 | a2\n 41010: jump @1590 if a1 != 0\n      : @1583 (gas: 7)\n 41014: u64 [sp + 88] = 0\n 41017: u64 [sp + 80] = 0\n 41020: u64 [sp + 72] = 0\n 41023: a1 = sp + 0x40\n 41026: a2 = u64 [sp + 0x10]\n 41029: u64 [sp + 0x40] = a2\n 41032: ra = 1738, jump @19\n      : @1584 [@dyn 869] (gas: 2)\n 41039: ecalli 13 // 'return_data_size'\n 41041: fallthrough\n      : @1585 (gas: 10)\n 41042: a3 = u64 [sp + 0x28]\n 41045: a2 = u64 [sp + 0x38]\n 41048: a1 = u64 [sp + 0x20]\n 41051: a1 = a1 | a2\n 41054: a2 = 0xffffffe0\n 41064: a2 = a3 <u a2\n 41067: a4 = u64 [sp + 0x30]\n 41070: a2 = 0 if a4 != 0\n 41072: a2 = 0 if a1 != 0\n 41074: jump @1590 if a2 == 0\n      : @1586 (gas: 3)\n 41077: s1 = a0\n 41079: a0 = a0 >> 0x20\n 41082: jump @1590 if a0 != 0\n      : @1587 (gas: 5)\n 41085: i32 a0 = a3 + 0x20\n 41088: i32 a1 = s1 + 0\n 41090: u64 [sp + 0x18] = a1\n 41093: a1 = s1\n 41095: ra = 1740, jump @32\n      : @1588 [@dyn 870] (gas: 6)\n 41102: u32 [sp + 0xc0] = s1\n 41106: i32 a0 = a0 + 0\n 41108: i32 a1 = sp + 0xc0\n 41112: a2 = 0\n 41114: ecalli 12 // 'return_data_copy'\n 41116: fallthrough\n      : @1589 (gas: 8)\n 41117: a4 = u64 [sp + 0x28]\n 41120: a0 = i32 [sp + 0xc0]\n 41124: s1 = u64 [sp + 0x8]\n 41127: a1 = u64 [sp + 0x38]\n 41130: a2 = u64 [sp + 0x20]\n 41133: a3 = u64 [sp + 0x30]\n 41136: a5 = u64 [sp + 0x18]\n 41139: jump @1592 if a0 >=u a5\n      : @1590 (gas: 1)\n 41142: trap\n      : @1591 (gas: 5)\n 41143: a3 = 0\n 41145: a2 = 0\n 41147: a1 = 0\n 41149: a4 = 0x60\n 41152: fallthrough\n      : @1592 (gas: 5)\n 41153: u64 [s1] = a4\n 41155: u64 [s1 + 0x8] = a3\n 41158: u64 [s1 + 0x10] = a2\n 41161: u64 [s1 + 0x18] = a1\n 41164: t0 = 1742, jump @1976\n      : @1593 [@dyn 871] (gas: 1)\n 41170: ret\n      : @1594 [@dyn 872] (gas: 1)\n 41172: jump @1597 if a0 == 0\n      : @1595 (gas: 1)\n 41175: t0 = 1746, jump @1976\n      : @1596 [@dyn 873] (gas: 1)\n 41181: ret\n      : @1597 (gas: 3)\n 41183: a0 = sp + 0xa0\n 41187: a1 = 0x40\n 41190: ra = 1748, jump @17\n      : @1598 [@dyn 874] (gas: 1)\n 41197: t0 = 1750, jump @1952\n      : @1599 [@dyn 875] (gas: 1)\n 41203: jump @1612 if a0 != 0\n      : @1600 (gas: 1)\n 41206: t0 = 1752, jump @1959\n      : @1601 [@dyn 876] (gas: 1)\n 41212: ra = 1754, jump @19\n      : @1602 [@dyn 877] (gas: 1)\n 41219: t0 = 1756, jump @1951\n      : @1603 [@dyn 878] (gas: 1)\n 41225: jump @1612 if a0 == 0\n      : @1604 (gas: 1)\n 41228: t0 = 1758, jump @1963\n      : @1605 [@dyn 879] (gas: 1)\n 41234: ra = 1760, jump @19\n      : @1606 [@dyn 880] (gas: 1)\n 41241: t0 = 1762, jump @1958\n      : @1607 [@dyn 881] (gas: 1)\n 41247: jump @1612 if a0 == 0\n      : @1608 (gas: 1)\n 41250: t0 = 1764, jump @2023\n      : @1609 [@dyn 882] (gas: 4)\n 41256: u64 [sp + 64] = 0x13\n 41260: a1 = sp + 0x40\n 41263: u64 [sp + 72] = 0\n 41266: ra = 1766, jump @19\n      : @1610 [@dyn 883] (gas: 1)\n 41273: t0 = 1768, jump @1954\n      : @1611 [@dyn 884] (gas: 1)\n 41279: jump @1613 if a0 != 0\n      : @1612 (gas: 1)\n 41282: trap\n      : @1613 (gas: 11)\n 41283: s1 = u64 [sp + 0x18]\n 41286: i32 a0 = s1 + 0x44\n 41289: a1 = u64 [0x20198]\n 41294: a2 = u64 [0x201a0]\n 41299: u64 [sp + 0x38] = a1\n 41302: u64 [sp + 0x30] = a2\n 41305: a1 = 0x6c65640000000000\n 41315: u64 [sp + 0x28] = a1\n 41318: a1 = sp + 0x20\n 41321: u64 [sp + 32] = 0\n 41324: ra = 1770, jump @19\n      : @1614 [@dyn 885] (gas: 3)\n 41331: a1 = 0x64\n 41334: a0 = s1\n 41336: ra = 1772, jump @32\n      : @1615 [@dyn 886] (gas: 1)\n 41343: t0 = 1774, jump @1995\n      : @1616 [@dyn 887] (gas: 4)\n 41349: ra = 0x6f0\n 41353: ecalli 14 // 'seal_return'\n 41355: t0 = 0x6f2\n 41359: jump @1953\n      : @1617 [@dyn 888] (gas: 1)\n 41362: t0 = 1778, jump @1953\n      : @1618 [@dyn 889] (gas: 1)\n 41368: jump @1621 if a0 == 0\n      : @1619 (gas: 1)\n 41371: t0 = 1780, jump @1976\n      : @1620 [@dyn 890] (gas: 1)\n 41377: ret\n      : @1621 (gas: 3)\n 41379: a0 = sp + 0xa0\n 41383: a1 = 0x40\n 41386: ra = 1782, jump @17\n      : @1622 [@dyn 891] (gas: 1)\n 41393: t0 = 1784, jump @1952\n      : @1623 [@dyn 892] (gas: 1)\n 41399: jump @1635 if a0 != 0\n      : @1624 (gas: 1)\n 41402: t0 = 1786, jump @1959\n      : @1625 [@dyn 893] (gas: 1)\n 41408: ra = 1788, jump @19\n      : @1626 [@dyn 894] (gas: 1)\n 41415: t0 = 1790, jump @1951\n      : @1627 [@dyn 895] (gas: 1)\n 41421: jump @1635 if a0 == 0\n      : @1628 (gas: 1)\n 41424: t0 = 1792, jump @1963\n      : @1629 [@dyn 896] (gas: 1)\n 41430: ra = 1794, jump @19\n      : @1630 [@dyn 897] (gas: 1)\n 41437: t0 = 1796, jump @1958\n      : @1631 [@dyn 898] (gas: 1)\n 41443: jump @1635 if a0 == 0\n      : @1632 (gas: 8)\n 41446: s1 = u64 [sp + 0x18]\n 41449: i32 a0 = s1 + 0x24\n 41452: u64 [sp + 88] = 0\n 41455: u64 [sp + 80] = 0\n 41458: u64 [sp + 64] = 0x15\n 41462: a1 = sp + 0x40\n 41465: u64 [sp + 72] = 0\n 41468: ra = 1798, jump @19\n      : @1633 [@dyn 899] (gas: 1)\n 41475: t0 = 1800, jump @1954\n      : @1634 [@dyn 900] (gas: 1)\n 41481: jump @1636 if a0 != 0\n      : @1635 (gas: 1)\n 41484: trap\n      : @1636 (gas: 11)\n 41485: s1 = u64 [sp + 0x18]\n 41488: i32 a0 = s1 + 0x44\n 41491: a1 = u64 [0x201a8]\n 41496: a2 = u64 [0x201b0]\n 41501: u64 [sp + 0x38] = a1\n 41504: u64 [sp + 0x30] = a2\n 41507: a1 = 0x61696c6564000000\n 41517: u64 [sp + 0x28] = a1\n 41520: a1 = sp + 0x20\n 41523: u64 [sp + 32] = 0\n 41526: ra = 1802, jump @19\n      : @1637 [@dyn 901] (gas: 3)\n 41533: a1 = 0x64\n 41536: a0 = s1\n 41538: ra = 1804, jump @32\n      : @1638 [@dyn 902] (gas: 1)\n 41545: t0 = 1806, jump @1995\n      : @1639 [@dyn 903] (gas: 3)\n 41551: ra = 0x710\n 41555: ecalli 14 // 'seal_return'\n 41557: fallthrough\n      : @1640 [@dyn 904] (gas: 18)\n 41558: sp = sp + 0xfffffffffffff808\n 41562: a0 = sp + 0x700\n 41566: u64 [a0 + 0xf0] = ra\n 41570: u64 [a0 + 0xe8] = s0\n 41574: u64 [a0 + 0xe0] = s1\n 41578: s0 = sp + 0x7f8\n 41582: sp = sp + 0xfffffffffffff800\n 41586: sp = sp + 0xfffffffffffffb38\n 41590: sp = sp & 0xffffffffffffffe0\n 41593: s1 = sp\n 41595: a1 = s1 + 0x1118\n 41599: u64 [a1 + 160] = 0\n 41603: u64 [a1 + 152] = 0\n 41607: u64 [a1 + 144] = 0\n 41611: u64 [a1 + 136] = 0x4\n 41616: a0 = s1 + 0x1180\n 41620: a1 = s1 + 0x11a0\n 41624: ra = 1810, jump @21\n      : @1641 [@dyn 905] (gas: 16)\n 41631: a4 = s1 + 0x1118\n 41635: a0 = u64 [a4 + 0x80]\n 41639: a1 = u64 [a4 + 0x78]\n 41642: a2 = u64 [a4 + 0x70]\n 41645: a3 = u64 [a4 + 0x68]\n 41648: u64 [s1 + 0x68] = a0\n 41651: u64 [a4 + 0x60] = a0\n 41654: u64 [s1 + 0x60] = a1\n 41657: u64 [a4 + 0x58] = a1\n 41660: u64 [s1 + 0x58] = a2\n 41663: u64 [a4 + 0x50] = a2\n 41666: a1 = s1 + 0x1160\n 41670: u64 [s1 + 0x50] = a3\n 41673: u64 [a4 + 0x48] = a3\n 41676: a0 = 0\n 41678: ra = 1812, jump @19\n      : @1642 [@dyn 906] (gas: 9)\n 41685: a1 = s1 + 0x1118\n 41689: u64 [a1 + 64] = 0\n 41692: u64 [a1 + 56] = 0\n 41695: u64 [a1 + 40] = 0x3\n 41699: a2 = a1\n 41701: a0 = 0x20\n 41704: a1 = s1 + 0x1140\n 41708: u64 [a2 + 48] = 0\n 41711: ra = 1814, jump @19\n      : @1643 [@dyn 907] (gas: 3)\n 41718: a2 = 0x2025c\n 41723: a0 = i32 [0x2025c]\n 41728: jump @1645 if a0 >u 63\n      : @1644 (gas: 2)\n 41732: u32 [0x2025c] = 0x40\n 41738: fallthrough\n      : @1645 (gas: 41)\n 41739: u64 [s1 + 0x38] = a2\n 41742: a0 = sp + 0xffffffffffffffe0\n 41745: a2 = a0 & 0xffffffffffffffe0\n 41748: u64 [s1 + 0x178] = a2\n 41752: sp = a2\n 41754: a0 = 0x20270\n 41759: u64 [s1 + 0x30] = a0\n 41762: i32 a0 = a0 + 0\n 41764: i32 a2 = a2 + 0\n 41766: a1 = 0x40\n 41769: u64 [s1 + 0x40] = a0\n 41772: ecalli 9 // 'hash_keccak_256'\n 41774: a3 = u64 [s1 + 0x178]\n 41778: a0 = u64 [a3]\n 41780: a1 = u64 [a3 + 0x8]\n 41783: a2 = u64 [a3 + 0x10]\n 41786: a3 = u64 [a3 + 0x18]\n 41789: a4 = reverse a0\n 41791: u64 [s1 + 0x88] = a4\n 41795: a5 = reverse a1\n 41797: u64 [s1 + 0x80] = a5\n 41801: a2 = reverse a2\n 41803: u64 [s1 + 0x78] = a2\n 41806: a0 = reverse a3\n 41808: u64 [s1 + 0x70] = a0\n 41811: t0 = a0 + 0x11\n 41814: a1 = t0 <u a0\n 41817: a0 = a2 + a1\n 41820: a3 = a0 <u a2\n 41823: a3 = a1 if a1 == 0\n 41826: a3 = a3 + a5\n 41829: a1 = a3 <u a5\n 41832: a1 = a1 + a4\n 41835: a4 = s1 + 0x1118\n 41839: u64 [a4 + 0xa8] = t0\n 41843: u64 [a4 + 0xb0] = a0\n 41847: u64 [a4 + 0xb8] = a3\n 41851: u64 [a4 + 0xc0] = a1\n 41855: a0 = s1 + 0x1120\n 41859: a1 = s1 + 0x11c0\n 41863: ra = 1816, jump @21\n      : @1646 [@dyn 908] (gas: 18)\n 41870: a4 = s1 + 0x1118\n 41874: a0 = u64 [a4 + 0x20]\n 41877: a1 = u64 [a4 + 0x10]\n 41880: a2 = u64 [a4 + 0x8]\n 41883: a3 = u64 [a4 + 0x18]\n 41886: a0 = a0 | a1\n 41889: a1 = a2 ^ 0x10\n 41892: a1 = a1 | a3\n 41895: a0 = a0 | a1\n 41898: a0 = a0 <u 0x1\n 41901: u64 [a4 + 0] = 0\n 41903: u64 [a4 + 4294967288] = 0\n 41906: u64 [a4 + 0xffffffffffffffe8] = a0\n 41909: a0 = s1 + 0x1100\n 41913: u64 [a4 + 4294967280] = 0\n 41916: ra = 0x71a\n 41920: t0 = 0x676\n 41924: jump @1953\n      : @1647 [@dyn 909] (gas: 26)\n 41927: a0 = sp + 0xffffffffffffffe0\n 41930: a1 = a0 & 0xffffffffffffffe0\n 41933: sp = a1\n 41935: a0 = u64 [s1 + 0x70]\n 41938: a3 = a0 + 0x15\n 41941: a0 = a3 <u a0\n 41944: a2 = u64 [s1 + 0x78]\n 41947: a4 = a2 + a0\n 41950: a2 = a4 <u a2\n 41953: a2 = a0 if a0 == 0\n 41956: a0 = u64 [s1 + 0x80]\n 41960: a2 = a2 + a0\n 41963: a0 = a2 <u a0\n 41966: a5 = u64 [s1 + 0x88]\n 41970: a0 = a0 + a5\n 41973: u64 [s1 + 0x10] = a0\n 41976: u64 [a1 + 0x18] = a0\n 41979: u64 [s1 + 0x18] = a2\n 41982: u64 [a1 + 0x10] = a2\n 41985: u64 [s1 + 0x20] = a4\n 41988: u64 [a1 + 0x8] = a4\n 41991: u64 [s1 + 0x28] = a3\n 41994: u64 [a1] = a3\n 41996: a0 = s1 + 0x10e0\n 42000: u64 [s1 + 0x48] = a1\n 42003: ra = 1820, jump @21\n      : @1648 [@dyn 910] (gas: 12)\n 42010: a1 = s1 + 0x7ff\n 42014: a1 = a1 + 0xf9\n 42018: a0 = u8 [a1 + 0x7e8]\n 42022: a0 = a0 <u 0x1\n 42025: u64 [a1 + 2016] = 0\n 42029: u64 [a1 + 2008] = 0\n 42033: u64 [a1 + 0x7c8] = a0\n 42037: a0 = s1 + 0x10c0\n 42041: u64 [a1 + 2000] = 0\n 42045: ra = 0x71e\n 42049: t0 = 0x698\n 42053: jump @1953\n      : @1649 [@dyn 911] (gas: 22)\n 42056: a0 = sp + 0xffffffffffffffe0\n 42059: a1 = a0 & 0xffffffffffffffe0\n 42062: sp = a1\n 42064: a2 = u64 [s1 + 0x70]\n 42067: a0 = a2 + 0x13\n 42070: a4 = a0 <u a2\n 42073: a3 = u64 [s1 + 0x78]\n 42076: a2 = a3 + a4\n 42079: a3 = a2 <u a3\n 42082: a3 = a4 if a4 == 0\n 42085: a4 = u64 [s1 + 0x80]\n 42089: a3 = a3 + a4\n 42092: a4 = a3 <u a4\n 42095: a5 = u64 [s1 + 0x88]\n 42099: a4 = a4 + a5\n 42102: u64 [a1 + 0x18] = a4\n 42105: u64 [a1 + 0x10] = a3\n 42108: u64 [a1 + 0x8] = a2\n 42111: u64 [a1] = a0\n 42113: a0 = s1 + 0x10a0\n 42117: u64 [s1 + 0x8] = a1\n 42120: ra = 1824, jump @21\n      : @1650 [@dyn 912] (gas: 15)\n 42127: a0 = s1 + 0x7ff\n 42131: a0 = a0 + 0xf9\n 42135: a2 = a0 + 0x700\n 42139: a1 = u64 [a2 + 0xc0]\n 42143: u64 [s1 + 0x170] = a1\n 42147: a1 = u64 [a2 + 0xb8]\n 42151: u64 [s1 + 0x178] = a1\n 42155: a1 = u64 [a2 + 0xb0]\n 42159: u64 [s1 + 0x168] = a1\n 42163: a0 = u64 [a2 + 0xa8]\n 42167: u64 [s1 + 0x160] = a0\n 42171: a0 = s1 + 0x1000\n 42175: i32 a0 = a0 + 0x1e0\n 42179: ecalli 1 // 'block_number'\n 42181: fallthrough\n      : @1651 (gas: 21)\n 42182: t1 = u64 [s1 + 0x160]\n 42186: a5 = u64 [s1 + 0x168]\n 42190: t0 = u64 [s1 + 0x170]\n 42194: a3 = s1 + 0x1118\n 42198: a0 = u64 [a3 + 0xd0]\n 42202: a1 = u64 [a3 + 0xc8]\n 42206: t2 = u64 [a3 + 0xd8]\n 42210: a3 = u64 [a3 + 0xe0]\n 42214: a4 = a0 ^ a5\n 42217: a0 = a5 <u a0\n 42220: a1 = t1 <u a1\n 42223: a1 = a0 if a4 != 0\n 42226: a0 = a3 ^ t0\n 42229: a2 = t0 <u a3\n 42232: a3 = u64 [s1 + 0x178]\n 42236: a4 = a3 <u t2\n 42239: a4 = a2 if a0 != 0\n 42242: a2 = t2 ^ a3\n 42245: a0 = a0 | a2\n 42248: a1 = a4 if a0 != 0\n 42251: jump @1653 if a1 != 0\n      : @1652 (gas: 1)\n 42254: jump @1875\n      : @1653 (gas: 8)\n 42257: a0 = a5 + 0x1\n 42260: a1 = t1 <u 0xffffffffffffff01\n 42264: a1 = a1 ^ 0x1\n 42267: a1 = 0 if a0 != 0\n 42269: a0 = a3 & t0\n 42272: a0 = a0 + 0x1\n 42275: a1 = 0 if a0 != 0\n 42277: jump @1655 if a1 == 0\n      : @1654 (gas: 1)\n 42280: jump @1900\n      : @1655 (gas: 16)\n 42283: a0 = t1 + 0xff\n 42287: u64 [s1 + 0x158] = a0\n 42291: a0 = a0 <u t1\n 42294: a1 = a5 + a0\n 42297: u64 [s1 + 0x160] = a1\n 42301: a1 = a1 <u a5\n 42304: a1 = a0 if a0 == 0\n 42307: a1 = a1 + a3\n 42310: u64 [s1 + 0x168] = a1\n 42314: a0 = a1 <u a3\n 42317: a0 = a0 + t0\n 42320: u64 [s1 + 0x178] = a0\n 42324: a0 = s1 + 0x1000\n 42328: i32 a0 = a0 + 0x200\n 42332: ecalli 1 // 'block_number'\n 42334: fallthrough\n      : @1656 (gas: 21)\n 42335: a4 = s1 + 0x1118\n 42339: a0 = u64 [a4 + 0xe8]\n 42343: a1 = u64 [a4 + 0xf0]\n 42347: a2 = u64 [a4 + 0x100]\n 42351: a3 = u64 [s1 + 0x158]\n 42355: a0 = a3 <u a0\n 42358: a5 = u64 [s1 + 0x160]\n 42362: a3 = a1 ^ a5\n 42365: a1 = a5 <u a1\n 42368: a4 = u64 [a4 + 0xf8]\n 42372: a1 = a0 if a3 == 0\n 42375: a3 = u64 [s1 + 0x178]\n 42379: a0 = a2 ^ a3\n 42382: a2 = a3 <u a2\n 42385: a5 = u64 [s1 + 0x168]\n 42389: a3 = a5 <u a4\n 42392: a2 = a3 if a0 == 0\n 42395: a3 = a4 ^ a5\n 42398: a0 = a0 | a3\n 42401: a1 = a2 if a0 != 0\n 42404: jump @1658 if a1 == 0\n      : @1657 (gas: 1)\n 42407: jump @1887\n      : @1658 (gas: 15)\n 42410: a2 = s1 + 0x7ff\n 42414: a2 = a2 + 0xf9\n 42418: a0 = u64 [s1 + 0x50]\n 42421: a1 = a2 + 0x600\n 42425: u64 [a1 + 0xe8] = a0\n 42429: a0 = u64 [s1 + 0x58]\n 42432: u64 [a1 + 0xf0] = a0\n 42436: a0 = u64 [s1 + 0x60]\n 42439: u64 [a1 + 0xf8] = a0\n 42443: a1 = s1 + 0x7ff\n 42447: a1 = a1 + 0x7e1\n 42451: a0 = u64 [s1 + 0x68]\n 42454: u64 [a2 + 0x700] = a0\n 42458: a0 = 0\n 42460: ra = 1826, jump @19\n      : @1659 [@dyn 913] (gas: 3)\n 42467: a1 = s1 + 0x7ff\n 42471: a1 = a1 + 0xf9\n 42475: t0 = 1828, jump @2027\n      : @1660 [@dyn 914] (gas: 4)\n 42481: a1 = s1 + 0x7ff\n 42485: a1 = a1 + 0x7c1\n 42489: u64 [a2 + 1744] = 0\n 42493: ra = 1830, jump @19\n      : @1661 [@dyn 915] (gas: 3)\n 42500: a2 = u64 [s1 + 0x38]\n 42503: a0 = i32 [a2]\n 42505: jump @1663 if a0 >u 63\n      : @1662 (gas: 2)\n 42509: u32 [a2 + 0] = 0x40\n 42512: fallthrough\n      : @1663 (gas: 21)\n 42513: a0 = sp + 0xffffffffffffffe0\n 42516: a0 = a0 & 0xffffffffffffffe0\n 42519: u64 [s1 + 0x178] = a0\n 42523: sp = a0\n 42525: i32 a2 = a0 + 0\n 42527: a1 = 0x40\n 42530: a0 = u64 [s1 + 0x40]\n 42533: ecalli 9 // 'hash_keccak_256'\n 42535: a1 = u64 [s1 + 0x178]\n 42539: a0 = u64 [a1 + 0x18]\n 42542: u64 [s1 + 0x170] = a0\n 42546: a0 = u64 [a1 + 0x10]\n 42549: u64 [s1 + 0x168] = a0\n 42553: a0 = u64 [a1 + 0x8]\n 42556: u64 [s1 + 0x160] = a0\n 42560: a0 = u64 [a1]\n 42562: u64 [s1 + 0x178] = a0\n 42566: a0 = s1 + 0x7ff\n 42570: a0 = a0 + 0x7a1\n 42574: a1 = 0x40\n 42577: ra = 1832, jump @17\n      : @1664 [@dyn 916] (gas: 23)\n 42584: a2 = s1 + 0x7ff\n 42588: a2 = a2 + 0xf9\n 42592: a1 = u64 [a2 + 0x6c0]\n 42596: u64 [s1 + 0x110] = a1\n 42600: a3 = u64 [a2 + 0x6b8]\n 42604: u64 [s1 + 0x108] = a3\n 42608: a4 = u64 [a2 + 0x6b0]\n 42612: u64 [s1 + 0x118] = a4\n 42616: a5 = u64 [a2 + 0x6a8]\n 42620: u64 [s1 + 0x100] = a5\n 42624: u64 [a2 + 1664] = 0\n 42628: u64 [a2 + 1656] = 0\n 42632: u64 [a2 + 1648] = 0\n 42636: u64 [a2 + 1640] = 0x220\n 42642: u64 [a2 + 0x6a0] = a1\n 42646: u64 [a2 + 0x698] = a3\n 42650: u64 [a2 + 0x690] = a4\n 42654: a0 = s1 + 0x7ff\n 42658: a0 = a0 + 0x781\n 42662: a1 = s1 + 0x7ff\n 42666: a1 = a1 + 0x761\n 42670: u64 [a2 + 0x688] = a5\n 42674: ra = 1834, jump @1336\n      : @1665 [@dyn 917] (gas: 7)\n 42680: a4 = s1 + 0x100\n 42684: a0 = u64 [a4]\n 42686: a1 = u64 [a4 + 0x10]\n 42689: a2 = u64 [a4 + 0x18]\n 42692: a2 = a2 | a1\n 42695: a3 = u64 [a4 + 0x8]\n 42698: t0 = 1836, jump @2024\n      : @1666 [@dyn 918] (gas: 1)\n 42704: jump @1668 if a1 == 0\n      : @1667 (gas: 1)\n 42707: jump @1899\n      : @1668 (gas: 9)\n 42710: a3 = s1 + 0x7ff\n 42714: a3 = a3 + 0xf9\n 42718: u64 [a3 + 1632] = 0\n 42722: u64 [a3 + 1624] = 0\n 42726: u64 [a3 + 1616] = 0\n 42730: a1 = s1 + 0x7ff\n 42734: a1 = a1 + 0x741\n 42738: u64 [a3 + 1608] = 0x10\n 42743: ra = 1838, jump @19\n      : @1669 [@dyn 919] (gas: 11)\n 42750: a4 = s1 + 0x100\n 42754: a2 = u64 [a4]\n 42756: a0 = u64 [a4 + 0x10]\n 42759: a1 = u64 [a4 + 0x8]\n 42762: a0 = a0 | a1\n 42765: a1 = 0xffffffe0\n 42775: a1 = a2 <u a1\n 42778: a3 = u64 [a4 + 0x18]\n 42781: a1 = 0 if a3 != 0\n 42783: a1 = 0 if a0 != 0\n 42785: jump @1671 if a1 != 0\n      : @1670 (gas: 1)\n 42788: jump @1899\n      : @1671 (gas: 19)\n 42791: a0 = u64 [s1 + 0x178]\n 42795: a0 = reverse a0\n 42797: u64 [s1 + 0xa8] = a0\n 42801: a1 = u64 [s1 + 0x160]\n 42805: a1 = reverse a1\n 42807: u64 [s1 + 0xa0] = a1\n 42811: a1 = u64 [s1 + 0x168]\n 42815: a1 = reverse a1\n 42817: u64 [s1 + 0x98] = a1\n 42821: a1 = u64 [s1 + 0x170]\n 42825: a1 = reverse a1\n 42827: u64 [s1 + 0x90] = a1\n 42831: a0 = i32 [0x20258]\n 42836: u64 [s1 + 0x178] = a0\n 42840: a0 = 0xffffffff\n 42850: u64 [s1 + 0x158] = a0\n 42854: i32 a0 = a2 + 0x20\n 42857: a1 = 0x200\n 42861: ra = 1840, jump @32\n      : @1672 [@dyn 920] (gas: 13)\n 42868: i32 a0 = a0 + 0\n 42870: a1 = 0x200\n 42874: a2 = u64 [s1 + 0x178]\n 42878: ecalli 3 // 'call_data_copy'\n 42880: u64 [s1 + 328] = 0\n 42884: u64 [s1 + 312] = 0\n 42888: u64 [s1 + 320] = 0\n 42892: u64 [s1 + 336] = 0\n 42896: t1 = 0\n 42898: a5 = 0\n 42900: t2 = 0\n 42902: a4 = 0\n 42904: fallthrough\n      : @1673 (gas: 11)\n 42905: a3 = s1 + 0x1118\n 42909: a0 = a5 >u 0\n 42911: a1 = t1 <u 0x10\n 42914: a1 = a1 ^ 0x1\n 42917: a1 = a0 if a5 != 0\n 42920: a0 = t2 >u 0\n 42922: a2 = a4 >u 0\n 42924: a2 = a0 if a4 == 0\n 42927: a0 = t2 | a4\n 42930: a2 = a1 if a0 == 0\n 42933: jump @1698 if a2 != 0\n      : @1674 (gas: 24)\n 42937: a0 = sp + 0xffffffffffffffe0\n 42940: a0 = a0 & 0xffffffffffffffe0\n 42943: u64 [s1 + 0x170] = a0\n 42947: sp = a0\n 42949: u64 [s1 + 0xe0] = a4\n 42953: u64 [s1 + 0x3d8] = a4\n 42957: u64 [s1 + 0xd8] = t2\n 42961: u64 [s1 + 0x3d0] = t2\n 42965: u64 [s1 + 0xe8] = a5\n 42969: u64 [s1 + 0x3c8] = a5\n 42973: u64 [s1 + 0xf0] = t1\n 42977: u64 [s1 + 0x3c0] = t1\n 42981: a0 = u64 [s1 + 0xa8]\n 42985: u64 [s1 + 0x3f8] = a0\n 42989: a0 = u64 [s1 + 0xa0]\n 42993: u64 [s1 + 0x3f0] = a0\n 42997: a0 = u64 [s1 + 0x98]\n 43001: u64 [s1 + 0x3e8] = a0\n 43005: a0 = s1 + 0x400\n 43009: a1 = s1 + 0x3e0\n 43013: a2 = s1 + 0x3c0\n 43017: a3 = u64 [s1 + 0x90]\n 43021: u64 [s1 + 0x3e0] = a3\n 43025: ra = 1842, jump @1467\n      : @1675 [@dyn 921] (gas: 21)\n 43031: a4 = s1 + 0x400\n 43035: a0 = u64 [a4 + 0x38]\n 43038: u64 [s1 + 0x128] = a0\n 43042: a0 = u64 [a4 + 0x30]\n 43045: u64 [s1 + 0x120] = a0\n 43049: a0 = u64 [a4 + 0x28]\n 43052: u64 [s1 + 0xf8] = a0\n 43056: a0 = u64 [a4 + 0x20]\n 43059: u64 [s1 + 0x178] = a0\n 43063: a0 = u64 [a4 + 0x10]\n 43066: a1 = u64 [a4 + 0x18]\n 43069: a2 = u64 [a4]\n 43071: a3 = u64 [a4 + 0x8]\n 43074: a4 = u64 [s1 + 0x170]\n 43078: u64 [a4 + 0x10] = a0\n 43081: u64 [a4 + 0x18] = a1\n 43084: u64 [a4] = a2\n 43086: u64 [a4 + 0x8] = a3\n 43089: a1 = a4\n 43091: a0 = s1 + 0x3a0\n 43095: ra = 1844, jump @21\n      : @1676 [@dyn 922] (gas: 36)\n 43102: a2 = s1 + 0x300\n 43106: a0 = u64 [a2 + 0xa0]\n 43110: u64 [s1 + 0x160] = a0\n 43114: a0 = u64 [a2 + 0xa8]\n 43118: u64 [s1 + 0x130] = a0\n 43122: a0 = u64 [a2 + 0xb0]\n 43126: u64 [s1 + 0x170] = a0\n 43130: a1 = u64 [a2 + 0xb8]\n 43134: u64 [s1 + 0x168] = a1\n 43138: t2 = u64 [s1 + 0x178]\n 43142: a2 = t2 >> 0x3d\n 43145: a3 = u64 [s1 + 0xf8]\n 43149: a5 = a3 << 0x3\n 43152: t1 = a5 | a2\n 43155: a3 = a3 >> 0x3d\n 43158: a5 = u64 [s1 + 0x120]\n 43162: a2 = a5 << 0x3\n 43165: t0 = a2 | a3\n 43168: a2 = a5 >> 0x3d\n 43171: a3 = u64 [s1 + 0x128]\n 43175: a3 = a3 << 0x3\n 43178: a2 = a2 | a3\n 43181: t2 = t2 << 0x3\n 43184: u64 [s1 + 0x128] = t2\n 43188: a3 = t1 >u 0\n 43190: a4 = t2 <u 0x100\n 43194: a5 = a4 ^ 0x1\n 43197: a5 = a3 if t1 != 0\n 43200: a4 = a2 >u 0\n 43202: a3 = t0 >u 0\n 43204: a3 = a4 if a2 != 0\n 43207: a2 = t0 | a2\n 43210: a5 = a3 if a2 != 0\n 43213: u64 [s1 + 0x120] = a5\n 43217: i32 a2 = t2 + 0xffffffffffffff80\n 43220: ra = 1846, jump @2038\n      : @1677 [@dyn 923] (gas: 8)\n 43226: u64 [s1 + 0xd0] = a0\n 43230: u64 [s1 + 0xf8] = a1\n 43234: a0 = u64 [s1 + 0x178]\n 43238: i32 a2 = a0 << 0x3\n 43241: u64 [s1 + 0x178] = a2\n 43245: a0 = u64 [s1 + 0x160]\n 43249: a1 = u64 [s1 + 0x130]\n 43253: ra = 1848, jump @2038\n      : @1678 [@dyn 924] (gas: 7)\n 43259: u64 [s1 + 0xc0] = a0\n 43263: u64 [s1 + 0xc8] = a1\n 43267: a1 = u64 [s1 + 0x128]\n 43271: i32 a2 = 0x80 - a1\n 43275: a0 = u64 [s1 + 0x170]\n 43279: a1 = u64 [s1 + 0x168]\n 43283: ra = 1850, jump @2043\n      : @1679 [@dyn 925] (gas: 6)\n 43289: u64 [s1 + 0xb0] = a0\n 43293: u64 [s1 + 0xb8] = a1\n 43297: a0 = u64 [s1 + 0x170]\n 43301: a1 = u64 [s1 + 0x168]\n 43305: a2 = u64 [s1 + 0x178]\n 43309: ra = 1852, jump @2038\n      : @1680 [@dyn 926] (gas: 2)\n 43315: a1 = u64 [s1 + 0x120]\n 43319: jump @1697 if a1 != 0\n      : @1681 (gas: 30)\n 43323: a1 = u64 [s1 + 0xc0]\n 43327: a2 = u64 [s1 + 0xb0]\n 43331: a1 = a1 | a2\n 43334: a5 = u64 [s1 + 0x128]\n 43338: a2 = a5 <u 0x80\n 43342: a3 = u64 [s1 + 0xd0]\n 43346: a1 = a3 if a2 == 0\n 43349: a3 = u64 [s1 + 0x160]\n 43353: a3 = a1 if a5 != 0\n 43356: a1 = u64 [s1 + 0xc8]\n 43360: a4 = u64 [s1 + 0xb8]\n 43364: a1 = a1 | a4\n 43367: a4 = u64 [s1 + 0xf8]\n 43371: a1 = a4 if a2 == 0\n 43374: a4 = u64 [s1 + 0x130]\n 43378: a4 = a1 if a5 != 0\n 43381: a0 = 0 if a2 == 0\n 43383: a2 = a4 & 0xffffffffffffffff\n 43386: a1 = a3 & 0xffffffffffffffff\n 43389: t0 = u64 [s1 + 0x158]\n 43393: a0 = a0 & t0\n 43396: a4 = s1 + 0x100\n 43400: u64 [a4 + 0x30] = a0\n 43403: u64 [a4 + 0x20] = a1\n 43406: a0 = a0 | a1\n 43409: u64 [a4 + 0x28] = a2\n 43412: a0 = a0 | a2\n 43415: t2 = u64 [s1 + 0x118]\n 43419: a3 = u64 [a4 + 0x50]\n 43422: jump @1697 if a0 == 0\n      : @1682 (gas: 5)\n 43426: a4 = 0\n 43428: a5 = 0\n 43430: u64 [s1 + 368] = 0\n 43434: u64 [s1 + 376] = 0\n 43438: fallthrough\n      : @1683 (gas: 19)\n 43439: t0 = u64 [s1 + 0x148]\n 43443: u64 [s1 + 0x168] = a4\n 43447: a0 = a4 <u t0\n 43450: a4 = u64 [s1 + 0x138]\n 43454: a1 = a5 ^ a4\n 43457: u64 [s1 + 0x160] = a5\n 43461: a2 = a5 <u a4\n 43464: a2 = a0 if a1 == 0\n 43467: a5 = u64 [s1 + 0x140]\n 43471: a0 = u64 [s1 + 0x170]\n 43475: ra = a0 <u a5\n 43478: a1 = u64 [s1 + 0x178]\n 43482: t1 = a1 ^ a3\n 43485: a3 = a1 <u a3\n 43488: a3 = ra if t1 == 0\n 43491: a0 = a0 ^ a5\n 43494: a0 = a0 | t1\n 43497: a3 = a2 if a0 == 0\n 43500: jump @1691 if a3 == 0\n      : @1684 (gas: 20)\n 43504: a4 = s1 + 0x100\n 43508: a0 = u64 [a4 + 0x68]\n 43511: u64 [s1 + 0x280] = a0\n 43515: a0 = u64 [a4]\n 43517: u64 [s1 + 0x2a0] = a0\n 43521: a0 = u64 [a4 + 0x60]\n 43524: u64 [s1 + 0x288] = a0\n 43528: u64 [s1 + 0x2a8] = t2\n 43532: a0 = u64 [a4 + 0x70]\n 43535: u64 [s1 + 0x290] = a0\n 43539: a0 = u64 [a4 + 0x8]\n 43542: u64 [s1 + 0x2b0] = a0\n 43546: a0 = u64 [a4 + 0x78]\n 43549: u64 [s1 + 0x298] = a0\n 43553: a0 = s1 + 0x2c0\n 43557: a1 = s1 + 0x2a0\n 43561: a2 = s1 + 0x280\n 43565: a3 = u64 [a4 + 0x10]\n 43568: u64 [s1 + 0x2b8] = a3\n 43572: ra = 1854, jump @1921\n      : @1685 [@dyn 927] (gas: 6)\n 43578: a4 = s1 + 0x200\n 43582: a0 = u64 [a4 + 0xd8]\n 43586: a2 = u64 [a4 + 0xd0]\n 43590: a3 = u64 [a4 + 0xc8]\n 43594: a1 = u64 [a4 + 0xc0]\n 43598: t0 = 1856, jump @1985\n      : @1686 [@dyn 928] (gas: 1)\n 43604: jump @1688 if a0 == 0\n      : @1687 (gas: 1)\n 43607: jump @1899\n      : @1688 (gas: 2)\n 43610: a0 = s1 + 0x260\n 43614: ra = 1858, jump @17\n      : @1689 [@dyn 929] (gas: 34)\n 43621: a3 = s1 + 0x200\n 43625: a0 = u64 [a3 + 0x60]\n 43628: a1 = u64 [a3 + 0x70]\n 43631: a2 = u64 [a3 + 0x68]\n 43634: a0 = a0 & 0xffffffffffffffff\n 43637: t0 = u64 [s1 + 0x158]\n 43641: a1 = a1 & t0\n 43644: a4 = u64 [s1 + 0x130]\n 43648: a1 = a1 ^ a4\n 43651: a4 = u64 [s1 + 0x120]\n 43655: a0 = a0 ^ a4\n 43658: a0 = a0 | a1\n 43661: a1 = a2 & 0xffffffffffffffff\n 43664: a2 = u64 [s1 + 0x128]\n 43668: a1 = a1 ^ a2\n 43671: a0 = a0 | a1\n 43674: a4 = u64 [s1 + 0x168]\n 43678: a4 = a4 + 0x1\n 43681: a1 = a4 <u 0x1\n 43684: a5 = u64 [s1 + 0x160]\n 43688: a5 = a5 + a1\n 43691: a1 = a4 | a5\n 43694: a1 = a1 <u 0x1\n 43697: a2 = u64 [s1 + 0x170]\n 43701: a1 = a1 + a2\n 43704: a2 = a1 <u a2\n 43707: a3 = u64 [s1 + 0x178]\n 43711: a3 = a3 + a2\n 43714: a2 = s1 + 0x100\n 43718: u64 [a2 + 0x78] = a3\n 43721: u64 [a2 + 0x70] = a1\n 43724: t2 = u64 [s1 + 0x118]\n 43728: a3 = u64 [a2 + 0x50]\n 43731: jump @1683 if a0 != 0\n      : @1690 (gas: 1)\n 43735: jump @1697\n      : @1691 (gas: 19)\n 43738: u64 [s1 + 0x340] = t0\n 43742: a0 = u64 [s1 + 0x100]\n 43746: u64 [s1 + 0x360] = a0\n 43750: u64 [s1 + 0x348] = a4\n 43754: u64 [s1 + 0x368] = t2\n 43758: u64 [s1 + 0x350] = a5\n 43762: a0 = u64 [s1 + 0x108]\n 43766: u64 [s1 + 0x370] = a0\n 43770: a0 = u64 [s1 + 0x150]\n 43774: u64 [s1 + 0x358] = a0\n 43778: a0 = s1 + 0x380\n 43782: a1 = s1 + 0x360\n 43786: a2 = s1 + 0x340\n 43790: a3 = u64 [s1 + 0x110]\n 43794: u64 [s1 + 0x378] = a3\n 43798: u64 [s1 + 0x148] = t0\n 43802: u64 [s1 + 0x140] = a5\n 43806: u64 [s1 + 0x138] = a4\n 43810: ra = 1860, jump @1921\n      : @1692 [@dyn 930] (gas: 13)\n 43816: a4 = s1 + 0x300\n 43820: a1 = u64 [a4 + 0x98]\n 43824: a2 = u64 [a4 + 0x90]\n 43828: a3 = u64 [a4 + 0x88]\n 43832: a0 = u64 [a4 + 0x80]\n 43836: a1 = a1 | a3\n 43839: a3 = a0 | a2\n 43842: a3 = a3 | a1\n 43845: a3 = a3 >> 0x20\n 43848: a1 = a1 | a2\n 43851: a1 = a1 << 0x20\n 43854: a1 = a1 | a3\n 43857: jump @1694 if a1 == 0\n      : @1693 (gas: 1)\n 43860: jump @1899\n      : @1694 (gas: 9)\n 43863: u64 [s1 + 824] = 0\n 43867: a1 = u64 [s1 + 0x120]\n 43871: u64 [s1 + 0x320] = a1\n 43875: a1 = u64 [s1 + 0x128]\n 43879: u64 [s1 + 0x328] = a1\n 43883: a1 = s1 + 0x320\n 43887: a2 = u64 [s1 + 0x130]\n 43891: u64 [s1 + 0x330] = a2\n 43895: ra = 1862, jump @19\n      : @1695 [@dyn 931] (gas: 12)\n 43902: a0 = u64 [s1 + 0x150]\n 43906: a3 = s1 + 0x200\n 43910: u64 [a3 + 0xf8] = a0\n 43914: a0 = u64 [s1 + 0x140]\n 43918: u64 [a3 + 0xf0] = a0\n 43922: a0 = u64 [s1 + 0x138]\n 43926: u64 [a3 + 0xe8] = a0\n 43930: a0 = s1 + 0x300\n 43934: a1 = s1 + 0x2e0\n 43938: a2 = u64 [s1 + 0x148]\n 43942: u64 [a3 + 0xe0] = a2\n 43946: ra = 1864, jump @1511\n      : @1696 [@dyn 932] (gas: 11)\n 43952: a1 = s1 + 0x300\n 43956: a0 = u64 [a1 + 0x18]\n 43959: a2 = s1 + 0x100\n 43963: u64 [a2 + 0x50] = a0\n 43966: a0 = u64 [a1 + 0x10]\n 43969: u64 [a2 + 0x40] = a0\n 43972: a0 = u64 [a1 + 0x8]\n 43975: u64 [a2 + 0x38] = a0\n 43978: a0 = u64 [a1]\n 43980: u64 [a2 + 0x48] = a0\n 43983: fallthrough\n      : @1697 (gas: 14)\n 43984: t1 = u64 [s1 + 0xf0]\n 43988: t1 = t1 + 0x1\n 43991: a0 = t1 <u 0x1\n 43994: a5 = u64 [s1 + 0xe8]\n 43998: a5 = a5 + a0\n 44001: a0 = t1 | a5\n 44004: a0 = a0 <u 0x1\n 44007: a1 = u64 [s1 + 0xd8]\n 44011: a0 = a0 + a1\n 44014: a1 = a0 <u a1\n 44017: a4 = u64 [s1 + 0xe0]\n 44021: a4 = a4 + a1\n 44024: t2 = a0\n 44026: jump @1673\n      : @1698 (gas: 8)\n 44029: u64 [a3 + 288] = 0\n 44033: u64 [a3 + 280] = 0\n 44037: u64 [a3 + 272] = 0\n 44041: u64 [a3 + 264] = 0x2\n 44046: a0 = s1 + 0x7ff\n 44050: a0 = a0 + 0x721\n 44054: a1 = s1 + 0x1220\n 44058: ra = 1866, jump @21\n      : @1699 [@dyn 933] (gas: 23)\n 44065: a3 = s1 + 0x7ff\n 44069: a3 = a3 + 0xf9\n 44073: a1 = a3 + 0x600\n 44077: a0 = u64 [a1 + 0x40]\n 44080: t0 = u64 [a3 + 0x628]\n 44084: a2 = u64 [a1 + 0x38]\n 44087: a3 = u64 [a1 + 0x30]\n 44090: a1 = u64 [s1 + 0x150]\n 44094: a4 = a1 ^ a0\n 44097: a1 = a1 <u a0\n 44100: a0 = u64 [s1 + 0x140]\n 44104: a5 = a0 <u a2\n 44107: a5 = a1 if a4 != 0\n 44110: a1 = u64 [s1 + 0x138]\n 44114: t1 = a1 ^ a3\n 44117: a3 = a1 <u a3\n 44120: a1 = u64 [s1 + 0x148]\n 44124: a1 = a1 <u t0\n 44127: a1 = a3 if t1 != 0\n 44130: a0 = a0 ^ a2\n 44133: a0 = a0 | a4\n 44136: a1 = a5 if a0 != 0\n 44139: jump @1780 if a1 == 0\n      : @1700 (gas: 4)\n 44143: a0 = s1 + 0x7ff\n 44147: a0 = a0 + 0x261\n 44151: a1 = 0x40\n 44154: ra = 1868, jump @17\n      : @1701 [@dyn 934] (gas: 24)\n 44161: a2 = s1 + 0x7ff\n 44165: a2 = a2 + 0xf9\n 44169: a0 = u64 [a2 + 0x180]\n 44173: u64 [s1 + 0x170] = a0\n 44177: a1 = u64 [a2 + 0x178]\n 44181: u64 [s1 + 0x168] = a1\n 44185: a3 = u64 [a2 + 0x170]\n 44189: u64 [s1 + 0x178] = a3\n 44193: a4 = u64 [a2 + 0x168]\n 44197: u64 [s1 + 0x48] = a4\n 44200: u64 [a2 + 320] = 0\n 44204: u64 [a2 + 312] = 0\n 44208: u64 [a2 + 304] = 0\n 44212: u64 [a2 + 296] = 0x40\n 44217: a5 = a2 + 0x100\n 44221: u64 [a5 + 0x60] = a0\n 44224: u64 [a5 + 0x58] = a1\n 44227: u64 [a5 + 0x50] = a3\n 44230: a0 = s1 + 0x7ff\n 44234: a0 = a0 + 0x241\n 44238: a1 = s1 + 0x7ff\n 44242: a1 = a1 + 0x221\n 44246: u64 [a5 + 0x48] = a4\n 44249: ra = 1870, jump @1336\n      : @1702 [@dyn 935] (gas: 7)\n 44255: a0 = u64 [s1 + 0x48]\n 44258: a4 = s1 + 0x100\n 44262: a1 = u64 [a4 + 0x70]\n 44265: a2 = u64 [a4 + 0x78]\n 44268: a2 = a2 | a1\n 44271: a3 = u64 [a4 + 0x68]\n 44274: t0 = 1872, jump @2024\n      : @1703 [@dyn 936] (gas: 1)\n 44280: jump @1705 if a1 == 0\n      : @1704 (gas: 1)\n 44283: jump @1899\n      : @1705 (gas: 9)\n 44286: a3 = s1 + 0x7ff\n 44290: a3 = a3 + 0xf9\n 44294: u64 [a3 + 288] = 0\n 44298: u64 [a3 + 280] = 0\n 44302: u64 [a3 + 272] = 0\n 44306: a1 = s1 + 0x7ff\n 44310: a1 = a1 + 0x201\n 44314: u64 [a3 + 264] = 0x12\n 44319: ra = 1874, jump @19\n      : @1706 [@dyn 937] (gas: 11)\n 44326: a2 = u64 [s1 + 0x48]\n 44329: a4 = s1 + 0x100\n 44333: a0 = u64 [a4 + 0x70]\n 44336: a1 = u64 [a4 + 0x68]\n 44339: a0 = a0 | a1\n 44342: a1 = 0xffffffe0\n 44352: a1 = a2 <u a1\n 44355: a3 = u64 [a4 + 0x78]\n 44358: a1 = 0 if a3 != 0\n 44360: a1 = 0 if a0 != 0\n 44362: jump @1708 if a1 != 0\n      : @1707 (gas: 1)\n 44365: jump @1899\n      : @1708 (gas: 14)\n 44368: i32 a0 = a2 + 0x20\n 44371: a2 = u64 [0x201e8]\n 44376: a1 = u64 [0x201f0]\n 44381: a3 = s1 + 0x7ff\n 44385: a3 = a3 + 0xf9\n 44389: u64 [a3 + 232] = 0\n 44393: u64 [a3 + 0x100] = a2\n 44397: u64 [a3 + 0xf8] = a1\n 44401: a2 = 0x7273000000000000\n 44411: a1 = s1 + 0x7ff\n 44415: a1 = a1 + 0x1e1\n 44419: u64 [a3 + 0xf0] = a2\n 44423: u64 [s1 + 0x40] = a0\n 44426: ra = 1876, jump @19\n      : @1709 [@dyn 938] (gas: 14)\n 44433: a0 = u64 [s1 + 0x68]\n 44436: a2 = s1 + 0x7ff\n 44440: a2 = a2 + 0xf9\n 44444: u64 [a2 + 0xe0] = a0\n 44448: a0 = u64 [s1 + 0x60]\n 44451: u64 [a2 + 0xd8] = a0\n 44455: a0 = u64 [s1 + 0x58]\n 44458: u64 [a2 + 0xd0] = a0\n 44462: a1 = s1 + 0x7ff\n 44466: a1 = a1 + 0x1c1\n 44470: a0 = u64 [s1 + 0x50]\n 44473: u64 [a2 + 0xc8] = a0\n 44477: a0 = 0\n 44479: ra = 1878, jump @19\n      : @1710 [@dyn 939] (gas: 11)\n 44486: a1 = s1 + 0x7ff\n 44490: a1 = a1 + 0xf9\n 44494: u64 [a1 + 192] = 0\n 44498: u64 [a1 + 184] = 0\n 44502: u64 [a1 + 168] = 0x3\n 44507: a2 = a1\n 44509: a0 = 0x20\n 44512: a1 = s1 + 0x7ff\n 44516: a1 = a1 + 0x1a1\n 44520: u64 [a2 + 176] = 0\n 44524: ra = 1880, jump @19\n      : @1711 [@dyn 940] (gas: 3)\n 44531: a1 = 0x40\n 44534: a0 = 0\n 44536: ra = 1882, jump @32\n      : @1712 [@dyn 941] (gas: 60)\n 44543: a1 = sp + 0xffffffffffffffe0\n 44546: a1 = a1 & 0xffffffffffffffe0\n 44549: u64 [s1 + 0x178] = a1\n 44553: sp = a1\n 44555: i32 a0 = a0 + 0\n 44557: i32 a2 = a1 + 0\n 44559: a1 = 0x40\n 44562: ecalli 9 // 'hash_keccak_256'\n 44564: a5 = s1 + 0x100\n 44568: a3 = u64 [a5 + 0x78]\n 44571: a1 = u64 [a3 + 0x10]\n 44574: a0 = u64 [a3 + 0x18]\n 44577: t0 = 0\n 44579: t1 = 0\n 44581: t2 = 0\n 44583: ra = 0\n 44585: a1 = reverse a1\n 44587: a0 = reverse a0\n 44589: a2 = a0 + 0x10\n 44592: u64 [a5 + 0x38] = a0\n 44595: u64 [s1 + 0xc8] = a2\n 44599: a0 = a2 <u a0\n 44602: a2 = a1 + a0\n 44605: u64 [a5 + 0x40] = a1\n 44608: u64 [s1 + 0xc0] = a2\n 44612: a1 = a2 <u a1\n 44615: a1 = a0 if a0 == 0\n 44618: a0 = u64 [a3 + 0x8]\n 44621: a2 = u64 [a3]\n 44623: a3 = s1 + 0x1280\n 44627: a3 = a3 << 0x20\n 44630: a3 = a3 >> 0x20\n 44633: a4 = s1 + 0x12c0\n 44637: a4 = a4 << 0x20\n 44640: a3 = a3 | a4\n 44643: u64 [s1 + 0x98] = a3\n 44647: a2 = reverse a2\n 44649: a3 = reverse a0\n 44651: a4 = 0x30270\n 44656: a1 = a1 + a3\n 44659: u64 [a5 + 0x28] = a3\n 44662: u64 [s1 + 0xb8] = a1\n 44666: a0 = a1 <u a3\n 44669: u64 [a5 + 0x30] = a2\n 44672: a0 = a0 + a2\n 44675: u64 [s1 + 0xb0] = a0\n 44679: u64 [s1 + 0x90] = a4\n 44683: a0 = a4 << 0x20\n 44686: a0 = a0 >> 0x20\n 44689: u64 [s1 + 0x88] = a0\n 44693: a0 = u64 [s1 + 0x30]\n 44696: a0 = a0 << 0x20\n 44699: a1 = a0 >> 0x20\n 44702: a0 = s1 + 0x12a0\n 44706: a0 = a0 << 0x20\n 44709: u64 [s1 + 0x80] = a1\n 44713: a0 = a0 | a1\n 44716: u64 [s1 + 0x78] = a0\n 44719: u64 [s1 + 112] = 0x8fc\n 44724: fallthrough\n      : @1713 (gas: 14)\n 44725: a0 = t1 >u 0\n 44727: a1 = t0 <u 0x10\n 44730: a1 = a1 ^ 0x1\n 44733: a1 = a0 if t1 != 0\n 44736: a0 = t2 >u 0\n 44738: a2 = ra >u 0\n 44740: a2 = a0 if ra == 0\n 44743: a0 = t2 | ra\n 44746: a2 = a1 if a0 == 0\n 44749: a0 = sp + 0xffffffffffffffe0\n 44752: a5 = a0 & 0xffffffffffffffe0\n 44755: sp = a5\n 44757: u64 [s1 + 0x148] = a5\n 44761: jump @1715 if a2 == 0\n      : @1714 (gas: 1)\n 44764: jump @1822\n      : @1715 (gas: 31)\n 44767: u64 [s1 + 0x178] = t0\n 44771: a0 = s1 + 0x1000\n 44775: u64 [a0 + 0xfffffffffffff820] = t0\n 44779: a0 = u64 [s1 + 0x138]\n 44783: a1 = s1 + 0x1000\n 44787: u64 [a1 + 0xfffffffffffff840] = a0\n 44791: u64 [s1 + 0x170] = t1\n 44795: a0 = s1 + 0x1000\n 44799: u64 [a0 + 0xfffffffffffff828] = t1\n 44803: a0 = u64 [s1 + 0x140]\n 44807: a1 = s1 + 0x1000\n 44811: u64 [a1 + 0xfffffffffffff848] = a0\n 44815: u64 [s1 + 0x160] = t2\n 44819: a0 = s1 + 0x1000\n 44823: u64 [a0 + 0xfffffffffffff830] = t2\n 44827: a0 = u64 [s1 + 0x128]\n 44831: a1 = s1 + 0x1000\n 44835: u64 [a1 + 0xfffffffffffff850] = a0\n 44839: u64 [s1 + 0x168] = ra\n 44843: a0 = s1 + 0x1000\n 44847: u64 [a0 + 0xfffffffffffff838] = ra\n 44851: a0 = s1 + 0x7ff\n 44855: a0 = a0 + 0x61\n 44858: a1 = s1 + 0x7ff\n 44862: a1 = a1 + 0x41\n 44865: a2 = s1 + 0x7ff\n 44869: a2 = a2 + 0x21\n 44872: a3 = u64 [s1 + 0x130]\n 44876: a4 = s1 + 0x1000\n 44880: u64 [a4 + 0xfffffffffffff858] = a3\n 44884: ra = 1884, jump @1467\n      : @1716 [@dyn 942] (gas: 29)\n 44890: a0 = s1 + 0x1000\n 44894: a0 = u64 [a0 + 0xfffffffffffff898]\n 44898: u64 [s1 + 0x120] = a0\n 44902: a0 = s1 + 0x1000\n 44906: a0 = u64 [a0 + 0xfffffffffffff890]\n 44910: u64 [s1 + 0x118] = a0\n 44914: a0 = s1 + 0x1000\n 44918: a0 = u64 [a0 + 0xfffffffffffff888]\n 44922: u64 [s1 + 0x110] = a0\n 44926: a0 = s1 + 0x1000\n 44930: a0 = u64 [a0 + 0xfffffffffffff880]\n 44934: u64 [s1 + 0x150] = a0\n 44938: a0 = s1 + 0x1000\n 44942: a0 = u64 [a0 + 0xfffffffffffff870]\n 44946: a1 = s1 + 0x1000\n 44950: a1 = u64 [a1 + 0xfffffffffffff878]\n 44954: a2 = s1 + 0x1000\n 44958: a2 = u64 [a2 + 0xfffffffffffff860]\n 44962: a3 = s1 + 0x1000\n 44966: a3 = u64 [a3 + 0xfffffffffffff868]\n 44970: a4 = u64 [s1 + 0x148]\n 44974: u64 [a4 + 0x10] = a0\n 44977: u64 [a4 + 0x18] = a1\n 44980: u64 [a4] = a2\n 44982: u64 [a4 + 0x8] = a3\n 44985: a1 = a4\n 44987: a0 = s1 + 0x7ff\n 44991: a0 = a0 + 0x1\n 44994: ra = 1886, jump @21\n      : @1717 [@dyn 943] (gas: 28)\n 45001: a0 = s1 + 0x1000\n 45005: a0 = u64 [a0 + 0xfffffffffffff800]\n 45009: u64 [s1 + 0x108] = a0\n 45013: a0 = s1 + 0x1000\n 45017: a0 = u64 [a0 + 0xfffffffffffff808]\n 45021: u64 [s1 + 0x100] = a0\n 45025: a0 = s1 + 0x1000\n 45029: a0 = u64 [a0 + 0xfffffffffffff810]\n 45033: u64 [s1 + 0xf8] = a0\n 45037: a0 = s1 + 0x1000\n 45041: a0 = u64 [a0 + 0xfffffffffffff818]\n 45045: u64 [s1 + 0xf0] = a0\n 45049: a5 = u64 [s1 + 0x150]\n 45053: a0 = a5 >> 0x3d\n 45056: a2 = u64 [s1 + 0x110]\n 45060: a1 = a2 << 0x3\n 45063: a0 = a0 | a1\n 45066: a1 = a2 >> 0x3d\n 45069: a3 = u64 [s1 + 0x118]\n 45073: a2 = a3 << 0x3\n 45076: a1 = a1 | a2\n 45079: a2 = a3 >> 0x3d\n 45082: a3 = u64 [s1 + 0x120]\n 45086: a3 = a3 << 0x3\n 45089: a2 = a2 | a3\n 45092: a5 = a5 << 0x3\n 45095: u64 [s1 + 0x148] = a5\n 45099: t0 = 1888, jump @1966\n      : @1718 [@dyn 944] (gas: 5)\n 45105: u64 [s1 + 0x120] = a4\n 45109: i32 a2 = a5 + 0xffffffffffffff80\n 45112: a0 = 0xffffffffffffffff\n 45115: a1 = 0xffffffffffffffff\n 45118: ra = 1890, jump @2043\n      : @1719 [@dyn 945] (gas: 8)\n 45124: u64 [s1 + 0x110] = a0\n 45128: u64 [s1 + 0x118] = a1\n 45132: a0 = u64 [s1 + 0x150]\n 45136: i32 a2 = a0 << 0x3\n 45139: u64 [s1 + 0x150] = a2\n 45143: a0 = u64 [s1 + 0x158]\n 45147: a1 = 0\n 45149: ra = 1892, jump @2043\n      : @1720 [@dyn 946] (gas: 7)\n 45155: u64 [s1 + 0xe0] = a0\n 45159: u64 [s1 + 0xe8] = a1\n 45163: a1 = u64 [s1 + 0x148]\n 45167: i32 a2 = 0x80 - a1\n 45171: a0 = 0xffffffffffffffff\n 45174: a1 = 0xffffffffffffffff\n 45177: ra = 1894, jump @2038\n      : @1721 [@dyn 947] (gas: 6)\n 45183: u64 [s1 + 0xd0] = a0\n 45187: u64 [s1 + 0xd8] = a1\n 45191: a0 = 0xffffffffffffffff\n 45194: a1 = 0xffffffffffffffff\n 45197: a2 = u64 [s1 + 0x150]\n 45201: ra = 1896, jump @2043\n      : @1722 [@dyn 948] (gas: 2)\n 45207: a2 = u64 [s1 + 0x120]\n 45211: jump @1779 if a2 != 0\n      : @1723 (gas: 29)\n 45215: a2 = u64 [s1 + 0xe0]\n 45219: a3 = u64 [s1 + 0xd0]\n 45223: a2 = a2 | a3\n 45226: t0 = u64 [s1 + 0x148]\n 45230: a3 = t0 <u 0x80\n 45234: a4 = u64 [s1 + 0x110]\n 45238: a2 = a4 if a3 == 0\n 45241: a4 = u64 [s1 + 0xe8]\n 45245: a5 = u64 [s1 + 0xd8]\n 45249: a4 = a4 | a5\n 45252: a5 = u64 [s1 + 0x118]\n 45256: a4 = a5 if a3 == 0\n 45259: a5 = u64 [s1 + 0x158]\n 45263: a2 = a5 if t0 == 0\n 45266: a4 = 0 if t0 == 0\n 45268: a0 = 0 if a3 == 0\n 45270: a1 = 0 if a3 == 0\n 45272: a3 = u64 [s1 + 0xf0]\n 45276: a3 = a3 & a4\n 45279: a4 = u64 [s1 + 0xf8]\n 45283: a2 = a2 & a4\n 45286: a4 = u64 [s1 + 0x100]\n 45290: a1 = a1 & a4\n 45293: a4 = u64 [s1 + 0x108]\n 45297: a0 = a0 & a4\n 45300: a0 = a0 | a2\n 45303: a1 = a1 | a3\n 45306: a0 = a0 | a1\n 45309: jump @1779 if a0 == 0\n      : @1724 (gas: 8)\n 45313: a0 = s1 + 0x1118\n 45317: u64 [a0 + 320] = 0\n 45321: u64 [a0 + 312] = 0\n 45325: u64 [a0 + 304] = 0\n 45329: u64 [a0 + 296] = 0\n 45333: a0 = s1 + 0x7e0\n 45337: a1 = s1 + 0x1240\n 45341: ra = 1898, jump @21\n      : @1725 [@dyn 949] (gas: 9)\n 45348: a0 = u64 [s1 + 0x7e0]\n 45352: u64 [s1 + 0x100] = a0\n 45356: a0 = u64 [s1 + 0x7e8]\n 45360: u64 [s1 + 0xf8] = a0\n 45364: a0 = u64 [s1 + 0x7f0]\n 45368: u64 [s1 + 0xf0] = a0\n 45372: a0 = u64 [s1 + 0x7f8]\n 45376: u64 [s1 + 0xe8] = a0\n 45380: t0 = 1900, jump @2013\n      : @1726 [@dyn 950] (gas: 19)\n 45386: u64 [s1 + 0x778] = a0\n 45390: a0 = u64 [s1 + 0x160]\n 45394: u64 [s1 + 0x770] = a0\n 45398: a0 = u64 [s1 + 0x170]\n 45402: u64 [s1 + 0x768] = a0\n 45406: a0 = u64 [s1 + 0x178]\n 45410: u64 [s1 + 0x760] = a0\n 45414: a0 = u64 [s1 + 0x130]\n 45418: u64 [s1 + 0x798] = a0\n 45422: a0 = u64 [s1 + 0x128]\n 45426: u64 [s1 + 0x790] = a0\n 45430: a0 = u64 [s1 + 0x140]\n 45434: u64 [s1 + 0x788] = a0\n 45438: a0 = s1 + 0x7a0\n 45442: a1 = s1 + 0x780\n 45446: a2 = s1 + 0x760\n 45450: a3 = u64 [s1 + 0x138]\n 45454: u64 [s1 + 0x780] = a3\n 45458: ra = 1902, jump @1467\n      : @1727 [@dyn 951] (gas: 13)\n 45464: a0 = u64 [s1 + 0x7d8]\n 45468: u64 [s1 + 0x110] = a0\n 45472: a0 = u64 [s1 + 0x7d0]\n 45476: u64 [s1 + 0xe0] = a0\n 45480: a0 = u64 [s1 + 0x7c8]\n 45484: u64 [s1 + 0xd8] = a0\n 45488: a0 = u64 [s1 + 0x7c0]\n 45492: u64 [s1 + 0x108] = a0\n 45496: a0 = u64 [s1 + 0x7b0]\n 45500: a1 = u64 [s1 + 0x7b8]\n 45504: a2 = u64 [s1 + 0x7a0]\n 45508: a3 = u64 [s1 + 0x7a8]\n 45512: t0 = 1904, jump @2025\n      : @1728 [@dyn 952] (gas: 2)\n 45518: a0 = s1 + 0x740\n 45522: ra = 1906, jump @21\n      : @1729 [@dyn 953] (gas: 8)\n 45529: a0 = u64 [s1 + 0x740]\n 45533: u64 [s1 + 0x148] = a0\n 45537: a0 = u64 [s1 + 0x748]\n 45541: u64 [s1 + 0x150] = a0\n 45545: a0 = u64 [s1 + 0x750]\n 45549: u64 [s1 + 0x120] = a0\n 45553: a1 = u64 [s1 + 0x758]\n 45557: t0 = 1908, jump @1978\n      : @1730 [@dyn 954] (gas: 19)\n 45563: t0 = a2 | a3\n 45566: a2 = a5 >> 0x3d\n 45569: a3 = u64 [s1 + 0x110]\n 45573: a3 = a3 << 0x3\n 45576: a2 = a2 | a3\n 45579: t2 = t2 << 0x3\n 45582: u64 [s1 + 0x110] = t2\n 45586: a3 = t1 >u 0\n 45588: a4 = t2 <u 0x100\n 45592: a5 = a4 ^ 0x1\n 45595: a5 = a3 if t1 != 0\n 45598: a4 = a2 >u 0\n 45600: a3 = t0 >u 0\n 45602: a3 = a4 if a2 != 0\n 45605: a2 = t0 | a2\n 45608: a5 = a3 if a2 != 0\n 45611: u64 [s1 + 0xe0] = a5\n 45615: i32 a2 = t2 + 0xffffffffffffff80\n 45618: ra = 1910, jump @2038\n      : @1731 [@dyn 955] (gas: 1)\n 45624: t0 = 1912, jump @2018\n      : @1732 [@dyn 956] (gas: 1)\n 45630: ra = 1914, jump @2038\n      : @1733 [@dyn 957] (gas: 3)\n 45636: u64 [s1 + 0xa0] = a0\n 45640: u64 [s1 + 0xa8] = a1\n 45644: t0 = 1916, jump @1999\n      : @1734 [@dyn 958] (gas: 1)\n 45650: ra = 1918, jump @2043\n      : @1735 [@dyn 959] (gas: 1)\n 45656: t0 = 1920, jump @1969\n      : @1736 [@dyn 960] (gas: 1)\n 45662: ra = 1922, jump @2038\n      : @1737 [@dyn 961] (gas: 1)\n 45668: t0 = 1924, jump @1977\n      : @1738 [@dyn 962] (gas: 7)\n 45674: u64 [s1 + 1848] = 0\n 45678: u64 [s1 + 0x730] = a0\n 45682: u64 [s1 + 0x728] = a1\n 45686: a1 = s1 + 0x720\n 45690: u64 [s1 + 0x720] = a2\n 45694: a0 = 0\n 45696: ra = 1926, jump @19\n      : @1739 [@dyn 963] (gas: 12)\n 45703: a0 = u64 [s1 + 0xb0]\n 45707: a3 = s1 + 0x700\n 45711: u64 [a3 + 0x18] = a0\n 45714: a0 = u64 [s1 + 0xb8]\n 45718: u64 [a3 + 0x10] = a0\n 45721: a0 = u64 [s1 + 0xc0]\n 45725: u64 [a3 + 0x8] = a0\n 45728: a0 = 0x20\n 45731: a1 = s1 + 0x700\n 45735: a2 = u64 [s1 + 0xc8]\n 45739: u64 [a3] = a2\n 45741: ra = 1928, jump @19\n      : @1740 [@dyn 964] (gas: 3)\n 45748: a1 = 0x40\n 45751: a0 = 0\n 45753: ra = 1930, jump @32\n      : @1741 [@dyn 965] (gas: 1)\n 45760: t0 = 1932, jump @2019\n      : @1742 [@dyn 966] (gas: 4)\n 45766: ra = 0x78e\n 45770: ecalli 9 // 'hash_keccak_256'\n 45772: t0 = 0x790\n 45776: jump @1984\n      : @1743 [@dyn 967] (gas: 1)\n 45779: t0 = 1936, jump @1984\n      : @1744 [@dyn 968] (gas: 3)\n 45785: a1 = a4\n 45787: a0 = s1 + 0x6e0\n 45791: ra = 1938, jump @21\n      : @1745 [@dyn 969] (gas: 20)\n 45798: a0 = u64 [s1 + 0x6e0]\n 45802: a1 = u64 [s1 + 0x6e8]\n 45806: a2 = u64 [s1 + 0x6f0]\n 45810: a3 = u64 [s1 + 0x6f8]\n 45814: u64 [s1 + 0x698] = a3\n 45818: u64 [s1 + 0x690] = a2\n 45822: u64 [s1 + 0x688] = a1\n 45826: u64 [s1 + 0x680] = a0\n 45830: a0 = u64 [s1 + 0xe8]\n 45834: u64 [s1 + 0x6b8] = a0\n 45838: a0 = u64 [s1 + 0xf0]\n 45842: u64 [s1 + 0x6b0] = a0\n 45846: a0 = u64 [s1 + 0xf8]\n 45850: u64 [s1 + 0x6a8] = a0\n 45854: a0 = s1 + 0x6c0\n 45858: a1 = s1 + 0x6a0\n 45862: a2 = s1 + 0x680\n 45866: a3 = u64 [s1 + 0x100]\n 45870: u64 [s1 + 0x6a0] = a3\n 45874: ra = 1940, jump @1394\n      : @1746 [@dyn 970] (gas: 9)\n 45880: a0 = u64 [s1 + 0x6c0]\n 45884: u64 [s1 + 0x100] = a0\n 45888: a0 = u64 [s1 + 0x6c8]\n 45892: u64 [s1 + 0xf8] = a0\n 45896: a0 = u64 [s1 + 0x6d0]\n 45900: u64 [s1 + 0xf0] = a0\n 45904: a0 = u64 [s1 + 0x6d8]\n 45908: u64 [s1 + 0xe8] = a0\n 45912: t0 = 1942, jump @2013\n      : @1747 [@dyn 971] (gas: 19)\n 45918: u64 [s1 + 0x618] = a0\n 45922: a0 = u64 [s1 + 0x160]\n 45926: u64 [s1 + 0x610] = a0\n 45930: a0 = u64 [s1 + 0x170]\n 45934: u64 [s1 + 0x608] = a0\n 45938: a0 = u64 [s1 + 0x178]\n 45942: u64 [s1 + 0x600] = a0\n 45946: a0 = u64 [s1 + 0x130]\n 45950: u64 [s1 + 0x638] = a0\n 45954: a0 = u64 [s1 + 0x128]\n 45958: u64 [s1 + 0x630] = a0\n 45962: a0 = u64 [s1 + 0x140]\n 45966: u64 [s1 + 0x628] = a0\n 45970: a0 = s1 + 0x640\n 45974: a1 = s1 + 0x620\n 45978: a2 = s1 + 0x600\n 45982: a3 = u64 [s1 + 0x138]\n 45986: u64 [s1 + 0x620] = a3\n 45990: ra = 1944, jump @1467\n      : @1748 [@dyn 972] (gas: 14)\n 45996: a4 = s1 + 0x600\n 46000: a0 = u64 [a4 + 0x78]\n 46003: u64 [s1 + 0x110] = a0\n 46007: a0 = u64 [a4 + 0x70]\n 46010: u64 [s1 + 0xe0] = a0\n 46014: a0 = u64 [a4 + 0x68]\n 46017: u64 [s1 + 0xd8] = a0\n 46021: a0 = u64 [a4 + 0x60]\n 46024: u64 [s1 + 0x108] = a0\n 46028: a0 = u64 [a4 + 0x50]\n 46031: a1 = u64 [a4 + 0x58]\n 46034: a2 = u64 [a4 + 0x40]\n 46037: a3 = u64 [a4 + 0x48]\n 46040: t0 = 1946, jump @2025\n      : @1749 [@dyn 973] (gas: 2)\n 46046: a0 = s1 + 0x5e0\n 46050: ra = 1948, jump @21\n      : @1750 [@dyn 974] (gas: 8)\n 46057: a0 = u64 [s1 + 0x5e0]\n 46061: u64 [s1 + 0x148] = a0\n 46065: a0 = u64 [s1 + 0x5e8]\n 46069: u64 [s1 + 0x150] = a0\n 46073: a0 = u64 [s1 + 0x5f0]\n 46077: u64 [s1 + 0x120] = a0\n 46081: a1 = u64 [s1 + 0x5f8]\n 46085: t0 = 1950, jump @1978\n      : @1751 [@dyn 975] (gas: 19)\n 46091: t0 = a2 | a3\n 46094: a2 = a5 >> 0x3d\n 46097: a3 = u64 [s1 + 0x110]\n 46101: a3 = a3 << 0x3\n 46104: a2 = a2 | a3\n 46107: t2 = t2 << 0x3\n 46110: u64 [s1 + 0x110] = t2\n 46114: a3 = t1 >u 0\n 46116: a4 = t2 <u 0x100\n 46120: a5 = a4 ^ 0x1\n 46123: a5 = a3 if t1 != 0\n 46126: a4 = a2 >u 0\n 46128: a3 = t0 >u 0\n 46130: a3 = a4 if a2 != 0\n 46133: a2 = t0 | a2\n 46136: a5 = a3 if a2 != 0\n 46139: u64 [s1 + 0xe0] = a5\n 46143: i32 a2 = t2 + 0xffffffffffffff80\n 46146: ra = 1952, jump @2038\n      : @1752 [@dyn 976] (gas: 1)\n 46152: t0 = 1954, jump @2018\n      : @1753 [@dyn 977] (gas: 1)\n 46158: ra = 1956, jump @2038\n      : @1754 [@dyn 978] (gas: 3)\n 46164: u64 [s1 + 0xa0] = a0\n 46168: u64 [s1 + 0xa8] = a1\n 46172: t0 = 1958, jump @1999\n      : @1755 [@dyn 979] (gas: 1)\n 46178: ra = 1960, jump @2043\n      : @1756 [@dyn 980] (gas: 1)\n 46184: t0 = 1962, jump @1969\n      : @1757 [@dyn 981] (gas: 1)\n 46190: ra = 1964, jump @2038\n      : @1758 [@dyn 982] (gas: 1)\n 46196: t0 = 1966, jump @1977\n      : @1759 [@dyn 983] (gas: 7)\n 46202: u64 [s1 + 1496] = 0\n 46206: u64 [s1 + 0x5d0] = a0\n 46210: u64 [s1 + 0x5c8] = a1\n 46214: a1 = s1 + 0x5c0\n 46218: u64 [s1 + 0x5c0] = a2\n 46222: a0 = 0\n 46224: ra = 1968, jump @19\n      : @1760 [@dyn 984] (gas: 11)\n 46231: a0 = u64 [s1 + 0xb0]\n 46235: u64 [s1 + 0x5b8] = a0\n 46239: a0 = u64 [s1 + 0xb8]\n 46243: u64 [s1 + 0x5b0] = a0\n 46247: a0 = u64 [s1 + 0xc0]\n 46251: u64 [s1 + 0x5a8] = a0\n 46255: a0 = 0x20\n 46258: a1 = s1 + 0x5a0\n 46262: a2 = u64 [s1 + 0xc8]\n 46266: u64 [s1 + 0x5a0] = a2\n 46270: ra = 1970, jump @19\n      : @1761 [@dyn 985] (gas: 3)\n 46277: a1 = 0x40\n 46280: a0 = 0\n 46282: ra = 1972, jump @32\n      : @1762 [@dyn 986] (gas: 1)\n 46289: t0 = 1974, jump @2019\n      : @1763 [@dyn 987] (gas: 4)\n 46295: ra = 0x7b8\n 46299: ecalli 9 // 'hash_keccak_256'\n 46301: t0 = 0x7ba\n 46305: jump @1984\n      : @1764 [@dyn 988] (gas: 1)\n 46308: t0 = 1978, jump @1984\n      : @1765 [@dyn 989] (gas: 8)\n 46314: a0 = s1 + 0x1118\n 46318: u64 [a0 + 352] = 0\n 46322: u64 [a0 + 344] = 0\n 46326: u64 [a0 + 336] = 0\n 46330: u64 [a0 + 328] = 0\n 46334: a1 = s1 + 0x1260\n 46338: a0 = a4\n 46340: ra = 1980, jump @25\n      : @1766 [@dyn 990] (gas: 1)\n 46347: t0 = 1982, jump @2013\n      : @1767 [@dyn 991] (gas: 19)\n 46353: u64 [s1 + 0x538] = a0\n 46357: a0 = u64 [s1 + 0x160]\n 46361: u64 [s1 + 0x530] = a0\n 46365: a0 = u64 [s1 + 0x170]\n 46369: u64 [s1 + 0x528] = a0\n 46373: a0 = u64 [s1 + 0x178]\n 46377: u64 [s1 + 0x520] = a0\n 46381: a0 = u64 [s1 + 0x130]\n 46385: u64 [s1 + 0x558] = a0\n 46389: a0 = u64 [s1 + 0x128]\n 46393: u64 [s1 + 0x550] = a0\n 46397: a0 = u64 [s1 + 0x140]\n 46401: u64 [s1 + 0x548] = a0\n 46405: a0 = s1 + 0x560\n 46409: a1 = s1 + 0x540\n 46413: a2 = s1 + 0x520\n 46417: a3 = u64 [s1 + 0x138]\n 46421: u64 [s1 + 0x540] = a3\n 46425: ra = 1984, jump @1467\n      : @1768 [@dyn 992] (gas: 13)\n 46431: a0 = u64 [s1 + 0x598]\n 46435: u64 [s1 + 0x110] = a0\n 46439: a0 = u64 [s1 + 0x590]\n 46443: u64 [s1 + 0xe0] = a0\n 46447: a0 = u64 [s1 + 0x588]\n 46451: u64 [s1 + 0xd8] = a0\n 46455: a0 = u64 [s1 + 0x580]\n 46459: u64 [s1 + 0x108] = a0\n 46463: a0 = u64 [s1 + 0x570]\n 46467: a1 = u64 [s1 + 0x578]\n 46471: a2 = u64 [s1 + 0x560]\n 46475: a3 = u64 [s1 + 0x568]\n 46479: t0 = 1986, jump @2025\n      : @1769 [@dyn 993] (gas: 2)\n 46485: a0 = s1 + 0x500\n 46489: ra = 1988, jump @21\n      : @1770 [@dyn 994] (gas: 9)\n 46496: a2 = s1 + 0x500\n 46500: a0 = u64 [a2]\n 46502: u64 [s1 + 0x150] = a0\n 46506: a0 = u64 [a2 + 0x8]\n 46509: u64 [s1 + 0x148] = a0\n 46513: a0 = u64 [a2 + 0x10]\n 46516: u64 [s1 + 0x120] = a0\n 46520: a1 = u64 [a2 + 0x18]\n 46523: t0 = 1990, jump @1978\n      : @1771 [@dyn 995] (gas: 19)\n 46529: t0 = a2 | a3\n 46532: a2 = a5 >> 0x3d\n 46535: a3 = u64 [s1 + 0x110]\n 46539: a3 = a3 << 0x3\n 46542: a2 = a2 | a3\n 46545: t2 = t2 << 0x3\n 46548: u64 [s1 + 0x110] = t2\n 46552: a3 = t1 >u 0\n 46554: a4 = t2 <u 0x100\n 46558: a5 = a4 ^ 0x1\n 46561: a5 = a3 if t1 != 0\n 46564: a4 = a2 >u 0\n 46566: a3 = t0 >u 0\n 46568: a3 = a4 if a2 != 0\n 46571: a2 = t0 | a2\n 46574: a5 = a3 if a2 != 0\n 46577: u64 [s1 + 0xe0] = a5\n 46581: i32 a2 = t2 + 0xffffffffffffff80\n 46584: ra = 1992, jump @2038\n      : @1772 [@dyn 996] (gas: 8)\n 46590: u64 [s1 + 0xd8] = a0\n 46594: u64 [s1 + 0xd0] = a1\n 46598: a0 = u64 [s1 + 0x108]\n 46602: i32 a2 = a0 << 0x3\n 46605: u64 [s1 + 0x108] = a2\n 46609: a0 = u64 [s1 + 0x150]\n 46613: a1 = u64 [s1 + 0x148]\n 46617: ra = 1994, jump @2038\n      : @1773 [@dyn 997] (gas: 3)\n 46623: u64 [s1 + 0xa8] = a0\n 46627: u64 [s1 + 0xa0] = a1\n 46631: t0 = 1996, jump @1999\n      : @1774 [@dyn 998] (gas: 1)\n 46637: ra = 1998, jump @2043\n      : @1775 [@dyn 999] (gas: 21)\n 46643: a3 = u64 [s1 + 0xa0]\n 46647: a3 = a3 | a1\n 46650: a2 = u64 [s1 + 0x110]\n 46654: a4 = a2 <u 0x80\n 46658: u64 [s1 + 0xa0] = a4\n 46662: a1 = u64 [s1 + 0xd0]\n 46666: a3 = a1 if a4 == 0\n 46669: a1 = u64 [s1 + 0x148]\n 46673: a3 = a1 if a2 == 0\n 46676: u64 [s1 + 0x148] = a3\n 46680: a1 = u64 [s1 + 0xa8]\n 46684: a1 = a1 | a0\n 46687: a0 = u64 [s1 + 0xd8]\n 46691: a1 = a0 if a4 == 0\n 46694: a0 = u64 [s1 + 0x150]\n 46698: a1 = a0 if a2 == 0\n 46701: u64 [s1 + 0x150] = a1\n 46705: a0 = u64 [s1 + 0x120]\n 46709: a1 = u64 [s1 + 0x118]\n 46713: a2 = u64 [s1 + 0x108]\n 46717: ra = 2000, jump @2038\n      : @1776 [@dyn 1000] (gas: 55)\n 46723: a1 = u64 [s1 + 0xa0]\n 46727: a0 = 0 if a1 == 0\n 46729: u64 [s1 + 0x120] = a0\n 46733: ecalli 11 // 'ref_time_left'\n 46735: a1 = u64 [s1 + 0xe0]\n 46739: a3 = u64 [s1 + 0x150]\n 46743: a3 = 0 if a1 != 0\n 46745: a2 = u64 [s1 + 0x148]\n 46749: a2 = 0 if a1 != 0\n 46751: a5 = u64 [s1 + 0x120]\n 46755: a5 = 0 if a1 != 0\n 46757: a1 = reverse a2\n 46759: a2 = a1 >> 0x20\n 46762: a3 = reverse a3\n 46764: a4 = a3 << 0x20\n 46767: a2 = a2 | a4\n 46770: a1 = a1 << 0x20\n 46773: a4 = reverse a5\n 46775: a4 = a4 >> 0x20\n 46778: a1 = a1 | a4\n 46781: a3 = a3 >> 0x20\n 46784: a4 = u64 [s1 + 0x90]\n 46788: u32 [a4 + 0x10] = a3\n 46791: u64 [a4 + 0x8] = a2\n 46794: u64 [a4] = a1\n 46796: a2 = s1 + 0x1118\n 46800: a1 = u64 [s1 + 0xe8]\n 46804: a3 = a2 + 0x100\n 46808: u64 [a3 + 0x80] = a1\n 46812: a1 = u64 [s1 + 0xf0]\n 46816: u64 [a3 + 0x78] = a1\n 46819: a1 = u64 [s1 + 0xf8]\n 46823: u64 [a3 + 0x70] = a1\n 46826: a1 = u64 [s1 + 0x100]\n 46830: u64 [a3 + 0x68] = a1\n 46833: a1 = u64 [s1 + 0x70]\n 46836: a0 = a1 <u a0\n 46839: a1 = -a0\n 46841: u64 [a3 + 0xc0] = a1\n 46845: u64 [a3 + 0xb8] = a1\n 46849: u64 [a3 + 0xb0] = a1\n 46853: u64 [a3 + 0xa8] = a1\n 46857: u32 [a2 + 392] = 0\n 46861: a0 = a0 << 0x23\n 46864: a1 = u64 [s1 + 0x88]\n 46868: a0 = a0 | a1\n 46871: a1 = 0xffffffffffffffff\n 46874: a2 = 0xffffffffffffffff\n 46877: a3 = u64 [s1 + 0x98]\n 46881: a4 = u64 [s1 + 0x80]\n 46885: a5 = u64 [s1 + 0x78]\n 46888: ecalli 2 // 'call'\n 46890: u64 [s1 + 0x150] = a0\n 46894: a0 = s1 + 0x4e0\n 46898: ra = 2002, jump @1578\n      : @1777 [@dyn 1001] (gas: 2)\n 46904: a0 = u64 [s1 + 0x150]\n 46908: jump @1779 if a0 == 0\n      : @1778 (gas: 1)\n 46911: jump @1862\n      : @1779 (gas: 14)\n 46914: t0 = u64 [s1 + 0x178]\n 46918: t0 = t0 + 0x1\n 46921: a0 = t0 <u 0x1\n 46924: t1 = u64 [s1 + 0x170]\n 46928: t1 = t1 + a0\n 46931: a0 = t0 | t1\n 46934: a0 = a0 <u 0x1\n 46937: a1 = u64 [s1 + 0x160]\n 46941: a0 = a0 + a1\n 46944: a1 = a0 <u a1\n 46947: ra = u64 [s1 + 0x168]\n 46951: ra = ra + a1\n 46954: t2 = a0\n 46956: jump @1713\n      : @1780 (gas: 4)\n 46959: a0 = s1 + 0x7ff\n 46963: a0 = a0 + 0x701\n 46967: a1 = u64 [s1 + 0x8]\n 46970: ra = 2004, jump @21\n      : @1781 [@dyn 1002] (gas: 19)\n 46977: a2 = s1 + 0x7ff\n 46981: a2 = a2 + 0xf9\n 46985: a5 = a2 + 0x600\n 46989: a0 = u64 [a5 + 0x8]\n 46992: a3 = u64 [a5 + 0x20]\n 46995: a1 = u64 [a5 + 0x10]\n 46998: a4 = u64 [a5 + 0x18]\n 47001: a0 = a0 + 0x1\n 47004: a2 = a0 <u 0x1\n 47007: a1 = a1 + a2\n 47010: a2 = a0 | a1\n 47013: a2 = a2 <u 0x1\n 47016: a2 = a2 + a4\n 47019: a4 = a2 <u a4\n 47022: a3 = a3 + a4\n 47025: a4 = a1 | a3\n 47028: a5 = a0 | a2\n 47031: a4 = a4 | a5\n 47034: jump @1783 if a4 != 0\n      : @1782 (gas: 1)\n 47037: jump @1903\n      : @1783 (gas: 41)\n 47040: a4 = sp + 0xffffffffffffffe0\n 47043: a4 = a4 & 0xffffffffffffffe0\n 47046: u64 [s1 + 0x178] = a4\n 47050: sp = a4\n 47052: a4 = s1 + 0x1118\n 47056: a5 = a4 + 0x200\n 47060: u64 [a5 + 0x20] = a3\n 47063: u64 [a5 + 0x18] = a2\n 47066: u64 [a5 + 0x10] = a1\n 47069: u64 [a5 + 0x8] = a0\n 47072: a0 = s1 + 0x1000\n 47076: i32 a0 = a0 + 0x320\n 47080: a1 = s1 + 0x1000\n 47084: i32 a1 = a1 + 0x300\n 47088: ecalli 0 // 'block_hash'\n 47089: a0 = s1 + 0x1118\n 47093: a0 = u8 [a0 + 0x207]\n 47097: a0 = a0 & 0xf\n 47100: a1 = s1 + 0x7ff\n 47104: a1 = a1 + 0xf9\n 47108: u64 [a1 + 1440] = 0\n 47112: u64 [a1 + 1432] = 0\n 47116: u64 [a1 + 1424] = 0\n 47120: a2 = a1 + 0x500\n 47124: u64 [a2 + 0x88] = a0\n 47128: a0 = u64 [s1 + 0x88]\n 47132: u64 [a2 + 0xc0] = a0\n 47136: a0 = u64 [s1 + 0x80]\n 47140: u64 [a2 + 0xb8] = a0\n 47144: a0 = u64 [s1 + 0x78]\n 47147: u64 [a2 + 0xb0] = a0\n 47151: a4 = a1\n 47153: a0 = s1 + 0x7ff\n 47157: a0 = a0 + 0x6c1\n 47161: a1 = s1 + 0x7ff\n 47165: a1 = a1 + 0x6a1\n 47169: a2 = s1 + 0x7ff\n 47173: a2 = a2 + 0x681\n 47177: a3 = u64 [s1 + 0x70]\n 47180: u64 [a4 + 0x5a8] = a3\n 47184: ra = 2006, jump @1467\n      : @1784 [@dyn 1003] (gas: 24)\n 47190: a3 = s1 + 0x7ff\n 47194: a3 = a3 + 0xf9\n 47198: a0 = u64 [a3 + 0x600]\n 47202: u64 [s1 + 0x150] = a0\n 47206: a4 = a3 + 0x500\n 47210: a0 = u64 [a4 + 0xf8]\n 47214: u64 [s1 + 0x140] = a0\n 47218: a0 = u64 [a4 + 0xf0]\n 47222: u64 [s1 + 0x138] = a0\n 47226: a0 = u64 [a4 + 0xe8]\n 47230: u64 [s1 + 0x148] = a0\n 47234: a0 = u64 [a4 + 0xd8]\n 47238: a1 = u64 [a4 + 0xe0]\n 47242: a2 = u64 [a4 + 0xc8]\n 47246: a3 = u64 [a4 + 0xd0]\n 47250: a4 = u64 [s1 + 0x178]\n 47254: u64 [a4 + 0x10] = a0\n 47257: u64 [a4 + 0x18] = a1\n 47260: u64 [a4] = a2\n 47262: u64 [a4 + 0x8] = a3\n 47265: a1 = a4\n 47267: a0 = s1 + 0x7ff\n 47271: a0 = a0 + 0x661\n 47275: ra = 2008, jump @21\n      : @1785 [@dyn 1004] (gas: 38)\n 47282: a1 = s1 + 0x7ff\n 47286: a1 = a1 + 0xf9\n 47290: a2 = a1 + 0x500\n 47294: a0 = u64 [a2 + 0x68]\n 47297: u64 [s1 + 0x170] = a0\n 47301: a0 = u64 [a2 + 0x70]\n 47304: u64 [s1 + 0x178] = a0\n 47308: a0 = u64 [a2 + 0x78]\n 47311: u64 [s1 + 0x168] = a0\n 47315: a1 = u64 [a2 + 0x80]\n 47319: u64 [s1 + 0x160] = a1\n 47323: t2 = u64 [s1 + 0x148]\n 47327: a2 = t2 >> 0x3d\n 47330: a3 = u64 [s1 + 0x138]\n 47334: a5 = a3 << 0x3\n 47337: t1 = a5 | a2\n 47340: a3 = a3 >> 0x3d\n 47343: a5 = u64 [s1 + 0x140]\n 47347: a2 = a5 << 0x3\n 47350: t0 = a2 | a3\n 47353: a2 = a5 >> 0x3d\n 47356: a3 = u64 [s1 + 0x150]\n 47360: a3 = a3 << 0x3\n 47363: a2 = a2 | a3\n 47366: t2 = t2 << 0x3\n 47369: u64 [s1 + 0x150] = t2\n 47373: a3 = t1 >u 0\n 47375: a4 = t2 <u 0x100\n 47379: a5 = a4 ^ 0x1\n 47382: a5 = a3 if t1 != 0\n 47385: a4 = a2 >u 0\n 47387: a3 = t0 >u 0\n 47389: a3 = a4 if a2 != 0\n 47392: a2 = t0 | a2\n 47395: a5 = a3 if a2 != 0\n 47398: u64 [s1 + 0x140] = a5\n 47402: i32 a2 = t2 + 0xffffffffffffff80\n 47405: ra = 2010, jump @2038\n      : @1786 [@dyn 1005] (gas: 8)\n 47411: u64 [s1 + 0x130] = a0\n 47415: u64 [s1 + 0x138] = a1\n 47419: a0 = u64 [s1 + 0x148]\n 47423: i32 a2 = a0 << 0x3\n 47426: u64 [s1 + 0x148] = a2\n 47430: a0 = u64 [s1 + 0x170]\n 47434: a1 = u64 [s1 + 0x178]\n 47438: ra = 2012, jump @2038\n      : @1787 [@dyn 1006] (gas: 7)\n 47444: u64 [s1 + 0x120] = a0\n 47448: u64 [s1 + 0x128] = a1\n 47452: a1 = u64 [s1 + 0x150]\n 47456: i32 a2 = 0x80 - a1\n 47460: a0 = u64 [s1 + 0x168]\n 47464: a1 = u64 [s1 + 0x160]\n 47468: ra = 2014, jump @2043\n      : @1788 [@dyn 1007] (gas: 21)\n 47474: a3 = u64 [s1 + 0x120]\n 47478: a3 = a3 | a0\n 47481: a2 = u64 [s1 + 0x150]\n 47485: a4 = a2 <u 0x80\n 47489: u64 [s1 + 0x120] = a4\n 47493: a0 = u64 [s1 + 0x130]\n 47497: a3 = a0 if a4 == 0\n 47500: a0 = u64 [s1 + 0x170]\n 47504: a3 = a0 if a2 == 0\n 47507: u64 [s1 + 0x170] = a3\n 47511: a0 = u64 [s1 + 0x128]\n 47515: a1 = a1 | a0\n 47518: a0 = u64 [s1 + 0x138]\n 47522: a1 = a0 if a4 == 0\n 47525: a0 = u64 [s1 + 0x178]\n 47529: a1 = a0 if a2 == 0\n 47532: u64 [s1 + 0x178] = a1\n 47536: a0 = u64 [s1 + 0x168]\n 47540: a1 = u64 [s1 + 0x160]\n 47544: a2 = u64 [s1 + 0x148]\n 47548: ra = 2016, jump @2038\n      : @1789 [@dyn 1008] (gas: 32)\n 47554: a1 = u64 [s1 + 0x120]\n 47558: a0 = 0 if a1 == 0\n 47560: a1 = u64 [s1 + 0x178]\n 47564: a1 = a1 & 0xffffffffffffffff\n 47567: a3 = u64 [s1 + 0x170]\n 47571: a2 = a3 & 0xffffffffffffffff\n 47574: a3 = u64 [s1 + 0x158]\n 47578: a0 = a0 & a3\n 47581: a3 = u64 [s1 + 0x140]\n 47585: a2 = 0 if a3 != 0\n 47587: a1 = 0 if a3 != 0\n 47589: a0 = 0 if a3 != 0\n 47591: a4 = s1 + 0x7ff\n 47595: a4 = a4 + 0xf9\n 47599: u64 [a4 + 1344] = 0\n 47603: a3 = u64 [s1 + 0x10]\n 47606: a5 = a4 + 0x500\n 47610: u64 [a5 + 0x60] = a3\n 47613: a3 = u64 [s1 + 0x18]\n 47616: u64 [a5 + 0x58] = a3\n 47619: a3 = u64 [s1 + 0x20]\n 47622: u64 [a5 + 0x50] = a3\n 47625: a3 = u64 [s1 + 0x28]\n 47628: u64 [a5 + 0x48] = a3\n 47631: u64 [a5 + 0x38] = a0\n 47634: u64 [a5 + 0x30] = a1\n 47637: a0 = s1 + 0x7ff\n 47641: a0 = a0 + 0x641\n 47645: a1 = s1 + 0x7ff\n 47649: a1 = a1 + 0x621\n 47653: u64 [a5 + 0x28] = a2\n 47656: ra = 2018, jump @1567\n      : @1790 [@dyn 1009] (gas: 8)\n 47662: a0 = sp + 0xffffffffffffffe0\n 47665: a0 = a0 & 0xffffffffffffffe0\n 47668: u64 [s1 + 0x178] = a0\n 47672: sp = a0\n 47674: a0 = s1 + 0x7ff\n 47678: a0 = a0 + 0x601\n 47682: a1 = u64 [s1 + 0x48]\n 47685: ra = 2020, jump @21\n      : @1791 [@dyn 1010] (gas: 20)\n 47692: a0 = s1 + 0x7ff\n 47696: a0 = a0 + 0xf9\n 47700: a2 = a0 + 0x500\n 47704: a1 = u64 [a2 + 0x8]\n 47707: u64 [s1 + 0x170] = a1\n 47711: a4 = u64 [a2 + 0x10]\n 47714: u64 [s1 + 0x160] = a4\n 47718: a3 = u64 [a2 + 0x18]\n 47721: u64 [s1 + 0x168] = a3\n 47725: a0 = u64 [a2 + 0x20]\n 47728: a1 = a1 & 0xffffffffffffff00\n 47732: a1 = a1 | 0x1\n 47735: a2 = u64 [s1 + 0x178]\n 47739: u64 [a2 + 0x10] = a3\n 47742: u64 [a2 + 0x18] = a0\n 47745: u64 [a2 + 0x8] = a4\n 47748: u64 [a2] = a1\n 47750: a1 = a2\n 47752: a0 = u64 [s1 + 0x48]\n 47755: ra = 2022, jump @25\n      : @1792 [@dyn 1011] (gas: 25)\n 47762: a3 = u64 [s1 + 0x168]\n 47766: a0 = a3 << 0x38\n 47769: a2 = u64 [s1 + 0x160]\n 47773: a1 = a2 >> 0x8\n 47776: a0 = a0 | a1\n 47779: a1 = a2 << 0x38\n 47782: a2 = u64 [s1 + 0x170]\n 47786: a2 = a2 >> 0x8\n 47789: a1 = a1 | a2\n 47792: a2 = a3 >> 0x8\n 47795: a3 = a1 & 0xffffffffffffffff\n 47798: a0 = a0 & 0xffffffffffffffff\n 47801: a1 = u64 [s1 + 0x158]\n 47805: a1 = a1 & a2\n 47808: a2 = s1 + 0x7ff\n 47812: a2 = a2 + 0xf9\n 47816: u64 [a2 + 1280] = 0\n 47820: a4 = a2 + 0x400\n 47824: u64 [a4 + 0xf8] = a1\n 47828: u64 [a4 + 0xf0] = a0\n 47832: a1 = s1 + 0x7ff\n 47836: a1 = a1 + 0x5e1\n 47840: u64 [a4 + 0xe8] = a3\n 47844: a0 = 0\n 47846: ra = 2024, jump @19\n      : @1793 [@dyn 1012] (gas: 3)\n 47853: a1 = s1 + 0x7ff\n 47857: a1 = a1 + 0xf9\n 47861: t0 = 2026, jump @2031\n      : @1794 [@dyn 1013] (gas: 4)\n 47867: a1 = s1 + 0x7ff\n 47871: a1 = a1 + 0x5c1\n 47875: u64 [a2 + 1232] = 0\n 47879: ra = 2028, jump @19\n      : @1795 [@dyn 1014] (gas: 7)\n 47886: a0 = sp + 0xffffffffffffffe0\n 47889: a0 = a0 & 0xffffffffffffffe0\n 47892: u64 [s1 + 0x178] = a0\n 47896: sp = a0\n 47898: a2 = u64 [s1 + 0x38]\n 47901: a0 = i32 [a2]\n 47903: jump @1797 if a0 >u 63\n      : @1796 (gas: 2)\n 47907: u32 [a2 + 0] = 0x40\n 47910: fallthrough\n      : @1797 (gas: 12)\n 47911: a0 = sp + 0xffffffffffffffe0\n 47914: a0 = a0 & 0xffffffffffffffe0\n 47917: u64 [s1 + 0x170] = a0\n 47921: sp = a0\n 47923: i32 a2 = a0 + 0\n 47925: a1 = 0x40\n 47928: a0 = u64 [s1 + 0x40]\n 47931: ra = 0x7ee\n 47935: ecalli 9 // 'hash_keccak_256'\n 47937: a3 = u64 [s1 + 0x170]\n 47941: t0 = 0x7f0\n 47945: jump @1974\n      : @1798 [@dyn 1015] (gas: 2)\n 47948: a3 = u64 [s1 + 0x170]\n 47952: t0 = 2032, jump @1974\n      : @1799 [@dyn 1016] (gas: 8)\n 47958: a1 = u64 [s1 + 0x178]\n 47962: u64 [a1 + 0x18] = a3\n 47965: u64 [a1 + 0x10] = a2\n 47968: u64 [a1 + 0x8] = a4\n 47971: u64 [a1] = a0\n 47973: a0 = s1 + 0x7ff\n 47977: a0 = a0 + 0x5a1\n 47981: ra = 2034, jump @21\n      : @1800 [@dyn 1017] (gas: 16)\n 47988: a4 = s1 + 0x7ff\n 47992: a4 = a4 + 0xf9\n 47996: a5 = a4 + 0x400\n 48000: a2 = u64 [a5 + 0xa8]\n 48004: a0 = u64 [a5 + 0xb0]\n 48008: a1 = u64 [a5 + 0xb8]\n 48012: a3 = u64 [a5 + 0xc0]\n 48016: u64 [a5 + 0x80] = a3\n 48020: u64 [a5 + 0x78] = a1\n 48023: u64 [a5 + 0x70] = a0\n 48026: a0 = s1 + 0x7ff\n 48030: a0 = a0 + 0x581\n 48034: a1 = s1 + 0x7ff\n 48038: a1 = a1 + 0x561\n 48042: u64 [a5 + 0x68] = a2\n 48045: ra = 2036, jump @1511\n      : @1801 [@dyn 1018] (gas: 16)\n 48051: a3 = s1 + 0x7ff\n 48055: a3 = a3 + 0xf9\n 48059: a4 = a3 + 0x400\n 48063: a0 = u64 [a4 + 0xa0]\n 48067: a1 = u64 [a4 + 0x98]\n 48071: a2 = u64 [a4 + 0x90]\n 48075: a3 = u64 [a4 + 0x88]\n 48079: a4 = s1 + 0x1118\n 48083: a5 = a4 + 0x200\n 48087: u64 [a5 + 0x40] = a0\n 48090: u64 [a5 + 0x38] = a1\n 48093: u64 [a5 + 0x30] = a2\n 48096: u64 [a5 + 0x28] = a3\n 48099: a1 = s1 + 0x1340\n 48103: a0 = u64 [s1 + 0x178]\n 48107: ra = 2038, jump @25\n      : @1802 [@dyn 1019] (gas: 5)\n 48114: a1 = u64 [s1 + 0x70]\n 48117: a0 = a1 + 0x12\n 48120: a1 = a0 <u a1\n 48123: a3 = u64 [s1 + 0x78]\n 48126: t0 = 2040, jump @1990\n      : @1803 [@dyn 1020] (gas: 15)\n 48132: a1 = u64 [s1 + 0x80]\n 48136: a3 = a3 + a1\n 48139: a1 = a3 <u a1\n 48142: a4 = u64 [s1 + 0x88]\n 48146: a1 = a1 + a4\n 48149: a4 = s1 + 0x1118\n 48153: a5 = a4 + 0x200\n 48157: u64 [a5 + 0x60] = a1\n 48160: u64 [a5 + 0x58] = a3\n 48163: u64 [a5 + 0x50] = a2\n 48166: u64 [a5 + 0x48] = a0\n 48169: a0 = s1 + 0x7ff\n 48173: a0 = a0 + 0x541\n 48177: a1 = s1 + 0x1360\n 48181: ra = 2042, jump @21\n      : @1804 [@dyn 1021] (gas: 21)\n 48188: a0 = s1 + 0x7ff\n 48192: a0 = a0 + 0xf9\n 48196: a2 = a0 + 0x400\n 48200: a1 = u64 [a2 + 0x60]\n 48203: u64 [s1 + 0xd0] = a1\n 48207: a1 = u64 [a2 + 0x58]\n 48210: u64 [s1 + 0xc8] = a1\n 48214: a1 = u64 [a2 + 0x50]\n 48217: u64 [s1 + 0xc0] = a1\n 48221: a1 = u64 [a2 + 0x48]\n 48224: u64 [s1 + 0xb8] = a1\n 48228: a0 = s1 + 0x1118\n 48232: u64 [a0 + 640] = 0\n 48236: u64 [a0 + 632] = 0\n 48240: u64 [a0 + 624] = 0\n 48244: a1 = a0\n 48246: u64 [a1 + 616] = 0x1\n 48251: a0 = s1 + 0x7ff\n 48255: a0 = a0 + 0x521\n 48259: a1 = s1 + 0x1380\n 48263: ra = 2044, jump @21\n      : @1805 [@dyn 1022] (gas: 27)\n 48270: a4 = s1 + 0x7ff\n 48274: a4 = a4 + 0xf9\n 48278: a5 = a4 + 0x400\n 48282: a0 = u64 [a5 + 0x28]\n 48285: a1 = u64 [a5 + 0x30]\n 48288: a2 = u64 [a5 + 0x38]\n 48291: a3 = u64 [a5 + 0x40]\n 48294: u64 [a4 + 0x3e0] = a3\n 48298: u64 [a4 + 0x3d8] = a2\n 48302: u64 [a4 + 0x3d0] = a1\n 48306: u64 [a4 + 0x3c8] = a0\n 48310: a0 = u64 [s1 + 0xd0]\n 48314: u64 [a5] = a0\n 48316: a0 = u64 [s1 + 0xc8]\n 48320: a5 = a4 + 0x300\n 48324: u64 [a5 + 0xf8] = a0\n 48328: a0 = u64 [s1 + 0xc0]\n 48332: u64 [a5 + 0xf0] = a0\n 48336: a0 = s1 + 0x7ff\n 48340: a0 = a0 + 0x501\n 48344: a1 = s1 + 0x7ff\n 48348: a1 = a1 + 0x4e1\n 48352: a2 = s1 + 0x7ff\n 48356: a2 = a2 + 0x4c1\n 48360: a3 = u64 [s1 + 0xb8]\n 48364: u64 [a5 + 0xe8] = a3\n 48368: ra = 2046, jump @1394\n      : @1806 [@dyn 1023] (gas: 9)\n 48374: a0 = s1 + 0x7ff\n 48378: a0 = a0 + 0xf9\n 48382: t1 = u64 [a0 + 0x420]\n 48386: t2 = u64 [a0 + 0x418]\n 48390: ra = u64 [a0 + 0x410]\n 48394: u64 [s1 + 0xe8] = ra\n 48398: a2 = u64 [a0 + 0x408]\n 48402: u64 [s1 + 0xf0] = a2\n 48406: t0 = 2048, jump @1968\n      : @1807 [@dyn 1024] (gas: 12)\n 48412: t0 = a0 + 0xffffffffffffffff\n 48415: a0 = -a4\n 48417: a5 = -a5\n 48419: a2 = a5 - a2\n 48422: a1 = 0xf2 - a3\n 48426: u64 [s1 + 0x168] = a0\n 48430: a3 = a0 >u 0\n 48432: a0 = t0\n 48434: a5 = t0 >u 0\n 48436: a5 = a3 if t0 == 0\n 48439: u64 [s1 + 0x170] = a1\n 48443: t0 = 2050, jump @2017\n      : @1808 [@dyn 1025] (gas: 12)\n 48449: t0 = u64 [s1 + 0xf0]\n 48453: a4 = t0 | t2\n 48456: a1 = a1 | a4\n 48459: a1 = a1 <u 0x1\n 48462: a1 = a1 | a3\n 48465: u64 [s1 + 0xe0] = t1\n 48469: t1 = 0 if a1 != 0\n 48471: u64 [s1 + 0xd8] = t2\n 48475: t2 = 0 if a1 != 0\n 48477: ra = 0 if a1 != 0\n 48479: t0 = 0 if a1 != 0\n 48481: jump @1843 if a1 != 0\n      : @1809 (gas: 7)\n 48485: a1 = u64 [s1 + 0x170]\n 48489: a1 = a1 ^ 0xff\n 48493: a4 = u64 [s1 + 0x168]\n 48497: a1 = a1 | a4\n 48500: a3 = a2 | a0\n 48503: a1 = a1 | a3\n 48506: jump @1843 if a1 == 0\n      : @1810 (gas: 19)\n 48510: a5 = u64 [s1 + 0x170]\n 48514: a3 = a5 + 0x1\n 48517: u64 [s1 + 0x178] = a3\n 48521: a1 = a3 <u 0x1\n 48524: a1 = a1 + a2\n 48527: u64 [s1 + 0x150] = a1\n 48531: a1 = a1 | a3\n 48534: a1 = a1 <u 0x1\n 48537: a1 = a1 + a4\n 48540: u64 [s1 + 0x140] = a1\n 48544: a1 = a1 <u a4\n 48547: a0 = a0 + a1\n 48550: u64 [s1 + 0x148] = a0\n 48554: a1 = 0xff - a5\n 48558: u64 [s1 + 0x160] = a1\n 48562: a2 = 0x80 - a1\n 48566: a0 = u64 [s1 + 0xf0]\n 48570: a1 = u64 [s1 + 0xe8]\n 48574: ra = 2052, jump @2038\n      : @1811 [@dyn 1026] (gas: 6)\n 48580: u64 [s1 + 0x168] = a0\n 48584: u64 [s1 + 0x130] = a1\n 48588: a0 = u64 [s1 + 0xd8]\n 48592: a1 = u64 [s1 + 0xe0]\n 48596: a2 = u64 [s1 + 0x160]\n 48600: ra = 2054, jump @2043\n      : @1812 [@dyn 1027] (gas: 9)\n 48606: u64 [s1 + 0x138] = a0\n 48610: a0 = u64 [s1 + 0x130]\n 48614: a0 = a0 | a1\n 48617: u64 [s1 + 0x130] = a0\n 48621: a1 = u64 [s1 + 0x170]\n 48625: a2 = 0x7f - a1\n 48628: a0 = u64 [s1 + 0xf0]\n 48632: a1 = u64 [s1 + 0xe8]\n 48636: ra = 2056, jump @2043\n      : @1813 [@dyn 1028] (gas: 18)\n 48642: a2 = u64 [s1 + 0x160]\n 48646: a3 = a2 <u 0x80\n 48650: u64 [s1 + 0x170] = a3\n 48654: a4 = u64 [s1 + 0x130]\n 48658: a1 = a4 if a3 != 0\n 48661: a4 = u64 [s1 + 0xe0]\n 48665: a1 = a4 if a2 == 0\n 48668: u64 [s1 + 0x128] = a1\n 48672: a1 = u64 [s1 + 0x168]\n 48676: a4 = u64 [s1 + 0x138]\n 48680: a1 = a1 | a4\n 48683: a1 = a0 if a3 == 0\n 48686: a0 = u64 [s1 + 0xd8]\n 48690: a1 = a0 if a2 == 0\n 48693: u64 [s1 + 0x168] = a1\n 48697: a0 = u64 [s1 + 0xf0]\n 48701: a1 = u64 [s1 + 0xe8]\n 48705: ra = 2058, jump @2043\n      : @1814 [@dyn 1029] (gas: 14)\n 48711: a4 = u64 [s1 + 0x140]\n 48715: a5 = u64 [s1 + 0x148]\n 48719: a2 = u64 [s1 + 0x150]\n 48723: a5 = a5 | a2\n 48726: a3 = u64 [s1 + 0x178]\n 48730: a3 = a3 | a4\n 48733: a3 = a3 | a5\n 48736: a4 = s1 + 0x100\n 48740: a2 = u64 [a4 + 0x70]\n 48743: a1 = 0 if a2 == 0\n 48745: u64 [a4 + 0x60] = a1\n 48748: a0 = 0 if a2 == 0\n 48750: u64 [a4 + 0x70] = a0\n 48753: jump @1841 if a3 == 0\n      : @1815 (gas: 6)\n 48757: u64 [s1 + 264] = 0x2710\n 48763: a0 = u64 [s1 + 0x178]\n 48767: a2 = a0 + 0xffffffffffffff80\n 48770: a0 = u64 [s1 + 0xd8]\n 48774: a1 = u64 [s1 + 0xe0]\n 48778: ra = 2060, jump @2038\n      : @1816 [@dyn 1030] (gas: 6)\n 48784: u64 [s1 + 0x130] = a0\n 48788: u64 [s1 + 0x138] = a1\n 48792: a0 = u64 [s1 + 0xf0]\n 48796: a1 = u64 [s1 + 0xe8]\n 48800: a2 = u64 [s1 + 0x178]\n 48804: ra = 2062, jump @2038\n      : @1817 [@dyn 1031] (gas: 7)\n 48810: u64 [s1 + 0x118] = a0\n 48814: u64 [s1 + 0x120] = a1\n 48818: a1 = u64 [s1 + 0x178]\n 48822: a2 = 0x80 - a1\n 48826: a0 = u64 [s1 + 0xd8]\n 48830: a1 = u64 [s1 + 0xe0]\n 48834: ra = 2064, jump @2043\n      : @1818 [@dyn 1032] (gas: 20)\n 48840: a2 = u64 [s1 + 0x120]\n 48844: a1 = a1 | a2\n 48847: a2 = u64 [s1 + 0x178]\n 48851: a3 = a2 <u 0x80\n 48855: u64 [s1 + 0x120] = a3\n 48859: a4 = u64 [s1 + 0x138]\n 48863: a1 = a4 if a3 == 0\n 48866: a4 = u64 [s1 + 0xe8]\n 48870: a1 = a4 if a2 == 0\n 48873: u64 [s1 + 0x138] = a1\n 48877: a1 = u64 [s1 + 0x118]\n 48881: a0 = a0 | a1\n 48884: a1 = u64 [s1 + 0x130]\n 48888: a0 = a1 if a3 == 0\n 48891: a1 = u64 [s1 + 0xf0]\n 48895: a0 = a1 if a2 == 0\n 48898: u64 [s1 + 0x130] = a0\n 48902: a0 = u64 [s1 + 0xd8]\n 48906: a1 = u64 [s1 + 0xe0]\n 48910: ra = 2066, jump @2038\n      : @1819 [@dyn 1033] (gas: 13)\n 48916: a5 = 0\n 48918: a3 = s1 + 0x100\n 48922: a2 = u64 [a3 + 0x20]\n 48925: a1 = 0 if a2 == 0\n 48927: a0 = 0 if a2 == 0\n 48929: a4 = u64 [a3 + 0x8]\n 48932: a2 = a4 + 0xffffffffffffffff\n 48935: u64 [a3] = a2\n 48937: a2 = a4 >u 0\n 48939: a2 = a2 + 0xffffffffffffffff\n 48942: u64 [s1 + 0xf8] = a2\n 48946: ra = u64 [s1 + 0x128]\n 48950: fallthrough\n      : @1820 (gas: 92)\n 48951: u64 [s1 + 0x118] = a1\n 48955: u64 [s1 + 0x120] = a5\n 48959: u64 [s1 + 272] = 0\n 48963: a1 = u64 [s1 + 0x130]\n 48967: a2 = a1 >> 0x3f\n 48970: a5 = u64 [s1 + 0x138]\n 48974: a3 = a5 << 0x1\n 48977: t1 = a3 | a2\n 48980: a2 = a1 << 0x1\n 48983: a4 = ra >> 0x3f\n 48986: a4 = a4 | a2\n 48989: u64 [s1 + 0x128] = a4\n 48993: a3 = u64 [s1 + 0xf8]\n 48997: a1 = a3 ^ t1\n 49000: u64 [s1 + 0x130] = a1\n 49004: a1 = a3 <u t1\n 49007: a2 = u64 [s1 + 0x100]\n 49011: t0 = a2 <u a4\n 49014: a2 = u64 [s1 + 0x130]\n 49018: t0 = a1 if a2 != 0\n 49021: a1 = u64 [s1 + 0x118]\n 49025: a1 = a1 << 0x1\n 49028: a4 = a0 >> 0x3f\n 49031: a1 = a1 | a4\n 49034: u64 [s1 + 0x118] = a1\n 49038: a4 = a5 >> 0x3f\n 49041: a0 = a0 << 0x1\n 49044: a4 = a4 | a0\n 49047: a0 = ra << 0x1\n 49050: a1 = u64 [s1 + 0x168]\n 49054: a5 = a1 >> 0x3f\n 49057: a0 = a0 | a5\n 49060: u64 [s1 + 0x138] = a0\n 49064: a5 = a1 << 0x1\n 49067: a0 = u64 [s1 + 0x160]\n 49071: a1 = a0 >> 0x3f\n 49074: a1 = a1 | a5\n 49077: a5 = a0 << 0x1\n 49080: a0 = u64 [s1 + 0x170]\n 49084: ra = a0 >> 0x3f\n 49087: a5 = a5 | ra\n 49090: a0 = a0 << 0x1\n 49093: a2 = u64 [s1 + 0x120]\n 49097: a0 = a0 | a2\n 49100: u64 [s1 + 0x170] = a0\n 49104: a0 = a5 | 0\n 49106: u64 [s1 + 0x160] = a0\n 49110: a0 = a1 | 0\n 49112: u64 [s1 + 0x168] = a0\n 49116: a0 = u64 [s1 + 0x138]\n 49120: ra = a0 | 0\n 49122: a0 = a3 - a4\n 49125: a0 = a0 <u t0\n 49128: a1 = a3 <u a4\n 49131: t2 = u64 [s1 + 0x118]\n 49135: a5 = a3 - t2\n 49138: a5 = a5 - a1\n 49141: a5 = a5 - a0\n 49144: t0 = a5 >>a 0x3f\n 49147: a0 = u64 [s1 + 0x108]\n 49151: a0 = t0 & a0\n 49154: a2 = u64 [s1 + 0x128]\n 49158: a1 = a2 - a0\n 49161: u64 [s1 + 0x130] = a1\n 49165: a1 = a2 <u a0\n 49168: a0 = t1 - a1\n 49171: u64 [s1 + 0x138] = a0\n 49175: a1 = 0 if t1 != 0\n 49177: a0 = a4 - a1\n 49180: a1 = a4 <u a1\n 49183: a1 = t2 - a1\n 49186: a3 = u64 [s1 + 0x178]\n 49190: a5 = u64 [s1 + 0x150]\n 49194: a2 = a3 | a5\n 49197: a2 = a2 <u 0x1\n 49200: a4 = u64 [s1 + 0x140]\n 49204: t1 = a4 <u a2\n 49207: a4 = a4 - a2\n 49210: a2 = a3 <u 0x1\n 49213: a5 = a5 - a2\n 49216: a2 = u64 [s1 + 0x148]\n 49220: a2 = a2 - t1\n 49223: a3 = a3 + 0xffffffffffffffff\n 49226: u64 [s1 + 0x150] = a5\n 49230: u64 [s1 + 0x148] = a2\n 49234: a2 = a2 | a5\n 49237: u64 [s1 + 0x178] = a3\n 49241: a3 = a3 | a4\n 49244: a2 = a2 | a3\n 49247: a5 = t0 & 0x1\n 49250: u64 [s1 + 0x140] = a4\n 49254: jump @1820 if a2 != 0\n      : @1821 (gas: 1)\n 49258: jump @1842\n      : @1822 (gas: 5)\n 49261: a1 = u64 [s1 + 0x138]\n 49265: a0 = a1 + 0x15\n 49268: a1 = a0 <u a1\n 49271: a3 = u64 [s1 + 0x140]\n 49275: t0 = 2068, jump @1990\n      : @1823 [@dyn 1034] (gas: 13)\n 49281: a1 = u64 [s1 + 0x128]\n 49285: a3 = a3 + a1\n 49288: a1 = a3 <u a1\n 49291: a4 = u64 [s1 + 0x130]\n 49295: a1 = a1 + a4\n 49298: u64 [a5] = a0\n 49300: u64 [a5 + 0x8] = a2\n 49303: u64 [a5 + 0x10] = a3\n 49306: u64 [a5 + 0x18] = a1\n 49309: a0 = s1 + 0x7ff\n 49313: a0 = a0 + 0x181\n 49317: a1 = a5\n 49319: ra = 2070, jump @21\n      : @1824 [@dyn 1035] (gas: 17)\n 49326: a3 = s1 + 0x7ff\n 49330: a3 = a3 + 0xf9\n 49334: a0 = u64 [a3 + 0x88]\n 49338: a1 = u64 [a3 + 0x90]\n 49342: a2 = u64 [a3 + 0xa0]\n 49346: a3 = u64 [a3 + 0x98]\n 49350: a0 = a0 & 0xffffffffffffff00\n 49354: a0 = a0 | 0x1\n 49357: a4 = s1 + 0x1118\n 49361: a5 = a4 + 0x100\n 49365: u64 [a5 + 0xe0] = a2\n 49369: u64 [a5 + 0xd8] = a3\n 49373: u64 [a5 + 0xd0] = a1\n 49377: u64 [a5 + 0xc8] = a0\n 49381: a1 = s1 + 0x12e0\n 49385: a0 = u64 [s1 + 0x148]\n 49389: ra = 2072, jump @25\n      : @1825 [@dyn 1036] (gas: 4)\n 49396: a0 = s1 + 0x7ff\n 49400: a0 = a0 + 0x161\n 49404: a1 = 0x40\n 49407: ra = 2074, jump @17\n      : @1826 [@dyn 1037] (gas: 18)\n 49414: a2 = s1 + 0x7ff\n 49418: a2 = a2 + 0xf9\n 49422: a3 = u64 [a2 + 0x80]\n 49426: a4 = u64 [a2 + 0x78]\n 49429: a1 = u64 [a2 + 0x70]\n 49432: a0 = u64 [a2 + 0x68]\n 49435: a5 = s1 + 0x100\n 49439: u64 [a5 + 0x68] = a1\n 49442: u64 [a5 + 0x58] = a3\n 49445: a3 = a3 | a1\n 49448: a1 = a0 | a4\n 49451: a1 = a1 | a3\n 49454: a1 = a1 >> 0x20\n 49457: u64 [a5 + 0x60] = a4\n 49460: a3 = a3 | a4\n 49463: a3 = a3 << 0x20\n 49466: a1 = a1 | a3\n 49469: jump @1899 if a1 != 0\n      : @1827 (gas: 8)\n 49473: u64 [a2 + 96] = 0\n 49476: u64 [a2 + 88] = 0\n 49479: u64 [a2 + 80] = 0\n 49482: a1 = s1 + 0x7ff\n 49486: a1 = a1 + 0x141\n 49490: u64 [a2 + 72] = 0x20\n 49494: u64 [s1 + 0x170] = a0\n 49498: ra = 2076, jump @19\n      : @1828 [@dyn 1038] (gas: 4)\n 49505: a0 = s1 + 0x7ff\n 49509: a0 = a0 + 0x121\n 49513: a1 = u64 [s1 + 0x48]\n 49516: ra = 2078, jump @17\n      : @1829 [@dyn 1039] (gas: 14)\n 49523: a4 = s1 + 0x100\n 49527: a1 = u64 [a4 + 0x70]\n 49530: a0 = u64 [a4 + 0x58]\n 49533: a3 = u64 [a4 + 0x60]\n 49536: a3 = a3 | a0\n 49539: a0 = 0x100000000\n 49549: u64 [a4 + 0x30] = a0\n 49552: a0 = 0xffffffe0\n 49562: a0 = a1 <u a0\n 49565: a2 = u64 [a4 + 0x68]\n 49568: a0 = 0 if a2 != 0\n 49570: u64 [a4 + 0x38] = a3\n 49573: a0 = 0 if a3 != 0\n 49575: jump @1899 if a0 == 0\n      : @1830 (gas: 18)\n 49579: a4 = s1 + 0x7ff\n 49583: a4 = a4 + 0xf9\n 49587: t0 = u64 [a4 + 0x40]\n 49590: a3 = u64 [a4 + 0x38]\n 49593: a5 = u64 [a4 + 0x30]\n 49596: a2 = u64 [a4 + 0x28]\n 49599: i32 a0 = a1 + 0x20\n 49602: u64 [s1 + 0x178] = a2\n 49606: u64 [a4 + 0x8] = a2\n 49609: u64 [s1 + 0x140] = a5\n 49613: u64 [a4 + 0x10] = a5\n 49616: u64 [s1 + 0x150] = a3\n 49620: u64 [a4 + 0x18] = a3\n 49623: a1 = s1 + 0x7ff\n 49627: a1 = a1 + 0x101\n 49631: u64 [s1 + 0x148] = t0\n 49635: u64 [a4 + 0x20] = t0\n 49638: ra = 2080, jump @19\n      : @1831 [@dyn 1040] (gas: 10)\n 49645: a3 = s1 + 0x100\n 49649: a2 = u64 [a3 + 0x70]\n 49652: a0 = u64 [a3 + 0x30]\n 49655: a0 = a0 + 0xffffffffffffffc0\n 49658: a0 = a2 <u a0\n 49661: a1 = u64 [a3 + 0x68]\n 49664: a0 = 0 if a1 != 0\n 49666: a1 = u64 [a3 + 0x38]\n 49669: a0 = 0 if a1 != 0\n 49671: jump @1899 if a0 == 0\n      : @1832 (gas: 13)\n 49675: a5 = s1 + 0x100\n 49679: a0 = u64 [a5 + 0x78]\n 49682: a3 = u64 [a5 + 0x50]\n 49685: a0 = a0 | a3\n 49688: a1 = u64 [a5 + 0x48]\n 49691: a4 = u64 [a5 + 0x40]\n 49694: a1 = a1 | a4\n 49697: a0 = a0 | a1\n 49700: a0 = a0 >> 0x20\n 49703: a1 = a1 | a3\n 49706: a1 = a1 << 0x20\n 49709: a0 = a0 | a1\n 49712: jump @1899 if a0 != 0\n      : @1833 (gas: 3)\n 49716: i32 a0 = a2 + 0x40\n 49719: a1 = u64 [s1 + 0x178]\n 49723: ra = 2082, jump @32\n      : @1834 [@dyn 1041] (gas: 4)\n 49730: u64 [s1 + 0x138] = a0\n 49734: a0 = u64 [s1 + 0x40]\n 49737: a1 = u64 [s1 + 0x178]\n 49741: ra = 2084, jump @32\n      : @1835 [@dyn 1042] (gas: 4)\n 49748: a1 = a0\n 49750: a0 = u64 [s1 + 0x138]\n 49754: a2 = u64 [s1 + 0x178]\n 49758: ra = 2086, jump @0\n      : @1836 [@dyn 1043] (gas: 29)\n 49765: a1 = u64 [s1 + 0x178]\n 49769: a0 = u64 [s1 + 0x170]\n 49773: a0 = a0 + a1\n 49776: a2 = a0 <u a1\n 49779: a1 = u64 [s1 + 0x168]\n 49783: a4 = u64 [s1 + 0x140]\n 49787: a1 = a1 + a4\n 49790: a1 = a1 + a2\n 49793: a3 = a1 ^ a4\n 49796: a4 = a1 <u a4\n 49799: a4 = a2 if a3 == 0\n 49802: a2 = u64 [s1 + 0x158]\n 49806: a3 = u64 [s1 + 0x148]\n 49810: a2 = a2 + a3\n 49813: a3 = u64 [s1 + 0x160]\n 49817: a5 = u64 [s1 + 0x150]\n 49821: a3 = a3 + a5\n 49824: a4 = a4 + a3\n 49827: a5 = a3 <u a5\n 49830: a3 = a4 <u a3\n 49833: a2 = a2 + a5\n 49836: a2 = a2 + a3\n 49839: a2 = a2 | a4\n 49842: a3 = 0xffffffc0\n 49852: u64 [s1 + 0x168] = a3\n 49856: a3 = a0 <u a3\n 49859: a3 = 0 if a1 != 0\n 49861: a3 = 0 if a2 != 0\n 49863: jump @1899 if a3 == 0\n      : @1837 (gas: 12)\n 49867: i32 a0 = a0 + 0x40\n 49870: a1 = s1 + 0x7ff\n 49874: a1 = a1 + 0xf9\n 49878: u64 [a1 + 0] = 0\n 49880: u64 [a1 + 4294967288] = 0\n 49883: a1 = s1 + 0x1000\n 49887: u64 [a1 + 4294965480] = 0\n 49891: a1 = s1 + 0x7ff\n 49895: a1 = a1 + 0xe1\n 49899: a2 = s1 + 0x1000\n 49903: u64 [a2 + 4294965472] = 0\n 49907: ra = 2088, jump @19\n      : @1838 [@dyn 1044] (gas: 6)\n 49914: a0 = u64 [s1 + 0x178]\n 49918: a0 = a0 + 0x1f\n 49921: a1 = 0x1ffffffe0\n 49931: a0 = a0 & a1\n 49934: a1 = u64 [s1 + 0x168]\n 49938: jump @1899 if a0 >=u a1\n      : @1839 (gas: 31)\n 49942: i32 a1 = a0 + 0x40\n 49945: a0 = u64 [s1 + 0x50]\n 49948: a2 = s1 + 0x1000\n 49952: u64 [a2 + 0xfffffffffffff8a0] = a0\n 49956: a0 = u64 [s1 + 0x58]\n 49959: a2 = s1 + 0x1000\n 49963: u64 [a2 + 0xfffffffffffff8a8] = a0\n 49967: a0 = u64 [0x201f8]\n 49972: a2 = u64 [0x20200]\n 49977: a3 = u64 [0x20208]\n 49982: a4 = u64 [0x20210]\n 49987: a5 = s1 + 0x1000\n 49991: u64 [a5 + 0xfffffffffffff8d8] = a0\n 49995: a0 = s1 + 0x1000\n 49999: u64 [a0 + 0xfffffffffffff8d0] = a2\n 50003: a0 = s1 + 0x1000\n 50007: u64 [a0 + 0xfffffffffffff8c8] = a3\n 50011: a0 = s1 + 0x1000\n 50015: u64 [a0 + 0xfffffffffffff8c0] = a4\n 50019: a0 = u64 [s1 + 0x60]\n 50022: a2 = s1 + 0x1000\n 50026: u64 [a2 + 0xfffffffffffff8b0] = a0\n 50030: a2 = s1 + 0x7ff\n 50034: a2 = a2 + 0xc1\n 50038: a3 = s1 + 0x7ff\n 50042: a3 = a3 + 0xa1\n 50046: a0 = u64 [s1 + 0x68]\n 50049: a4 = s1 + 0x1000\n 50053: u64 [a4 + 0xfffffffffffff8b8] = a0\n 50057: a0 = u64 [s1 + 0x170]\n 50061: ra = 2090, jump @26\n      : @1840 [@dyn 1045] (gas: 1)\n 50068: jump @1860\n      : @1841 (gas: 4)\n 50071: a5 = 0\n 50073: u64 [s1 + 272] = 0\n 50077: ra = u64 [s1 + 0x128]\n 50081: fallthrough\n      : @1842 (gas: 19)\n 50082: a2 = u64 [s1 + 0x168]\n 50086: a0 = a2 >> 0x3f\n 50089: a1 = ra << 0x1\n 50092: a0 = a0 | a1\n 50095: a3 = u64 [s1 + 0x160]\n 50099: a1 = a3 >> 0x3f\n 50102: a2 = a2 << 0x1\n 50105: a1 = a1 | a2\n 50108: a4 = u64 [s1 + 0x170]\n 50112: a2 = a4 >> 0x3f\n 50115: a3 = a3 << 0x1\n 50118: a4 = a4 << 0x1\n 50121: t0 = a5 | a4\n 50124: a4 = u64 [s1 + 0x110]\n 50128: a2 = a2 | a4\n 50131: ra = a2 | a3\n 50134: t2 = a4 | a1\n 50137: t1 = a4 | a0\n 50140: fallthrough\n      : @1843 (gas: 27)\n 50141: u64 [s1 + 0x138] = t1\n 50145: u64 [s1 + 0x140] = t2\n 50149: u64 [s1 + 0x148] = ra\n 50153: u64 [s1 + 0x150] = t0\n 50157: a1 = s1 + 0x7ff\n 50161: a1 = a1 + 0xf9\n 50165: u64 [a1 + 0x368] = t0\n 50169: a0 = u64 [s1 + 0xb8]\n 50173: a2 = a1 + 0x300\n 50177: u64 [a2 + 0x88] = a0\n 50181: u64 [a1 + 0x370] = ra\n 50185: a0 = u64 [s1 + 0xc0]\n 50189: u64 [a2 + 0x90] = a0\n 50193: u64 [a1 + 0x378] = t2\n 50197: a0 = u64 [s1 + 0xc8]\n 50201: u64 [a2 + 0x98] = a0\n 50205: u64 [a1 + 0x380] = t1\n 50209: a4 = a1\n 50211: a0 = s1 + 0x7ff\n 50215: a0 = a0 + 0x4a1\n 50219: a1 = s1 + 0x7ff\n 50223: a1 = a1 + 0x481\n 50227: a2 = s1 + 0x7ff\n 50231: a2 = a2 + 0x461\n 50235: a3 = u64 [s1 + 0xd0]\n 50239: u64 [a4 + 0x3a0] = a3\n 50243: ra = 2092, jump @1570\n      : @1844 [@dyn 1046] (gas: 17)\n 50249: a4 = s1 + 0x7ff\n 50253: a4 = a4 + 0xf9\n 50257: a5 = a4 + 0x300\n 50261: a0 = u64 [a5 + 0xc0]\n 50265: u64 [s1 + 0x178] = a0\n 50269: a0 = u64 [a5 + 0xb8]\n 50273: u64 [s1 + 0x170] = a0\n 50277: a2 = u64 [s1 + 0xe8]\n 50281: a0 = a2 >> 0x4\n 50284: a3 = u64 [s1 + 0xd8]\n 50288: a1 = a3 << 0x3c\n 50291: a0 = a0 | a1\n 50294: a1 = u64 [a5 + 0xb0]\n 50298: a5 = a4\n 50300: u64 [s1 + 0x168] = a1\n 50304: a1 = u64 [s1 + 0xf0]\n 50308: t0 = 2094, jump @2010\n      : @1845 [@dyn 1047] (gas: 2)\n 50314: a3 = u64 [s1 + 0xe0]\n 50318: t0 = 2096, jump @2035\n      : @1846 [@dyn 1048] (gas: 5)\n 50324: a2 = u64 [a5 + 0x3a8]\n 50328: u64 [s1 + 0x160] = a2\n 50332: a0 = a0 | a3\n 50335: a4 = a1 if a0 == 0\n 50338: jump @1848 if a4 != 0\n      : @1847 (gas: 9)\n 50341: a0 = 0x30270\n 50346: a0 = a0 << 0x20\n 50349: a0 = a0 >> 0x20\n 50352: u64 [s1 + 0x148] = a0\n 50356: a0 = u64 [s1 + 0x30]\n 50359: a0 = a0 << 0x20\n 50362: a0 = a0 >> 0x20\n 50365: u64 [s1 + 0x150] = a0\n 50369: jump @1851\n      : @1848 (gas: 9)\n 50372: a1 = s1 + 0x1118\n 50376: u64 [a1 + 672] = 0\n 50380: u64 [a1 + 664] = 0\n 50384: u64 [a1 + 656] = 0\n 50388: u64 [a1 + 648] = 0x8\n 50393: a0 = s1 + 0x7ff\n 50397: a0 = a0 + 0x441\n 50401: a1 = s1 + 0x13a0\n 50405: ra = 2098, jump @21\n      : @1849 [@dyn 1049] (gas: 70)\n 50412: a0 = s1 + 0x7ff\n 50416: a0 = a0 + 0xf9\n 50420: a2 = a0 + 0x300\n 50424: a1 = u64 [a2 + 0x48]\n 50427: u64 [s1 + 0x130] = a1\n 50431: a1 = u64 [a2 + 0x58]\n 50434: u64 [s1 + 0x128] = a1\n 50438: a0 = u64 [a2 + 0x50]\n 50441: u64 [s1 + 0x120] = a0\n 50445: ecalli 11 // 'ref_time_left'\n 50447: a1 = u64 [s1 + 0x120]\n 50451: a1 = reverse a1\n 50453: a2 = a1 << 0x20\n 50456: a3 = u64 [s1 + 0x128]\n 50460: a3 = reverse a3\n 50462: a3 = a3 >> 0x20\n 50465: a2 = a2 | a3\n 50468: a1 = a1 >> 0x20\n 50471: a3 = u64 [s1 + 0x130]\n 50475: a3 = reverse a3\n 50477: a4 = 0x30270\n 50482: a5 = a3 << 0x20\n 50485: a1 = a1 | a5\n 50488: a3 = a3 >> 0x20\n 50491: u32 [0x30280] = a3\n 50496: u64 [0x30278] = a1\n 50501: u64 [0x30270] = a2\n 50506: a1 = u64 [s1 + 0x138]\n 50510: a2 = s1 + 0x1118\n 50514: a3 = a2 + 0x200\n 50518: u64 [a3 + 0xc0] = a1\n 50522: a1 = u64 [s1 + 0x140]\n 50526: u64 [a3 + 0xb8] = a1\n 50530: a1 = u64 [s1 + 0x148]\n 50534: u64 [a3 + 0xb0] = a1\n 50538: a1 = u64 [s1 + 0x150]\n 50542: u64 [a3 + 0xa8] = a1\n 50546: u32 [a2 + 712] = 0\n 50550: a0 = a0 >u 0x8fc\n 50554: a1 = -a0\n 50556: u64 [a2 + 0x300] = a1\n 50560: u64 [a3 + 0xf8] = a1\n 50564: u64 [a3 + 0xf0] = a1\n 50568: u64 [a3 + 0xe8] = a1\n 50572: a4 = a4 << 0x20\n 50575: a4 = a4 >> 0x20\n 50578: a0 = a0 << 0x23\n 50581: u64 [s1 + 0x148] = a4\n 50585: a0 = a0 | a4\n 50588: a1 = s1 + 0x13c0\n 50592: a1 = a1 << 0x20\n 50595: a1 = a1 >> 0x20\n 50598: a2 = s1 + 0x1400\n 50602: a2 = a2 << 0x20\n 50605: a3 = a2 | a1\n 50608: a1 = u64 [s1 + 0x30]\n 50611: a1 = a1 << 0x20\n 50614: a4 = a1 >> 0x20\n 50617: a1 = s1 + 0x13e0\n 50621: a1 = a1 << 0x20\n 50624: a5 = a1 | a4\n 50627: a1 = 0xffffffffffffffff\n 50630: a2 = 0xffffffffffffffff\n 50633: u64 [s1 + 0x150] = a4\n 50637: ecalli 2 // 'call'\n 50639: a0 = a0 <u 0x1\n 50642: u64 [s1 + 0x140] = a0\n 50646: a0 = s1 + 0x7ff\n 50650: a0 = a0 + 0x421\n 50654: ra = 2100, jump @1578\n      : @1850 [@dyn 1050] (gas: 13)\n 50660: a0 = s1 + 0x7ff\n 50664: a0 = a0 + 0xf9\n 50668: u64 [a0 + 800] = 0\n 50672: u64 [a0 + 792] = 0\n 50676: a1 = u64 [s1 + 0x140]\n 50680: u64 [a0 + 0x308] = a1\n 50684: a1 = a0\n 50686: a0 = s1 + 0x7ff\n 50690: a0 = a0 + 0x401\n 50694: u64 [a1 + 784] = 0\n 50698: ra = 0x836\n 50702: t0 = 0x6d0\n 50706: jump @1953\n      : @1851 [@dyn 1051] (gas: 4)\n 50709: a0 = s1 + 0x7ff\n 50713: a0 = a0 + 0x3e1\n 50717: a1 = u64 [s1 + 0x48]\n 50720: ra = 2104, jump @21\n      : @1852 [@dyn 1052] (gas: 71)\n 50727: a2 = s1 + 0x7ff\n 50731: a2 = a2 + 0xf9\n 50735: a4 = a2 + 0x200\n 50739: a0 = u64 [a4 + 0xf0]\n 50743: a1 = u64 [a4 + 0xe8]\n 50747: a3 = u64 [a4 + 0xf8]\n 50751: u64 [s1 + 0x140] = a3\n 50755: a2 = a0 << 0x38\n 50758: a1 = a1 >> 0x8\n 50761: a1 = a1 | a2\n 50764: u64 [s1 + 0x138] = a1\n 50768: a1 = a3 << 0x38\n 50771: a0 = a0 >> 0x8\n 50774: a0 = a0 | a1\n 50777: u64 [s1 + 0x130] = a0\n 50781: ecalli 11 // 'ref_time_left'\n 50783: a1 = u64 [s1 + 0x130]\n 50787: a1 = reverse a1\n 50789: a2 = a1 >> 0x20\n 50792: a3 = u64 [s1 + 0x138]\n 50796: a3 = reverse a3\n 50798: a4 = a3 << 0x20\n 50801: a2 = a2 | a4\n 50804: a1 = a1 << 0x20\n 50807: a4 = u64 [s1 + 0x140]\n 50811: a4 = reverse a4\n 50813: a4 = a4 << 0x8\n 50816: a4 = a4 >> 0x20\n 50819: a1 = a1 | a4\n 50822: a3 = a3 >> 0x20\n 50825: u32 [0x30280] = a3\n 50830: u64 [0x30278] = a2\n 50835: u64 [0x30270] = a1\n 50840: a2 = s1 + 0x1118\n 50844: a1 = u64 [s1 + 0x178]\n 50848: a3 = a2 + 0x300\n 50852: u64 [a3 + 0x20] = a1\n 50855: a1 = u64 [s1 + 0x170]\n 50859: u64 [a3 + 0x18] = a1\n 50862: a1 = u64 [s1 + 0x168]\n 50866: u64 [a3 + 0x10] = a1\n 50869: a1 = u64 [s1 + 0x160]\n 50873: u64 [a3 + 0x8] = a1\n 50876: u32 [a2 + 808] = 0\n 50880: a0 = a0 >u 0x8fc\n 50884: a1 = -a0\n 50886: u64 [a3 + 0x60] = a1\n 50889: u64 [a3 + 0x58] = a1\n 50892: u64 [a3 + 0x50] = a1\n 50895: u64 [a3 + 0x48] = a1\n 50898: a0 = a0 << 0x23\n 50901: a1 = u64 [s1 + 0x148]\n 50905: a0 = a0 | a1\n 50908: a1 = s1 + 0x1420\n 50912: a1 = a1 << 0x20\n 50915: a1 = a1 >> 0x20\n 50918: a2 = s1 + 0x1460\n 50922: a2 = a2 << 0x20\n 50925: a3 = a2 | a1\n 50928: a1 = s1 + 0x1440\n 50932: a1 = a1 << 0x20\n 50935: a4 = u64 [s1 + 0x150]\n 50939: a5 = a1 | a4\n 50942: a1 = 0xffffffffffffffff\n 50945: a2 = 0xffffffffffffffff\n 50948: ecalli 2 // 'call'\n 50950: a0 = a0 <u 0x1\n 50953: u64 [s1 + 0x150] = a0\n 50957: a0 = s1 + 0x7ff\n 50961: a0 = a0 + 0x3c1\n 50965: ra = 2106, jump @1578\n      : @1853 [@dyn 1053] (gas: 12)\n 50971: a1 = s1 + 0x7ff\n 50975: a1 = a1 + 0xf9\n 50979: u64 [a1 + 704] = 0\n 50983: u64 [a1 + 696] = 0\n 50987: a0 = u64 [s1 + 0x150]\n 50991: u64 [a1 + 0x2a8] = a0\n 50995: a0 = s1 + 0x7ff\n 50999: a0 = a0 + 0x3a1\n 51003: u64 [a1 + 688] = 0\n 51007: ra = 0x83c\n 51011: t0 = 0x6f2\n 51015: jump @1953\n      : @1854 [@dyn 1054] (gas: 10)\n 51018: a0 = s1 + 0x1118\n 51022: u64 [a0 + 896] = 0\n 51026: u64 [a0 + 888] = 0\n 51030: u64 [a0 + 880] = 0\n 51034: a1 = a0\n 51036: u64 [a1 + 872] = 0x4\n 51041: a0 = s1 + 0x7ff\n 51045: a0 = a0 + 0x381\n 51049: a1 = s1 + 0x1480\n 51053: ra = 2110, jump @21\n      : @1855 [@dyn 1055] (gas: 15)\n 51060: a0 = s1 + 0x7ff\n 51064: a0 = a0 + 0xf9\n 51068: a2 = a0 + 0x200\n 51072: a1 = u64 [a2 + 0xa0]\n 51076: u64 [s1 + 0x138] = a1\n 51080: a1 = u64 [a2 + 0x98]\n 51084: u64 [s1 + 0x140] = a1\n 51088: a1 = u64 [a2 + 0x90]\n 51092: u64 [s1 + 0x148] = a1\n 51096: a1 = u64 [a2 + 0x88]\n 51100: u64 [s1 + 0x150] = a1\n 51104: a0 = s1 + 0x7ff\n 51108: a0 = a0 + 0x361\n 51112: a1 = u64 [s1 + 0x48]\n 51115: ra = 2112, jump @21\n      : @1856 [@dyn 1056] (gas: 14)\n 51122: a1 = s1 + 0x7ff\n 51126: a1 = a1 + 0xf9\n 51130: a2 = a1 + 0x200\n 51134: a0 = u64 [a2 + 0x78]\n 51137: a1 = s1 + 0x100\n 51141: u64 [a1 + 0x30] = a0\n 51144: a0 = u64 [a2 + 0x70]\n 51147: u64 [a1 + 0x28] = a0\n 51150: a0 = u64 [a2 + 0x68]\n 51153: u64 [a1 + 0x20] = a0\n 51156: a0 = s1 + 0x7ff\n 51160: a0 = a0 + 0x341\n 51164: a1 = 0x40\n 51167: ra = 2114, jump @17\n      : @1857 [@dyn 1057] (gas: 15)\n 51174: a3 = s1 + 0x7ff\n 51178: a3 = a3 + 0xf9\n 51182: a4 = a3 + 0x200\n 51186: a0 = u64 [a4 + 0x60]\n 51189: a1 = u64 [a4 + 0x58]\n 51192: a2 = u64 [a4 + 0x50]\n 51195: a5 = u64 [a4 + 0x48]\n 51198: a0 = a0 | a2\n 51201: a2 = a5 | a1\n 51204: a2 = a2 | a0\n 51207: a2 = a2 >> 0x20\n 51210: a0 = a0 | a1\n 51213: a0 = a0 << 0x20\n 51216: a0 = a0 | a2\n 51219: jump @1899 if a0 != 0\n      : @1858 (gas: 32)\n 51223: a2 = u64 [s1 + 0x128]\n 51227: a0 = a2 >> 0x8\n 51230: a4 = u64 [s1 + 0x130]\n 51234: a1 = a4 << 0x38\n 51237: a0 = a0 | a1\n 51240: a1 = u64 [s1 + 0x120]\n 51244: a1 = a1 >> 0x8\n 51247: a2 = a2 << 0x38\n 51250: a1 = a1 | a2\n 51253: a2 = a4 >> 0x8\n 51256: a4 = 0xffffffffffffffff\n 51259: a1 = a1 & a4\n 51262: u64 [s1 + 0x130] = a1\n 51266: a0 = a0 & a4\n 51269: u64 [s1 + 0x128] = a0\n 51273: a0 = u64 [s1 + 0x158]\n 51277: a0 = a0 & a2\n 51280: u64 [s1 + 0x158] = a0\n 51284: a0 = u64 [s1 + 0x160]\n 51288: a2 = a3 + 0x200\n 51292: u64 [a2 + 0x28] = a0\n 51295: a0 = u64 [s1 + 0x168]\n 51299: u64 [a2 + 0x30] = a0\n 51302: a0 = u64 [s1 + 0x170]\n 51306: u64 [a2 + 0x38] = a0\n 51309: a1 = s1 + 0x7ff\n 51313: a1 = a1 + 0x321\n 51317: a0 = u64 [s1 + 0x178]\n 51321: u64 [a2 + 0x40] = a0\n 51324: a0 = a5\n 51326: u64 [s1 + 0x178] = a5\n 51330: ra = 2116, jump @19\n      : @1859 [@dyn 1058] (gas: 37)\n 51337: a4 = s1 + 0x7ff\n 51341: a4 = a4 + 0xf9\n 51345: u64 [a4 + 480] = 0\n 51349: a0 = u64 [s1 + 0x158]\n 51353: a5 = a4 + 0x100\n 51357: u64 [a5 + 0xd8] = a0\n 51361: a0 = u64 [s1 + 0x128]\n 51365: u64 [a5 + 0xd0] = a0\n 51369: a0 = u64 [s1 + 0x130]\n 51373: u64 [a5 + 0xc8] = a0\n 51377: a0 = u64 [s1 + 0x138]\n 51381: u64 [a4 + 0x200] = a0\n 51385: a0 = u64 [s1 + 0x140]\n 51389: u64 [a5 + 0xf8] = a0\n 51393: a0 = u64 [s1 + 0x148]\n 51397: u64 [a5 + 0xf0] = a0\n 51401: a0 = u64 [0x201c8]\n 51406: a1 = u64 [0x201d0]\n 51411: a2 = u64 [0x201d8]\n 51416: a3 = u64 [s1 + 0x150]\n 51420: u64 [a5 + 0xe8] = a3\n 51424: a3 = a4 + 0x200\n 51428: u64 [a3 + 0x20] = a0\n 51431: u64 [a3 + 0x18] = a1\n 51434: u64 [a3 + 0x10] = a2\n 51437: a5 = a4\n 51439: a0 = u64 [0x201e0]\n 51444: a1 = 0x20\n 51447: a2 = s1 + 0x7ff\n 51451: a2 = a2 + 0x301\n 51455: a3 = s1 + 0x7ff\n 51459: a3 = a3 + 0x2e1\n 51463: a4 = s1 + 0x7ff\n 51467: a4 = a4 + 0x2c1\n 51471: u64 [a5 + 0x208] = a0\n 51475: a0 = u64 [s1 + 0x178]\n 51479: ra = 2118, jump @28\n      : @1860 [@dyn 1059] (gas: 1)\n 51486: ra = 2120, jump @1932\n      : @1861 [@dyn 1060] (gas: 9)\n 51492: sp = s0 + 0xffffffffffffeb40\n 51496: sp = sp + 0x7f8\n 51500: sp = sp + 0x4d0\n 51504: a0 = sp + 0x700\n 51508: ra = u64 [a0 + 0xf0]\n 51512: s0 = u64 [a0 + 0xe8]\n 51516: s1 = u64 [a0 + 0xe0]\n 51520: sp = sp + 0x7f8\n 51524: ret\n      : @1862 (gas: 3)\n 51526: a0 = s1 + 0x4c0\n 51530: a1 = 0x40\n 51533: ra = 2122, jump @17\n      : @1863 [@dyn 1061] (gas: 6)\n 51540: a4 = s1 + 0x400\n 51544: a2 = u64 [a4 + 0xd8]\n 51548: a3 = u64 [a4 + 0xd0]\n 51552: a0 = u64 [a4 + 0xc8]\n 51556: a1 = u64 [a4 + 0xc0]\n 51560: t0 = 2124, jump @2009\n      : @1864 [@dyn 1062] (gas: 1)\n 51566: jump @1899 if a0 != 0\n      : @1865 (gas: 8)\n 51570: u64 [s1 + 1200] = 0\n 51574: u64 [s1 + 1192] = 0\n 51578: u64 [s1 + 1184] = 0\n 51582: a0 = 0x8c379a000000000\n 51592: a1 = s1 + 0x4a0\n 51596: u64 [s1 + 0x4b8] = a0\n 51600: a0 = u64 [s1 + 0x178]\n 51604: ra = 2126, jump @19\n      : @1866 [@dyn 1063] (gas: 1)\n 51611: t0 = 2128, jump @1971\n      : @1867 [@dyn 1064] (gas: 1)\n 51617: jump @1899 if a0 == 0\n      : @1868 (gas: 8)\n 51621: a0 = u64 [s1 + 0x178]\n 51625: i32 a0 = a0 + 0x4\n 51628: u64 [s1 + 1176] = 0\n 51632: u64 [s1 + 1168] = 0\n 51636: u64 [s1 + 1152] = 0x20\n 51641: a1 = s1 + 0x480\n 51645: u64 [s1 + 1160] = 0\n 51649: ra = 2130, jump @19\n      : @1869 [@dyn 1065] (gas: 4)\n 51656: a2 = s1 + 0x100\n 51660: a0 = u64 [a2 + 0x60]\n 51663: a0 = a0 + 0xffffffffffffffdc\n 51666: t0 = 2132, jump @1973\n      : @1870 [@dyn 1066] (gas: 1)\n 51672: jump @1899 if a0 == 0\n      : @1871 (gas: 8)\n 51676: a0 = u64 [s1 + 0x178]\n 51680: i32 a0 = a0 + 0x24\n 51683: u64 [s1 + 1144] = 0\n 51687: u64 [s1 + 1136] = 0\n 51691: u64 [s1 + 1120] = 0xd\n 51696: a1 = s1 + 0x460\n 51700: u64 [s1 + 1128] = 0\n 51704: ra = 2134, jump @19\n      : @1872 [@dyn 1067] (gas: 3)\n 51711: a0 = 0xffffffbc\n 51721: a2 = s1 + 0x100\n 51725: t0 = 2136, jump @1973\n      : @1873 [@dyn 1068] (gas: 1)\n 51731: jump @1899 if a0 == 0\n      : @1874 (gas: 11)\n 51735: a0 = u64 [s1 + 0x178]\n 51739: i32 a0 = a0 + 0x44\n 51742: a1 = u64 [0x20218]\n 51747: u64 [s1 + 1096] = 0\n 51751: u64 [s1 + 0x458] = a1\n 51755: a1 = 0x61696c6564000000\n 51765: u64 [s1 + 0x450] = a1\n 51769: a1 = s1 + 0x440\n 51773: u64 [s1 + 1088] = 0\n 51777: ra = 0x882\n 51781: jump @19\n      : @1875 (gas: 3)\n 51785: a0 = s1 + 0x1080\n 51789: a1 = 0x40\n 51792: ra = 2138, jump @17\n      : @1876 [@dyn 1069] (gas: 20)\n 51799: a0 = s1 + 0x7ff\n 51803: a0 = a0 + 0xf9\n 51807: a5 = a0 + 0x700\n 51811: a3 = u64 [a5 + 0xa0]\n 51815: a4 = u64 [a5 + 0x98]\n 51819: a2 = u64 [a5 + 0x90]\n 51823: a1 = u64 [a5 + 0x88]\n 51827: a5 = s1 + 0x100\n 51831: u64 [a5 + 0x70] = a2\n 51834: u64 [a5 + 0x68] = a3\n 51837: a0 = a2 | a3\n 51840: u64 [a5 + 0x78] = a1\n 51843: a1 = a1 | a4\n 51846: a1 = a1 | a0\n 51849: a1 = a1 >> 0x20\n 51852: u64 [a5 + 0x60] = a4\n 51855: a0 = a0 | a4\n 51858: a0 = a0 << 0x20\n 51861: a0 = a0 | a1\n 51864: jump @1899 if a0 != 0\n      : @1877 (gas: 10)\n 51868: a2 = s1 + 0x7ff\n 51872: a2 = a2 + 0xf9\n 51876: u64 [a2 + 1912] = 0\n 51880: u64 [a2 + 1904] = 0\n 51884: u64 [a2 + 1896] = 0\n 51888: a0 = 0x8c379a000000000\n 51898: a1 = s1 + 0x1060\n 51902: u64 [a2 + 0x780] = a0\n 51906: a0 = u64 [s1 + 0x178]\n 51910: ra = 2140, jump @19\n      : @1878 [@dyn 1070] (gas: 1)\n 51917: t0 = 2142, jump @1971\n      : @1879 [@dyn 1071] (gas: 1)\n 51923: jump @1899 if a0 == 0\n      : @1880 (gas: 10)\n 51927: a0 = u64 [s1 + 0x178]\n 51931: i32 a0 = a0 + 0x4\n 51934: a2 = s1 + 0x7ff\n 51938: a2 = a2 + 0xf9\n 51942: u64 [a2 + 1888] = 0\n 51946: u64 [a2 + 1880] = 0\n 51950: u64 [a2 + 1864] = 0x20\n 51955: a1 = s1 + 0x1040\n 51959: u64 [a2 + 1872] = 0\n 51963: ra = 2144, jump @19\n      : @1881 [@dyn 1072] (gas: 4)\n 51970: a2 = s1 + 0x100\n 51974: a0 = u64 [a2 + 0x60]\n 51977: a0 = a0 + 0xffffffffffffffdc\n 51980: t0 = 2146, jump @1973\n      : @1882 [@dyn 1073] (gas: 1)\n 51986: jump @1899 if a0 == 0\n      : @1883 (gas: 10)\n 51990: a0 = u64 [s1 + 0x178]\n 51994: i32 a0 = a0 + 0x24\n 51997: a2 = s1 + 0x7ff\n 52001: a2 = a2 + 0xf9\n 52005: u64 [a2 + 1856] = 0\n 52009: u64 [a2 + 1848] = 0\n 52013: u64 [a2 + 1832] = 0x13\n 52018: a1 = s1 + 0x1020\n 52022: u64 [a2 + 1840] = 0\n 52026: ra = 2148, jump @19\n      : @1884 [@dyn 1074] (gas: 3)\n 52033: a0 = 0xffffffbc\n 52043: a2 = s1 + 0x100\n 52047: t0 = 2150, jump @1973\n      : @1885 [@dyn 1075] (gas: 1)\n 52053: jump @1899 if a0 == 0\n      : @1886 (gas: 15)\n 52057: a0 = u64 [s1 + 0x178]\n 52061: i32 a0 = a0 + 0x44\n 52064: a1 = u64 [0x201b8]\n 52069: a2 = u64 [0x201c0]\n 52074: a3 = s1 + 0x7ff\n 52078: a3 = a3 + 0xf9\n 52082: a4 = a3 + 0x700\n 52086: u64 [a4 + 0x20] = a1\n 52089: u64 [a4 + 0x18] = a2\n 52092: a1 = 0x6f636b0000000000\n 52102: u64 [a4 + 0x10] = a1\n 52105: a1 = s1 + 0x1000\n 52109: u64 [a3 + 1800] = 0\n 52113: ra = 0x882\n 52117: jump @19\n      : @1887 (gas: 3)\n 52121: a0 = s1 + 0x240\n 52125: a1 = 0x40\n 52128: ra = 2152, jump @17\n      : @1888 [@dyn 1076] (gas: 6)\n 52135: a4 = s1 + 0x200\n 52139: a2 = u64 [a4 + 0x58]\n 52142: a3 = u64 [a4 + 0x50]\n 52145: a0 = u64 [a4 + 0x48]\n 52148: a1 = u64 [a4 + 0x40]\n 52151: t0 = 2154, jump @2009\n      : @1889 [@dyn 1077] (gas: 1)\n 52157: jump @1899 if a0 != 0\n      : @1890 (gas: 8)\n 52161: u64 [s1 + 560] = 0\n 52165: u64 [s1 + 552] = 0\n 52169: u64 [s1 + 544] = 0\n 52173: a0 = 0x8c379a000000000\n 52183: a1 = s1 + 0x220\n 52187: u64 [s1 + 0x238] = a0\n 52191: a0 = u64 [s1 + 0x178]\n 52195: ra = 2156, jump @19\n      : @1891 [@dyn 1078] (gas: 1)\n 52202: t0 = 2158, jump @1971\n      : @1892 [@dyn 1079] (gas: 1)\n 52208: jump @1899 if a0 == 0\n      : @1893 (gas: 8)\n 52211: a0 = u64 [s1 + 0x178]\n 52215: i32 a0 = a0 + 0x4\n 52218: u64 [s1 + 536] = 0\n 52222: u64 [s1 + 528] = 0\n 52226: u64 [s1 + 512] = 0x20\n 52231: a1 = s1 + 0x200\n 52235: u64 [s1 + 520] = 0\n 52239: ra = 2160, jump @19\n      : @1894 [@dyn 1080] (gas: 4)\n 52246: a2 = s1 + 0x100\n 52250: a0 = u64 [a2 + 0x60]\n 52253: a0 = a0 + 0xffffffffffffffdc\n 52256: t0 = 2162, jump @1973\n      : @1895 [@dyn 1081] (gas: 1)\n 52262: jump @1899 if a0 == 0\n      : @1896 (gas: 8)\n 52265: a0 = u64 [s1 + 0x178]\n 52269: i32 a0 = a0 + 0x24\n 52272: u64 [s1 + 504] = 0\n 52276: u64 [s1 + 496] = 0\n 52280: u64 [s1 + 480] = 0x1c\n 52285: a1 = s1 + 0x1e0\n 52289: u64 [s1 + 488] = 0\n 52293: ra = 2164, jump @19\n      : @1897 [@dyn 1082] (gas: 3)\n 52300: a0 = 0xffffffbc\n 52310: a2 = s1 + 0x100\n 52314: t0 = 2166, jump @1973\n      : @1898 [@dyn 1083] (gas: 1)\n 52320: jump @1909 if a0 != 0\n      : @1899 (gas: 1)\n 52324: trap\n      : @1900 (gas: 6)\n 52325: u64 [s1 + 432] = 0\n 52329: u64 [s1 + 424] = 0\n 52333: u64 [s1 + 416] = 0\n 52337: t0 = 0x878\n 52341: a0 = 0x4e487b7100000000\n 52351: fallthrough\n      : @1901 [@dyn 1084] (gas: 4)\n 52352: a1 = s1 + 0x1a0\n 52356: u64 [s1 + 0x1b8] = a0\n 52360: a0 = 0\n 52362: ra = 2170, jump @19\n      : @1902 [@dyn 1085] (gas: 8)\n 52369: u64 [s1 + 408] = 0\n 52373: u64 [s1 + 400] = 0\n 52377: u64 [s1 + 384] = 0x11\n 52382: a0 = 0x4\n 52385: a1 = s1 + 0x180\n 52389: u64 [s1 + 392] = 0\n 52393: ra = 0x880\n 52397: jump @19\n      : @1903 (gas: 9)\n 52401: a0 = s1 + 0x7ff\n 52405: a0 = a0 + 0xf9\n 52409: u64 [a0 + 440] = 0\n 52413: u64 [a0 + 432] = 0\n 52417: u64 [a0 + 424] = 0\n 52421: a2 = a0\n 52423: t0 = 0x87c\n 52427: a0 = 0x4e487b7100000000\n 52437: fallthrough\n      : @1904 [@dyn 1086] (gas: 5)\n 52438: a1 = s1 + 0x7ff\n 52442: a1 = a1 + 0x2a1\n 52446: u64 [a2 + 0x1c0] = a0\n 52450: a0 = 0\n 52452: ra = 2174, jump @19\n      : @1905 [@dyn 1087] (gas: 11)\n 52459: a1 = s1 + 0x7ff\n 52463: a1 = a1 + 0xf9\n 52467: u64 [a1 + 416] = 0\n 52471: u64 [a1 + 408] = 0\n 52475: u64 [a1 + 392] = 0x11\n 52480: a2 = a1\n 52482: a0 = 0x4\n 52485: a1 = s1 + 0x7ff\n 52489: a1 = a1 + 0x281\n 52493: u64 [a2 + 400] = 0\n 52497: ra = 2176, jump @19\n      : @1906 [@dyn 1088] (gas: 3)\n 52504: a0 = u64 [s1 + 0x38]\n 52507: a0 = i32 [a0]\n 52509: jump @1908 if a0 >u 63\n      : @1907 (gas: 3)\n 52513: a1 = u64 [s1 + 0x38]\n 52516: u32 [a1 + 0] = 0x40\n 52519: fallthrough\n      : @1908 (gas: 5)\n 52520: a0 = 0x1\n 52523: a2 = 0x24\n 52526: a1 = u64 [s1 + 0x40]\n 52529: ecalli 14 // 'seal_return'\n 52531: fallthrough\n      : @1909 (gas: 13)\n 52532: a4 = s1 + 0x100\n 52536: a0 = u64 [a4 + 0x78]\n 52539: i32 a0 = a0 + 0x44\n 52542: a1 = u64 [0x20220]\n 52547: a2 = u64 [0x20228]\n 52552: a3 = u64 [0x20230]\n 52557: u64 [a4 + 0xd8] = a1\n 52561: u64 [a4 + 0xd0] = a2\n 52565: u64 [a4 + 0xc8] = a3\n 52569: a2 = 0x6e6e657200000000\n 52579: a1 = s1 + 0x1c0\n 52583: u64 [a4 + 0xc0] = a2\n 52587: ra = 2178, jump @19\n      : @1910 [@dyn 1089] (gas: 3)\n 52594: a1 = 0x64\n 52597: a0 = u64 [s1 + 0x178]\n 52601: ra = 2180, jump @32\n      : @1911 [@dyn 1090] (gas: 1)\n 52608: t0 = 2182, jump @1995\n      : @1912 [@dyn 1091] (gas: 3)\n 52614: ra = 0x888\n 52618: ecalli 14 // 'seal_return'\n 52620: fallthrough\n      : @1913 [@dyn 1092] (gas: 10)\n 52621: a4 = u64 [a1 + 0x18]\n 52624: a3 = u64 [a1 + 0x10]\n 52627: t1 = u64 [a1 + 0x8]\n 52630: t0 = a4 >u 0\n 52632: a5 = a3 >u 0\n 52634: a5 = t0 if a4 != 0\n 52637: t0 = a3 | a4\n 52640: a2 = t1 >u 0\n 52642: a2 = a5 if t0 != 0\n 52645: jump @1915 if a2 != 0\n      : @1914 (gas: 24)\n 52648: a1 = u64 [a1]\n 52650: a2 = a3 >> 0x3b\n 52653: a4 = a4 << 0x5\n 52656: t0 = a4 | a2\n 52659: a4 = t1 >> 0x3b\n 52662: a3 = a3 << 0x5\n 52665: a3 = a3 | a4\n 52668: a4 = a1 >> 0x3b\n 52671: t1 = t1 << 0x5\n 52674: a4 = t1 | a4\n 52677: a1 = a1 << 0x5\n 52680: a5 = a1 + 0x20\n 52683: a1 = a5 <u a1\n 52686: a2 = a4 + a1\n 52689: a4 = a2 <u a4\n 52692: a4 = a1 if a1 == 0\n 52695: a4 = a4 + a3\n 52698: a1 = a4 <u a3\n 52701: a1 = a1 + t0\n 52704: u64 [a0] = a5\n 52706: u64 [a0 + 0x8] = a2\n 52709: u64 [a0 + 0x10] = a4\n 52712: u64 [a0 + 0x18] = a1\n 52715: ret\n      : @1915 (gas: 6)\n 52717: sp = sp + 0xffffffffffffffb0\n 52720: u64 [sp + 0x48] = ra\n 52723: u64 [sp + 0x40] = s0\n 52726: s0 = sp + 0x50\n 52729: sp = sp & 0xfffffffffffffff0\n 52732: t0 = 2186, jump @1989\n      : @1916 [@dyn 1093] (gas: 1)\n 52738: ra = 2188, jump @19\n      : @1917 [@dyn 1094] (gas: 7)\n 52745: u64 [sp + 24] = 0\n 52748: u64 [sp + 16] = 0\n 52751: u64 [sp + 0] = 0x41\n 52754: a0 = 0x4\n 52757: a1 = sp\n 52759: u64 [sp + 8] = 0\n 52762: ra = 2190, jump @19\n      : @1918 [@dyn 1095] (gas: 2)\n 52769: a1 = i32 [0x2025c]\n 52774: jump @1920 if a1 >u 63\n      : @1919 (gas: 2)\n 52778: u32 [0x2025c] = 0x40\n 52784: fallthrough\n      : @1920 (gas: 7)\n 52785: a1 = 0x20270\n 52790: i32 a1 = a1 + 0\n 52792: a0 = 0x1\n 52795: a2 = 0x24\n 52798: ra = 0x890\n 52802: ecalli 14 // 'seal_return'\n 52804: fallthrough\n      : @1921 [@dyn 1096] (gas: 22)\n 52805: sp = sp + 0xffffffffffffff40\n 52809: u64 [sp + 0xb8] = ra\n 52813: u64 [sp + 0xb0] = s0\n 52817: u64 [sp + 0xa8] = s1\n 52821: s0 = sp + 0xc0\n 52825: sp = sp & 0xfffffffffffffff0\n 52828: a4 = u64 [a1 + 0x10]\n 52831: a3 = u64 [a1 + 0x18]\n 52834: a5 = u64 [a1 + 0x8]\n 52837: a1 = u64 [a1]\n 52839: u64 [sp + 0x28] = a3\n 52842: u64 [sp + 0x20] = a5\n 52845: a5 = a5 | a3\n 52848: a3 = a1 | a4\n 52851: a3 = a3 | a5\n 52854: a3 = a3 >> 0x20\n 52857: u64 [sp + 0x30] = a4\n 52860: a4 = a4 | a5\n 52863: a4 = a4 << 0x20\n 52866: a3 = a3 | a4\n 52869: u64 [sp + 0x38] = a0\n 52872: jump @1925 if a3 != 0\n      : @1922 (gas: 10)\n 52876: a0 = u64 [a2 + 0x18]\n 52879: u64 [sp + 0x10] = a0\n 52882: s1 = u64 [a2 + 0x10]\n 52885: a0 = u64 [a2 + 0x8]\n 52888: u64 [sp + 0x8] = a0\n 52891: a0 = u64 [a2]\n 52893: u64 [sp] = a0\n 52895: a0 = sp + 0x80\n 52899: u64 [sp + 0x18] = a1\n 52902: ra = 2194, jump @17\n      : @1923 [@dyn 1097] (gas: 19)\n 52909: t0 = u64 [sp + 0x10]\n 52912: a5 = u64 [sp + 0x8]\n 52915: t1 = u64 [sp]\n 52917: a0 = u64 [sp + 0x88]\n 52921: a1 = u64 [sp + 0x98]\n 52925: a2 = u64 [sp + 0x80]\n 52929: a3 = u64 [sp + 0x90]\n 52933: a4 = a0 ^ a5\n 52936: a0 = a5 <u a0\n 52939: a2 = t1 <u a2\n 52942: a2 = a0 if a4 != 0\n 52945: a0 = s1 <u a3\n 52948: a4 = a1 ^ t0\n 52951: a1 = t0 <u a1\n 52954: a1 = a0 if a4 == 0\n 52957: a3 = a3 ^ s1\n 52960: a3 = a3 | a4\n 52963: a1 = a2 if a3 == 0\n 52966: jump @1926 if a1 == 0\n      : @1924 (gas: 47)\n 52970: a0 = s1 >> 0x3b\n 52973: a1 = t0 << 0x5\n 52976: t0 = a1 | a0\n 52979: a1 = a5 >> 0x3b\n 52982: s1 = s1 << 0x5\n 52985: a1 = a1 | s1\n 52988: a2 = t1 >> 0x3b\n 52991: a3 = a5 << 0x5\n 52994: a2 = a2 | a3\n 52997: a3 = t1 << 0x5\n 53000: a0 = u64 [sp + 0x18]\n 53003: a3 = a3 + a0\n 53006: a4 = a3 <u a0\n 53009: a5 = u64 [sp + 0x20]\n 53012: a2 = a2 + a5\n 53015: a2 = a2 + a4\n 53018: a0 = a2 ^ a5\n 53021: s1 = a2 <u a5\n 53024: s1 = a4 if a0 == 0\n 53027: a5 = u64 [sp + 0x30]\n 53030: a1 = a1 + a5\n 53033: s1 = s1 + a1\n 53036: a4 = s1 <u a1\n 53039: a1 = a1 <u a5\n 53042: a5 = u64 [sp + 0x28]\n 53045: a0 = a5 + t0\n 53048: a0 = a0 + a1\n 53051: a0 = a0 + a4\n 53054: a1 = a3 + 0x20\n 53057: a3 = a1 <u a3\n 53060: a4 = a2 + a3\n 53063: a2 = a4 <u a2\n 53066: a2 = a3 if a3 == 0\n 53069: a2 = a2 + s1\n 53072: a3 = a2 <u s1\n 53075: a0 = a0 + a3\n 53078: a3 = u64 [sp + 0x38]\n 53081: u64 [a3] = a1\n 53083: u64 [a3 + 0x8] = a4\n 53086: u64 [a3 + 0x10] = a2\n 53089: u64 [a3 + 0x18] = a0\n 53092: sp = s0 + 0xffffffffffffff40\n 53096: ra = u64 [sp + 0xb8]\n 53100: s0 = u64 [sp + 0xb0]\n 53104: s1 = u64 [sp + 0xa8]\n 53108: sp = sp + 0xc0\n 53112: ret\n      : @1925 (gas: 1)\n 53114: trap\n      : @1926 (gas: 6)\n 53115: u64 [sp + 112] = 0\n 53118: u64 [sp + 104] = 0\n 53121: u64 [sp + 96] = 0\n 53124: t0 = 0x894\n 53128: a0 = 0x4e487b7100000000\n 53138: fallthrough\n      : @1927 [@dyn 1098] (gas: 4)\n 53139: a1 = sp + 0x60\n 53142: u64 [sp + 0x78] = a0\n 53145: a0 = 0\n 53147: ra = 2198, jump @19\n      : @1928 [@dyn 1099] (gas: 7)\n 53154: u64 [sp + 88] = 0\n 53157: u64 [sp + 80] = 0\n 53160: u64 [sp + 64] = 0x32\n 53164: a0 = 0x4\n 53167: a1 = sp + 0x40\n 53170: u64 [sp + 72] = 0\n 53173: ra = 2200, jump @19\n      : @1929 [@dyn 1100] (gas: 2)\n 53180: a1 = i32 [0x2025c]\n 53185: jump @1931 if a1 >u 63\n      : @1930 (gas: 2)\n 53189: u32 [0x2025c] = 0x40\n 53195: fallthrough\n      : @1931 (gas: 7)\n 53196: a1 = 0x20270\n 53201: i32 a1 = a1 + 0\n 53203: a0 = 0x1\n 53206: a2 = 0x24\n 53209: ra = 0x89a\n 53213: ecalli 14 // 'seal_return'\n 53215: fallthrough\n      : @1932 [@dyn 1101] (gas: 15)\n 53216: sp = sp + 0xfffffffffffffd40\n 53220: a0 = sp + 0x200\n 53224: u64 [a0 + 0xb8] = ra\n 53228: u64 [a0 + 0xb0] = s0\n 53232: u64 [a0 + 0xa8] = s1\n 53236: s0 = sp + 0x2c0\n 53240: sp = sp & 0xffffffffffffffe0\n 53243: s1 = sp\n 53245: u64 [s1 + 472] = 0\n 53249: u64 [s1 + 464] = 0\n 53253: u64 [s1 + 456] = 0\n 53257: u64 [s1 + 448] = 0x4\n 53262: a0 = s1 + 0x180\n 53266: a1 = s1 + 0x1c0\n 53270: ra = 2204, jump @21\n      : @1933 [@dyn 1102] (gas: 11)\n 53277: a2 = u64 [s1 + 0x180]\n 53281: a0 = u64 [s1 + 0x188]\n 53285: a1 = u64 [s1 + 0x190]\n 53289: a3 = u64 [s1 + 0x198]\n 53293: u64 [s1 + 0x158] = a3\n 53297: u64 [s1 + 0x150] = a1\n 53301: u64 [s1 + 0x148] = a0\n 53305: a0 = s1 + 0x160\n 53309: a1 = s1 + 0x140\n 53313: u64 [s1 + 0x140] = a2\n 53317: ra = 2206, jump @1511\n      : @1934 [@dyn 1103] (gas: 19)\n 53323: a3 = u64 [s1 + 0x178]\n 53327: u64 [s1 + 0x20] = a3\n 53330: a2 = u64 [s1 + 0x170]\n 53334: u64 [s1 + 0x28] = a2\n 53337: a1 = u64 [s1 + 0x168]\n 53341: u64 [s1 + 0x30] = a1\n 53344: a0 = u64 [s1 + 0x160]\n 53348: u64 [s1 + 0x38] = a0\n 53351: u64 [s1 + 0x1b8] = a3\n 53355: u64 [s1 + 0x1b0] = a2\n 53359: u64 [s1 + 0x1a8] = a1\n 53363: u64 [s1 + 0x1a0] = a0\n 53367: u64 [s1 + 504] = 0\n 53371: u64 [s1 + 496] = 0\n 53375: u64 [s1 + 488] = 0\n 53379: u64 [s1 + 480] = 0x4\n 53384: a0 = s1 + 0x1e0\n 53388: a1 = s1 + 0x1a0\n 53392: ra = 2208, jump @25\n      : @1935 [@dyn 1104] (gas: 11)\n 53399: a0 = u64 [s1 + 0x20]\n 53402: u64 [s1 + 0x138] = a0\n 53406: a0 = u64 [s1 + 0x28]\n 53409: u64 [s1 + 0x130] = a0\n 53413: a0 = u64 [s1 + 0x30]\n 53416: u64 [s1 + 0x128] = a0\n 53420: a1 = s1 + 0x120\n 53424: a0 = u64 [s1 + 0x38]\n 53427: u64 [s1 + 0x120] = a0\n 53431: a0 = 0\n 53433: ra = 2210, jump @19\n      : @1936 [@dyn 1105] (gas: 7)\n 53440: u64 [s1 + 280] = 0\n 53444: u64 [s1 + 272] = 0\n 53448: u64 [s1 + 256] = 0x3\n 53453: a0 = 0x20\n 53456: a1 = s1 + 0x100\n 53460: u64 [s1 + 264] = 0\n 53464: ra = 2212, jump @19\n      : @1937 [@dyn 1106] (gas: 2)\n 53471: a1 = i32 [0x2025c]\n 53476: jump @1939 if a1 >u 63\n      : @1938 (gas: 2)\n 53480: u32 [0x2025c] = 0x40\n 53486: fallthrough\n      : @1939 (gas: 51)\n 53487: a0 = sp + 0xffffffffffffffe0\n 53490: a2 = a0 & 0xffffffffffffffe0\n 53493: u64 [s1 + 0x38] = a2\n 53496: sp = a2\n 53498: a0 = 0x20270\n 53503: i32 a0 = a0 + 0\n 53505: i32 a2 = a2 + 0\n 53507: a1 = 0x40\n 53510: ecalli 9 // 'hash_keccak_256'\n 53512: a3 = u64 [s1 + 0x38]\n 53515: a0 = u64 [a3]\n 53517: a1 = u64 [a3 + 0x8]\n 53520: a2 = u64 [a3 + 0x10]\n 53523: a3 = u64 [a3 + 0x18]\n 53526: a0 = reverse a0\n 53528: u64 [s1 + 0x38] = a0\n 53531: a0 = reverse a1\n 53533: u64 [s1 + 0x30] = a0\n 53536: a0 = reverse a2\n 53538: u64 [s1 + 0x28] = a0\n 53541: a0 = reverse a3\n 53543: u64 [s1 + 0x20] = a0\n 53546: i32 a0 = s1 + 0x200\n 53550: ecalli 10 // 'now'\n 53552: t0 = u64 [s1 + 0x200]\n 53556: t1 = u64 [s1 + 0x208]\n 53560: t2 = u64 [s1 + 0x210]\n 53564: a3 = u64 [s1 + 0x218]\n 53568: a0 = u64 [s1 + 0x20]\n 53571: a4 = a0 + 0x14\n 53574: a5 = a4 <u a0\n 53577: a1 = u64 [s1 + 0x28]\n 53580: a0 = a1 + a5\n 53583: a1 = a0 <u a1\n 53586: a1 = a5 if a5 == 0\n 53589: a2 = u64 [s1 + 0x30]\n 53592: a1 = a1 + a2\n 53595: a5 = a1 <u a2\n 53598: a2 = u64 [s1 + 0x38]\n 53601: a5 = a5 + a2\n 53604: u64 [s1 + 0x220] = a4\n 53608: u64 [s1 + 0x228] = a0\n 53612: u64 [s1 + 0x230] = a1\n 53616: u64 [s1 + 0x238] = a5\n 53620: u64 [s1 + 0x258] = a3\n 53624: u64 [s1 + 0x250] = t2\n 53628: u64 [s1 + 0x248] = t1\n 53632: u64 [s1 + 0x240] = t0\n 53636: a0 = s1 + 0x220\n 53640: a1 = s1 + 0x240\n 53644: ra = 2214, jump @25\n      : @1940 [@dyn 1107] (gas: 7)\n 53651: u64 [s1 + 632] = 0\n 53655: u64 [s1 + 624] = 0\n 53659: u64 [s1 + 616] = 0\n 53663: u64 [s1 + 608] = 0x4\n 53668: a0 = s1 + 0xe0\n 53672: a1 = s1 + 0x260\n 53676: ra = 2216, jump @21\n      : @1941 [@dyn 1108] (gas: 15)\n 53683: a0 = u64 [s1 + 0xf8]\n 53687: u64 [s1 + 0x20] = a0\n 53690: a0 = u64 [s1 + 0xf0]\n 53694: u64 [s1 + 0x28] = a0\n 53697: a0 = u64 [s1 + 0xe8]\n 53701: u64 [s1 + 0x30] = a0\n 53704: a0 = u64 [s1 + 0xe0]\n 53708: u64 [s1 + 0x38] = a0\n 53711: u64 [s1 + 664] = 0\n 53715: u64 [s1 + 656] = 0\n 53719: u64 [s1 + 648] = 0\n 53723: u64 [s1 + 640] = 0\n 53727: a0 = s1 + 0xc0\n 53731: a1 = s1 + 0x280\n 53735: ra = 2218, jump @21\n      : @1942 [@dyn 1109] (gas: 11)\n 53742: a0 = u64 [s1 + 0xd8]\n 53746: u64 [s1 + 0x18] = a0\n 53749: a0 = u64 [s1 + 0xd0]\n 53753: u64 [s1 + 0x10] = a0\n 53756: a0 = u64 [s1 + 0xc8]\n 53760: u64 [s1 + 0x8] = a0\n 53763: a0 = u64 [s1 + 0xc0]\n 53767: u64 [s1] = a0\n 53769: a0 = s1 + 0xa0\n 53773: a1 = 0x40\n 53776: ra = 2220, jump @17\n      : @1943 [@dyn 1110] (gas: 5)\n 53783: a3 = u64 [s1 + 0xb8]\n 53787: a1 = u64 [s1 + 0xb0]\n 53791: a2 = u64 [s1 + 0xa8]\n 53795: a0 = u64 [s1 + 0xa0]\n 53799: t0 = 2222, jump @1996\n      : @1944 [@dyn 1111] (gas: 1)\n 53805: jump @1948 if a1 != 0\n      : @1945 (gas: 11)\n 53809: a1 = u64 [s1]\n 53811: u64 [s1 + 0x80] = a1\n 53815: a1 = u64 [s1 + 0x8]\n 53818: u64 [s1 + 0x88] = a1\n 53822: a1 = u64 [s1 + 0x10]\n 53825: u64 [s1 + 0x90] = a1\n 53829: a1 = s1 + 0x80\n 53833: a2 = u64 [s1 + 0x18]\n 53836: u64 [s1 + 0x98] = a2\n 53840: u64 [s1 + 0x18] = a0\n 53843: ra = 2224, jump @19\n      : @1946 [@dyn 1112] (gas: 21)\n 53850: a0 = u64 [s1 + 0x20]\n 53853: u64 [s1 + 0x58] = a0\n 53856: a0 = u64 [s1 + 0x28]\n 53859: u64 [s1 + 0x50] = a0\n 53862: a0 = u64 [s1 + 0x30]\n 53865: u64 [s1 + 0x48] = a0\n 53868: a0 = u64 [0x20238]\n 53873: a1 = u64 [0x20240]\n 53878: a2 = u64 [0x20248]\n 53883: a3 = u64 [s1 + 0x38]\n 53886: u64 [s1 + 0x40] = a3\n 53889: u64 [s1 + 0x78] = a0\n 53892: u64 [s1 + 0x70] = a1\n 53895: u64 [s1 + 0x68] = a2\n 53898: a0 = u64 [0x20250]\n 53903: a1 = 0x20\n 53906: a2 = s1 + 0x60\n 53909: a3 = s1 + 0x40\n 53912: u64 [s1 + 0x60] = a0\n 53915: a0 = u64 [s1 + 0x18]\n 53918: ra = 2226, jump @26\n      : @1947 [@dyn 1113] (gas: 7)\n 53925: sp = s0 + 0xfffffffffffffd40\n 53929: a0 = sp + 0x200\n 53933: ra = u64 [a0 + 0xb8]\n 53937: s0 = u64 [a0 + 0xb0]\n 53941: s1 = u64 [a0 + 0xa8]\n 53945: sp = sp + 0x2c0\n 53949: ret\n      : @1948 (gas: 1)\n 53951: trap\n      : @1949 [export #0: 'call'] (gas: 2)\n 53952: a0 = 0\n 53954: ra = 2228, jump @38\n      : @1950 [@dyn 1114] [export #1: 'deploy'] (gas: 2)\n 53961: a0 = 0x1\n 53964: ra = 2230, jump @38\n      : @1951 [@dyn 1115] (gas: 11)\n 53971: a2 = u64 [sp + 0x8]\n 53974: a2 = a2 | s1\n 53977: s1 = 0x100000000\n 53987: a0 = 0xfffffffc\n 53997: a1 = u64 [sp + 0x18]\n 54000: a0 = a1 <u a0\n 54003: a1 = u64 [sp + 0x10]\n 54006: a0 = 0 if a1 != 0\n 54008: u64 [sp + 0x8] = a2\n 54011: a0 = 0 if a2 != 0\n 54013: jump [t0]\n      : @1952 (gas: 15)\n 54015: a2 = u64 [sp + 0xb8]\n 54019: s1 = u64 [sp + 0xb0]\n 54023: a0 = u64 [sp + 0xa8]\n 54027: a1 = u64 [sp + 0xa0]\n 54031: u64 [sp + 0x10] = a0\n 54034: u64 [sp + 0x8] = a2\n 54037: a0 = a0 | a2\n 54040: u64 [sp + 0x18] = a1\n 54043: a1 = a1 | s1\n 54046: a1 = a1 | a0\n 54049: a1 = a1 >> 0x20\n 54052: a0 = a0 | s1\n 54055: a0 = a0 << 0x20\n 54058: a0 = a0 | a1\n 54061: jump [t0]\n      : @1953 (gas: 14)\n 54063: sp = sp + 0xffffffffffffff20\n 54067: u64 [sp + 0xd8] = ra\n 54071: u64 [sp + 0xd0] = s0\n 54075: u64 [sp + 0xc8] = s1\n 54079: s0 = sp + 0xe0\n 54083: sp = sp & 0xfffffffffffffff0\n 54086: a1 = u64 [a0 + 0x10]\n 54089: a2 = u64 [a0 + 0x18]\n 54092: a3 = u64 [a0 + 0x8]\n 54095: a0 = u64 [a0]\n 54097: a2 = a2 | a3\n 54100: a0 = a0 | a1\n 54103: a0 = a0 | a2\n 54106: jump [t0]\n      : @1954 (gas: 7)\n 54108: a0 = 0xffffffbc\n 54118: a0 = s1 <u a0\n 54121: a1 = u64 [sp + 0x10]\n 54124: a0 = 0 if a1 != 0\n 54126: a1 = u64 [sp + 0x8]\n 54129: a0 = 0 if a1 != 0\n 54131: jump [t0]\n      : @1955 (gas: 10)\n 54133: a4 = s1 + 0x100\n 54137: a3 = u64 [a4 + 0x28]\n 54140: a2 = u64 [a4 + 0x30]\n 54143: a1 = u64 [a4 + 0x38]\n 54146: a0 = u64 [a4 + 0x20]\n 54149: a0 = a0 + 0xffffffffffffffdc\n 54152: a0 = a1 <u a0\n 54155: a0 = 0 if a2 != 0\n 54157: a0 = 0 if a3 != 0\n 54159: jump [t0]\n      : @1956 (gas: 9)\n 54161: a2 = s1 + 0x100\n 54165: a3 = u64 [a2 + 0x38]\n 54168: a0 = 0xffffffbc\n 54178: a0 = a3 <u a0\n 54181: a1 = u64 [a2 + 0x30]\n 54184: a0 = 0 if a1 != 0\n 54186: a1 = u64 [a2 + 0x28]\n 54189: a0 = 0 if a1 != 0\n 54191: jump [t0]\n      : @1957 (gas: 7)\n 54193: a4 = 0x100000000\n 54203: a0 = 0xfffffffc\n 54213: a0 = a1 <u a0\n 54216: a2 = u64 [a5 + 0x30]\n 54219: a0 = 0 if a2 != 0\n 54221: a0 = 0 if a3 != 0\n 54223: jump [t0]\n      : @1958 (gas: 8)\n 54225: a0 = s1 + 0xffffffffffffffdc\n 54228: a1 = u64 [sp + 0x18]\n 54231: a0 = a1 <u a0\n 54234: a1 = u64 [sp + 0x10]\n 54237: a0 = 0 if a1 != 0\n 54239: a1 = u64 [sp + 0x8]\n 54242: a0 = 0 if a1 != 0\n 54244: jump [t0]\n      : @1959 (gas: 8)\n 54246: u64 [sp + 144] = 0\n 54250: u64 [sp + 136] = 0\n 54254: u64 [sp + 128] = 0\n 54258: a0 = 0x8c379a000000000\n 54268: a1 = sp + 0x80\n 54272: u64 [sp + 0x98] = a0\n 54276: a0 = u64 [sp + 0x18]\n 54279: jump [t0]\n      : @1960 (gas: 17)\n 54281: a2 = u64 [s1 + 0xc8]\n 54285: a0 = u64 [a2 + 0x8]\n 54288: a1 = i32 [a2 + 0x10]\n 54291: a2 = u64 [a2]\n 54293: a0 = reverse a0\n 54295: a3 = a0 << 0x20\n 54298: a1 = reverse a1\n 54300: a1 = a1 >> 0x20\n 54303: a3 = a3 | a1\n 54306: a0 = a0 >> 0x20\n 54309: a1 = reverse a2\n 54311: a2 = a1 << 0x20\n 54314: a0 = a0 | a2\n 54317: a1 = a1 >> 0x20\n 54320: a2 = s1 + 0x7ff\n 54324: a2 = a2 + 0xb9\n 54328: jump [t0]\n      : @1961 (gas: 14)\n 54330: a0 = u64 [a2 + 0x8]\n 54333: a1 = u64 [a2]\n 54335: a2 = i32 [a2 + 0x10]\n 54338: a0 = reverse a0\n 54340: a3 = a0 >> 0x20\n 54343: a1 = reverse a1\n 54345: a4 = a1 << 0x20\n 54348: a3 = a3 | a4\n 54351: a0 = a0 << 0x20\n 54354: a2 = reverse a2\n 54356: a2 = a2 >> 0x20\n 54359: a0 = a0 | a2\n 54362: a1 = a1 >> 0x20\n 54365: jump [t0]\n      : @1962 (gas: 32)\n 54367: a1 = u64 [s1 + 0x130]\n 54371: a0 = a1 + 0x20\n 54374: u64 [s1 + 0xd8] = a0\n 54378: a2 = a0 <u a1\n 54381: a1 = u64 [s1 + 0x128]\n 54385: a0 = a1 + a2\n 54388: u64 [s1 + 0xd0] = a0\n 54392: a3 = a0 <u a1\n 54395: a3 = a2 if a2 == 0\n 54398: a0 = u64 [s1 + 0x138]\n 54402: a3 = a3 + a0\n 54405: u64 [s1 + 0xc8] = a3\n 54409: a3 = a3 <u a0\n 54412: a0 = u64 [s1 + 0x120]\n 54416: a0 = a0 + a3\n 54419: u64 [s1 + 0x120] = a0\n 54423: t2 = u64 [s1 + 0x118]\n 54427: t2 = t2 + 0x1\n 54430: a3 = t2 <u 0x1\n 54433: t1 = u64 [s1 + 0x110]\n 54437: t1 = t1 + a3\n 54440: a3 = t2 | t1\n 54443: a3 = a3 <u 0x1\n 54446: a4 = u64 [s1 + 0x100]\n 54450: a0 = a4 + a3\n 54453: a4 = a0 <u a4\n 54456: a3 = u64 [s1 + 0x108]\n 54460: a3 = a3 + a4\n 54463: ra = u64 [s1 + 0xf0]\n 54467: ra = ra + 0x1\n 54470: a4 = ra <u 0x1\n 54473: jump [t0]\n      : @1963 (gas: 8)\n 54475: a0 = u64 [sp + 0x18]\n 54478: i32 a0 = a0 + 0x4\n 54481: u64 [sp + 120] = 0\n 54484: u64 [sp + 112] = 0\n 54487: u64 [sp + 96] = 0x20\n 54491: a1 = sp + 0x60\n 54494: u64 [sp + 104] = 0\n 54497: jump [t0]\n      : @1964 (gas: 5)\n 54499: a0 = a0 + 0xffffffffffffffdc\n 54502: a0 = a1 <u a0\n 54505: a0 = 0 if a2 != 0\n 54507: a0 = 0 if a3 != 0\n 54509: jump [t0]\n      : @1965 (gas: 13)\n 54511: a1 = a0 <u a1\n 54514: a3 = u64 [s1 + 0x120]\n 54518: a2 = a3 + a1\n 54521: a3 = a2 <u a3\n 54524: a3 = a1 if a1 == 0\n 54527: a1 = u64 [s1 + 0x130]\n 54531: a3 = a3 + a1\n 54534: a1 = a3 <u a1\n 54537: a4 = u64 [s1 + 0x138]\n 54541: a1 = a1 + a4\n 54544: a4 = s1 + 0x30b8\n 54548: a5 = a4 + 0x100\n 54552: jump [t0]\n      : @1966 (gas: 10)\n 54554: a3 = a0 >u 0\n 54556: a4 = a5 <u 0x100\n 54560: a4 = a4 ^ 0x1\n 54563: a4 = a3 if a0 != 0\n 54566: a0 = a2 >u 0\n 54568: a3 = a1 >u 0\n 54570: a3 = a0 if a2 != 0\n 54573: a1 = a1 | a2\n 54576: a4 = a3 if a1 != 0\n 54579: jump [t0]\n      : @1967 (gas: 16)\n 54581: a2 = u64 [s1 + 0xf8]\n 54585: a0 = u64 [a2 + 0x8]\n 54588: a1 = i32 [a2 + 0x10]\n 54591: a2 = u64 [a2]\n 54593: a0 = reverse a0\n 54595: a3 = a0 << 0x20\n 54598: a1 = reverse a1\n 54600: a1 = a1 >> 0x20\n 54603: a3 = a3 | a1\n 54606: a0 = a0 >> 0x20\n 54609: a1 = reverse a2\n 54611: a2 = a1 << 0x20\n 54614: a0 = a0 | a2\n 54617: a1 = a1 >> 0x20\n 54620: a2 = s1 + 0x20b8\n 54624: jump [t0]\n      : @1968 (gas: 19)\n 54626: a0 = clz t1\n 54628: a1 = clz t2\n 54630: a3 = a1 + 0x40\n 54633: a3 = a0 if t1 != 0\n 54636: a0 = clz ra\n 54638: a1 = clz a2\n 54640: a1 = a1 + 0x40\n 54643: a1 = a0 if ra != 0\n 54646: a0 = a1 + 0x80\n 54650: a2 = t2 | t1\n 54653: a3 = a0 if a2 == 0\n 54656: a5 = a0 <u a1\n 54659: a5 = 0 if a2 != 0\n 54661: a4 = a5 >u 0\n 54663: a0 = a3 <u 0xf3\n 54667: a2 = a0 ^ 0x1\n 54670: a4 = a2 if a5 == 0\n 54673: a0 = a4 <u 0x1\n 54676: jump [t0]\n      : @1969 (gas: 21)\n 54678: a3 = u64 [s1 + 0xa0]\n 54682: a3 = a3 | a0\n 54685: a2 = u64 [s1 + 0x110]\n 54689: a4 = a2 <u 0x80\n 54693: u64 [s1 + 0xa0] = a4\n 54697: a0 = u64 [s1 + 0xd0]\n 54701: a3 = a0 if a4 == 0\n 54704: a0 = u64 [s1 + 0x148]\n 54708: a3 = a0 if a2 == 0\n 54711: u64 [s1 + 0x148] = a3\n 54715: a0 = u64 [s1 + 0xa8]\n 54719: a1 = a1 | a0\n 54722: a0 = u64 [s1 + 0xd8]\n 54726: a1 = a0 if a4 == 0\n 54729: a0 = u64 [s1 + 0x150]\n 54733: a1 = a0 if a2 == 0\n 54736: u64 [s1 + 0x150] = a1\n 54740: a0 = u64 [s1 + 0x120]\n 54744: a1 = u64 [s1 + 0x118]\n 54748: a2 = u64 [s1 + 0x108]\n 54752: jump [t0]\n      : @1970 (gas: 24)\n 54754: a2 = u64 [s1 + 0xf8]\n 54758: a0 = u64 [a2 + 0x8]\n 54761: a1 = u64 [a2]\n 54763: a2 = i32 [a2 + 0x10]\n 54766: a0 = reverse a0\n 54768: a3 = a0 >> 0x20\n 54771: a1 = reverse a1\n 54773: a4 = a1 << 0x20\n 54776: a3 = a3 | a4\n 54779: a0 = a0 << 0x20\n 54782: a2 = reverse a2\n 54784: a2 = a2 >> 0x20\n 54787: a0 = a0 | a2\n 54790: a1 = a1 >> 0x20\n 54793: a2 = u64 [s1 + 0x100]\n 54797: a1 = a1 ^ a2\n 54800: a2 = u64 [s1 + 0x108]\n 54804: a0 = a0 ^ a2\n 54807: a0 = a0 | a1\n 54810: a1 = u64 [s1 + 0x110]\n 54814: a1 = a1 ^ a3\n 54817: a0 = a0 | a1\n 54820: a0 = a0 <u 0x1\n 54823: jump [t0]\n      : @1971 (gas: 14)\n 54825: a3 = s1 + 0x100\n 54829: a0 = u64 [a3 + 0x68]\n 54832: a2 = u64 [a3 + 0x60]\n 54835: a2 = a2 | a0\n 54838: a0 = 0x100000000\n 54848: u64 [a3 + 0x60] = a0\n 54851: a0 = 0xfffffffc\n 54861: a1 = u64 [a3 + 0x78]\n 54864: a0 = a1 <u a0\n 54867: a1 = u64 [a3 + 0x70]\n 54870: a0 = 0 if a1 != 0\n 54872: u64 [a3 + 0x68] = a2\n 54875: a0 = 0 if a2 != 0\n 54877: jump [t0]\n      : @1972 (gas: 15)\n 54879: a0 = u64 [a3 + 0x18]\n 54882: a1 = u64 [a3 + 0x10]\n 54885: a2 = u64 [a3 + 0x8]\n 54888: a3 = u64 [a3]\n 54890: a0 = reverse a0\n 54892: a4 = reverse a1\n 54894: a2 = reverse a2\n 54896: a3 = reverse a3\n 54898: a1 = u64 [s1 + 0xb8]\n 54902: u64 [a1 + 0x18] = a3\n 54905: u64 [a1 + 0x10] = a2\n 54908: u64 [a1 + 0x8] = a4\n 54911: u64 [a1] = a0\n 54913: a0 = 0x2000\n 54917: jump [t0]\n      : @1973 (gas: 7)\n 54919: a1 = u64 [a2 + 0x78]\n 54922: a0 = a1 <u a0\n 54925: a1 = u64 [a2 + 0x70]\n 54928: a0 = 0 if a1 != 0\n 54930: a1 = u64 [a2 + 0x68]\n 54933: a0 = 0 if a1 != 0\n 54935: jump [t0]\n      : @1974 (gas: 9)\n 54937: a0 = u64 [a3 + 0x18]\n 54940: a1 = u64 [a3 + 0x10]\n 54943: a2 = u64 [a3 + 0x8]\n 54946: a3 = u64 [a3]\n 54948: a0 = reverse a0\n 54950: a4 = reverse a1\n 54952: a2 = reverse a2\n 54954: a3 = reverse a3\n 54956: jump [t0]\n      : @1975 (gas: 5)\n 54958: a0 = sp + 0xffffffffffffffe0\n 54961: a2 = a0 & 0xffffffffffffffe0\n 54964: u64 [s1 + 0x138] = a2\n 54968: sp = a2\n 54970: jump [t0]\n      : @1976 (gas: 6)\n 54972: sp = s0 + 0xffffffffffffff20\n 54976: ra = u64 [sp + 0xd8]\n 54980: s0 = u64 [sp + 0xd0]\n 54984: s1 = u64 [sp + 0xc8]\n 54988: sp = sp + 0xe0\n 54992: jump [t0]\n      : @1977 (gas: 17)\n 54994: a1 = u64 [s1 + 0xa0]\n 54998: a0 = 0 if a1 == 0\n 55000: a1 = u64 [s1 + 0x150]\n 55004: a1 = a1 & 0xffffffffffffffff\n 55007: a3 = u64 [s1 + 0x148]\n 55011: a2 = a3 & 0xffffffffffffffff\n 55014: a3 = u64 [s1 + 0x158]\n 55018: a0 = a0 & a3\n 55021: a3 = u64 [s1 + 0xe0]\n 55025: a2 = 0 if a3 != 0\n 55027: a1 = 0 if a3 != 0\n 55029: a0 = 0 if a3 != 0\n 55031: a3 = sp + 0xffffffffffffffe0\n 55034: a3 = a3 & 0xffffffffffffffe0\n 55037: u64 [s1 + 0x150] = a3\n 55041: sp = a3\n 55043: jump [t0]\n      : @1978 (gas: 10)\n 55045: u64 [s1 + 0x118] = a1\n 55049: t2 = u64 [s1 + 0x108]\n 55053: a2 = t2 >> 0x3d\n 55056: a3 = u64 [s1 + 0xd8]\n 55060: a5 = a3 << 0x3\n 55063: t1 = a5 | a2\n 55066: a3 = a3 >> 0x3d\n 55069: a5 = u64 [s1 + 0xe0]\n 55073: a2 = a5 << 0x3\n 55076: jump [t0]\n      : @1979 (gas: 10)\n 55078: a0 = 0x100000000\n 55088: a0 = a0 ^ a1\n 55091: a0 = a0 | a3\n 55094: u64 [s1 + 0x138] = a1\n 55098: a1 = a1 >> 0x20\n 55101: a1 = a1 <u 0x1\n 55104: u64 [s1 + 0x130] = a3\n 55108: a1 = 0 if a3 != 0\n 55110: a1 = 0 if a0 == 0\n 55112: jump [t0]\n      : @1980 (gas: 16)\n 55114: a3 = u64 [s1 + 0x130]\n 55118: a0 = u64 [a3 + 0x18]\n 55121: a1 = u64 [a3 + 0x10]\n 55124: a2 = u64 [a3 + 0x8]\n 55127: a3 = u64 [a3]\n 55129: a0 = reverse a0\n 55131: a4 = reverse a1\n 55133: a2 = reverse a2\n 55135: a3 = reverse a3\n 55137: a1 = u64 [s1 + 0x138]\n 55141: u64 [a1 + 0x18] = a3\n 55144: u64 [a1 + 0x10] = a2\n 55147: u64 [a1 + 0x8] = a4\n 55150: u64 [a1] = a0\n 55152: a0 = s1 + 0x7ff\n 55156: jump [t0]\n      : @1981 (gas: 14)\n 55158: a3 = u64 [s1 + 0x138]\n 55162: a0 = u64 [a3 + 0x18]\n 55165: a1 = u64 [a3 + 0x10]\n 55168: a2 = u64 [a3 + 0x8]\n 55171: a3 = u64 [a3]\n 55173: a0 = reverse a0\n 55175: u64 [s1 + 0x118] = a0\n 55179: a0 = reverse a1\n 55181: u64 [s1 + 0x110] = a0\n 55185: a0 = reverse a2\n 55187: u64 [s1 + 0x100] = a0\n 55191: a0 = reverse a3\n 55193: u64 [s1 + 0x108] = a0\n 55197: jump [t0]\n      : @1982 (gas: 14)\n 55199: a3 = u64 [s1 + 0x138]\n 55203: a0 = u64 [a3]\n 55205: a1 = u64 [a3 + 0x8]\n 55208: a2 = u64 [a3 + 0x10]\n 55211: a3 = u64 [a3 + 0x18]\n 55214: a4 = reverse a0\n 55216: u64 [s1 + 0x138] = a4\n 55220: a5 = reverse a1\n 55222: u64 [s1 + 0x130] = a5\n 55226: a2 = reverse a2\n 55228: u64 [s1 + 0x120] = a2\n 55232: a0 = reverse a3\n 55234: u64 [s1 + 0x128] = a0\n 55238: jump [t0]\n      : @1983 (gas: 16)\n 55240: a3 = u64 [s1 + 0x128]\n 55244: a0 = u64 [a3 + 0x18]\n 55247: a1 = u64 [a3 + 0x10]\n 55250: a2 = u64 [a3 + 0x8]\n 55253: a3 = u64 [a3]\n 55255: a0 = reverse a0\n 55257: a4 = reverse a1\n 55259: a2 = reverse a2\n 55261: a3 = reverse a3\n 55263: a1 = u64 [s1 + 0x130]\n 55267: u64 [a1 + 0x18] = a3\n 55270: u64 [a1 + 0x10] = a2\n 55273: u64 [a1 + 0x8] = a4\n 55276: u64 [a1] = a0\n 55278: a0 = s1 + 0x7ff\n 55282: jump [t0]\n      : @1984 (gas: 15)\n 55284: a3 = u64 [s1 + 0x148]\n 55288: a0 = u64 [a3 + 0x18]\n 55291: a1 = u64 [a3 + 0x10]\n 55294: a2 = u64 [a3 + 0x8]\n 55297: a3 = u64 [a3]\n 55299: a0 = reverse a0\n 55301: a1 = reverse a1\n 55303: a2 = reverse a2\n 55305: a3 = reverse a3\n 55307: a4 = u64 [s1 + 0x150]\n 55311: u64 [a4 + 0x18] = a3\n 55314: u64 [a4 + 0x10] = a2\n 55317: u64 [a4 + 0x8] = a1\n 55320: u64 [a4] = a0\n 55322: jump [t0]\n      : @1985 (gas: 8)\n 55324: a0 = a0 | a3\n 55327: a3 = a1 | a2\n 55330: a3 = a3 | a0\n 55333: a3 = a3 >> 0x20\n 55336: a0 = a0 | a2\n 55339: a0 = a0 << 0x20\n 55342: a0 = a0 | a3\n 55345: jump [t0]\n      : @1986 (gas: 8)\n 55347: a0 = a0 | a2\n 55350: a2 = a4 | a1\n 55353: a2 = a2 | a0\n 55356: a2 = a2 >> 0x20\n 55359: a0 = a0 | a1\n 55362: a0 = a0 << 0x20\n 55365: a0 = a0 | a2\n 55368: jump [t0]\n      : @1987 (gas: 8)\n 55370: a2 = a3 | a4\n 55373: a1 = a0 | a5\n 55376: a1 = a1 | a2\n 55379: a1 = a1 >> 0x20\n 55382: a2 = a2 | a5\n 55385: a2 = a2 << 0x20\n 55388: a1 = a1 | a2\n 55391: jump [t0]\n      : @1988 (gas: 12)\n 55393: a1 = a0 <u a1\n 55396: a3 = u64 [a5 + 0x8]\n 55399: a2 = a3 + a1\n 55402: a3 = a2 <u a3\n 55405: a3 = a1 if a1 == 0\n 55408: a1 = u64 [a5 + 0x18]\n 55411: a3 = a3 + a1\n 55414: a1 = a3 <u a1\n 55417: a4 = u64 [a5 + 0x10]\n 55420: a1 = a1 + a4\n 55423: a4 = s1 + 0x38b8\n 55427: jump [t0]\n      : @1989 (gas: 8)\n 55429: u64 [sp + 48] = 0\n 55432: u64 [sp + 40] = 0\n 55435: u64 [sp + 32] = 0\n 55438: a0 = 0x4e487b7100000000\n 55448: a1 = sp + 0x20\n 55451: u64 [sp + 0x38] = a0\n 55454: a0 = 0\n 55456: jump [t0]\n      : @1990 (gas: 4)\n 55458: a2 = a3 + a1\n 55461: a3 = a2 <u a3\n 55464: a3 = a1 if a1 == 0\n 55467: jump [t0]\n      : @1991 (gas: 10)\n 55469: a2 = a3 + a1\n 55472: a3 = a2 <u a3\n 55475: a3 = a1 if a1 == 0\n 55478: a1 = u64 [s1 + 0x130]\n 55482: a3 = a3 + a1\n 55485: a1 = a3 <u a1\n 55488: a4 = u64 [s1 + 0x138]\n 55492: a1 = a1 + a4\n 55495: a4 = s1 + 0x38b8\n 55499: jump [t0]\n      : @1992 (gas: 8)\n 55501: u64 [sp + 64] = 0\n 55504: u64 [sp + 56] = 0\n 55507: u64 [sp + 48] = 0\n 55510: a0 = 0x4e487b7100000000\n 55520: a1 = sp + 0x30\n 55523: u64 [sp + 0x48] = a0\n 55526: a0 = 0\n 55528: jump [t0]\n      : @1993 (gas: 10)\n 55530: a1 = s1 + a0\n 55533: u64 [a1 + 1440] = 0\n 55537: u64 [a1 + 1432] = 0\n 55541: u64 [a1 + 1424] = 0\n 55545: a0 = 0x9\n 55548: u64 [a1 + 0x588] = a0\n 55552: u64 [a1 + 1472] = 0\n 55556: u64 [a1 + 1464] = 0\n 55560: u64 [a1 + 1456] = 0\n 55564: jump [t0]\n      : @1994 (gas: 4)\n 55566: a0 = u64 [s1 + 0x138]\n 55570: a0 = i32 [a0]\n 55572: a1 = 0x23\n 55575: jump [t0]\n      : @1995 (gas: 4)\n 55577: i32 a1 = a0 + 0\n 55579: a0 = 0x1\n 55582: a2 = 0x64\n 55585: jump [t0]\n      : @1996 (gas: 8)\n 55587: a3 = a3 | a2\n 55590: a2 = a0 | a1\n 55593: a2 = a2 | a3\n 55596: a2 = a2 >> 0x20\n 55599: a1 = a1 | a3\n 55602: a1 = a1 << 0x20\n 55605: a1 = a1 | a2\n 55608: jump [t0]\n      : @1997 (gas: 13)\n 55610: i32 a0 = a0 + 0xfffffffffffff8b8\n 55614: a1 = s1 + a0\n 55617: a2 = a1 + 0x400\n 55621: a0 = u64 [a2 + 0xc0]\n 55625: a1 = s1 + 0x100\n 55629: u64 [a1 + 0x38] = a0\n 55632: a0 = u64 [a2 + 0xb8]\n 55636: u64 [a1 + 0x30] = a0\n 55639: a0 = u64 [a2 + 0xb0]\n 55643: u64 [a1 + 0x28] = a0\n 55646: a0 = u64 [a2 + 0xa8]\n 55650: u64 [a1 + 0x20] = a0\n 55653: jump [t0]\n      : @1998 (gas: 11)\n 55655: a1 = u64 [s1 + 0x78]\n 55658: a0 = u64 [s1 + 0x68]\n 55661: a3 = u64 [s1 + 0x60]\n 55664: a3 = a3 | a0\n 55667: a4 = 0x100000000\n 55677: a0 = 0xfffffffc\n 55687: a0 = a1 <u a0\n 55690: a2 = u64 [s1 + 0x70]\n 55693: a0 = 0 if a2 != 0\n 55695: a0 = 0 if a3 != 0\n 55697: jump [t0]\n      : @1999 (gas: 5)\n 55699: a1 = u64 [s1 + 0x110]\n 55703: i32 a2 = 0x80 - a1\n 55707: a0 = u64 [s1 + 0x120]\n 55711: a1 = u64 [s1 + 0x118]\n 55715: jump [t0]\n      : @2000 (gas: 8)\n 55717: a4 = a4 | a2\n 55720: a2 = a0 | a1\n 55723: a2 = a2 | a4\n 55726: a2 = a2 >> 0x20\n 55729: a1 = a1 | a4\n 55732: a1 = a1 << 0x20\n 55735: a1 = a1 | a2\n 55738: jump [t0]\n      : @2001 (gas: 9)\n 55740: a3 = s1 + 0x100\n 55744: a2 = u64 [a3 + 0x38]\n 55747: a0 = 0xffffffbc\n 55757: a0 = a2 <u a0\n 55760: a1 = u64 [a3 + 0x30]\n 55763: a0 = 0 if a1 != 0\n 55765: a1 = u64 [a3 + 0x28]\n 55768: a0 = 0 if a1 != 0\n 55770: jump [t0]\n      : @2002 (gas: 11)\n 55772: a3 = u64 [s1 + 0x138]\n 55776: a0 = u64 [a3 + 0x18]\n 55779: a1 = u64 [a3 + 0x10]\n 55782: a2 = u64 [a3 + 0x8]\n 55785: a3 = u64 [a3]\n 55787: a0 = reverse a0\n 55789: a1 = reverse a1\n 55791: a2 = reverse a2\n 55793: a3 = reverse a3\n 55795: a4 = 0x4000\n 55799: jump [t0]\n      : @2003 (gas: 9)\n 55801: i32 a0 = a0 + 0xb8\n 55805: a0 = a0 + s1\n 55808: a1 = u64 [a0 + 0x790]\n 55812: u64 [s1 + 0x138] = a1\n 55816: a1 = u64 [a0 + 0x788]\n 55820: u64 [s1 + 0x130] = a1\n 55824: a0 = u32 [a0 + 0x798]\n 55828: u64 [s1 + 0x128] = a0\n 55832: jump [t0]\n      : @2004 (gas: 9)\n 55834: a1 = a0 <u a1\n 55837: a3 = u64 [s1 + 0x108]\n 55841: a2 = a3 + a1\n 55844: a3 = a2 <u a3\n 55847: a3 = a1 if a1 == 0\n 55850: a1 = u64 [s1 + 0x118]\n 55854: a3 = a3 + a1\n 55857: a1 = a3 <u a1\n 55860: jump [t0]\n      : @2005 (gas: 13)\n 55862: a1 = s1 + 0x100\n 55866: a4 = u64 [a1 + 0x28]\n 55869: a2 = u64 [a1 + 0x20]\n 55872: a0 = u64 [a1 + 0x38]\n 55875: a0 = a0 | a4\n 55878: a3 = u64 [a1 + 0x30]\n 55881: a1 = a2 | a3\n 55884: a1 = a1 | a0\n 55887: a1 = a1 >> 0x20\n 55890: a0 = a0 | a3\n 55893: a0 = a0 << 0x20\n 55896: a0 = a0 | a1\n 55899: jump [t0]\n      : @2006 (gas: 13)\n 55901: a4 = s1 + 0x100\n 55905: a2 = u64 [a4 + 0x18]\n 55908: a0 = u64 [a4 + 0x30]\n 55911: a1 = u64 [a4 + 0x20]\n 55914: a0 = a0 | a1\n 55917: a3 = u64 [a4 + 0x28]\n 55920: a1 = a2 | a3\n 55923: a1 = a1 | a0\n 55926: a1 = a1 >> 0x20\n 55929: a0 = a0 | a3\n 55932: a0 = a0 << 0x20\n 55935: a0 = a0 | a1\n 55938: jump [t0]\n      : @2007 (gas: 10)\n 55940: a1 = a0 <u a1\n 55943: a3 = u64 [s1 + 0xa8]\n 55947: a2 = a3 + a1\n 55950: a3 = a2 <u a3\n 55953: a3 = a1 if a1 == 0\n 55956: a1 = u64 [s1 + 0xb0]\n 55960: a3 = a3 + a1\n 55963: a1 = a3 <u a1\n 55966: a4 = u64 [s1 + 0xb8]\n 55970: jump [t0]\n      : @2008 (gas: 8)\n 55972: a2 = u64 [s1 + 0x78]\n 55975: a0 = 0xffffffbc\n 55985: a0 = a2 <u a0\n 55988: a1 = u64 [s1 + 0x70]\n 55991: a0 = 0 if a1 != 0\n 55993: a1 = u64 [s1 + 0x68]\n 55996: a0 = 0 if a1 != 0\n 55998: jump [t0]\n      : @2009 (gas: 13)\n 56000: a4 = s1 + 0x100\n 56004: u64 [a4 + 0x70] = a0\n 56007: u64 [a4 + 0x68] = a2\n 56010: a0 = a0 | a2\n 56013: u64 [a4 + 0x78] = a1\n 56016: a1 = a1 | a3\n 56019: a1 = a1 | a0\n 56022: a1 = a1 >> 0x20\n 56025: u64 [a4 + 0x60] = a3\n 56028: a0 = a0 | a3\n 56031: a0 = a0 << 0x20\n 56034: a0 = a0 | a1\n 56037: jump [t0]\n      : @2010 (gas: 9)\n 56039: a1 = a1 >> 0x4\n 56042: a2 = a2 << 0x3c\n 56045: a1 = a1 | a2\n 56048: a2 = a0 >u 0\n 56050: a1 = a1 <u 0x271\n 56054: a1 = a1 ^ 0x1\n 56057: a1 = a2 if a0 != 0\n 56060: a0 = a3 >> 0x4\n 56063: jump [t0]\n      : @2011 (gas: 6)\n 56065: a0 = a0 | a1\n 56068: a1 = a2 ^ 0x2\n 56071: a1 = a1 | a3\n 56074: a0 = a0 | a1\n 56077: a0 = a0 >u 0\n 56079: jump [t0]\n      : @2012 (gas: 5)\n 56081: a0 = reverse a0\n 56083: a1 = reverse a1\n 56085: a2 = reverse a2\n 56087: a3 = reverse a3\n 56089: jump [t0]\n      : @2013 (gas: 6)\n 56091: a0 = sp + 0xffffffffffffffe0\n 56094: a0 = a0 & 0xffffffffffffffe0\n 56097: u64 [s1 + 0x150] = a0\n 56101: sp = a0\n 56103: a0 = u64 [s1 + 0x168]\n 56107: jump [t0]\n      : @2014 (gas: 4)\n 56109: i32 a0 = a0 + 0xb8\n 56113: a3 = s1 + a0\n 56116: a4 = a3 + 0x100\n 56120: jump [t0]\n      : @2015 (gas: 4)\n 56122: i32 a0 = a0 + 0xb8\n 56126: a4 = s1 + a0\n 56129: a5 = a4 + 0x200\n 56133: jump [t0]\n      : @2016 (gas: 8)\n 56135: a2 = 0x100000000\n 56145: a2 = a2 ^ a1\n 56148: a2 = a2 | a0\n 56151: a3 = a1 >> 0x20\n 56154: a3 = a3 <u 0x1\n 56157: a3 = 0 if a0 != 0\n 56159: a3 = 0 if a2 == 0\n 56161: jump [t0]\n      : @2017 (gas: 7)\n 56163: a3 = a1 <u 0x100\n 56167: a3 = a3 ^ 0x1\n 56170: a1 = a2 >u 0\n 56172: a3 = a1 if a2 != 0\n 56175: a3 = a5 if a4 != 0\n 56178: a1 = ra | t1\n 56181: jump [t0]\n      : @2018 (gas: 8)\n 56183: u64 [s1 + 0xd0] = a0\n 56187: u64 [s1 + 0xd8] = a1\n 56191: a0 = u64 [s1 + 0x108]\n 56195: i32 a2 = a0 << 0x3\n 56198: u64 [s1 + 0x108] = a2\n 56202: a0 = u64 [s1 + 0x148]\n 56206: a1 = u64 [s1 + 0x150]\n 56210: jump [t0]\n      : @2019 (gas: 8)\n 56212: a1 = sp + 0xffffffffffffffe0\n 56215: a1 = a1 & 0xffffffffffffffe0\n 56218: u64 [s1 + 0x148] = a1\n 56222: sp = a1\n 56224: i32 a0 = a0 + 0\n 56226: i32 a2 = a1 + 0\n 56228: a1 = 0x40\n 56231: jump [t0]\n      : @2020 (gas: 9)\n 56233: a0 = u64 [a2 + 0x8]\n 56236: a1 = i32 [a2 + 0x10]\n 56239: a2 = u64 [a2]\n 56241: a0 = reverse a0\n 56243: a3 = a0 << 0x20\n 56246: a1 = reverse a1\n 56248: a1 = a1 >> 0x20\n 56251: a1 = a1 | a3\n 56254: jump [t0]\n      : @2021 (gas: 8)\n 56256: a0 = sp + 0xffffffffffffffe0\n 56259: a0 = a0 & 0xffffffffffffffe0\n 56262: u64 [s1 + 0x130] = a0\n 56266: sp = a0\n 56268: i32 a2 = a0 + 0\n 56270: a1 = 0x40\n 56273: a0 = u64 [s1 + 0x30]\n 56276: jump [t0]\n      : @2022 (gas: 8)\n 56278: a0 = sp + 0xffffffffffffffe0\n 56281: a0 = a0 & 0xffffffffffffffe0\n 56284: u64 [s1 + 0x128] = a0\n 56288: sp = a0\n 56290: i32 a2 = a0 + 0\n 56292: a1 = 0x40\n 56295: a0 = u64 [s1 + 0x30]\n 56298: jump [t0]\n      : @2023 (gas: 5)\n 56300: s1 = u64 [sp + 0x18]\n 56303: i32 a0 = s1 + 0x24\n 56306: u64 [sp + 88] = 0\n 56309: u64 [sp + 80] = 0\n 56312: jump [t0]\n      : @2024 (gas: 7)\n 56314: a1 = a0 | a3\n 56317: a1 = a1 | a2\n 56320: a1 = a1 >> 0x20\n 56323: a2 = a2 | a3\n 56326: a2 = a2 << 0x20\n 56329: a1 = a1 | a2\n 56332: jump [t0]\n      : @2025 (gas: 7)\n 56334: a4 = u64 [s1 + 0x150]\n 56338: u64 [a4 + 0x10] = a0\n 56341: u64 [a4 + 0x18] = a1\n 56344: u64 [a4] = a2\n 56346: u64 [a4 + 0x8] = a3\n 56349: a1 = a4\n 56351: jump [t0]\n      : @2026 (gas: 6)\n 56353: sp = s0 + 0xffffffffffffffa0\n 56356: ra = u64 [sp + 0x58]\n 56359: s0 = u64 [sp + 0x50]\n 56362: s1 = u64 [sp + 0x48]\n 56365: sp = sp + 0x60\n 56368: jump [t0]\n      : @2027 (gas: 6)\n 56370: u64 [a1 + 1760] = 0\n 56374: u64 [a1 + 1752] = 0\n 56378: u64 [a1 + 1736] = 0x3\n 56383: a2 = a1\n 56385: a0 = 0x20\n 56388: jump [t0]\n      : @2028 (gas: 4)\n 56390: i32 a0 = a1 + 0x4\n 56393: a1 = 0x20b8\n 56397: a2 = s1 + a1\n 56400: jump [t0]\n      : @2029 (gas: 8)\n 56402: a0 = u64 [a5 + 0x18]\n 56405: a1 = u64 [a5 + 0x20]\n 56408: a2 = u64 [a5 + 0x10]\n 56411: a3 = u64 [a5 + 0x8]\n 56414: a1 = a1 | a2\n 56417: a0 = a0 | a3\n 56420: a0 = a0 | a1\n 56423: jump [t0]\n      : @2030 (gas: 9)\n 56425: a1 = s1 + 0x100\n 56429: a0 = u64 [a1 + 0x20]\n 56432: a2 = a3 + 0x400\n 56436: u64 [a2 + 0x68] = a0\n 56439: a0 = u64 [a1 + 0x28]\n 56442: u64 [a2 + 0x70] = a0\n 56445: a0 = u64 [a1 + 0x30]\n 56448: u64 [a2 + 0x78] = a0\n 56451: jump [t0]\n      : @2031 (gas: 6)\n 56453: u64 [a1 + 1248] = 0\n 56457: u64 [a1 + 1240] = 0\n 56461: u64 [a1 + 1224] = 0x5\n 56466: a2 = a1\n 56468: a0 = 0x20\n 56471: jump [t0]\n      : @2032 (gas: 8)\n 56473: a0 = u64 [a2 + 0x8]\n 56476: a1 = i32 [a2 + 0x10]\n 56479: a2 = u64 [a2]\n 56481: a3 = reverse a0\n 56483: a0 = a3 << 0x20\n 56486: a1 = reverse a1\n 56488: a1 = a1 >> 0x20\n 56491: jump [t0]\n      : @2033 (gas: 5)\n 56493: sp = a0\n 56495: i32 a2 = a0 + 0\n 56497: a1 = 0x40\n 56500: a0 = u64 [s1 + 0xc8]\n 56504: jump [t0]\n      : @2034 (gas: 8)\n 56506: a0 = u64 [a4 + 0xd8]\n 56510: a1 = u64 [a4 + 0xe0]\n 56514: a2 = u64 [a4 + 0xd0]\n 56518: a3 = u64 [a4 + 0xc8]\n 56522: a1 = a1 | a2\n 56525: a0 = a0 | a3\n 56528: a0 = a0 | a1\n 56531: jump [t0]\n      : @2035 (gas: 7)\n 56533: a2 = a3 << 0x3c\n 56536: a0 = a0 | a2\n 56539: a2 = a0 >u 0\n 56541: a3 = a3 >> 0x4\n 56544: a4 = a3 >u 0\n 56546: a4 = a2 if a3 == 0\n 56549: jump [t0]\n      : @2036 (gas: 4)\n 56551: a0 = 0x38b8\n 56555: a4 = s1 + a0\n 56558: a5 = a4 + 0x200\n 56562: jump [t0]\n      : @2037 (gas: 10)\n 56564: a4 = u64 [s1 + 0xf8]\n 56568: a1 = a1 + a4\n 56571: a4 = a0 | a3\n 56574: a1 = a1 | a2\n 56577: a4 = a4 | a1\n 56580: a4 = a4 >> 0x20\n 56583: a1 = a1 | a3\n 56586: a1 = a1 << 0x20\n 56589: a1 = a1 | a4\n 56592: jump [t0]\n      : @2038 (gas: 2)\n 56594: a3 = a2 & 0x40\n 56597: jump @2042 if a3 != 0\n      : @2039 (gas: 1)\n 56600: jump @2041 if a2 == 0\n      : @2040 (gas: 6)\n 56603: i32 a3 = 0x40 - a2\n 56606: a3 = a1 << a3\n 56609: a1 = a1 >> a2\n 56612: a0 = a0 >> a2\n 56615: a0 = a0 | a3\n 56618: ret\n      : @2041 (gas: 1)\n 56620: ret\n      : @2042 (gas: 4)\n 56622: a0 = a2 + 0xffffffffffffffc0\n 56625: a0 = a1 >> a0\n 56628: a1 = 0\n 56630: ret\n      : @2043 (gas: 2)\n 56632: a3 = a2 & 0x40\n 56635: jump @2047 if a3 != 0\n      : @2044 (gas: 1)\n 56638: jump @2046 if a2 == 0\n      : @2045 (gas: 6)\n 56641: i32 a3 = 0x40 - a2\n 56644: a3 = a0 >> a3\n 56647: a0 = a0 << a2\n 56650: a1 = a1 << a2\n 56653: a1 = a1 | a3\n 56656: ret\n      : @2046 (gas: 1)\n 56658: ret\n      : @2047 (gas: 4)\n 56660: a1 = a2 + 0xffffffffffffffc0\n 56663: a1 = a0 << a1\n 56666: a0 = 0\n 56668: ret\n","bytecode":{"object":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"GRID_SIZE()":"7fc4eda8","currentGameId()":"536a3ddc","determineWinner()":"33b16d93","emergencyDetermineWinner()":"39c85bff","entryFee()":"072ea61c","gameFee()":"ea777eec","games(uint256)":"117a5b90","getAvailableTiles()":"c19f4925","getCurrentGrid()":"de592333","getGameInfo(uint256)":"47e1d550","getGrid(uint256)":"27754775","getPlayerTileCount(address)":"6915d788","minPlayers()":"2770c895","owner()":"8da5cb5b","paused()":"5c975abb","playerGamesPlayed(address)":"c8c1fcaa","playerWins(address)":"8b31fb89","selectMultipleTiles(uint256[])":"30b70493","selectTile(uint256)":"9793ed08","setPaused(bool)":"16c38b3c","teamWallet()":"59927044","transferOwnership(address)":"f2fde38b","updateEntryFee(uint256)":"aa182626","updateGameFee(uint256)":"b70a6dec","updateMinPlayers(uint256)":"8f4fafc8","updateTeamWallet(address)":"7cb332bb"}},"irOptimized":"/// @use-src 1:\"contracts/PvPGridEnhanced.sol\"\nobject \"PvPGridEnhanced_1754\" {\n    code {\n        {\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"PvPGridEnhanced_1754\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 96)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let value := mload(_1)\n            let value_1 := mload(add(_1, 32))\n            let value_2 := mload(add(_1, 64))\n            let _2 := and(value_2, sub(shl(160, 1), 1))\n            if iszero(eq(value_2, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            sstore(/** @src 1:273:274  \"2\" */ 0x02, 0x02)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            sstore(/** @src 1:1928:1946  \"owner = msg.sender\" */ 0x07, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ or(and(sload(/** @src 1:1928:1946  \"owner = msg.sender\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ not(sub(shl(160, 1), 1))), /** @src 1:1936:1946  \"msg.sender\" */ caller()))\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            sstore(/** @src 1:1956:1980  \"teamWallet = _teamWallet\" */ 0x08, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ or(and(sload(/** @src 1:1956:1980  \"teamWallet = _teamWallet\" */ 0x08), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ not(sub(shl(160, 1), 1))), _2))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ value)\n            sstore(1, value_1)\n            if /** @src 1:2056:2072  \"_gameFee <= 2000\" */ gt(value_1, /** @src 1:2068:2072  \"2000\" */ 0x07d0)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 12)\n                mstore(add(memPtr, 68), \"Fee too high\")\n                revert(memPtr, 100)\n            }\n            if /** @src 1:2118:2143  \"_teamWallet != address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _2)\n            {\n                let memPtr_1 := mload(64)\n                mstore(memPtr_1, shl(229, 4594637))\n                mstore(add(memPtr_1, 4), 32)\n                mstore(add(memPtr_1, 36), 19)\n                mstore(add(memPtr_1, 68), \"Invalid team wallet\")\n                revert(memPtr_1, 100)\n            }\n            sstore(/** @src 1:2177:2199  \"_status = _NOT_ENTERED\" */ 0x09, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n            let _3 := sload(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            if eq(_3, not(0))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x11)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n            }\n            let ret := add(_3, 1)\n            sstore(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ ret)\n            mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ ret)\n            mstore(32, /** @src 1:9312:9317  \"games\" */ 0x03)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 64)\n            sstore(/** @src 1:9342:9359  \"newGame.startTime\" */ add(dataSlot, 20), /** @src 1:9362:9377  \"block.timestamp\" */ timestamp())\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let _4 := sload(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let _5 := sload(/** @src -1:-1:-1 */ 0)\n            /// @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\"\n            let _6 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n            mstore(_6, _5)\n            /// @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\"\n            log2(_6, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 32, /** @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\" */ 0x1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73, _4)\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            let _7 := mload(64)\n            let _8 := datasize(\"PvPGridEnhanced_1754_deployed\")\n            codecopy(_7, dataoffset(\"PvPGridEnhanced_1754_deployed\"), _8)\n            return(_7, _8)\n        }\n    }\n    /// @use-src 1:\"contracts/PvPGridEnhanced.sol\"\n    object \"PvPGridEnhanced_1754_deployed\" {\n        code {\n            {\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x072ea61c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(_1, sload(0))\n                        return(_1, 32)\n                    }\n                    case 0x117a5b90 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ 3)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot := keccak256(0, 64)\n                        let _2 := sload(/** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 17))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _3 := sload(/** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 18))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _4 := sload(/** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 19))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _5 := sload(/** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 20))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _6 := sload(/** @src 1:630:667  \"mapping(uint256 => Game) public games\" */ add(dataSlot, 21))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos := mload(64)\n                        mstore(memPos, _2)\n                        mstore(add(memPos, 32), _3)\n                        mstore(add(memPos, 64), _4)\n                        mstore(add(memPos, 96), _5)\n                        mstore(add(memPos, 128), iszero(iszero(and(_6, 0xff))))\n                        mstore(add(memPos, 160), and(shr(8, _6), sub(shl(160, 1), 1)))\n                        return(memPos, 192)\n                    }\n                    case 0x16c38b3c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _7 := iszero(iszero(value))\n                        if iszero(eq(value, _7)) { revert(0, 0) }\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        let _8 := sload(/** @src 1:9542:9558  \"paused = _paused\" */ 0x08)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        sstore(/** @src 1:9542:9558  \"paused = _paused\" */ 0x08, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ or(and(_8, not(shl(160, 255))), and(shl(160, _7), shl(160, 255))))\n                        return(0, 0)\n                    }\n                    case 0x2770c895 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _9 := sload(/** @src 1:245:274  \"uint256 public minPlayers = 2\" */ 2)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos_1 := mload(64)\n                        mstore(memPos_1, _9)\n                        return(memPos_1, 32)\n                    }\n                    case 0x27754775 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let size := 0\n                        let _10 := 0\n                        _10 := 0\n                        size := 512\n                        let memPtr := mload(64)\n                        finalize_allocation(memPtr, size)\n                        let size_1 := 0\n                        let _11 := 0\n                        _11 := 0\n                        size_1 := size\n                        calldatacopy(memPtr, calldatasize(), size)\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 1:10590:10595  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_1 := keccak256(0, 64)\n                        let pos := mload(64)\n                        let memPtr_1 := pos\n                        pos := pos\n                        let srcPtr := dataSlot_1\n                        let i := 0\n                        for { } lt(i, 16) { i := add(i, 1) }\n                        {\n                            mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                            pos := add(pos, 32)\n                            srcPtr := add(srcPtr, 1)\n                        }\n                        finalize_allocation(memPtr_1, size)\n                        let memPos_2 := mload(64)\n                        return(memPos_2, sub(abi_encode_array_address(memPos_2, memPtr_1), memPos_2))\n                    }\n                    case 0x30b70493 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let length := calldataload(add(4, offset))\n                        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                        let arrayPos := add(offset, 36)\n                        if gt(add(add(offset, shl(5, length)), 36), calldatasize()) { revert(0, 0) }\n                        /// @src 1:1600:1635  \"require(!paused, \\\"Contract paused\\\")\"\n                        require_helper_stringliteral_3050(/** @src 1:1608:1615  \"!paused\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(160, sload(/** @src 1:1609:1615  \"paused\" */ 0x08)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)))\n                        /// @src 1:1697:1760  \"require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\")\"\n                        require_helper_stringliteral_ebf7(/** @src 1:1705:1724  \"_status != _ENTERED\" */ iszero(eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:1705:1712  \"_status\" */ 0x09), /** @src 1:1095:1096  \"2\" */ 0x02)))\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:1095:1096  \"2\" */ 0x02)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        if iszero(/** @src 1:3534:3576  \"msg.value == entryFee * tileIndexes.length\" */ eq(/** @src 1:3534:3543  \"msg.value\" */ callvalue(), /** @src 1:3547:3576  \"entryFee * tileIndexes.length\" */ checked_mul_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(0), /** @src 1:3547:3576  \"entryFee * tileIndexes.length\" */ length)))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        {\n                            let memPtr_2 := mload(64)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, 4), 32)\n                            mstore(add(memPtr_2, 36), 19)\n                            mstore(add(memPtr_2, 68), \"Incorrect total fee\")\n                            revert(memPtr_2, 100)\n                        }\n                        /// @src 1:3618:3667  \"tileIndexes.length > 0 && tileIndexes.length <= 4\"\n                        let expr := /** @src 1:3618:3640  \"tileIndexes.length > 0\" */ iszero(iszero(length))\n                        /// @src 1:3618:3667  \"tileIndexes.length > 0 && tileIndexes.length <= 4\"\n                        if expr\n                        {\n                            expr := /** @src 1:3644:3667  \"tileIndexes.length <= 4\" */ iszero(gt(length, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 4))\n                        }\n                        if iszero(expr)\n                        {\n                            let memPtr_3 := mload(64)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, 4), 32)\n                            mstore(add(memPtr_3, 36), 23)\n                            mstore(add(memPtr_3, 68), \"Invalid number of tiles\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, sload(4))\n                        mstore(32, /** @src 1:3734:3739  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_2 := keccak256(0, 64)\n                        /// @src 1:3772:3792  \"game.playerTileCount\"\n                        let _12 := add(dataSlot_2, 16)\n                        /// @src 1:3772:3804  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:3793:3803  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:3772:3804  \"game.playerTileCount[msg.sender]\" */ _12)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:3764:3872  \"require(game.playerTileCount[msg.sender] + tileIndexes.length <= GRID_SIZE / 2, \\\"Too many tiles per player\\\")\"\n                        require_helper_stringliteral_4a54(/** @src 1:3772:3842  \"game.playerTileCount[msg.sender] + tileIndexes.length <= GRID_SIZE / 2\" */ iszero(gt(/** @src 1:3772:3825  \"game.playerTileCount[msg.sender] + tileIndexes.length\" */ checked_add_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:3772:3804  \"game.playerTileCount[msg.sender]\" */ dataSlot_3), /** @src 1:3772:3825  \"game.playerTileCount[msg.sender] + tileIndexes.length\" */ length), /** @src 1:1609:1615  \"paused\" */ 0x08)))\n                        /// @src 1:3896:3909  \"uint256 i = 0\"\n                        let var_i := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0\n                        /// @src 1:3891:4248  \"for (uint256 i = 0; i < tileIndexes.length; i++) {...\"\n                        for { }\n                        /** @src 1:3911:3933  \"i < tileIndexes.length\" */ lt(var_i, length)\n                        /// @src 1:3896:3909  \"uint256 i = 0\"\n                        {\n                            /// @src 1:3935:3938  \"i++\"\n                            var_i := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:3935:3938  \"i++\" */ var_i, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        }\n                        /// @src 1:3935:3938  \"i++\"\n                        {\n                            /// @src 1:3954:4011  \"require(tileIndexes[i] < GRID_SIZE, \\\"Invalid tile index\\\")\"\n                            require_helper_stringliteral_307f(/** @src 1:3962:3988  \"tileIndexes[i] < GRID_SIZE\" */ lt(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ calldataload(/** @src 1:3962:3976  \"tileIndexes[i]\" */ calldata_array_index_access_uint256_dyn_calldata(arrayPos, length, var_i)), /** @src 1:3772:3792  \"game.playerTileCount\" */ 16))\n                            /// @src 1:4033:4058  \"game.grid[tileIndexes[i]]\"\n                            let _13, _14 := storage_array_index_access_address(dataSlot_2, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ calldataload(/** @src 1:4043:4057  \"tileIndexes[i]\" */ calldata_array_index_access_uint256_dyn_calldata(arrayPos, length, var_i)))\n                            /// @src 1:4025:4098  \"require(game.grid[tileIndexes[i]] == address(0), \\\"Tile already selected\\\")\"\n                            require_helper_stringliteral_589a(/** @src 1:4033:4072  \"game.grid[tileIndexes[i]] == address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:3734:3739  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _14), sload(/** @src 1:4033:4058  \"game.grid[tileIndexes[i]]\" */ _13)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                            /// @src 1:4125:4150  \"game.grid[tileIndexes[i]]\"\n                            let _15, _16 := storage_array_index_access_address(dataSlot_2, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ calldataload(/** @src 1:4135:4149  \"tileIndexes[i]\" */ calldata_array_index_access_uint256_dyn_calldata(arrayPos, length, var_i)))\n                            /// @src 1:4125:4163  \"game.grid[tileIndexes[i]] = msg.sender\"\n                            update_storage_value_address_to_address(_15, _16, /** @src 1:3793:3803  \"msg.sender\" */ caller())\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            let _17 := sload(4)\n                            let value_1 := calldataload(/** @src 1:4222:4236  \"tileIndexes[i]\" */ calldata_array_index_access_uint256_dyn_calldata(arrayPos, length, var_i))\n                            /// @src 1:4182:4237  \"TileSelected(currentGameId, msg.sender, tileIndexes[i])\"\n                            let _18 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n                            mstore(_18, value_1)\n                            /// @src 1:4182:4237  \"TileSelected(currentGameId, msg.sender, tileIndexes[i])\"\n                            log3(_18, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 32, /** @src 1:4182:4237  \"TileSelected(currentGameId, msg.sender, tileIndexes[i])\" */ 0x19096bbaf57f25f25fc838b12784fb7497242fe3ca9d1c50f6990f13fe053810, _17, /** @src 1:3793:3803  \"msg.sender\" */ caller())\n                        }\n                        /// @src 1:4266:4298  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:3793:3803  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:4266:4298  \"game.playerTileCount[msg.sender]\" */ _12)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:4266:4298  \"game.playerTileCount[msg.sender]\" */ dataSlot_4, /** @src 1:4266:4320  \"game.playerTileCount[msg.sender] += tileIndexes.length\" */ checked_add_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4266:4298  \"game.playerTileCount[msg.sender]\" */ dataSlot_4), /** @src 1:4266:4320  \"game.playerTileCount[msg.sender] += tileIndexes.length\" */ length))\n                        /// @src 1:4330:4348  \"game.tilesSelected\"\n                        let _19 := add(dataSlot_2, 17)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(_19, /** @src 1:4330:4370  \"game.tilesSelected += tileIndexes.length\" */ checked_add_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4330:4370  \"game.tilesSelected += tileIndexes.length\" */ _19), length))\n                        /// @src 1:4380:4394  \"game.prizePool\"\n                        let _20 := add(dataSlot_2, 18)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(_20, /** @src 1:4380:4407  \"game.prizePool += msg.value\" */ checked_add_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4380:4407  \"game.prizePool += msg.value\" */ _20), /** @src 1:3534:3543  \"msg.value\" */ callvalue()))\n                        /// @src 1:4430:4462  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_5 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:3793:3803  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:4430:4462  \"game.playerTileCount[msg.sender]\" */ _12)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:4426:4542  \"if (game.playerTileCount[msg.sender] == tileIndexes.length) {...\"\n                        if /** @src 1:4430:4484  \"game.playerTileCount[msg.sender] == tileIndexes.length\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4430:4462  \"game.playerTileCount[msg.sender]\" */ dataSlot_5), /** @src 1:4430:4484  \"game.playerTileCount[msg.sender] == tileIndexes.length\" */ length)\n                        /// @src 1:4426:4542  \"if (game.playerTileCount[msg.sender] == tileIndexes.length) {...\"\n                        {\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(0, /** @src 1:3793:3803  \"msg.sender\" */ caller())\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(32, /** @src 1:4500:4517  \"playerGamesPlayed\" */ 0x06)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            let dataSlot_6 := keccak256(0, 64)\n                            /// @src 1:1095:1096  \"2\"\n                            sstore(dataSlot_6, /** @src 1:4500:4531  \"playerGamesPlayed[msg.sender]++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4500:4531  \"playerGamesPlayed[msg.sender]++\" */ dataSlot_6)))\n                        }\n                        /// @src 1:4560:4661  \"if (game.tilesSelected == GRID_SIZE) {...\"\n                        if /** @src 1:4564:4595  \"game.tilesSelected == GRID_SIZE\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4564:4582  \"game.tilesSelected\" */ _19), /** @src 1:3772:3792  \"game.playerTileCount\" */ 16)\n                        /// @src 1:4560:4661  \"if (game.tilesSelected == GRID_SIZE) {...\"\n                        {\n                            /// @src 1:1095:1096  \"2\"\n                            sstore(/** @src 1:4611:4635  \"game.finalSelectionBlock\" */ add(dataSlot_2, 19), /** @src 1:4638:4650  \"block.number\" */ number())\n                        }\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        return(0, 0)\n                    }\n                    case 0x33b16d93 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 1:1697:1760  \"require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\")\"\n                        require_helper_stringliteral_ebf7(/** @src 1:1705:1724  \"_status != _ENTERED\" */ iszero(eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:1705:1712  \"_status\" */ 0x09), /** @src 1:1095:1096  \"2\" */ 0x02)))\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:1095:1096  \"2\" */ 0x02)\n                        /// @src 1:1798:1799  \"_\"\n                        fun_determineWinner_inner()\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:1052:1053  \"1\" */ 0x01)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        return(0, 0)\n                    }\n                    case 0x39c85bff {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:1697:1760  \"require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\")\"\n                        require_helper_stringliteral_ebf7(/** @src 1:1705:1724  \"_status != _ENTERED\" */ iszero(eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:1705:1712  \"_status\" */ 0x09), /** @src 1:1095:1096  \"2\" */ 0x02)))\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:1095:1096  \"2\" */ 0x02)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _21 := sload(4)\n                        mstore(0, _21)\n                        mstore(0x20, /** @src 1:6466:6471  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_7 := keccak256(0, 64)\n                        /// @src 1:6496:6557  \"require(game.tilesSelected == GRID_SIZE, \\\"Game not complete\\\")\"\n                        require_helper_stringliteral_48a8(/** @src 1:6504:6535  \"game.tilesSelected == GRID_SIZE\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:6504:6522  \"game.tilesSelected\" */ add(dataSlot_7, 17)), /** @src 1:151:153  \"16\" */ 0x10))\n                        /// @src 1:6576:6597  \"game.winnerDetermined\"\n                        let _22 := add(dataSlot_7, 21)\n                        /// @src 1:6567:6627  \"require(!game.winnerDetermined, \\\"Winner already determined\\\")\"\n                        require_helper_stringliteral_10ee(/** @src 1:6575:6597  \"!game.winnerDetermined\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:6576:6597  \"game.winnerDetermined\" */ _22), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)))\n                        let _23 := sload(/** @src 1:6660:6684  \"game.finalSelectionBlock\" */ add(dataSlot_7, 19))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let sum := add(_23, 0xff)\n                        if gt(_23, sum)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, /** @src 1:6504:6522  \"game.tilesSelected\" */ 17)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            revert(0, 0x24)\n                        }\n                        if iszero(/** @src 1:6645:6690  \"block.number > game.finalSelectionBlock + 255\" */ gt(/** @src 1:6645:6657  \"block.number\" */ number(), /** @src 1:6645:6690  \"block.number > game.finalSelectionBlock + 255\" */ sum))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        {\n                            let memPtr_4 := mload(64)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, 4), 0x20)\n                            mstore(add(memPtr_4, 36), 24)\n                            mstore(add(memPtr_4, 68), \"Use normal determination\")\n                            revert(memPtr_4, 100)\n                        }\n                        /// @src 1:6850:6962  \"abi.encodePacked(...\"\n                        let expr_mpos := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n                        /// @src 1:6850:6962  \"abi.encodePacked(...\"\n                        let _24 := add(expr_mpos, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20)\n                        mstore(_24, /** @src 1:6880:6895  \"block.timestamp\" */ timestamp())\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(add(/** @src 1:6850:6962  \"abi.encodePacked(...\" */ expr_mpos, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 64), /** @src 1:6909:6925  \"block.prevrandao\" */ prevrandao())\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(add(/** @src 1:6850:6962  \"abi.encodePacked(...\" */ expr_mpos, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 96), _21)\n                        /// @src 1:6850:6962  \"abi.encodePacked(...\"\n                        mstore(expr_mpos, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 96)\n                        /// @src 1:6850:6962  \"abi.encodePacked(...\"\n                        finalize_allocation(expr_mpos, 128)\n                        /// @src 1:7056:7078  \"game.grid[winningTile]\"\n                        let _25, _26 := storage_array_index_access_address(dataSlot_7, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:6840:6963  \"keccak256(abi.encodePacked(...\" */ keccak256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _24, mload(/** @src 1:6840:6963  \"keccak256(abi.encodePacked(...\" */ expr_mpos)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 15))\n                        /// @src 1:7042:7078  \"game.winner = game.grid[winningTile]\"\n                        update_storage_value_offset_address_to_address(_22, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:6466:6471  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _26), sload(/** @src 1:7056:7078  \"game.grid[winningTile]\" */ _25)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        let result := or(and(sload(_22), not(255)), /** @src 1:7112:7116  \"true\" */ 0x01)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        sstore(_22, result)\n                        mstore(0, and(shr(8, result), sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:7126:7136  \"playerWins\" */ 0x05)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_8 := keccak256(0, 64)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(dataSlot_8, /** @src 1:7126:7151  \"playerWins[game.winner]++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:7126:7151  \"playerWins[game.winner]++\" */ dataSlot_8)))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _27 := sload(/** @src 1:7193:7207  \"game.prizePool\" */ add(dataSlot_7, 18))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let r := div(/** @src 1:7193:7217  \"game.prizePool * gameFee\" */ checked_mul_uint256(_27, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:7112:7116  \"true\" */ 0x01)), /** @src 1:7221:7226  \"10000\" */ 0x2710)\n                        /// @src 1:7258:7286  \"game.prizePool - platformFee\"\n                        let expr_1 := checked_sub_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _27, /** @src 1:7258:7286  \"game.prizePool - platformFee\" */ r)\n                        /// @src 1:7305:7463  \"if (platformFee > 0) {...\"\n                        if /** @src 1:7309:7324  \"platformFee > 0\" */ iszero(iszero(r))\n                        /// @src 1:7305:7463  \"if (platformFee > 0) {...\"\n                        {\n                            /// @src 1:7362:7396  \"owner.call{value: platformFee}(\\\"\\\")\"\n                            let expr_component := call(gas(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)), /** @src 1:7362:7396  \"owner.call{value: platformFee}(\\\"\\\")\" */ r, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0, 0, 0, 0)\n                            /// @src 1:7362:7396  \"owner.call{value: platformFee}(\\\"\\\")\"\n                            pop(extract_returndata())\n                            /// @src 1:7410:7452  \"require(feeSuccess, \\\"Fee transfer failed\\\")\"\n                            require_helper_stringliteral_5ce8(expr_component)\n                        }\n                        /// @src 1:7505:7545  \"game.winner.call{value: winnerPrize}(\\\"\\\")\"\n                        let expr_component_1 := call(gas(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(8, sload(/** @src 1:7505:7516  \"game.winner\" */ _22)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)), /** @src 1:7505:7545  \"game.winner.call{value: winnerPrize}(\\\"\\\")\" */ expr_1, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0, 0, 0, 0)\n                        /// @src 1:7505:7545  \"game.winner.call{value: winnerPrize}(\\\"\\\")\"\n                        pop(extract_returndata())\n                        /// @src 1:7555:7601  \"require(prizeSuccess, \\\"Prize transfer failed\\\")\"\n                        require_helper_stringliteral_e772(expr_component_1)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _28 := sload(4)\n                        let value_2 := and(shr(8, sload(/** @src 1:7654:7665  \"game.winner\" */ _22)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                        /// @src 1:7625:7679  \"GameCompleted(currentGameId, game.winner, winnerPrize)\"\n                        let _29 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n                        mstore(_29, expr_1)\n                        /// @src 1:7625:7679  \"GameCompleted(currentGameId, game.winner, winnerPrize)\"\n                        log3(_29, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20, /** @src 1:7625:7679  \"GameCompleted(currentGameId, game.winner, winnerPrize)\" */ 0xf6ae188cc6336ef5ad970d3c81cda5814b4c4902540924c6924debe94ece13eb, _28, value_2)\n                        fun_startNewGame()\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:7112:7116  \"true\" */ 0x01)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        return(0, 0)\n                    }\n                    case 0x47e1d550 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, calldataload(4))\n                        mstore(32, /** @src 1:11623:11628  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_9 := keccak256(0, 64)\n                        let _30 := sload(/** @src 1:11667:11685  \"game.tilesSelected\" */ add(dataSlot_9, 17))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _31 := sload(/** @src 1:11699:11713  \"game.prizePool\" */ add(dataSlot_9, 18))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _32 := sload(/** @src 1:11772:11793  \"game.winnerDetermined\" */ add(dataSlot_9, 21))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos_3 := mload(64)\n                        mstore(memPos_3, _30)\n                        mstore(add(memPos_3, 32), _31)\n                        mstore(add(memPos_3, 64), /** @src 1:11727:11758  \"game.tilesSelected == GRID_SIZE\" */ eq(_30, /** @src 1:151:153  \"16\" */ 0x10))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(add(memPos_3, 96), iszero(iszero(and(_32, 0xff))))\n                        mstore(add(memPos_3, 128), and(shr(8, _32), sub(shl(160, 1), 1)))\n                        return(memPos_3, 160)\n                    }\n                    case 0x536a3ddc {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _33 := sload(4)\n                        let memPos_4 := mload(64)\n                        mstore(memPos_4, _33)\n                        return(memPos_4, 32)\n                    }\n                    case 0x59927044 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_3 := and(sload(/** @src 1:885:910  \"address public teamWallet\" */ 8), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                        let memPos_5 := mload(64)\n                        mstore(memPos_5, value_3)\n                        return(memPos_5, 32)\n                    }\n                    case 0x5c975abb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_4 := and(shr(160, sload(/** @src 1:959:977  \"bool public paused\" */ 8)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)\n                        let memPos_6 := mload(64)\n                        mstore(memPos_6, iszero(iszero(value_4)))\n                        return(memPos_6, 32)\n                    }\n                    case 0x6915d788 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_5 := calldataload(4)\n                        if iszero(eq(value_5, and(value_5, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                        mstore(0, sload(4))\n                        mstore(32, /** @src 1:11328:11333  \"games\" */ 0x03)\n                        /// @src 1:11328:11364  \"games[currentGameId].playerTileCount\"\n                        let _34 := add(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ keccak256(0, 64), /** @src 1:11328:11364  \"games[currentGameId].playerTileCount\" */ 16)\n                        /// @src 1:11328:11372  \"games[currentGameId].playerTileCount[player]\"\n                        let dataSlot_10 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:11328:11372  \"games[currentGameId].playerTileCount[player]\" */ value_5, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:11328:11364  \"games[currentGameId].playerTileCount\" */ _34)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_10 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        let _35 := sload(/** @src 1:11328:11372  \"games[currentGameId].playerTileCount[player]\" */ dataSlot_10)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos_7 := mload(64)\n                        mstore(memPos_7, _35)\n                        return(memPos_7, 32)\n                    }\n                    case 0x7cb332bb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_6 := calldataload(4)\n                        let _36 := and(value_6, sub(shl(160, 1), 1))\n                        if iszero(eq(value_6, _36)) { revert(0, 0) }\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        if /** @src 1:10005:10029  \"_newWallet != address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _36)\n                        {\n                            let memPtr_5 := mload(64)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, 4), 32)\n                            mstore(add(memPtr_5, 36), 14)\n                            mstore(add(memPtr_5, 68), \"Invalid wallet\")\n                            revert(memPtr_5, 100)\n                        }\n                        sstore(/** @src 1:10058:10081  \"teamWallet = _newWallet\" */ 0x08, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ or(and(sload(/** @src 1:10058:10081  \"teamWallet = _newWallet\" */ 0x08), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(160, 0xffffffffffffffffffffffff)), _36))\n                        return(0, 0)\n                    }\n                    case 0x7fc4eda8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(64)\n                        mstore(memPos_8, /** @src 1:151:153  \"16\" */ 0x10)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        return(memPos_8, 32)\n                    }\n                    case 0x8b31fb89 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_7 := calldataload(4)\n                        let _37 := and(value_7, sub(shl(160, 1), 1))\n                        if iszero(eq(value_7, _37)) { revert(0, 0) }\n                        mstore(0, _37)\n                        mstore(32, /** @src 1:732:777  \"mapping(address => uint256) public playerWins\" */ 5)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _38 := sload(keccak256(0, 64))\n                        let memPos_9 := mload(64)\n                        mstore(memPos_9, _38)\n                        return(memPos_9, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_8 := and(sload(/** @src 1:859:879  \"address public owner\" */ 7), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                        let memPos_10 := mload(64)\n                        mstore(memPos_10, value_8)\n                        return(memPos_10, 32)\n                    }\n                    case 0x8f4fafc8 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_9 := calldataload(4)\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:10182:10226  \"_minPlayers >= 2 && _minPlayers <= GRID_SIZE\"\n                        let expr_2 := /** @src 1:10182:10198  \"_minPlayers >= 2\" */ iszero(lt(value_9, /** @src 1:10197:10198  \"2\" */ 0x02))\n                        /// @src 1:10182:10226  \"_minPlayers >= 2 && _minPlayers <= GRID_SIZE\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 1:10202:10226  \"_minPlayers <= GRID_SIZE\" */ iszero(gt(value_9, /** @src 1:151:153  \"16\" */ 0x10))\n                        }\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        if iszero(expr_2)\n                        {\n                            let memPtr_6 := mload(64)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, 4), 32)\n                            mstore(add(memPtr_6, 36), 19)\n                            mstore(add(memPtr_6, 68), \"Invalid min players\")\n                            revert(memPtr_6, 100)\n                        }\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:10197:10198  \"2\" */ 0x02, /** @src 1:1095:1096  \"2\" */ value_9)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        return(0, 0)\n                    }\n                    case 0x9793ed08 {\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_10 := calldataload(4)\n                        /// @src 1:1600:1635  \"require(!paused, \\\"Contract paused\\\")\"\n                        require_helper_stringliteral_3050(/** @src 1:1608:1615  \"!paused\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(160, sload(/** @src 1:1609:1615  \"paused\" */ 0x08)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)))\n                        /// @src 1:1697:1760  \"require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\")\"\n                        require_helper_stringliteral_ebf7(/** @src 1:1705:1724  \"_status != _ENTERED\" */ iszero(eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:1705:1712  \"_status\" */ 0x09), /** @src 1:1095:1096  \"2\" */ 0x02)))\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:1095:1096  \"2\" */ 0x02)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        if iszero(/** @src 1:2342:2363  \"msg.value == entryFee\" */ eq(/** @src 1:2342:2351  \"msg.value\" */ callvalue(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(0)))\n                        {\n                            let memPtr_7 := mload(64)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, 4), 32)\n                            mstore(add(memPtr_7, 36), 19)\n                            mstore(add(memPtr_7, 68), \"Incorrect entry fee\")\n                            revert(memPtr_7, 100)\n                        }\n                        /// @src 1:2397:2449  \"require(tileIndex < GRID_SIZE, \\\"Invalid tile index\\\")\"\n                        require_helper_stringliteral_307f(/** @src 1:2405:2426  \"tileIndex < GRID_SIZE\" */ lt(value_10, /** @src 1:151:153  \"16\" */ 0x10))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(0, sload(4))\n                        mstore(32, /** @src 1:2488:2493  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_11 := keccak256(0, 64)\n                        /// @src 1:2526:2546  \"game.grid[tileIndex]\"\n                        let _39, _40 := storage_array_index_access_address(dataSlot_11, value_10)\n                        /// @src 1:2518:2586  \"require(game.grid[tileIndex] == address(0), \\\"Tile already selected\\\")\"\n                        require_helper_stringliteral_589a(/** @src 1:2526:2560  \"game.grid[tileIndex] == address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:2488:2493  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _40), sload(/** @src 1:2526:2546  \"game.grid[tileIndex]\" */ _39)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        if iszero(/** @src 1:2604:2626  \"!game.winnerDetermined\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:2605:2626  \"game.winnerDetermined\" */ add(dataSlot_11, 21)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)))\n                        {\n                            let memPtr_8 := mload(64)\n                            mstore(memPtr_8, shl(229, 4594637))\n                            mstore(add(memPtr_8, 4), 32)\n                            mstore(add(memPtr_8, 36), /** @src 1:2605:2626  \"game.winnerDetermined\" */ 21)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(add(memPtr_8, 68), \"Game already finished\")\n                            revert(memPtr_8, 100)\n                        }\n                        /// @src 1:2737:2757  \"game.playerTileCount\"\n                        let _41 := add(dataSlot_11, /** @src 1:151:153  \"16\" */ 0x10)\n                        /// @src 1:2737:2769  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_12 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:2758:2768  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:2737:2769  \"game.playerTileCount[msg.sender]\" */ _41)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_12 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:2729:2815  \"require(game.playerTileCount[msg.sender] < GRID_SIZE / 2, \\\"Too many tiles per player\\\")\"\n                        require_helper_stringliteral_4a54(/** @src 1:2737:2785  \"game.playerTileCount[msg.sender] < GRID_SIZE / 2\" */ lt(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:2737:2769  \"game.playerTileCount[msg.sender]\" */ dataSlot_12), /** @src 1:1609:1615  \"paused\" */ 0x08))\n                        /// @src 1:2866:2886  \"game.grid[tileIndex]\"\n                        let _42, _43 := storage_array_index_access_address(dataSlot_11, value_10)\n                        /// @src 1:2866:2899  \"game.grid[tileIndex] = msg.sender\"\n                        update_storage_value_address_to_address(_42, _43, /** @src 1:2758:2768  \"msg.sender\" */ caller())\n                        /// @src 1:2909:2941  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_13 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:2758:2768  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:2909:2941  \"game.playerTileCount[msg.sender]\" */ _41)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_13 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:2909:2941  \"game.playerTileCount[msg.sender]\" */ dataSlot_13, /** @src 1:2909:2943  \"game.playerTileCount[msg.sender]++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:2909:2941  \"game.playerTileCount[msg.sender]\" */ dataSlot_13)))\n                        /// @src 1:2953:2971  \"game.tilesSelected\"\n                        let _44 := add(dataSlot_11, 17)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(_44, /** @src 1:2953:2973  \"game.tilesSelected++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:2953:2973  \"game.tilesSelected++\" */ _44)))\n                        /// @src 1:2983:2997  \"game.prizePool\"\n                        let _45 := add(dataSlot_11, 18)\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(_45, /** @src 1:2983:3010  \"game.prizePool += msg.value\" */ checked_add_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:2983:3010  \"game.prizePool += msg.value\" */ _45), /** @src 1:2342:2351  \"msg.value\" */ callvalue()))\n                        /// @src 1:3064:3096  \"game.playerTileCount[msg.sender]\"\n                        let dataSlot_14 := /** @src -1:-1:-1 */ 0\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:2758:2768  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                        mstore(0x20, /** @src 1:3064:3096  \"game.playerTileCount[msg.sender]\" */ _41)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        dataSlot_14 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                        /// @src 1:3060:3159  \"if (game.playerTileCount[msg.sender] == 1) {...\"\n                        if /** @src 1:3064:3101  \"game.playerTileCount[msg.sender] == 1\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:3064:3096  \"game.playerTileCount[msg.sender]\" */ dataSlot_14), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        /// @src 1:3060:3159  \"if (game.playerTileCount[msg.sender] == 1) {...\"\n                        {\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(0, /** @src 1:2758:2768  \"msg.sender\" */ caller())\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(32, /** @src 1:3117:3134  \"playerGamesPlayed\" */ 0x06)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            let dataSlot_15 := keccak256(0, 64)\n                            /// @src 1:1095:1096  \"2\"\n                            sstore(dataSlot_15, /** @src 1:3117:3148  \"playerGamesPlayed[msg.sender]++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:3117:3148  \"playerGamesPlayed[msg.sender]++\" */ dataSlot_15)))\n                        }\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _46 := sload(4)\n                        /// @src 1:3182:3232  \"TileSelected(currentGameId, msg.sender, tileIndex)\"\n                        let _47 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n                        mstore(_47, value_10)\n                        /// @src 1:3182:3232  \"TileSelected(currentGameId, msg.sender, tileIndex)\"\n                        log3(_47, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 32, /** @src 1:3182:3232  \"TileSelected(currentGameId, msg.sender, tileIndex)\" */ 0x19096bbaf57f25f25fc838b12784fb7497242fe3ca9d1c50f6990f13fe053810, _46, /** @src 1:2758:2768  \"msg.sender\" */ caller())\n                        /// @src 1:3294:3395  \"if (game.tilesSelected == GRID_SIZE) {...\"\n                        if /** @src 1:3298:3329  \"game.tilesSelected == GRID_SIZE\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:3298:3316  \"game.tilesSelected\" */ _44), /** @src 1:151:153  \"16\" */ 0x10)\n                        /// @src 1:3294:3395  \"if (game.tilesSelected == GRID_SIZE) {...\"\n                        {\n                            /// @src 1:1095:1096  \"2\"\n                            sstore(/** @src 1:3345:3369  \"game.finalSelectionBlock\" */ add(dataSlot_11, 19), /** @src 1:3372:3384  \"block.number\" */ number())\n                        }\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:1705:1712  \"_status\" */ 0x09, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        return(0, 0)\n                    }\n                    case 0xaa182626 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        mstore(0, sload(4))\n                        mstore(32, /** @src 1:9653:9658  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        if iszero(/** @src 1:9653:9692  \"games[currentGameId].tilesSelected == 0\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:9653:9687  \"games[currentGameId].tilesSelected\" */ add(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ keccak256(0, 64), /** @src 1:9653:9687  \"games[currentGameId].tilesSelected\" */ 17))))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        {\n                            let memPtr_9 := mload(64)\n                            mstore(memPtr_9, shl(229, 4594637))\n                            mstore(add(memPtr_9, 4), 32)\n                            mstore(add(memPtr_9, 36), 16)\n                            mstore(add(memPtr_9, 68), \"Game in progress\")\n                            revert(memPtr_9, 100)\n                        }\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0, calldataload(4))\n                        return(0, 0)\n                    }\n                    case 0xb70a6dec {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_11 := calldataload(4)\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:1518:1523  \"owner\" */ 0x07), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        if /** @src 1:9835:9850  \"_newFee <= 2000\" */ gt(value_11, /** @src 1:9846:9850  \"2000\" */ 0x07d0)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        {\n                            let memPtr_10 := mload(64)\n                            mstore(memPtr_10, shl(229, 4594637))\n                            mstore(add(memPtr_10, 4), 32)\n                            mstore(add(memPtr_10, 36), 12)\n                            mstore(add(memPtr_10, 68), \"Fee too high\")\n                            revert(memPtr_10, 100)\n                        }\n                        /// @src 1:1095:1096  \"2\"\n                        sstore(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1, /** @src 1:1095:1096  \"2\" */ value_11)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        return(0, 0)\n                    }\n                    case 0xc19f4925 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        mstore(0, sload(4))\n                        mstore(0x20, /** @src 1:10860:10865  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_16 := keccak256(0, 64)\n                        let diff := sub(/** @src 1:151:153  \"16\" */ 0x10, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:10945:10963  \"game.tilesSelected\" */ add(dataSlot_16, 17)))\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        if gt(diff, /** @src 1:151:153  \"16\" */ 0x10)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(4, /** @src 1:10945:10963  \"game.tilesSelected\" */ 17)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            revert(0, 0x24)\n                        }\n                        let _48 := array_allocation_size_array_uint256_dyn(diff)\n                        let memPtr_11 := mload(64)\n                        finalize_allocation(memPtr_11, _48)\n                        mstore(memPtr_11, diff)\n                        let dataSize := array_allocation_size_array_uint256_dyn(diff)\n                        let dataStart := add(memPtr_11, 0x20)\n                        calldatacopy(dataStart, calldatasize(), add(dataSize, not(31)))\n                        /// @src 1:10974:10991  \"uint256 index = 0\"\n                        let var_index := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0\n                        /// @src 1:11015:11028  \"uint256 i = 0\"\n                        let var_i_1 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0\n                        /// @src 1:11010:11184  \"for (uint256 i = 0; i < GRID_SIZE; i++) {...\"\n                        for { }\n                        /** @src 1:11030:11043  \"i < GRID_SIZE\" */ lt(var_i_1, /** @src 1:151:153  \"16\" */ 0x10)\n                        /// @src 1:11015:11028  \"uint256 i = 0\"\n                        {\n                            /// @src 1:11045:11048  \"i++\"\n                            var_i_1 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:11045:11048  \"i++\" */ var_i_1, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        }\n                        /// @src 1:11045:11048  \"i++\"\n                        {\n                            /// @src 1:11068:11080  \"game.grid[i]\"\n                            let _49, _50 := storage_array_index_access_address(dataSlot_16, var_i_1)\n                            /// @src 1:11064:11174  \"if (game.grid[i] == address(0)) {...\"\n                            if /** @src 1:11068:11094  \"game.grid[i] == address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:10860:10865  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _50), sload(/** @src 1:11068:11080  \"game.grid[i]\" */ _49)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                            /// @src 1:11064:11174  \"if (game.grid[i] == address(0)) {...\"\n                            {\n                                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                                mstore(/** @src 1:11114:11134  \"available[index] = i\" */ memory_array_index_access_uint256_dyn(memPtr_11, var_index), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ var_i_1)\n                                /// @src 1:11152:11159  \"index++\"\n                                var_index := increment_uint256(var_index)\n                            }\n                        }\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos_11 := mload(64)\n                        let tail := add(memPos_11, 0x20)\n                        mstore(memPos_11, 0x20)\n                        let pos_1 := tail\n                        let length_1 := mload(memPtr_11)\n                        mstore(tail, length_1)\n                        pos_1 := add(memPos_11, 64)\n                        let srcPtr_1 := dataStart\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_1, mload(srcPtr_1))\n                            pos_1 := add(pos_1, 0x20)\n                            srcPtr_1 := add(srcPtr_1, 0x20)\n                        }\n                        return(memPos_11, sub(pos_1, memPos_11))\n                    }\n                    case 0xc8c1fcaa {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_12 := calldataload(4)\n                        let _51 := and(value_12, sub(shl(160, 1), 1))\n                        if iszero(eq(value_12, _51)) { revert(0, 0) }\n                        mstore(0, _51)\n                        mstore(32, /** @src 1:783:835  \"mapping(address => uint256) public playerGamesPlayed\" */ 6)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let _52 := sload(keccak256(0, 64))\n                        let memPos_12 := mload(64)\n                        mstore(memPos_12, _52)\n                        return(memPos_12, 32)\n                    }\n                    case 0xde592333 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let size_2 := 0\n                        let _53 := 0\n                        _53 := 0\n                        size_2 := 512\n                        let memPtr_12 := mload(64)\n                        finalize_allocation(memPtr_12, size_2)\n                        let size_3 := 0\n                        let _54 := 0\n                        _54 := 0\n                        size_3 := size_2\n                        calldatacopy(memPtr_12, calldatasize(), size_2)\n                        mstore(0, sload(4))\n                        mstore(0x20, /** @src 1:10718:10723  \"games\" */ 0x03)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let dataSlot_17 := keccak256(0, 64)\n                        let pos_2 := mload(64)\n                        let memPtr_13 := pos_2\n                        pos_2 := pos_2\n                        let srcPtr_2 := dataSlot_17\n                        let i_2 := 0\n                        for { } lt(i_2, 16) { i_2 := add(i_2, 1) }\n                        {\n                            mstore(pos_2, and(sload(srcPtr_2), sub(shl(160, 1), 1)))\n                            pos_2 := add(pos_2, 0x20)\n                            srcPtr_2 := add(srcPtr_2, 1)\n                        }\n                        finalize_allocation(memPtr_13, size_2)\n                        let memPos_13 := mload(64)\n                        return(memPos_13, sub(abi_encode_array_address(memPos_13, memPtr_13), memPos_13))\n                    }\n                    case 0xea777eec {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _55 := sload(/** @src 1:188:210  \"uint256 public gameFee\" */ 1)\n                        /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                        let memPos_14 := mload(64)\n                        mstore(memPos_14, _55)\n                        return(memPos_14, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_13 := calldataload(4)\n                        let _56 := and(value_13, sub(shl(160, 1), 1))\n                        if iszero(eq(value_13, _56)) { revert(0, 0) }\n                        let _57 := sload(/** @src 1:1518:1523  \"owner\" */ 0x07)\n                        /// @src 1:1496:1537  \"require(msg.sender == owner, \\\"Not owner\\\")\"\n                        require_helper_stringliteral_c266(/** @src 1:1504:1523  \"msg.sender == owner\" */ eq(/** @src 1:1504:1514  \"msg.sender\" */ caller(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(_57, sub(shl(160, 1), 1))))\n                        if /** @src 1:10383:10405  \"newOwner != address(0)\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _56)\n                        {\n                            let memPtr_14 := mload(64)\n                            mstore(memPtr_14, shl(229, 4594637))\n                            mstore(add(memPtr_14, 4), 32)\n                            mstore(add(memPtr_14, 36), 15)\n                            mstore(add(memPtr_14, 68), \"Invalid address\")\n                            revert(memPtr_14, 100)\n                        }\n                        sstore(/** @src 1:1518:1523  \"owner\" */ 0x07, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ or(and(_57, shl(160, 0xffffffffffffffffffffffff)), _56))\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_array_address(headStart, value0) -> tail\n            {\n                tail := add(headStart, 512)\n                let pos := headStart\n                pos := headStart\n                let srcPtr := value0\n                let i := 0\n                for { } lt(i, 0x10) { i := add(i, 1) }\n                {\n                    mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, 0x20)\n                    srcPtr := add(srcPtr, 0x20)\n                }\n            }\n            function require_helper_stringliteral_c266(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 9)\n                    mstore(add(memPtr, 68), \"Not owner\")\n                    revert(memPtr, 100)\n                }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function require_helper_stringliteral_3050(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 15)\n                    mstore(add(memPtr, 68), \"Contract paused\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 1:1095:1096  \"2\"\n            function require_helper_stringliteral_ebf7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(64)\n                    /// @src 1:1095:1096  \"2\"\n                    mstore(memPtr, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(229, 4594637))\n                    /// @src 1:1095:1096  \"2\"\n                    mstore(add(memPtr, 4), 32)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    mstore(/** @src 1:1095:1096  \"2\" */ add(memPtr, 36), 31)\n                    mstore(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:1095:1096  \"2\" */ memPtr, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 68), /** @src 1:1095:1096  \"2\" */ \"ReentrancyGuard: reentrant call\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            function checked_mul_uint256(x, y) -> product\n            {\n                product := mul(x, y)\n                if iszero(or(iszero(x), eq(y, div(product, x))))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function checked_add_uint256(x, y) -> sum\n            {\n                sum := add(x, y)\n                if gt(x, sum)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function require_helper_stringliteral_4a54(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Too many tiles per player\")\n                    revert(memPtr, 100)\n                }\n            }\n            function calldata_array_index_access_uint256_dyn_calldata(base_ref, length, index) -> addr\n            {\n                if iszero(lt(index, length))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(base_ref, shl(5, index))\n            }\n            function require_helper_stringliteral_307f(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 18)\n                    mstore(add(memPtr, 68), \"Invalid tile index\")\n                    revert(memPtr, 100)\n                }\n            }\n            function storage_array_index_access_address(array, index) -> slot, offset\n            {\n                if iszero(lt(index, 0x10))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                slot := add(array, index)\n                offset := 0\n            }\n            function require_helper_stringliteral_589a(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"Tile already selected\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_address_to_address(slot, offset, value)\n            {\n                let _1 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_1, not(shl(shiftBits, sub(shl(160, 1), 1)))), shl(shiftBits, and(value, sub(shl(160, 1), 1)))))\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function require_helper_stringliteral_48a8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 17)\n                    mstore(add(memPtr, 68), \"Game not complete\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_10ee(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Winner already determined\")\n                    revert(memPtr, 100)\n                }\n            }\n            function update_storage_value_offset_address_to_address(slot, value)\n            {\n                let _1 := sload(slot)\n                sstore(slot, or(and(_1, not(sub(shl(168, 1), 256))), and(shl(8, value), sub(shl(168, 1), 256))))\n            }\n            function checked_sub_uint256(x, y) -> diff\n            {\n                diff := sub(x, y)\n                if gt(diff, x)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            function extract_returndata() -> data\n            {\n                switch returndatasize()\n                case 0 { data := 96 }\n                default {\n                    let _1 := returndatasize()\n                    let size := /** @src -1:-1:-1 */ 0\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    if gt(_1, 0xffffffffffffffff)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n                    }\n                    size := add(and(add(_1, 31), not(31)), 0x20)\n                    let memPtr := mload(64)\n                    finalize_allocation(memPtr, size)\n                    mstore(memPtr, _1)\n                    data := memPtr\n                    returndatacopy(add(memPtr, 0x20), /** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ returndatasize())\n                }\n            }\n            function require_helper_stringliteral_5ce8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 19)\n                    mstore(add(memPtr, 68), \"Fee transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_e772(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 21)\n                    mstore(add(memPtr, 68), \"Prize transfer failed\")\n                    revert(memPtr, 100)\n                }\n            }\n            /// @src 1:4677:6358  \"function determineWinner() external nonReentrant {...\"\n            function fun_determineWinner_inner()\n            {\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _1 := sload(/** @src 1:4762:4775  \"currentGameId\" */ 0x04)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _1)\n                mstore(0x20, /** @src 1:4756:4761  \"games\" */ 0x03)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                /// @src 1:4786:4847  \"require(game.tilesSelected == GRID_SIZE, \\\"Game not complete\\\")\"\n                require_helper_stringliteral_48a8(/** @src 1:4794:4825  \"game.tilesSelected == GRID_SIZE\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:4794:4812  \"game.tilesSelected\" */ add(dataSlot, 17)), /** @src 1:151:153  \"16\" */ 0x10))\n                /// @src 1:4866:4887  \"game.winnerDetermined\"\n                let _2 := add(dataSlot, 21)\n                /// @src 1:4857:4917  \"require(!game.winnerDetermined, \\\"Winner already determined\\\")\"\n                require_helper_stringliteral_10ee(/** @src 1:4865:4887  \"!game.winnerDetermined\" */ iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(/** @src 1:4866:4887  \"game.winnerDetermined\" */ _2), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0xff)))\n                /// @src 1:4950:4974  \"game.finalSelectionBlock\"\n                let _3 := add(dataSlot, 19)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _4 := sload(/** @src 1:4950:4974  \"game.finalSelectionBlock\" */ _3)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                if iszero(/** @src 1:4935:4974  \"block.number > game.finalSelectionBlock\" */ gt(/** @src 1:4935:4947  \"block.number\" */ number(), /** @src 1:4935:4974  \"block.number > game.finalSelectionBlock\" */ _4))\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                {\n                    let memPtr := mload(0x40)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, /** @src 1:4762:4775  \"currentGameId\" */ 0x04), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20)\n                    mstore(add(memPtr, 36), /** @src 1:4950:4974  \"game.finalSelectionBlock\" */ 19)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    mstore(add(memPtr, 68), \"Wait for next block\")\n                    revert(memPtr, 100)\n                }\n                let sum := add(_4, 0xff)\n                if gt(_4, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 1:4762:4775  \"currentGameId\" */ 0x04, /** @src 1:4794:4812  \"game.tilesSelected\" */ 17)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n                }\n                if /** @src 1:5016:5062  \"block.number <= game.finalSelectionBlock + 255\" */ gt(/** @src 1:4935:4947  \"block.number\" */ number(), /** @src 1:5016:5062  \"block.number <= game.finalSelectionBlock + 255\" */ sum)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                {\n                    let memPtr_1 := mload(0x40)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, /** @src 1:4762:4775  \"currentGameId\" */ 0x04), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20)\n                    mstore(add(memPtr_1, 36), 28)\n                    mstore(add(memPtr_1, 68), \"Too late to determine winner\")\n                    revert(memPtr_1, 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _1)\n                mstore(0x20, /** @src 1:4756:4761  \"games\" */ 0x03)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                let size := /** @src -1:-1:-1 */ 0\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _5 := /** @src -1:-1:-1 */ 0\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                _5 := /** @src -1:-1:-1 */ 0\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                size := 544\n                let memPtr_2 := mload(0x40)\n                finalize_allocation(memPtr_2, size)\n                mstore(memPtr_2, /** @src 1:151:153  \"16\" */ 0x10)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                calldatacopy(add(memPtr_2, 0x20), calldatasize(), add(size, not(31)))\n                /// @src 1:8621:8638  \"uint256 count = 0\"\n                let var_count := /** @src -1:-1:-1 */ 0\n                /// @src 1:8662:8675  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 1:8657:9174  \"for (uint256 i = 0; i < GRID_SIZE; i++) {...\"\n                for { }\n                /** @src 1:8677:8690  \"i < GRID_SIZE\" */ lt(var_i, /** @src 1:151:153  \"16\" */ 0x10)\n                /// @src 1:8662:8675  \"uint256 i = 0\"\n                {\n                    /// @src 1:8692:8695  \"i++\"\n                    var_i := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:8692:8695  \"i++\" */ var_i, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                }\n                /// @src 1:8692:8695  \"i++\"\n                {\n                    /// @src 1:8728:8740  \"game.grid[i]\"\n                    let _6, _7 := storage_array_index_access_address(dataSlot_1, var_i)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    let value := and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _7), sload(/** @src 1:8728:8740  \"game.grid[i]\" */ _6)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                    /// @src 1:8754:9164  \"if (player != address(0)) {...\"\n                    if /** @src 1:8758:8778  \"player != address(0)\" */ iszero(iszero(value))\n                    /// @src 1:8754:9164  \"if (player != address(0)) {...\"\n                    {\n                        /// @src 1:8798:8816  \"bool found = false\"\n                        let var_found := /** @src -1:-1:-1 */ 0\n                        /// @src 1:8839:8852  \"uint256 j = 0\"\n                        let var_j := /** @src -1:-1:-1 */ 0\n                        /// @src 1:8834:9028  \"for (uint256 j = 0; j < count; j++) {...\"\n                        for { }\n                        /** @src 1:8854:8863  \"j < count\" */ lt(var_j, var_count)\n                        /// @src 1:8839:8852  \"uint256 j = 0\"\n                        {\n                            /// @src 1:8865:8868  \"j++\"\n                            var_j := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:8865:8868  \"j++\" */ var_j, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                        }\n                        /// @src 1:8865:8868  \"j++\"\n                        {\n                            /// @src 1:8892:9010  \"if (players[j] == player) {...\"\n                            if /** @src 1:8896:8916  \"players[j] == player\" */ eq(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(mload(/** @src 1:8896:8906  \"players[j]\" */ memory_array_index_access_uint256_dyn(memPtr_2, var_j)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)), /** @src 1:8896:8916  \"players[j] == player\" */ value)\n                            /// @src 1:8892:9010  \"if (players[j] == player) {...\"\n                            {\n                                /// @src 1:8944:8956  \"found = true\"\n                                var_found := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1\n                                /// @src 1:8982:8987  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 1:9045:9150  \"if (!found) {...\"\n                        if /** @src 1:9049:9055  \"!found\" */ iszero(var_found)\n                        /// @src 1:9045:9150  \"if (!found) {...\"\n                        {\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(/** @src 1:9079:9102  \"players[count] = player\" */ memory_array_index_access_uint256_dyn(memPtr_2, var_count), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ value)\n                            /// @src 1:9124:9131  \"count++\"\n                            var_count := increment_uint256(var_count)\n                        }\n                    }\n                }\n                /// @src 1:5237:5362  \"if (uniquePlayers < minPlayers) {...\"\n                if /** @src 1:5241:5267  \"uniquePlayers < minPlayers\" */ lt(var_count, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:5257:5267  \"minPlayers\" */ 0x02))\n                /// @src 1:5237:5362  \"if (uniquePlayers < minPlayers) {...\"\n                {\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    let size_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    let _8 := /** @src -1:-1:-1 */ 0\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    _8 := /** @src -1:-1:-1 */ 0\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    size_1 := 0x40\n                    let memPtr_3 := mload(size_1)\n                    finalize_allocation(memPtr_3, size_1)\n                    mstore(memPtr_3, 18)\n                    let _9 := add(memPtr_3, 0x20)\n                    mstore(_9, \"Not enough players\")\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _1)\n                    mstore(0x20, /** @src 1:4756:4761  \"games\" */ 0x03)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    let dataSlot_2 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ size_1)\n                    /// @src 1:7885:7898  \"uint256 i = 0\"\n                    let var_i_1 := /** @src -1:-1:-1 */ 0\n                    /// @src 1:7880:8280  \"for (uint256 i = 0; i < GRID_SIZE; i++) {...\"\n                    for { }\n                    /** @src 1:7900:7913  \"i < GRID_SIZE\" */ lt(var_i_1, /** @src 1:151:153  \"16\" */ 0x10)\n                    /// @src 1:7885:7898  \"uint256 i = 0\"\n                    {\n                        /// @src 1:7915:7918  \"i++\"\n                        var_i_1 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(/** @src 1:7915:7918  \"i++\" */ var_i_1, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 1)\n                    }\n                    /// @src 1:7915:7918  \"i++\"\n                    {\n                        /// @src 1:7938:7950  \"game.grid[i]\"\n                        let _10, _11 := storage_array_index_access_address(dataSlot_2, var_i_1)\n                        /// @src 1:7934:8270  \"if (game.grid[i] != address(0)) {...\"\n                        if /** @src 1:7938:7964  \"game.grid[i] != address(0)\" */ iszero(iszero(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _11), sload(/** @src 1:7938:7950  \"game.grid[i]\" */ _10)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))))\n                        /// @src 1:7934:8270  \"if (game.grid[i] != address(0)) {...\"\n                        {\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            let _12 := sload(/** @src -1:-1:-1 */ 0)\n                            /// @src 1:8018:8038  \"game.playerTileCount\"\n                            let _13 := add(dataSlot_2, /** @src 1:151:153  \"16\" */ 0x10)\n                            /// @src 1:8039:8051  \"game.grid[i]\"\n                            let _14, _15 := storage_array_index_access_address(dataSlot_2, var_i_1)\n                            /// @src 1:8018:8052  \"game.playerTileCount[game.grid[i]]\"\n                            let key := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _15), sload(/** @src 1:8039:8051  \"game.grid[i]\" */ _14)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                            /// @src 1:8018:8052  \"game.playerTileCount[game.grid[i]]\"\n                            let dataSlot_3 := /** @src -1:-1:-1 */ 0\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(key, sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 1:8018:8052  \"game.playerTileCount[game.grid[i]]\" */ _13)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            dataSlot_3 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ size_1)\n                            /// @src 1:8007:8052  \"entryFee * game.playerTileCount[game.grid[i]]\"\n                            let expr := checked_mul_uint256(_12, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:8018:8052  \"game.playerTileCount[game.grid[i]]\" */ dataSlot_3))\n                            /// @src 1:8091:8103  \"game.grid[i]\"\n                            let _16, _17 := storage_array_index_access_address(dataSlot_2, var_i_1)\n                            /// @src 1:8070:8104  \"game.playerTileCount[game.grid[i]]\"\n                            let key_1 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _17), sload(/** @src 1:8091:8103  \"game.grid[i]\" */ _16)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                            /// @src 1:8070:8104  \"game.playerTileCount[game.grid[i]]\"\n                            let dataSlot_4 := /** @src -1:-1:-1 */ 0\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(key_1, sub(shl(160, 1), 1)))\n                            mstore(0x20, /** @src 1:8070:8104  \"game.playerTileCount[game.grid[i]]\" */ _13)\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            dataSlot_4 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ size_1)\n                            /// @src 1:1095:1096  \"2\"\n                            sstore(/** @src 1:8070:8104  \"game.playerTileCount[game.grid[i]]\" */ dataSlot_4, /** @src -1:-1:-1 */ 0)\n                            /// @src 1:8162:8174  \"game.grid[i]\"\n                            let _18, _19 := storage_array_index_access_address(dataSlot_2, var_i_1)\n                            /// @src 1:8162:8204  \"game.grid[i].call{value: refundAmount}(\\\"\\\")\"\n                            let expr_component := call(gas(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _19), sload(/** @src 1:8162:8174  \"game.grid[i]\" */ _18)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)), /** @src 1:8162:8204  \"game.grid[i].call{value: refundAmount}(\\\"\\\")\" */ expr, /** @src -1:-1:-1 */ 0, 0, 0, 0)\n                            /// @src 1:8162:8204  \"game.grid[i].call{value: refundAmount}(\\\"\\\")\"\n                            pop(extract_returndata())\n                            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                            if iszero(expr_component)\n                            {\n                                let memPtr_4 := mload(size_1)\n                                mstore(memPtr_4, shl(229, 4594637))\n                                mstore(add(memPtr_4, /** @src 1:4762:4775  \"currentGameId\" */ 0x04), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20)\n                                mstore(add(memPtr_4, 36), 13)\n                                mstore(add(memPtr_4, 68), \"Refund failed\")\n                                revert(memPtr_4, 100)\n                            }\n                        }\n                    }\n                    /// @src 1:8298:8319  \"game.winnerDetermined\"\n                    let _20 := add(dataSlot_2, /** @src 1:4866:4887  \"game.winnerDetermined\" */ 21)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    sstore(_20, or(and(sload(_20), not(255)), 1))\n                    /// @src 1:8361:8389  \"GameRefunded(gameId, reason)\"\n                    let _21 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(size_1)\n                    mstore(_21, 0x20)\n                    let length := mload(memPtr_3)\n                    mstore(add(_21, 0x20), length)\n                    mcopy(add(_21, size_1), _9, length)\n                    mstore(add(add(_21, length), size_1), /** @src -1:-1:-1 */ 0)\n                    /// @src 1:8361:8389  \"GameRefunded(gameId, reason)\"\n                    log2(_21, add(sub(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ add(_21, and(add(length, 31), not(31))), /** @src 1:8361:8389  \"GameRefunded(gameId, reason)\" */ _21), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ size_1), /** @src 1:8361:8389  \"GameRefunded(gameId, reason)\" */ 0xd4dee1ad9aaf5e16668c28363994a5e60dba69b179e82bb7b9a8a4af8171b642, _1)\n                    fun_startNewGame()\n                    /// @src 1:5345:5352  \"return;\"\n                    leave\n                }\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _22 := sload(/** @src 1:5477:5501  \"game.finalSelectionBlock\" */ _3)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let sum_1 := add(_22, 1)\n                if gt(_22, sum_1)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ shl(224, 0x4e487b71))\n                    mstore(/** @src 1:4762:4775  \"currentGameId\" */ 0x04, /** @src 1:4794:4812  \"game.tilesSelected\" */ 17)\n                    /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x24)\n                }\n                /// @src 1:5594:5616  \"game.grid[winningTile]\"\n                let _23, _24 := storage_array_index_access_address(dataSlot, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(/** @src 1:5467:5506  \"blockhash(game.finalSelectionBlock + 1)\" */ blockhash(/** @src 1:5477:5505  \"game.finalSelectionBlock + 1\" */ sum_1), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 15))\n                /// @src 1:5580:5616  \"game.winner = game.grid[winningTile]\"\n                update_storage_value_offset_address_to_address(_2, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(shl(/** @src 1:4756:4761  \"games\" */ 0x03, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _24), sload(/** @src 1:5594:5616  \"game.grid[winningTile]\" */ _23)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)))\n                let result := or(and(sload(_2), not(255)), 1)\n                sstore(_2, result)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(8, result), sub(shl(160, 1), 1)))\n                mstore(0x20, /** @src 1:5664:5674  \"playerWins\" */ 0x05)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let dataSlot_5 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                /// @src 1:1095:1096  \"2\"\n                sstore(dataSlot_5, /** @src 1:5664:5689  \"playerWins[game.winner]++\" */ increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:5664:5689  \"playerWins[game.winner]++\" */ dataSlot_5)))\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _25 := sload(/** @src 1:5771:5785  \"game.prizePool\" */ add(dataSlot, 18))\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let r := div(/** @src 1:5771:5795  \"game.prizePool * gameFee\" */ checked_mul_uint256(_25, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(1)), /** @src 1:5799:5804  \"10000\" */ 0x2710)\n                /// @src 1:5836:5864  \"game.prizePool - platformFee\"\n                let expr_1 := checked_sub_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _25, /** @src 1:5836:5864  \"game.prizePool - platformFee\" */ r)\n                /// @src 1:5912:6075  \"if (platformFee > 0) {...\"\n                if /** @src 1:5916:5931  \"platformFee > 0\" */ iszero(iszero(r))\n                /// @src 1:5912:6075  \"if (platformFee > 0) {...\"\n                {\n                    /// @src 1:5969:6008  \"teamWallet.call{value: platformFee}(\\\"\\\")\"\n                    let expr_component_1 := call(gas(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(sload(8), sub(shl(160, 1), 1)), /** @src 1:5969:6008  \"teamWallet.call{value: platformFee}(\\\"\\\")\" */ r, /** @src -1:-1:-1 */ 0, 0, 0, 0)\n                    /// @src 1:5969:6008  \"teamWallet.call{value: platformFee}(\\\"\\\")\"\n                    pop(extract_returndata())\n                    /// @src 1:6022:6064  \"require(feeSuccess, \\\"Fee transfer failed\\\")\"\n                    require_helper_stringliteral_5ce8(expr_component_1)\n                }\n                /// @src 1:6117:6157  \"game.winner.call{value: winnerPrize}(\\\"\\\")\"\n                let expr_component_2 := call(gas(), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ and(shr(8, sload(/** @src 1:6117:6128  \"game.winner\" */ _2)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1)), /** @src 1:6117:6157  \"game.winner.call{value: winnerPrize}(\\\"\\\")\" */ expr_1, /** @src -1:-1:-1 */ 0, 0, 0, 0)\n                /// @src 1:6117:6157  \"game.winner.call{value: winnerPrize}(\\\"\\\")\"\n                pop(extract_returndata())\n                /// @src 1:6167:6213  \"require(prizeSuccess, \\\"Prize transfer failed\\\")\"\n                require_helper_stringliteral_e772(expr_component_2)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _26 := sload(/** @src 1:4762:4775  \"currentGameId\" */ 0x04)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let value_1 := and(shr(8, sload(/** @src 1:6266:6277  \"game.winner\" */ _2)), /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sub(shl(160, 1), 1))\n                /// @src 1:6237:6291  \"GameCompleted(currentGameId, game.winner, winnerPrize)\"\n                let _27 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(0x40)\n                mstore(_27, expr_1)\n                /// @src 1:6237:6291  \"GameCompleted(currentGameId, game.winner, winnerPrize)\"\n                log3(_27, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20, /** @src 1:6237:6291  \"GameCompleted(currentGameId, game.winner, winnerPrize)\" */ 0xf6ae188cc6336ef5ad970d3c81cda5814b4c4902540924c6924debe94ece13eb, _26, value_1)\n                fun_startNewGame()\n            }\n            /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            /// @ast-id 1487 @src 1:9221:9447  \"function _startNewGame() private {...\"\n            function fun_startNewGame()\n            {\n                /// @src 1:9264:9279  \"currentGameId++\"\n                let _1 := increment_uint256(/** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ sload(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04))\n                /// @src 1:1095:1096  \"2\"\n                sstore(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04, /** @src 1:1095:1096  \"2\" */ _1)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ _1)\n                mstore(0x20, /** @src 1:9312:9317  \"games\" */ 0x03)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x40)\n                /// @src 1:1095:1096  \"2\"\n                sstore(/** @src 1:9342:9359  \"newGame.startTime\" */ add(dataSlot, 20), /** @src 1:9362:9377  \"block.timestamp\" */ timestamp())\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _2 := sload(/** @src 1:9264:9279  \"currentGameId++\" */ 0x04)\n                /// @src 1:58:11837  \"contract PvPGridEnhanced {...\"\n                let _3 := sload(/** @src -1:-1:-1 */ 0)\n                /// @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\"\n                let _4 := /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ mload(0x40)\n                mstore(_4, _3)\n                /// @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\"\n                log2(_4, /** @src 1:58:11837  \"contract PvPGridEnhanced {...\" */ 0x20, /** @src 1:9401:9440  \"NewGameStarted(currentGameId, entryFee)\" */ 0x1a92f8260fbb9503d4da4de0b7753e04745a81b9a56dafcd9e51a7b828c16c73, _2)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212208ebf74060ecbcc1b91cff90c7e943510e7604c7456ddd646c4f7ddc38818dad964736f6c634300081e0033\"\n    }\n}\n","hash":"cc262d3bfcb38fba757ccd46f00d225c6467417eb622b70b160f3a95cd149740","factoryDependencies":{}}}}}}