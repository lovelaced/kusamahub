// .papi/descriptors/src/dotAh_metadata.ts
var binMeta = "";
var dotAh_metadata_default = binMeta;
export {
  dotAh_metadata_default as default
};
